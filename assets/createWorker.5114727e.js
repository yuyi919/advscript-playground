import{gP as l}from"./index.ee2a88f2.js";import"./parser.d5d33482.js";import"./lsp.289540be.js";import"./vsc.14d9df5d.js";const I=new Blob([atob("!function(){"use strict";const e=new class{constructor(){this.listeners=[],this.unexpectedErrorHandler=function(e){setTimeout((()=>{if(e.stack)throw new Error(e.message+"\n\n"+e.stack);throw e}),0)}}emit(e){this.listeners.forEach((t=>{t(e)}))}onUnexpectedError(e){this.unexpectedErrorHandler(e),this.emit(e)}onUnexpectedExternalError(e){this.unexpectedErrorHandler(e)}};function t(t){var n;(n=t)instanceof Error&&n.name===r&&n.message===r||e.onUnexpectedError(t)}function n(e){if(e instanceof Error){let{name:t,message:n}=e;return{$isError:!0,name:t,message:n,stack:e.stacktrace||e.stack}}return e}const r="Canceled";function i(e){const t=this;let n,r=!1;return function(){return r||(r=!0,n=e.apply(t,arguments)),n}}var o,a;!function(e){e.is=function(e){return e&&"object"==typeof e&&"function"==typeof e[Symbol.iterator]};const t=Object.freeze([]);e.empty=function(){return t},e.single=function*(e){yield e},e.from=function(e){return e||t},e.isEmpty=function(e){return!e||!0===e[Symbol.iterator]().next().done},e.first=function(e){return e[Symbol.iterator]().next().value},e.some=function(e,t){for(const n of e)if(t(n))return!0;return!1},e.find=function(e,t){for(const n of e)if(t(n))return n},e.filter=function*(e,t){for(const n of e)t(n)&&(yield n)},e.map=function*(e,t){let n=0;for(const r of e)yield t(r,n++)},e.concat=function*(...e){for(const t of e)for(const e of t)yield e},e.concatNested=function*(e){for(const t of e)for(const e of t)yield e},e.reduce=function(e,t,n){let r=n;for(const i of e)r=t(r,i);return r},e.slice=function*(e,t,n=e.length){for(t<0&&(t+=e.length),n<0?n+=e.length:n>e.length&&(n=e.length);t<n;t++)yield e[t]},e.consume=function(t,n=Number.POSITIVE_INFINITY){const r=[];if(0===n)return[r,t];const i=t[Symbol.iterator]();for(let o=0;o<n;o++){const t=i.next();if(t.done)return[r,e.empty()];r.push(t.value)}return[r,{[Symbol.iterator]:()=>i}]},e.equals=function(e,t,n=((e,t)=>e===t)){const r=e[Symbol.iterator](),i=t[Symbol.iterator]();for(;;){const e=r.next(),t=i.next();if(e.done!==t.done)return!1;if(e.done)return!0;if(!n(e.value,t.value))return!1}}}(o||(o={}));class s extends Error{constructor(e){super(`Encountered errors while disposing of store. Errors: [${e.join(", ")}]`),this.errors=e}}function u(e){if(o.is(e)){let n=[];for(const r of e)if(r)try{r.dispose()}catch(t){n.push(t)}if(1===n.length)throw n[0];if(n.length>1)throw new s(n);return Array.isArray(e)?[]:e}if(e)return e.dispose(),e}function c(e){return{dispose:i((()=>{e()}))}}class l{constructor(){this._toDispose=new Set,this._isDisposed=!1}dispose(){this._isDisposed||(this._isDisposed=!0,this.clear())}clear(){try{u(this._toDispose.values())}finally{this._toDispose.clear()}}add(e){if(!e)return e;if(e===this)throw new Error("Cannot register a disposable on itself!");return this._isDisposed?l.DISABLE_DISPOSED_WARNING||console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack):this._toDispose.add(e),e}}l.DISABLE_DISPOSED_WARNING=!1;class p{constructor(){this._store=new l,this._store}dispose(){this._store.dispose()}_register(e){if(e===this)throw new Error("Cannot register a disposable on itself!");return this._store.add(e)}}p.None=Object.freeze({dispose(){}});class f{constructor(e){this.element=e,this.next=f.Undefined,this.prev=f.Undefined}}f.Undefined=new f(void 0);class d{constructor(){this._first=f.Undefined,this._last=f.Undefined,this._size=0}get size(){return this._size}isEmpty(){return this._first===f.Undefined}clear(){let e=this._first;for(;e!==f.Undefined;){const t=e.next;e.prev=f.Undefined,e.next=f.Undefined,e=t}this._first=f.Undefined,this._last=f.Undefined,this._size=0}unshift(e){return this._insert(e,!1)}push(e){return this._insert(e,!0)}_insert(e,t){const n=new f(e);if(this._first===f.Undefined)this._first=n,this._last=n;else if(t){const e=this._last;this._last=n,n.prev=e,e.next=n}else{const e=this._first;this._first=n,n.next=e,e.prev=n}this._size+=1;let r=!1;return()=>{r||(r=!0,this._remove(n))}}shift(){if(this._first!==f.Undefined){const e=this._first.element;return this._remove(this._first),e}}pop(){if(this._last!==f.Undefined){const e=this._last.element;return this._remove(this._last),e}}_remove(e){if(e.prev!==f.Undefined&&e.next!==f.Undefined){const t=e.prev;t.next=e.next,e.next.prev=t}else e.prev===f.Undefined&&e.next===f.Undefined?(this._first=f.Undefined,this._last=f.Undefined):e.next===f.Undefined?(this._last=this._last.prev,this._last.next=f.Undefined):e.prev===f.Undefined&&(this._first=this._first.next,this._first.prev=f.Undefined);this._size-=1}*[Symbol.iterator](){let e=this._first;for(;e!==f.Undefined;)yield e.element,e=e.next}}const h="en";let m,g,v,y=!1,E=!1,_=!1,C=h;const T="object"==typeof self?self:"object"==typeof global?global:{};let A;void 0!==T.vscode&&void 0!==T.vscode.process?A=T.vscode.process:"undefined"!=typeof process&&(A=process);const R="string"==typeof(null===(a=null==A?void 0:A.versions)||void 0===a?void 0:a.electron)&&"renderer"===A.type;if("object"!=typeof navigator||R)if("object"==typeof A){y="win32"===A.platform,E="darwin"===A.platform,_="linux"===A.platform,_&&A.env.SNAP&&A.env.SNAP_REVISION,m=h,C=h;const e=A.env.VSCODE_NLS_CONFIG;if(e)try{const t=JSON.parse(e),n=t.availableLanguages["*"];m=t.locale,C=n||h,g=t._translationsConfigFile}catch(PI){}}else console.error("Unable to resolve platform.");else v=navigator.userAgent,y=v.indexOf("Windows")>=0,E=v.indexOf("Macintosh")>=0,(v.indexOf("Macintosh")>=0||v.indexOf("iPad")>=0||v.indexOf("iPhone")>=0)&&navigator.maxTouchPoints&&navigator.maxTouchPoints,_=v.indexOf("Linux")>=0,m=navigator.language,C=m;const I=y,D=E,x=function(){if(T.setImmediate)return T.setImmediate.bind(T);if("function"==typeof T.postMessage&&!T.importScripts){let e=[];T.addEventListener("message",(t=>{if(t.data&&t.data.vscodeSetImmediateId)for(let n=0,r=e.length;n<r;n++){const r=e[n];if(r.id===t.data.vscodeSetImmediateId)return e.splice(n,1),void r.callback()}}));let t=0;return n=>{const r=++t;e.push({id:r,callback:n}),T.postMessage({vscodeSetImmediateId:r},"*")}}if("function"==typeof(null==A?void 0:A.nextTick))return A.nextTick.bind(A);const e=Promise.resolve();return t=>e.then(t)}(),b=T.performance&&"function"==typeof T.performance.now;class S{constructor(e){this._highResolution=b&&e,this._startTime=this._now(),this._stopTime=-1}static create(e=!0){return new S(e)}stop(){this._stopTime=this._now()}elapsed(){return-1!==this._stopTime?this._stopTime-this._startTime:this._now()-this._startTime}_now(){return this._highResolution?T.performance.now():Date.now()}}var k;!function(e){function t(e){return(t,n=null,r)=>{let i,o=!1;return i=e((e=>{if(!o)return i?i.dispose():o=!0,t.call(n,e)}),null,r),o&&i.dispose(),i}}function n(e,t){return a(((n,r=null,i)=>e((e=>n.call(r,t(e))),null,i)))}function r(e,t){return a(((n,r=null,i)=>e((e=>{t(e),n.call(r,e)}),null,i)))}function i(e,t){return a(((n,r=null,i)=>e((e=>t(e)&&n.call(r,e)),null,i)))}function o(e,t,r){let i=r;return n(e,(e=>(i=t(i,e),i)))}function a(e){let t;const n=new N({onFirstListenerAdd(){t=e(n.fire,n)},onLastListenerRemove(){t.dispose()}});return n.event}function s(e,t,n=100,r=!1,i){let o,a,s,u=0;const c=new N({leakWarningThreshold:i,onFirstListenerAdd(){o=e((e=>{u++,a=t(a,e),r&&!s&&(c.fire(a),a=void 0),clearTimeout(s),s=setTimeout((()=>{const e=a;a=void 0,s=void 0,(!r||u>1)&&c.fire(e),u=0}),n)}))},onLastListenerRemove(){o.dispose()}});return c.event}function l(e,t=((e,t)=>e===t)){let n,r=!0;return i(e,(e=>{const i=r||!t(e,n);return r=!1,n=e,i}))}e.None=()=>p.None,e.once=t,e.map=n,e.forEach=r,e.filter=i,e.signal=function(e){return e},e.any=function(...e){return(t,n=null,r)=>function(...e){return c((()=>u(e)))}(...e.map((e=>e((e=>t.call(n,e)),null,r))))},e.reduce=o,e.debounce=s,e.latch=l,e.split=function(t,n){return[e.filter(t,n),e.filter(t,(e=>!n(e)))]},e.buffer=function(e,t=!1,n=[]){let r=n.slice(),i=e((e=>{r?r.push(e):a.fire(e)}));const o=()=>{r&&r.forEach((e=>a.fire(e))),r=null},a=new N({onFirstListenerAdd(){i||(i=e((e=>a.fire(e))))},onFirstListenerDidAdd(){r&&(t?setTimeout(o):o())},onLastListenerRemove(){i&&i.dispose(),i=null}});return a.event};class f{constructor(e){this.event=e}map(e){return new f(n(this.event,e))}forEach(e){return new f(r(this.event,e))}filter(e){return new f(i(this.event,e))}reduce(e,t){return new f(o(this.event,e,t))}latch(){return new f(l(this.event))}debounce(e,t=100,n=!1,r){return new f(s(this.event,e,t,n,r))}on(e,t,n){return this.event(e,t,n)}once(e,n,r){return t(this.event)(e,n,r)}}e.chain=function(e){return new f(e)},e.fromNodeEventEmitter=function(e,t,n=(e=>e)){const r=(...e)=>i.fire(n(...e)),i=new N({onFirstListenerAdd:()=>e.on(t,r),onLastListenerRemove:()=>e.removeListener(t,r)});return i.event},e.fromDOMEventEmitter=function(e,t,n=(e=>e)){const r=(...e)=>i.fire(n(...e)),i=new N({onFirstListenerAdd:()=>e.addEventListener(t,r),onLastListenerRemove:()=>e.removeEventListener(t,r)});return i.event},e.toPromise=function(e){return new Promise((n=>t(e)(n)))}}(k||(k={}));class O{constructor(e){this._listenerCount=0,this._invocationCount=0,this._elapsedOverall=0,this._name=`${e}_${O._idPool++}`}start(e){this._stopWatch=new S(!0),this._listenerCount=e}stop(){if(this._stopWatch){const e=this._stopWatch.elapsed();this._elapsedOverall+=e,this._invocationCount+=1,console.info(`did FIRE ${this._name}: elapsed_ms: ${e.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`),this._stopWatch=void 0}}}O._idPool=0;class N{constructor(e){var t;this._disposed=!1,this._options=e,this._leakageMon=void 0,this._perfMon=(null===(t=this._options)||void 0===t?void 0:t._profName)?new O(this._options._profName):void 0}get event(){return this._event||(this._event=(e,t,n)=>{var r;this._listeners||(this._listeners=new d);const i=this._listeners.isEmpty();i&&this._options&&this._options.onFirstListenerAdd&&this._options.onFirstListenerAdd(this);const o=this._listeners.push(t?[e,t]:e);i&&this._options&&this._options.onFirstListenerDidAdd&&this._options.onFirstListenerDidAdd(this),this._options&&this._options.onListenerDidAdd&&this._options.onListenerDidAdd(this,e,t);const a=null===(r=this._leakageMon)||void 0===r?void 0:r.check(this._listeners.size),s=c((()=>{if(a&&a(),!this._disposed&&(o(),this._options&&this._options.onLastListenerRemove)){this._listeners&&!this._listeners.isEmpty()||this._options.onLastListenerRemove(this)}}));return n instanceof l?n.add(s):Array.isArray(n)&&n.push(s),s}),this._event}fire(e){var n,r;if(this._listeners){this._deliveryQueue||(this._deliveryQueue=new d);for(let t of this._listeners)this._deliveryQueue.push([t,e]);for(null===(n=this._perfMon)||void 0===n||n.start(this._deliveryQueue.size);this._deliveryQueue.size>0;){const[e,n]=this._deliveryQueue.shift();try{"function"==typeof e?e.call(void 0,n):e[0].call(e[1],n)}catch(PI){t(PI)}}null===(r=this._perfMon)||void 0===r||r.stop()}}dispose(){var e,t,n,r,i;this._disposed||(this._disposed=!0,null===(e=this._listeners)||void 0===e||e.clear(),null===(t=this._deliveryQueue)||void 0===t||t.clear(),null===(r=null===(n=this._options)||void 0===n?void 0:n.onLastListenerRemove)||void 0===r||r.call(n),null===(i=this._leakageMon)||void 0===i||i.dispose())}}function P(e){const t=[];for(const n of function(e){let t=[],n=Object.getPrototypeOf(e);for(;Object.prototype!==n;)t=t.concat(Object.getOwnPropertyNames(n)),n=Object.getPrototypeOf(n);return t}(e))"function"==typeof e[n]&&t.push(n);return t}function w(e){return e>=65&&e<=90}class L{constructor(e,t,n,r){this.vsWorker=e,this.req=t,this.method=n,this.args=r,this.type=0}}class F{constructor(e,t,n,r){this.vsWorker=e,this.seq=t,this.res=n,this.err=r,this.type=1}}class M{constructor(e,t,n,r){this.vsWorker=e,this.req=t,this.eventName=n,this.arg=r,this.type=2}}class ${constructor(e,t,n){this.vsWorker=e,this.req=t,this.event=n,this.type=3}}class B{constructor(e,t){this.vsWorker=e,this.req=t,this.type=4}}class q{constructor(e){this._workerId=-1,this._handler=e,this._lastSentReq=0,this._pendingReplies=Object.create(null),this._pendingEmitters=new Map,this._pendingEvents=new Map}setWorkerId(e){this._workerId=e}sendMessage(e,t){const n=String(++this._lastSentReq);return new Promise(((r,i)=>{this._pendingReplies[n]={resolve:r,reject:i},this._send(new L(this._workerId,n,e,t))}))}listen(e,t){let n=null;const r=new N({onFirstListenerAdd:()=>{n=String(++this._lastSentReq),this._pendingEmitters.set(n,r),this._send(new M(this._workerId,n,e,t))},onLastListenerRemove:()=>{this._pendingEmitters.delete(n),this._send(new B(this._workerId,n)),n=null}});return r.event}handleMessage(e){e&&e.vsWorker&&(-1!==this._workerId&&e.vsWorker!==this._workerId||this._handleMessage(e))}_handleMessage(e){switch(e.type){case 1:return this._handleReplyMessage(e);case 0:return this._handleRequestMessage(e);case 2:return this._handleSubscribeEventMessage(e);case 3:return this._handleEventMessage(e);case 4:return this._handleUnsubscribeEventMessage(e)}}_handleReplyMessage(e){if(!this._pendingReplies[e.seq])return void console.warn("Got reply to unknown seq");let t=this._pendingReplies[e.seq];if(delete this._pendingReplies[e.seq],e.err){let n=e.err;return e.err.$isError&&(n=new Error,n.name=e.err.name,n.message=e.err.message,n.stack=e.err.stack),void t.reject(n)}t.resolve(e.res)}_handleRequestMessage(e){let t=e.req;this._handler.handleMessage(e.method,e.args).then((e=>{this._send(new F(this._workerId,t,e,void 0))}),(e=>{e.detail instanceof Error&&(e.detail=n(e.detail)),this._send(new F(this._workerId,t,void 0,n(e)))}))}_handleSubscribeEventMessage(e){const t=e.req,n=this._handler.handleEvent(e.eventName,e.arg)((e=>{this._send(new $(this._workerId,t,e))}));this._pendingEvents.set(t,n)}_handleEventMessage(e){this._pendingEmitters.has(e.req)?this._pendingEmitters.get(e.req).fire(e.event):console.warn("Got event for unknown req")}_handleUnsubscribeEventMessage(e){this._pendingEvents.has(e.req)?(this._pendingEvents.get(e.req).dispose(),this._pendingEvents.delete(e.req)):console.warn("Got unsubscribe for unknown req")}_send(e){let t=[];if(0===e.type)for(let n=0;n<e.args.length;n++)e.args[n]instanceof ArrayBuffer&&t.push(e.args[n]);else 1===e.type&&e.res instanceof ArrayBuffer&&t.push(e.res);this._handler.sendMessage(e,t)}}function j(e){return"o"===e[0]&&"n"===e[1]&&w(e.charCodeAt(2))}function U(e){return/^onDynamic/.test(e)&&w(e.charCodeAt(9))}class W{constructor(e,t){this._requestHandlerFactory=t,this._requestHandler=null,this._protocol=new q({sendMessage:(t,n)=>{e(t,n)},handleMessage:(e,t)=>this._handleMessage(e,t),handleEvent:(e,t)=>this._handleEvent(e,t)})}onmessage(e){this._protocol.handleMessage(e)}_handleMessage(e,t){if("$initialize"===e)return this.initialize(t[0],t[1],t[2],t[3]);if(!this._requestHandler||"function"!=typeof this._requestHandler[e])return Promise.reject(new Error("Missing requestHandler or method: "+e));try{return Promise.resolve(this._requestHandler[e].apply(this._requestHandler,t))}catch(PI){return Promise.reject(PI)}}_handleEvent(e,t){if(!this._requestHandler)throw new Error("Missing requestHandler");if(U(e)){const n=this._requestHandler[e].call(this._requestHandler,t);if("function"!=typeof n)throw new Error(`Missing dynamic event ${e} on request handler.`);return n}if(j(e)){const t=this._requestHandler[e];if("function"!=typeof t)throw new Error(`Missing event ${e} on request handler.`);return t}throw new Error(`Malformed event name ${e}`)}initialize(e,t,n,r){this._protocol.setWorkerId(e);const i=function(e,t,n){const r=e=>function(){const n=Array.prototype.slice.call(arguments,0);return t(e,n)},i=e=>function(t){return n(e,t)};let o={};for(const a of e)U(a)?o[a]=i(a):j(a)?o[a]=n(a,void 0):o[a]=r(a);return o}(r,((e,t)=>this._protocol.sendMessage(e,t)),((e,t)=>this._protocol.listen(e,t)));return this._requestHandlerFactory?(this._requestHandler=this._requestHandlerFactory(i),Promise.resolve(P(this._requestHandler))):(t&&(void 0!==t.baseUrl&&delete t.baseUrl,void 0!==t.paths&&void 0!==t.paths.vs&&delete t.paths.vs,void 0!==typeof t.trustedTypesPolicy&&delete t.trustedTypesPolicy,t.catchError=!0,T.require.config(t)),new Promise(((e,t)=>{(0,T.require)([n],(n=>{this._requestHandler=n.create(i),this._requestHandler?e(P(this._requestHandler)):t(new Error("No RequestHandler!"))}),t)})))}}class K{constructor(e,t,n,r){this.originalStart=e,this.originalLength=t,this.modifiedStart=n,this.modifiedLength=r}getOriginalEnd(){return this.originalStart+this.originalLength}getModifiedEnd(){return this.modifiedStart+this.modifiedLength}}function G(e,t){return(t<<5)-t+e|0}function V(e,t){t=G(149417,t);for(let n=0,r=e.length;n<r;n++)t=G(e.charCodeAt(n),t);return t}class H{constructor(e){this.source=e}getElements(){const e=this.source,t=new Int32Array(e.length);for(let n=0,r=e.length;n<r;n++)t[n]=e.charCodeAt(n);return t}}function z(e,t,n){return new Q(new H(e),new H(t)).ComputeDiff(n).changes}class Y{static Assert(e,t){if(!e)throw new Error(t)}}class X{static Copy(e,t,n,r,i){for(let o=0;o<i;o++)n[r+o]=e[t+o]}static Copy2(e,t,n,r,i){for(let o=0;o<i;o++)n[r+o]=e[t+o]}}class J{constructor(){this.m_changes=[],this.m_originalStart=1073741824,this.m_modifiedStart=1073741824,this.m_originalCount=0,this.m_modifiedCount=0}MarkNextChange(){(this.m_originalCount>0||this.m_modifiedCount>0)&&this.m_changes.push(new K(this.m_originalStart,this.m_originalCount,this.m_modifiedStart,this.m_modifiedCount)),this.m_originalCount=0,this.m_modifiedCount=0,this.m_originalStart=1073741824,this.m_modifiedStart=1073741824}AddOriginalElement(e,t){this.m_originalStart=Math.min(this.m_originalStart,e),this.m_modifiedStart=Math.min(this.m_modifiedStart,t),this.m_originalCount++}AddModifiedElement(e,t){this.m_originalStart=Math.min(this.m_originalStart,e),this.m_modifiedStart=Math.min(this.m_modifiedStart,t),this.m_modifiedCount++}getChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes}getReverseChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes.reverse(),this.m_changes}}class Q{constructor(e,t,n=null){this.ContinueProcessingPredicate=n,this._originalSequence=e,this._modifiedSequence=t;const[r,i,o]=Q._getElements(e),[a,s,u]=Q._getElements(t);this._hasStrings=o&&u,this._originalStringElements=r,this._originalElementsOrHash=i,this._modifiedStringElements=a,this._modifiedElementsOrHash=s,this.m_forwardHistory=[],this.m_reverseHistory=[]}static _isStringArray(e){return e.length>0&&"string"==typeof e[0]}static _getElements(e){const t=e.getElements();if(Q._isStringArray(t)){const e=new Int32Array(t.length);for(let n=0,r=t.length;n<r;n++)e[n]=V(t[n],0);return[t,e,!0]}return t instanceof Int32Array?[[],t,!1]:[[],new Int32Array(t),!1]}ElementsAreEqual(e,t){return this._originalElementsOrHash[e]===this._modifiedElementsOrHash[t]&&(!this._hasStrings||this._originalStringElements[e]===this._modifiedStringElements[t])}ElementsAreStrictEqual(e,t){if(!this.ElementsAreEqual(e,t))return!1;return Q._getStrictElement(this._originalSequence,e)===Q._getStrictElement(this._modifiedSequence,t)}static _getStrictElement(e,t){return"function"==typeof e.getStrictElement?e.getStrictElement(t):null}OriginalElementsAreEqual(e,t){return this._originalElementsOrHash[e]===this._originalElementsOrHash[t]&&(!this._hasStrings||this._originalStringElements[e]===this._originalStringElements[t])}ModifiedElementsAreEqual(e,t){return this._modifiedElementsOrHash[e]===this._modifiedElementsOrHash[t]&&(!this._hasStrings||this._modifiedStringElements[e]===this._modifiedStringElements[t])}ComputeDiff(e){return this._ComputeDiff(0,this._originalElementsOrHash.length-1,0,this._modifiedElementsOrHash.length-1,e)}_ComputeDiff(e,t,n,r,i){const o=[!1];let a=this.ComputeDiffRecursive(e,t,n,r,o);return i&&(a=this.PrettifyChanges(a)),{quitEarly:o[0],changes:a}}ComputeDiffRecursive(e,t,n,r,i){for(i[0]=!1;e<=t&&n<=r&&this.ElementsAreEqual(e,n);)e++,n++;for(;t>=e&&r>=n&&this.ElementsAreEqual(t,r);)t--,r--;if(e>t||n>r){let i;return n<=r?(Y.Assert(e===t+1,"originalStart should only be one more than originalEnd"),i=[new K(e,0,n,r-n+1)]):e<=t?(Y.Assert(n===r+1,"modifiedStart should only be one more than modifiedEnd"),i=[new K(e,t-e+1,n,0)]):(Y.Assert(e===t+1,"originalStart should only be one more than originalEnd"),Y.Assert(n===r+1,"modifiedStart should only be one more than modifiedEnd"),i=[]),i}const o=[0],a=[0],s=this.ComputeRecursionPoint(e,t,n,r,o,a,i),u=o[0],c=a[0];if(null!==s)return s;if(!i[0]){const o=this.ComputeDiffRecursive(e,u,n,c,i);let a=[];return a=i[0]?[new K(u+1,t-(u+1)+1,c+1,r-(c+1)+1)]:this.ComputeDiffRecursive(u+1,t,c+1,r,i),this.ConcatenateChanges(o,a)}return[new K(e,t-e+1,n,r-n+1)]}WALKTRACE(e,t,n,r,i,o,a,s,u,c,l,p,f,d,h,m,g,v){let y=null,E=null,_=new J,C=t,T=n,A=f[0]-m[0]-r,R=-1073741824,I=this.m_forwardHistory.length-1;do{const t=A+e;t===C||t<T&&u[t-1]<u[t+1]?(d=(l=u[t+1])-A-r,l<R&&_.MarkNextChange(),R=l,_.AddModifiedElement(l+1,d),A=t+1-e):(d=(l=u[t-1]+1)-A-r,l<R&&_.MarkNextChange(),R=l-1,_.AddOriginalElement(l,d+1),A=t-1-e),I>=0&&(e=(u=this.m_forwardHistory[I])[0],C=1,T=u.length-1)}while(--I>=-1);if(y=_.getReverseChanges(),v[0]){let e=f[0]+1,t=m[0]+1;if(null!==y&&y.length>0){const n=y[y.length-1];e=Math.max(e,n.getOriginalEnd()),t=Math.max(t,n.getModifiedEnd())}E=[new K(e,p-e+1,t,h-t+1)]}else{_=new J,C=o,T=a,A=f[0]-m[0]-s,R=1073741824,I=g?this.m_reverseHistory.length-1:this.m_reverseHistory.length-2;do{const e=A+i;e===C||e<T&&c[e-1]>=c[e+1]?(d=(l=c[e+1]-1)-A-s,l>R&&_.MarkNextChange(),R=l+1,_.AddOriginalElement(l+1,d+1),A=e+1-i):(d=(l=c[e-1])-A-s,l>R&&_.MarkNextChange(),R=l,_.AddModifiedElement(l+1,d+1),A=e-1-i),I>=0&&(i=(c=this.m_reverseHistory[I])[0],C=1,T=c.length-1)}while(--I>=-1);E=_.getChanges()}return this.ConcatenateChanges(y,E)}ComputeRecursionPoint(e,t,n,r,i,o,a){let s=0,u=0,c=0,l=0,p=0,f=0;e--,n--,i[0]=0,o[0]=0,this.m_forwardHistory=[],this.m_reverseHistory=[];const d=t-e+(r-n),h=d+1,m=new Int32Array(h),g=new Int32Array(h),v=r-n,y=t-e,E=e-n,_=t-r,C=(y-v)%2==0;m[v]=e,g[y]=t,a[0]=!1;for(let T=1;T<=d/2+1;T++){let d=0,A=0;c=this.ClipDiagonalBound(v-T,T,v,h),l=this.ClipDiagonalBound(v+T,T,v,h);for(let e=c;e<=l;e+=2){s=e===c||e<l&&m[e-1]<m[e+1]?m[e+1]:m[e-1]+1,u=s-(e-v)-E;const n=s;for(;s<t&&u<r&&this.ElementsAreEqual(s+1,u+1);)s++,u++;if(m[e]=s,s+u>d+A&&(d=s,A=u),!C&&Math.abs(e-y)<=T-1&&s>=g[e])return i[0]=s,o[0]=u,n<=g[e]&&T<=1448?this.WALKTRACE(v,c,l,E,y,p,f,_,m,g,s,t,i,u,r,o,C,a):null}const R=(d-e+(A-n)-T)/2;if(null!==this.ContinueProcessingPredicate&&!this.ContinueProcessingPredicate(d,R))return a[0]=!0,i[0]=d,o[0]=A,R>0&&T<=1448?this.WALKTRACE(v,c,l,E,y,p,f,_,m,g,s,t,i,u,r,o,C,a):(e++,n++,[new K(e,t-e+1,n,r-n+1)]);p=this.ClipDiagonalBound(y-T,T,y,h),f=this.ClipDiagonalBound(y+T,T,y,h);for(let h=p;h<=f;h+=2){s=h===p||h<f&&g[h-1]>=g[h+1]?g[h+1]-1:g[h-1],u=s-(h-y)-_;const d=s;for(;s>e&&u>n&&this.ElementsAreEqual(s,u);)s--,u--;if(g[h]=s,C&&Math.abs(h-v)<=T&&s<=m[h])return i[0]=s,o[0]=u,d>=m[h]&&T<=1448?this.WALKTRACE(v,c,l,E,y,p,f,_,m,g,s,t,i,u,r,o,C,a):null}if(T<=1447){let e=new Int32Array(l-c+2);e[0]=v-c+1,X.Copy2(m,c,e,1,l-c+1),this.m_forwardHistory.push(e),e=new Int32Array(f-p+2),e[0]=y-p+1,X.Copy2(g,p,e,1,f-p+1),this.m_reverseHistory.push(e)}}return this.WALKTRACE(v,c,l,E,y,p,f,_,m,g,s,t,i,u,r,o,C,a)}PrettifyChanges(e){for(let t=0;t<e.length;t++){const n=e[t],r=t<e.length-1?e[t+1].originalStart:this._originalElementsOrHash.length,i=t<e.length-1?e[t+1].modifiedStart:this._modifiedElementsOrHash.length,o=n.originalLength>0,a=n.modifiedLength>0;for(;n.originalStart+n.originalLength<r&&n.modifiedStart+n.modifiedLength<i&&(!o||this.OriginalElementsAreEqual(n.originalStart,n.originalStart+n.originalLength))&&(!a||this.ModifiedElementsAreEqual(n.modifiedStart,n.modifiedStart+n.modifiedLength));){const e=this.ElementsAreStrictEqual(n.originalStart,n.modifiedStart);if(this.ElementsAreStrictEqual(n.originalStart+n.originalLength,n.modifiedStart+n.modifiedLength)&&!e)break;n.originalStart++,n.modifiedStart++}let s=[null];t<e.length-1&&this.ChangesOverlap(e[t],e[t+1],s)&&(e[t]=s[0],e.splice(t+1,1),t--)}for(let t=e.length-1;t>=0;t--){const n=e[t];let r=0,i=0;if(t>0){const n=e[t-1];r=n.originalStart+n.originalLength,i=n.modifiedStart+n.modifiedLength}const o=n.originalLength>0,a=n.modifiedLength>0;let s=0,u=this._boundaryScore(n.originalStart,n.originalLength,n.modifiedStart,n.modifiedLength);for(let e=1;;e++){const t=n.originalStart-e,c=n.modifiedStart-e;if(t<r||c<i)break;if(o&&!this.OriginalElementsAreEqual(t,t+n.originalLength))break;if(a&&!this.ModifiedElementsAreEqual(c,c+n.modifiedLength))break;const l=(t===r&&c===i?5:0)+this._boundaryScore(t,n.originalLength,c,n.modifiedLength);l>u&&(u=l,s=e)}n.originalStart-=s,n.modifiedStart-=s;const c=[null];t>0&&this.ChangesOverlap(e[t-1],e[t],c)&&(e[t-1]=c[0],e.splice(t,1),t++)}if(this._hasStrings)for(let t=1,n=e.length;t<n;t++){const n=e[t-1],r=e[t],i=r.originalStart-n.originalStart-n.originalLength,o=n.originalStart,a=r.originalStart+r.originalLength,s=a-o,u=n.modifiedStart,c=r.modifiedStart+r.modifiedLength,l=c-u;if(i<5&&s<20&&l<20){const e=this._findBetterContiguousSequence(o,s,u,l,i);if(e){const[t,o]=e;t===n.originalStart+n.originalLength&&o===n.modifiedStart+n.modifiedLength||(n.originalLength=t-n.originalStart,n.modifiedLength=o-n.modifiedStart,r.originalStart=t+i,r.modifiedStart=o+i,r.originalLength=a-r.originalStart,r.modifiedLength=c-r.modifiedStart)}}}return e}_findBetterContiguousSequence(e,t,n,r,i){if(t<i||r<i)return null;const o=e+t-i+1,a=n+r-i+1;let s=0,u=0,c=0;for(let l=e;l<o;l++)for(let e=n;e<a;e++){const t=this._contiguousSequenceScore(l,e,i);t>0&&t>s&&(s=t,u=l,c=e)}return s>0?[u,c]:null}_contiguousSequenceScore(e,t,n){let r=0;for(let i=0;i<n;i++){if(!this.ElementsAreEqual(e+i,t+i))return 0;r+=this._originalStringElements[e+i].length}return r}_OriginalIsBoundary(e){return e<=0||e>=this._originalElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._originalStringElements[e])}_OriginalRegionIsBoundary(e,t){if(this._OriginalIsBoundary(e)||this._OriginalIsBoundary(e-1))return!0;if(t>0){const n=e+t;if(this._OriginalIsBoundary(n-1)||this._OriginalIsBoundary(n))return!0}return!1}_ModifiedIsBoundary(e){return e<=0||e>=this._modifiedElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._modifiedStringElements[e])}_ModifiedRegionIsBoundary(e,t){if(this._ModifiedIsBoundary(e)||this._ModifiedIsBoundary(e-1))return!0;if(t>0){const n=e+t;if(this._ModifiedIsBoundary(n-1)||this._ModifiedIsBoundary(n))return!0}return!1}_boundaryScore(e,t,n,r){return(this._OriginalRegionIsBoundary(e,t)?1:0)+(this._ModifiedRegionIsBoundary(n,r)?1:0)}ConcatenateChanges(e,t){let n=[];if(0===e.length||0===t.length)return t.length>0?t:e;if(this.ChangesOverlap(e[e.length-1],t[0],n)){const r=new Array(e.length+t.length-1);return X.Copy(e,0,r,0,e.length-1),r[e.length-1]=n[0],X.Copy(t,1,r,e.length,t.length-1),r}{const n=new Array(e.length+t.length);return X.Copy(e,0,n,0,e.length),X.Copy(t,0,n,e.length,t.length),n}}ChangesOverlap(e,t,n){if(Y.Assert(e.originalStart<=t.originalStart,"Left change is not less than or equal to right change"),Y.Assert(e.modifiedStart<=t.modifiedStart,"Left change is not less than or equal to right change"),e.originalStart+e.originalLength>=t.originalStart||e.modifiedStart+e.modifiedLength>=t.modifiedStart){const r=e.originalStart;let i=e.originalLength;const o=e.modifiedStart;let a=e.modifiedLength;return e.originalStart+e.originalLength>=t.originalStart&&(i=t.originalStart+t.originalLength-e.originalStart),e.modifiedStart+e.modifiedLength>=t.modifiedStart&&(a=t.modifiedStart+t.modifiedLength-e.modifiedStart),n[0]=new K(r,i,o,a),!0}return n[0]=null,!1}ClipDiagonalBound(e,t,n,r){if(e>=0&&e<r)return e;const i=t%2==0;if(e<0){return i===(n%2==0)?0:1}return i===((r-n-1)%2==0)?r-1:r-2}}let Z;if(void 0!==T.vscode&&void 0!==T.vscode.process){const e=T.vscode.process;Z={get platform(){return e.platform},get arch(){return e.arch},get env(){return e.env},cwd:()=>e.cwd(),nextTick:e=>x(e)}}else Z="undefined"!=typeof process?{get platform(){return process.platform},get arch(){return process.arch},get env(){return process.env},cwd:()=>process.env.VSCODE_CWD||process.cwd(),nextTick:e=>process.nextTick(e)}:{get platform(){return I?"win32":D?"darwin":"linux"},get arch(){},nextTick:e=>x(e),get env(){return{}},cwd:()=>"/"};const ee=Z.cwd,te=Z.env,ne=Z.platform,re=46,ie=47,oe=92,ae=58;class se extends Error{constructor(e,t,n){let r;"string"==typeof t&&0===t.indexOf("not ")?(r="must not be",t=t.replace(/^not /,"")):r="must be";const i=-1!==e.indexOf(".")?"property":"argument";let o=`The "${e}" ${i} ${r} of type ${t}`;o+=". Received type "+typeof n,super(o),this.code="ERR_INVALID_ARG_TYPE"}}function ue(e,t){if("string"!=typeof e)throw new se(t,"string",e)}function ce(e){return e===ie||e===oe}function le(e){return e===ie}function pe(e){return e>=65&&e<=90||e>=97&&e<=122}function fe(e,t,n,r){let i="",o=0,a=-1,s=0,u=0;for(let c=0;c<=e.length;++c){if(c<e.length)u=e.charCodeAt(c);else{if(r(u))break;u=ie}if(r(u)){if(a===c-1||1===s);else if(2===s){if(i.length<2||2!==o||i.charCodeAt(i.length-1)!==re||i.charCodeAt(i.length-2)!==re){if(i.length>2){const e=i.lastIndexOf(n);-1===e?(i="",o=0):(i=i.slice(0,e),o=i.length-1-i.lastIndexOf(n)),a=c,s=0;continue}if(0!==i.length){i="",o=0,a=c,s=0;continue}}t&&(i+=i.length>0?`${n}..`:"..",o=2)}else i.length>0?i+=`${n}${e.slice(a+1,c)}`:i=e.slice(a+1,c),o=c-a-1;a=c,s=0}else u===re&&-1!==s?++s:s=-1}return i}function de(e,t){if(null===t||"object"!=typeof t)throw new se("pathObject","Object",t);const n=t.dir||t.root,r=t.base||`${t.name||""}${t.ext||""}`;return n?n===t.root?`${n}${r}`:`${n}${e}${r}`:r}const he={resolve(...e){let t="",n="",r=!1;for(let i=e.length-1;i>=-1;i--){let o;if(i>=0){if(o=e[i],ue(o,"path"),0===o.length)continue}else 0===t.length?o=ee():(o=te[`=${t}`]||ee(),(void 0===o||o.slice(0,2).toLowerCase()!==t.toLowerCase()&&o.charCodeAt(2)===oe)&&(o=`${t}\\`));const a=o.length;let s=0,u="",c=!1;const l=o.charCodeAt(0);if(1===a)ce(l)&&(s=1,c=!0);else if(ce(l))if(c=!0,ce(o.charCodeAt(1))){let e=2,t=e;for(;e<a&&!ce(o.charCodeAt(e));)e++;if(e<a&&e!==t){const n=o.slice(t,e);for(t=e;e<a&&ce(o.charCodeAt(e));)e++;if(e<a&&e!==t){for(t=e;e<a&&!ce(o.charCodeAt(e));)e++;e!==a&&e===t||(u=`\\\\${n}\\${o.slice(t,e)}`,s=e)}}}else s=1;else pe(l)&&o.charCodeAt(1)===ae&&(u=o.slice(0,2),s=2,a>2&&ce(o.charCodeAt(2))&&(c=!0,s=3));if(u.length>0)if(t.length>0){if(u.toLowerCase()!==t.toLowerCase())continue}else t=u;if(r){if(t.length>0)break}else if(n=`${o.slice(s)}\\${n}`,r=c,c&&t.length>0)break}return n=fe(n,!r,"\\",ce),r?`${t}\\${n}`:`${t}${n}`||"."},normalize(e){ue(e,"path");const t=e.length;if(0===t)return".";let n,r=0,i=!1;const o=e.charCodeAt(0);if(1===t)return le(o)?"\\":e;if(ce(o))if(i=!0,ce(e.charCodeAt(1))){let i=2,o=i;for(;i<t&&!ce(e.charCodeAt(i));)i++;if(i<t&&i!==o){const a=e.slice(o,i);for(o=i;i<t&&ce(e.charCodeAt(i));)i++;if(i<t&&i!==o){for(o=i;i<t&&!ce(e.charCodeAt(i));)i++;if(i===t)return`\\\\${a}\\${e.slice(o)}\\`;i!==o&&(n=`\\\\${a}\\${e.slice(o,i)}`,r=i)}}}else r=1;else pe(o)&&e.charCodeAt(1)===ae&&(n=e.slice(0,2),r=2,t>2&&ce(e.charCodeAt(2))&&(i=!0,r=3));let a=r<t?fe(e.slice(r),!i,"\\",ce):"";return 0!==a.length||i||(a="."),a.length>0&&ce(e.charCodeAt(t-1))&&(a+="\\"),void 0===n?i?`\\${a}`:a:i?`${n}\\${a}`:`${n}${a}`},isAbsolute(e){ue(e,"path");const t=e.length;if(0===t)return!1;const n=e.charCodeAt(0);return ce(n)||t>2&&pe(n)&&e.charCodeAt(1)===ae&&ce(e.charCodeAt(2))},join(...e){if(0===e.length)return".";let t,n;for(let o=0;o<e.length;++o){const r=e[o];ue(r,"path"),r.length>0&&(void 0===t?t=n=r:t+=`\\${r}`)}if(void 0===t)return".";let r=!0,i=0;if("string"==typeof n&&ce(n.charCodeAt(0))){++i;const e=n.length;e>1&&ce(n.charCodeAt(1))&&(++i,e>2&&(ce(n.charCodeAt(2))?++i:r=!1))}if(r){for(;i<t.length&&ce(t.charCodeAt(i));)i++;i>=2&&(t=`\\${t.slice(i)}`)}return he.normalize(t)},relative(e,t){if(ue(e,"from"),ue(t,"to"),e===t)return"";const n=he.resolve(e),r=he.resolve(t);if(n===r)return"";if((e=n.toLowerCase())===(t=r.toLowerCase()))return"";let i=0;for(;i<e.length&&e.charCodeAt(i)===oe;)i++;let o=e.length;for(;o-1>i&&e.charCodeAt(o-1)===oe;)o--;const a=o-i;let s=0;for(;s<t.length&&t.charCodeAt(s)===oe;)s++;let u=t.length;for(;u-1>s&&t.charCodeAt(u-1)===oe;)u--;const c=u-s,l=a<c?a:c;let p=-1,f=0;for(;f<l;f++){const n=e.charCodeAt(i+f);if(n!==t.charCodeAt(s+f))break;n===oe&&(p=f)}if(f!==l){if(-1===p)return r}else{if(c>l){if(t.charCodeAt(s+f)===oe)return r.slice(s+f+1);if(2===f)return r.slice(s+f)}a>l&&(e.charCodeAt(i+f)===oe?p=f:2===f&&(p=3)),-1===p&&(p=0)}let d="";for(f=i+p+1;f<=o;++f)f!==o&&e.charCodeAt(f)!==oe||(d+=0===d.length?"..":"\\..");return s+=p,d.length>0?`${d}${r.slice(s,u)}`:(r.charCodeAt(s)===oe&&++s,r.slice(s,u))},toNamespacedPath(e){if("string"!=typeof e)return e;if(0===e.length)return"";const t=he.resolve(e);if(t.length<=2)return e;if(t.charCodeAt(0)===oe){if(t.charCodeAt(1)===oe){const e=t.charCodeAt(2);if(63!==e&&e!==re)return`\\\\?\\UNC\\${t.slice(2)}`}}else if(pe(t.charCodeAt(0))&&t.charCodeAt(1)===ae&&t.charCodeAt(2)===oe)return`\\\\?\\${t}`;return e},dirname(e){ue(e,"path");const t=e.length;if(0===t)return".";let n=-1,r=0;const i=e.charCodeAt(0);if(1===t)return ce(i)?e:".";if(ce(i)){if(n=r=1,ce(e.charCodeAt(1))){let i=2,o=i;for(;i<t&&!ce(e.charCodeAt(i));)i++;if(i<t&&i!==o){for(o=i;i<t&&ce(e.charCodeAt(i));)i++;if(i<t&&i!==o){for(o=i;i<t&&!ce(e.charCodeAt(i));)i++;if(i===t)return e;i!==o&&(n=r=i+1)}}}}else pe(i)&&e.charCodeAt(1)===ae&&(n=t>2&&ce(e.charCodeAt(2))?3:2,r=n);let o=-1,a=!0;for(let s=t-1;s>=r;--s)if(ce(e.charCodeAt(s))){if(!a){o=s;break}}else a=!1;if(-1===o){if(-1===n)return".";o=n}return e.slice(0,o)},basename(e,t){void 0!==t&&ue(t,"ext"),ue(e,"path");let n,r=0,i=-1,o=!0;if(e.length>=2&&pe(e.charCodeAt(0))&&e.charCodeAt(1)===ae&&(r=2),void 0!==t&&t.length>0&&t.length<=e.length){if(t===e)return"";let a=t.length-1,s=-1;for(n=e.length-1;n>=r;--n){const u=e.charCodeAt(n);if(ce(u)){if(!o){r=n+1;break}}else-1===s&&(o=!1,s=n+1),a>=0&&(u===t.charCodeAt(a)?-1==--a&&(i=n):(a=-1,i=s))}return r===i?i=s:-1===i&&(i=e.length),e.slice(r,i)}for(n=e.length-1;n>=r;--n)if(ce(e.charCodeAt(n))){if(!o){r=n+1;break}}else-1===i&&(o=!1,i=n+1);return-1===i?"":e.slice(r,i)},extname(e){ue(e,"path");let t=0,n=-1,r=0,i=-1,o=!0,a=0;e.length>=2&&e.charCodeAt(1)===ae&&pe(e.charCodeAt(0))&&(t=r=2);for(let s=e.length-1;s>=t;--s){const t=e.charCodeAt(s);if(ce(t)){if(!o){r=s+1;break}}else-1===i&&(o=!1,i=s+1),t===re?-1===n?n=s:1!==a&&(a=1):-1!==n&&(a=-1)}return-1===n||-1===i||0===a||1===a&&n===i-1&&n===r+1?"":e.slice(n,i)},format:de.bind(null,"\\"),parse(e){ue(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;const n=e.length;let r=0,i=e.charCodeAt(0);if(1===n)return ce(i)?(t.root=t.dir=e,t):(t.base=t.name=e,t);if(ce(i)){if(r=1,ce(e.charCodeAt(1))){let t=2,i=t;for(;t<n&&!ce(e.charCodeAt(t));)t++;if(t<n&&t!==i){for(i=t;t<n&&ce(e.charCodeAt(t));)t++;if(t<n&&t!==i){for(i=t;t<n&&!ce(e.charCodeAt(t));)t++;t===n?r=t:t!==i&&(r=t+1)}}}}else if(pe(i)&&e.charCodeAt(1)===ae){if(n<=2)return t.root=t.dir=e,t;if(r=2,ce(e.charCodeAt(2))){if(3===n)return t.root=t.dir=e,t;r=3}}r>0&&(t.root=e.slice(0,r));let o=-1,a=r,s=-1,u=!0,c=e.length-1,l=0;for(;c>=r;--c)if(i=e.charCodeAt(c),ce(i)){if(!u){a=c+1;break}}else-1===s&&(u=!1,s=c+1),i===re?-1===o?o=c:1!==l&&(l=1):-1!==o&&(l=-1);return-1!==s&&(-1===o||0===l||1===l&&o===s-1&&o===a+1?t.base=t.name=e.slice(a,s):(t.name=e.slice(a,o),t.base=e.slice(a,s),t.ext=e.slice(o,s))),t.dir=a>0&&a!==r?e.slice(0,a-1):t.root,t},sep:"\\",delimiter:";",win32:null,posix:null},me={resolve(...e){let t="",n=!1;for(let r=e.length-1;r>=-1&&!n;r--){const i=r>=0?e[r]:ee();ue(i,"path"),0!==i.length&&(t=`${i}/${t}`,n=i.charCodeAt(0)===ie)}return t=fe(t,!n,"/",le),n?`/${t}`:t.length>0?t:"."},normalize(e){if(ue(e,"path"),0===e.length)return".";const t=e.charCodeAt(0)===ie,n=e.charCodeAt(e.length-1)===ie;return 0===(e=fe(e,!t,"/",le)).length?t?"/":n?"./":".":(n&&(e+="/"),t?`/${e}`:e)},isAbsolute:e=>(ue(e,"path"),e.length>0&&e.charCodeAt(0)===ie),join(...e){if(0===e.length)return".";let t;for(let n=0;n<e.length;++n){const r=e[n];ue(r,"path"),r.length>0&&(void 0===t?t=r:t+=`/${r}`)}return void 0===t?".":me.normalize(t)},relative(e,t){if(ue(e,"from"),ue(t,"to"),e===t)return"";if((e=me.resolve(e))===(t=me.resolve(t)))return"";const n=e.length,r=n-1,i=t.length-1,o=r<i?r:i;let a=-1,s=0;for(;s<o;s++){const n=e.charCodeAt(1+s);if(n!==t.charCodeAt(1+s))break;n===ie&&(a=s)}if(s===o)if(i>o){if(t.charCodeAt(1+s)===ie)return t.slice(1+s+1);if(0===s)return t.slice(1+s)}else r>o&&(e.charCodeAt(1+s)===ie?a=s:0===s&&(a=0));let u="";for(s=1+a+1;s<=n;++s)s!==n&&e.charCodeAt(s)!==ie||(u+=0===u.length?"..":"/..");return`${u}${t.slice(1+a)}`},toNamespacedPath:e=>e,dirname(e){if(ue(e,"path"),0===e.length)return".";const t=e.charCodeAt(0)===ie;let n=-1,r=!0;for(let i=e.length-1;i>=1;--i)if(e.charCodeAt(i)===ie){if(!r){n=i;break}}else r=!1;return-1===n?t?"/":".":t&&1===n?"//":e.slice(0,n)},basename(e,t){void 0!==t&&ue(t,"ext"),ue(e,"path");let n,r=0,i=-1,o=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t===e)return"";let a=t.length-1,s=-1;for(n=e.length-1;n>=0;--n){const u=e.charCodeAt(n);if(u===ie){if(!o){r=n+1;break}}else-1===s&&(o=!1,s=n+1),a>=0&&(u===t.charCodeAt(a)?-1==--a&&(i=n):(a=-1,i=s))}return r===i?i=s:-1===i&&(i=e.length),e.slice(r,i)}for(n=e.length-1;n>=0;--n)if(e.charCodeAt(n)===ie){if(!o){r=n+1;break}}else-1===i&&(o=!1,i=n+1);return-1===i?"":e.slice(r,i)},extname(e){ue(e,"path");let t=-1,n=0,r=-1,i=!0,o=0;for(let a=e.length-1;a>=0;--a){const s=e.charCodeAt(a);if(s!==ie)-1===r&&(i=!1,r=a+1),s===re?-1===t?t=a:1!==o&&(o=1):-1!==t&&(o=-1);else if(!i){n=a+1;break}}return-1===t||-1===r||0===o||1===o&&t===r-1&&t===n+1?"":e.slice(t,r)},format:de.bind(null,"/"),parse(e){ue(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;const n=e.charCodeAt(0)===ie;let r;n?(t.root="/",r=1):r=0;let i=-1,o=0,a=-1,s=!0,u=e.length-1,c=0;for(;u>=r;--u){const t=e.charCodeAt(u);if(t!==ie)-1===a&&(s=!1,a=u+1),t===re?-1===i?i=u:1!==c&&(c=1):-1!==i&&(c=-1);else if(!s){o=u+1;break}}if(-1!==a){const r=0===o&&n?1:o;-1===i||0===c||1===c&&i===a-1&&i===o+1?t.base=t.name=e.slice(r,a):(t.name=e.slice(r,i),t.base=e.slice(r,a),t.ext=e.slice(i,a))}return o>0?t.dir=e.slice(0,o-1):n&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};me.win32=he.win32=he,me.posix=he.posix=me,"win32"===ne?he.normalize:me.normalize,"win32"===ne?he.resolve:me.resolve,"win32"===ne?he.relative:me.relative,"win32"===ne?he.dirname:me.dirname,"win32"===ne?he.basename:me.basename,"win32"===ne?he.extname:me.extname,"win32"===ne?he.sep:me.sep;const ge=/^\w[\w\d+.-]*$/,ve=/^\//,ye=/^\/\//;function Ee(e,t){if(!e.scheme&&t)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`);if(e.scheme&&!ge.test(e.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(e.path)if(e.authority){if(!ve.test(e.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(ye.test(e.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}const _e="",Ce="/",Te=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class Ae{constructor(e,t,n,r,i,o=!1){"object"==typeof e?(this.scheme=e.scheme||_e,this.authority=e.authority||_e,this.path=e.path||_e,this.query=e.query||_e,this.fragment=e.fragment||_e):(this.scheme=function(e,t){return e||t?e:"file"}(e,o),this.authority=t||_e,this.path=function(e,t){switch(e){case"https":case"http":case"file":t?t[0]!==Ce&&(t=Ce+t):t=Ce}return t}(this.scheme,n||_e),this.query=r||_e,this.fragment=i||_e,Ee(this,o))}static isUri(e){return e instanceof Ae||!!e&&("string"==typeof e.authority&&"string"==typeof e.fragment&&"string"==typeof e.path&&"string"==typeof e.query&&"string"==typeof e.scheme&&"string"==typeof e.fsPath&&"function"==typeof e.with&&"function"==typeof e.toString)}get fsPath(){return Se(this,!1)}with(e){if(!e)return this;let{scheme:t,authority:n,path:r,query:i,fragment:o}=e;return void 0===t?t=this.scheme:null===t&&(t=_e),void 0===n?n=this.authority:null===n&&(n=_e),void 0===r?r=this.path:null===r&&(r=_e),void 0===i?i=this.query:null===i&&(i=_e),void 0===o?o=this.fragment:null===o&&(o=_e),t===this.scheme&&n===this.authority&&r===this.path&&i===this.query&&o===this.fragment?this:new Ie(t,n,r,i,o)}static parse(e,t=!1){const n=Te.exec(e);return n?new Ie(n[2]||_e,Pe(n[4]||_e),Pe(n[5]||_e),Pe(n[7]||_e),Pe(n[9]||_e),t):new Ie(_e,_e,_e,_e,_e)}static file(e){let t=_e;if(I&&(e=e.replace(/\\/g,Ce)),e[0]===Ce&&e[1]===Ce){const n=e.indexOf(Ce,2);-1===n?(t=e.substring(2),e=Ce):(t=e.substring(2,n),e=e.substring(n)||Ce)}return new Ie("file",t,e,_e,_e)}static from(e){const t=new Ie(e.scheme,e.authority,e.path,e.query,e.fragment);return Ee(t,!0),t}static joinPath(e,...t){if(!e.path)throw new Error("[UriError]: cannot call joinPath on URI without path");let n;return n=I&&"file"===e.scheme?Ae.file(he.join(Se(e,!0),...t)).path:me.join(e.path,...t),e.with({path:n})}toString(e=!1){return ke(this,e)}toJSON(){return this}static revive(e){if(e){if(e instanceof Ae)return e;{const t=new Ie(e);return t._formatted=e.external,t._fsPath=e._sep===Re?e.fsPath:null,t}}return e}}const Re=I?1:void 0;class Ie extends Ae{constructor(){super(...arguments),this._formatted=null,this._fsPath=null}get fsPath(){return this._fsPath||(this._fsPath=Se(this,!1)),this._fsPath}toString(e=!1){return e?ke(this,!0):(this._formatted||(this._formatted=ke(this,!1)),this._formatted)}toJSON(){const e={$mid:1};return this._fsPath&&(e.fsPath=this._fsPath,e._sep=Re),this._formatted&&(e.external=this._formatted),this.path&&(e.path=this.path),this.scheme&&(e.scheme=this.scheme),this.authority&&(e.authority=this.authority),this.query&&(e.query=this.query),this.fragment&&(e.fragment=this.fragment),e}}const De={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function xe(e,t){let n,r=-1;for(let i=0;i<e.length;i++){const o=e.charCodeAt(i);if(o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||45===o||46===o||95===o||126===o||t&&47===o)-1!==r&&(n+=encodeURIComponent(e.substring(r,i)),r=-1),void 0!==n&&(n+=e.charAt(i));else{void 0===n&&(n=e.substr(0,i));const t=De[o];void 0!==t?(-1!==r&&(n+=encodeURIComponent(e.substring(r,i)),r=-1),n+=t):-1===r&&(r=i)}}return-1!==r&&(n+=encodeURIComponent(e.substring(r))),void 0!==n?n:e}function be(e){let t;for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);35===r||63===r?(void 0===t&&(t=e.substr(0,n)),t+=De[r]):void 0!==t&&(t+=e[n])}return void 0!==t?t:e}function Se(e,t){let n;return n=e.authority&&e.path.length>1&&"file"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?t?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,I&&(n=n.replace(/\//g,"\\")),n}function ke(e,t){const n=t?be:xe;let r="",{scheme:i,authority:o,path:a,query:s,fragment:u}=e;if(i&&(r+=i,r+=":"),(o||"file"===i)&&(r+=Ce,r+=Ce),o){let e=o.indexOf("@");if(-1!==e){const t=o.substr(0,e);o=o.substr(e+1),e=t.indexOf(":"),-1===e?r+=n(t,!1):(r+=n(t.substr(0,e),!1),r+=":",r+=n(t.substr(e+1),!1)),r+="@"}o=o.toLowerCase(),e=o.indexOf(":"),-1===e?r+=n(o,!1):(r+=n(o.substr(0,e),!1),r+=o.substr(e))}if(a){if(a.length>=3&&47===a.charCodeAt(0)&&58===a.charCodeAt(2)){const e=a.charCodeAt(1);e>=65&&e<=90&&(a=`/${String.fromCharCode(e+32)}:${a.substr(3)}`)}else if(a.length>=2&&58===a.charCodeAt(1)){const e=a.charCodeAt(0);e>=65&&e<=90&&(a=`${String.fromCharCode(e+32)}:${a.substr(2)}`)}r+=n(a,!0)}return s&&(r+="?",r+=n(s,!1)),u&&(r+="#",r+=t?u:xe(u,!1)),r}function Oe(e){try{return decodeURIComponent(e)}catch(t){return e.length>3?e.substr(0,3)+Oe(e.substr(3)):e}}const Ne=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function Pe(e){return e.match(Ne)?e.replace(Ne,(e=>Oe(e))):e}class we{constructor(e,t){this.lineNumber=e,this.column=t}with(e=this.lineNumber,t=this.column){return e===this.lineNumber&&t===this.column?this:new we(e,t)}delta(e=0,t=0){return this.with(this.lineNumber+e,this.column+t)}equals(e){return we.equals(this,e)}static equals(e,t){return!e&&!t||!!e&&!!t&&e.lineNumber===t.lineNumber&&e.column===t.column}isBefore(e){return we.isBefore(this,e)}static isBefore(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<t.column}isBeforeOrEqual(e){return we.isBeforeOrEqual(this,e)}static isBeforeOrEqual(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<=t.column}static compare(e,t){let n=0|e.lineNumber,r=0|t.lineNumber;if(n===r){return(0|e.column)-(0|t.column)}return n-r}clone(){return new we(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(e){return new we(e.lineNumber,e.column)}static isIPosition(e){return e&&"number"==typeof e.lineNumber&&"number"==typeof e.column}}class Le{constructor(e,t,n,r){e>n||e===n&&t>r?(this.startLineNumber=n,this.startColumn=r,this.endLineNumber=e,this.endColumn=t):(this.startLineNumber=e,this.startColumn=t,this.endLineNumber=n,this.endColumn=r)}isEmpty(){return Le.isEmpty(this)}static isEmpty(e){return e.startLineNumber===e.endLineNumber&&e.startColumn===e.endColumn}containsPosition(e){return Le.containsPosition(this,e)}static containsPosition(e,t){return!(t.lineNumber<e.startLineNumber||t.lineNumber>e.endLineNumber)&&(!(t.lineNumber===e.startLineNumber&&t.column<e.startColumn)&&!(t.lineNumber===e.endLineNumber&&t.column>e.endColumn))}containsRange(e){return Le.containsRange(this,e)}static containsRange(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber)&&(!(t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber)&&(!(t.startLineNumber===e.startLineNumber&&t.startColumn<e.startColumn)&&!(t.endLineNumber===e.endLineNumber&&t.endColumn>e.endColumn)))}strictContainsRange(e){return Le.strictContainsRange(this,e)}static strictContainsRange(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber)&&(!(t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber)&&(!(t.startLineNumber===e.startLineNumber&&t.startColumn<=e.startColumn)&&!(t.endLineNumber===e.endLineNumber&&t.endColumn>=e.endColumn)))}plusRange(e){return Le.plusRange(this,e)}static plusRange(e,t){let n,r,i,o;return t.startLineNumber<e.startLineNumber?(n=t.startLineNumber,r=t.startColumn):t.startLineNumber===e.startLineNumber?(n=t.startLineNumber,r=Math.min(t.startColumn,e.startColumn)):(n=e.startLineNumber,r=e.startColumn),t.endLineNumber>e.endLineNumber?(i=t.endLineNumber,o=t.endColumn):t.endLineNumber===e.endLineNumber?(i=t.endLineNumber,o=Math.max(t.endColumn,e.endColumn)):(i=e.endLineNumber,o=e.endColumn),new Le(n,r,i,o)}intersectRanges(e){return Le.intersectRanges(this,e)}static intersectRanges(e,t){let n=e.startLineNumber,r=e.startColumn,i=e.endLineNumber,o=e.endColumn,a=t.startLineNumber,s=t.startColumn,u=t.endLineNumber,c=t.endColumn;return n<a?(n=a,r=s):n===a&&(r=Math.max(r,s)),i>u?(i=u,o=c):i===u&&(o=Math.min(o,c)),n>i||n===i&&r>o?null:new Le(n,r,i,o)}equalsRange(e){return Le.equalsRange(this,e)}static equalsRange(e,t){return!!e&&!!t&&e.startLineNumber===t.startLineNumber&&e.startColumn===t.startColumn&&e.endLineNumber===t.endLineNumber&&e.endColumn===t.endColumn}getEndPosition(){return Le.getEndPosition(this)}static getEndPosition(e){return new we(e.endLineNumber,e.endColumn)}getStartPosition(){return Le.getStartPosition(this)}static getStartPosition(e){return new we(e.startLineNumber,e.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(e,t){return new Le(this.startLineNumber,this.startColumn,e,t)}setStartPosition(e,t){return new Le(e,t,this.endLineNumber,this.endColumn)}collapseToStart(){return Le.collapseToStart(this)}static collapseToStart(e){return new Le(e.startLineNumber,e.startColumn,e.startLineNumber,e.startColumn)}static fromPositions(e,t=e){return new Le(e.lineNumber,e.column,t.lineNumber,t.column)}static lift(e){return e?new Le(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn):null}static isIRange(e){return e&&"number"==typeof e.startLineNumber&&"number"==typeof e.startColumn&&"number"==typeof e.endLineNumber&&"number"==typeof e.endColumn}static areIntersectingOrTouching(e,t){return!(e.endLineNumber<t.startLineNumber||e.endLineNumber===t.startLineNumber&&e.endColumn<t.startColumn)&&!(t.endLineNumber<e.startLineNumber||t.endLineNumber===e.startLineNumber&&t.endColumn<e.startColumn)}static areIntersecting(e,t){return!(e.endLineNumber<t.startLineNumber||e.endLineNumber===t.startLineNumber&&e.endColumn<=t.startColumn)&&!(t.endLineNumber<e.startLineNumber||t.endLineNumber===e.startLineNumber&&t.endColumn<=e.startColumn)}static compareRangesUsingStarts(e,t){if(e&&t){const n=0|e.startLineNumber,r=0|t.startLineNumber;if(n===r){const n=0|e.startColumn,r=0|t.startColumn;if(n===r){const n=0|e.endLineNumber,r=0|t.endLineNumber;if(n===r){return(0|e.endColumn)-(0|t.endColumn)}return n-r}return n-r}return n-r}return(e?1:0)-(t?1:0)}static compareRangesUsingEnds(e,t){return e.endLineNumber===t.endLineNumber?e.endColumn===t.endColumn?e.startLineNumber===t.startLineNumber?e.startColumn-t.startColumn:e.startLineNumber-t.startLineNumber:e.endColumn-t.endColumn:e.endLineNumber-t.endLineNumber}static spansMultipleLines(e){return e.endLineNumber>e.startLineNumber}}function Fe(e,t,n,r){return new Q(e,t,n).ComputeDiff(r)}class Me{constructor(e){const t=[],n=[];for(let r=0,i=e.length;r<i;r++)t[r]=Ue(e[r],1),n[r]=We(e[r],1);this.lines=e,this._startColumns=t,this._endColumns=n}getElements(){const e=[];for(let t=0,n=this.lines.length;t<n;t++)e[t]=this.lines[t].substring(this._startColumns[t]-1,this._endColumns[t]-1);return e}getStrictElement(e){return this.lines[e]}getStartLineNumber(e){return e+1}getEndLineNumber(e){return e+1}createCharSequence(e,t,n){const r=[],i=[],o=[];let a=0;for(let s=t;s<=n;s++){const t=this.lines[s],n=e?this._startColumns[s]:1,u=e?this._endColumns[s]:t.length+1;for(let e=n;e<u;e++)r[a]=t.charCodeAt(e-1),i[a]=s+1,o[a]=e,a++}return new $e(r,i,o)}}class $e{constructor(e,t,n){this._charCodes=e,this._lineNumbers=t,this._columns=n}getElements(){return this._charCodes}getStartLineNumber(e){return this._lineNumbers[e]}getStartColumn(e){return this._columns[e]}getEndLineNumber(e){return this._lineNumbers[e]}getEndColumn(e){return this._columns[e]+1}}class Be{constructor(e,t,n,r,i,o,a,s){this.originalStartLineNumber=e,this.originalStartColumn=t,this.originalEndLineNumber=n,this.originalEndColumn=r,this.modifiedStartLineNumber=i,this.modifiedStartColumn=o,this.modifiedEndLineNumber=a,this.modifiedEndColumn=s}static createFromDiffChange(e,t,n){let r,i,o,a,s,u,c,l;return 0===e.originalLength?(r=0,i=0,o=0,a=0):(r=t.getStartLineNumber(e.originalStart),i=t.getStartColumn(e.originalStart),o=t.getEndLineNumber(e.originalStart+e.originalLength-1),a=t.getEndColumn(e.originalStart+e.originalLength-1)),0===e.modifiedLength?(s=0,u=0,c=0,l=0):(s=n.getStartLineNumber(e.modifiedStart),u=n.getStartColumn(e.modifiedStart),c=n.getEndLineNumber(e.modifiedStart+e.modifiedLength-1),l=n.getEndColumn(e.modifiedStart+e.modifiedLength-1)),new Be(r,i,o,a,s,u,c,l)}}class qe{constructor(e,t,n,r,i){this.originalStartLineNumber=e,this.originalEndLineNumber=t,this.modifiedStartLineNumber=n,this.modifiedEndLineNumber=r,this.charChanges=i}static createFromDiffResult(e,t,n,r,i,o,a){let s,u,c,l,p;if(0===t.originalLength?(s=n.getStartLineNumber(t.originalStart)-1,u=0):(s=n.getStartLineNumber(t.originalStart),u=n.getEndLineNumber(t.originalStart+t.originalLength-1)),0===t.modifiedLength?(c=r.getStartLineNumber(t.modifiedStart)-1,l=0):(c=r.getStartLineNumber(t.modifiedStart),l=r.getEndLineNumber(t.modifiedStart+t.modifiedLength-1)),o&&t.originalLength>0&&t.originalLength<20&&t.modifiedLength>0&&t.modifiedLength<20&&i()){const o=n.createCharSequence(e,t.originalStart,t.originalStart+t.originalLength-1),s=r.createCharSequence(e,t.modifiedStart,t.modifiedStart+t.modifiedLength-1);let u=Fe(o,s,i,!0).changes;a&&(u=function(e){if(e.length<=1)return e;const t=[e[0]];let n=t[0];for(let r=1,i=e.length;r<i;r++){const i=e[r],o=i.originalStart-(n.originalStart+n.originalLength),a=i.modifiedStart-(n.modifiedStart+n.modifiedLength);Math.min(o,a)<3?(n.originalLength=i.originalStart+i.originalLength-n.originalStart,n.modifiedLength=i.modifiedStart+i.modifiedLength-n.modifiedStart):(t.push(i),n=i)}return t}(u)),p=[];for(let e=0,t=u.length;e<t;e++)p.push(Be.createFromDiffChange(u[e],o,s))}return new qe(s,u,c,l,p)}}class je{constructor(e,t,n){this.shouldComputeCharChanges=n.shouldComputeCharChanges,this.shouldPostProcessCharChanges=n.shouldPostProcessCharChanges,this.shouldIgnoreTrimWhitespace=n.shouldIgnoreTrimWhitespace,this.shouldMakePrettyDiff=n.shouldMakePrettyDiff,this.originalLines=e,this.modifiedLines=t,this.original=new Me(e),this.modified=new Me(t),this.continueLineDiff=Ke(n.maxComputationTime),this.continueCharDiff=Ke(0===n.maxComputationTime?0:Math.min(n.maxComputationTime,5e3))}computeDiff(){if(1===this.original.lines.length&&0===this.original.lines[0].length)return 1===this.modified.lines.length&&0===this.modified.lines[0].length?{quitEarly:!1,changes:[]}:{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:1,modifiedStartLineNumber:1,modifiedEndLineNumber:this.modified.lines.length,charChanges:[{modifiedEndColumn:0,modifiedEndLineNumber:0,modifiedStartColumn:0,modifiedStartLineNumber:0,originalEndColumn:0,originalEndLineNumber:0,originalStartColumn:0,originalStartLineNumber:0}]}]};if(1===this.modified.lines.length&&0===this.modified.lines[0].length)return{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:this.original.lines.length,modifiedStartLineNumber:1,modifiedEndLineNumber:1,charChanges:[{modifiedEndColumn:0,modifiedEndLineNumber:0,modifiedStartColumn:0,modifiedStartLineNumber:0,originalEndColumn:0,originalEndLineNumber:0,originalStartColumn:0,originalStartLineNumber:0}]}]};const e=Fe(this.original,this.modified,this.continueLineDiff,this.shouldMakePrettyDiff),t=e.changes,n=e.quitEarly;if(this.shouldIgnoreTrimWhitespace){const e=[];for(let n=0,r=t.length;n<r;n++)e.push(qe.createFromDiffResult(this.shouldIgnoreTrimWhitespace,t[n],this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges));return{quitEarly:n,changes:e}}const r=[];let i=0,o=0;for(let a=-1,s=t.length;a<s;a++){const e=a+1<s?t[a+1]:null,n=e?e.originalStart:this.originalLines.length,u=e?e.modifiedStart:this.modifiedLines.length;for(;i<n&&o<u;){const e=this.originalLines[i],t=this.modifiedLines[o];if(e!==t){{let n=Ue(e,1),a=Ue(t,1);for(;n>1&&a>1;){if(e.charCodeAt(n-2)!==t.charCodeAt(a-2))break;n--,a--}(n>1||a>1)&&this._pushTrimWhitespaceCharChange(r,i+1,1,n,o+1,1,a)}{let n=We(e,1),a=We(t,1);const s=e.length+1,u=t.length+1;for(;n<s&&a<u;){if(e.charCodeAt(n-1)!==e.charCodeAt(a-1))break;n++,a++}(n<s||a<u)&&this._pushTrimWhitespaceCharChange(r,i+1,n,s,o+1,a,u)}}i++,o++}e&&(r.push(qe.createFromDiffResult(this.shouldIgnoreTrimWhitespace,e,this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges)),i+=e.originalLength,o+=e.modifiedLength)}return{quitEarly:n,changes:r}}_pushTrimWhitespaceCharChange(e,t,n,r,i,o,a){if(this._mergeTrimWhitespaceCharChange(e,t,n,r,i,o,a))return;let s;this.shouldComputeCharChanges&&(s=[new Be(t,n,t,r,i,o,i,a)]),e.push(new qe(t,t,i,i,s))}_mergeTrimWhitespaceCharChange(e,t,n,r,i,o,a){const s=e.length;if(0===s)return!1;const u=e[s-1];return 0!==u.originalEndLineNumber&&0!==u.modifiedEndLineNumber&&(u.originalEndLineNumber+1===t&&u.modifiedEndLineNumber+1===i&&(u.originalEndLineNumber=t,u.modifiedEndLineNumber=i,this.shouldComputeCharChanges&&u.charChanges&&u.charChanges.push(new Be(t,n,t,r,i,o,i,a)),!0))}}function Ue(e,t){const n=function(e){for(let t=0,n=e.length;t<n;t++){const n=e.charCodeAt(t);if(32!==n&&9!==n)return t}return-1}(e);return-1===n?t:n+1}function We(e,t){const n=function(e,t=e.length-1){for(let n=t;n>=0;n--){const t=e.charCodeAt(n);if(32!==t&&9!==t)return n}return-1}(e);return-1===n?t:n+2}function Ke(e){if(0===e)return()=>!0;const t=Date.now();return()=>Date.now()-t<e}function Ge(e){return e<0?0:e>255?255:0|e}function Ve(e){return e<0?0:e>4294967295?4294967295:0|e}class He{constructor(e,t){this._prefixSumIndexOfResultBrand=void 0,this.index=e,this.remainder=t}}class ze{constructor(e){this.values=e,this.prefixSum=new Uint32Array(e.length),this.prefixSumValidIndex=new Int32Array(1),this.prefixSumValidIndex[0]=-1}insertValues(e,t){e=Ve(e);const n=this.values,r=this.prefixSum,i=t.length;return 0!==i&&(this.values=new Uint32Array(n.length+i),this.values.set(n.subarray(0,e),0),this.values.set(n.subarray(e),e+i),this.values.set(t,e),e-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=e-1),this.prefixSum=new Uint32Array(this.values.length),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}changeValue(e,t){return e=Ve(e),t=Ve(t),this.values[e]!==t&&(this.values[e]=t,e-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=e-1),!0)}removeValues(e,t){e=Ve(e),t=Ve(t);const n=this.values,r=this.prefixSum;if(e>=n.length)return!1;let i=n.length-e;return t>=i&&(t=i),0!==t&&(this.values=new Uint32Array(n.length-t),this.values.set(n.subarray(0,e),0),this.values.set(n.subarray(e+t),e),this.prefixSum=new Uint32Array(this.values.length),e-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=e-1),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}getTotalSum(){return 0===this.values.length?0:this._getPrefixSum(this.values.length-1)}getPrefixSum(e){return e<0?0:(e=Ve(e),this._getPrefixSum(e))}_getPrefixSum(e){if(e<=this.prefixSumValidIndex[0])return this.prefixSum[e];let t=this.prefixSumValidIndex[0]+1;0===t&&(this.prefixSum[0]=this.values[0],t++),e>=this.values.length&&(e=this.values.length-1);for(let n=t;n<=e;n++)this.prefixSum[n]=this.prefixSum[n-1]+this.values[n];return this.prefixSumValidIndex[0]=Math.max(this.prefixSumValidIndex[0],e),this.prefixSum[e]}getIndexOf(e){e=Math.floor(e),this.getTotalSum();let t=0,n=this.values.length-1,r=0,i=0,o=0;for(;t<=n;)if(r=t+(n-t)/2|0,i=this.prefixSum[r],o=i-this.values[r],e<o)n=r-1;else{if(!(e>=i))break;t=r+1}return new He(r,e-o)}}const Ye=function(e=""){let t="(-?\\d*\\.\\d\\w*)|([^";for(const n of"`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?")e.indexOf(n)>=0||(t+="\\"+n);return t+="\\s]+)",new RegExp(t,"g")}();const Xe={maxLen:1e3,windowSize:15,timeBudget:150};function Je(e,t,n,r,i=Xe){if(n.length>i.maxLen){let o=e-i.maxLen/2;return o<0?o=0:r+=o,Je(e,t,n=n.substring(o,e+i.maxLen/2),r,i)}const o=Date.now(),a=e-1-r;let s=-1,u=null;for(let c=1;!(Date.now()-o>=i.timeBudget);c++){const e=a-i.windowSize*c;t.lastIndex=Math.max(0,e);const r=Qe(t,n,a,s);if(!r&&u)break;if(u=r,e<=0)break;s=e}if(u){let e={word:u[0],startColumn:r+1+u.index,endColumn:r+1+u.index+u[0].length};return t.lastIndex=0,e}return null}function Qe(e,t,n,r){let i;for(;i=e.exec(t);){const t=i.index||0;if(t<=n&&e.lastIndex>=n)return i;if(r>0&&t>r)return null}return null}class Ze{constructor(e){let t=Ge(e);this._defaultValue=t,this._asciiMap=Ze._createAsciiMap(t),this._map=new Map}static _createAsciiMap(e){let t=new Uint8Array(256);for(let n=0;n<256;n++)t[n]=e;return t}set(e,t){let n=Ge(t);e>=0&&e<256?this._asciiMap[e]=n:this._map.set(e,n)}get(e){return e>=0&&e<256?this._asciiMap[e]:this._map.get(e)||this._defaultValue}}class et{constructor(e,t,n){const r=new Uint8Array(e*t);for(let i=0,o=e*t;i<o;i++)r[i]=n;this._data=r,this.rows=e,this.cols=t}get(e,t){return this._data[e*this.cols+t]}set(e,t,n){this._data[e*this.cols+t]=n}}class tt{constructor(e){let t=0,n=0;for(let i=0,o=e.length;i<o;i++){let[r,o,a]=e[i];o>t&&(t=o),r>n&&(n=r),a>n&&(n=a)}t++,n++;let r=new et(n,t,0);for(let i=0,o=e.length;i<o;i++){let[t,n,o]=e[i];r.set(t,n,o)}this._states=r,this._maxCharCode=t}nextState(e,t){return t<0||t>=this._maxCharCode?0:this._states.get(e,t)}}let nt=null;let rt=null;class it{static _createLink(e,t,n,r,i){let o=i-1;do{const n=t.charCodeAt(o);if(2!==e.get(n))break;o--}while(o>r);if(r>0){const e=t.charCodeAt(r-1),n=t.charCodeAt(o);(40===e&&41===n||91===e&&93===n||123===e&&125===n)&&o--}return{range:{startLineNumber:n,startColumn:r+1,endLineNumber:n,endColumn:o+2},url:t.substring(r,o+1)}}static computeLinks(e,t=function(){return null===nt&&(nt=new tt([[1,104,2],[1,72,2],[1,102,6],[1,70,6],[2,116,3],[2,84,3],[3,116,4],[3,84,4],[4,112,5],[4,80,5],[5,115,9],[5,83,9],[5,58,10],[6,105,7],[6,73,7],[7,108,8],[7,76,8],[8,101,9],[8,69,9],[9,58,10],[10,47,11],[11,47,12]])),nt}()){const n=function(){if(null===rt){rt=new Ze(0);const e=" \t<>'\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…";for(let n=0;n<e.length;n++)rt.set(e.charCodeAt(n),1);const t=".,;";for(let n=0;n<t.length;n++)rt.set(t.charCodeAt(n),2)}return rt}();let r=[];for(let i=1,o=e.getLineCount();i<=o;i++){const o=e.getLineContent(i),a=o.length;let s=0,u=0,c=0,l=1,p=!1,f=!1,d=!1,h=!1;for(;s<a;){let e=!1;const a=o.charCodeAt(s);if(13===l){let t;switch(a){case 40:p=!0,t=0;break;case 41:t=p?0:1;break;case 91:d=!0,f=!0,t=0;break;case 93:d=!1,t=f?0:1;break;case 123:h=!0,t=0;break;case 125:t=h?0:1;break;case 39:t=34===c||96===c?0:1;break;case 34:t=39===c||96===c?0:1;break;case 96:t=39===c||34===c?0:1;break;case 42:t=42===c?1:0;break;case 124:t=124===c?1:0;break;case 32:t=d?0:1;break;default:t=n.get(a)}1===t&&(r.push(it._createLink(n,o,i,u,s)),e=!0)}else if(12===l){let t;91===a?(f=!0,t=0):t=n.get(a),1===t?e=!0:l=13}else l=t.nextState(l,a),0===l&&(e=!0);e&&(l=1,p=!1,f=!1,h=!1,u=s+1,c=a),s++}13===l&&r.push(it._createLink(n,o,i,u,a))}return r}}class ot{constructor(){this._defaultValueSet=[["true","false"],["True","False"],["Private","Public","Friend","ReadOnly","Partial","Protected","WriteOnly"],["public","protected","private"]]}navigateValueSet(e,t,n,r,i){if(e&&t){let n=this.doNavigateValueSet(t,i);if(n)return{range:e,value:n}}if(n&&r){let e=this.doNavigateValueSet(r,i);if(e)return{range:n,value:e}}return null}doNavigateValueSet(e,t){let n=this.numberReplace(e,t);return null!==n?n:this.textReplace(e,t)}numberReplace(e,t){let n=Math.pow(10,e.length-(e.lastIndexOf(".")+1)),r=Number(e),i=parseFloat(e);return isNaN(r)||isNaN(i)||r!==i?null:0!==r||t?(r=Math.floor(r*n),r+=t?n:-n,String(r/n)):null}textReplace(e,t){return this.valueSetsReplace(this._defaultValueSet,e,t)}valueSetsReplace(e,t,n){let r=null;for(let i=0,o=e.length;null===r&&i<o;i++)r=this.valueSetReplace(e[i],t,n);return r}valueSetReplace(e,t,n){let r=e.indexOf(t);return r>=0?(r+=n?1:-1,r<0?r=e.length-1:r%=e.length,e[r]):null}}ot.INSTANCE=new ot;const at=Object.freeze((function(e,t){const n=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(n)}}}));var st,ut;(ut=st||(st={})).isCancellationToken=function(e){return e===ut.None||e===ut.Cancelled||e instanceof ct||!(!e||"object"!=typeof e)&&"boolean"==typeof e.isCancellationRequested&&"function"==typeof e.onCancellationRequested},ut.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:k.None}),ut.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:at});class ct{constructor(){this._isCancelled=!1,this._emitter=null}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?at:(this._emitter||(this._emitter=new N),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=null)}}class lt{constructor(e){this._token=void 0,this._parentListener=void 0,this._parentListener=e&&e.onCancellationRequested(this.cancel,this)}get token(){return this._token||(this._token=new ct),this._token}cancel(){this._token?this._token instanceof ct&&this._token.cancel():this._token=st.Cancelled}dispose(e=!1){e&&this.cancel(),this._parentListener&&this._parentListener.dispose(),this._token?this._token instanceof ct&&this._token.dispose():this._token=st.None}}class pt{constructor(){this._keyCodeToStr=[],this._strToKeyCode=Object.create(null)}define(e,t){this._keyCodeToStr[e]=t,this._strToKeyCode[t.toLowerCase()]=e}keyCodeToStr(e){return this._keyCodeToStr[e]}strToKeyCode(e){return this._strToKeyCode[e.toLowerCase()]||0}}const ft=new pt,dt=new pt,ht=new pt,mt=new Array(230),gt={},vt=[],yt=Object.create(null),Et=Object.create(null),_t=[],Ct=[];for(let wI=0;wI<=193;wI++)_t[wI]=-1;for(let wI=0;wI<=126;wI++)Ct[wI]=-1;var Tt,At,Rt,It,Dt,xt,bt,St,kt,Ot,Nt,Pt,wt,Lt,Ft,Mt,$t,Bt,qt,jt,Ut,Wt,Kt,Gt,Vt,Ht,zt,Yt,Xt,Jt,Qt,Zt,en,tn,nn,rn,on,an,sn,un,cn,ln,pn,fn,dn,hn,mn,gn,vn,yn,En,_n,Cn,Tn,An,Rn,In,Dn,xn,bn,Sn,kn,On,Nn,Pn,wn,Ln,Fn,Mn,$n,Bn,qn;!function(){const e="",t=[[0,1,0,"None",0,"unknown",0,"VK_UNKNOWN",e,e],[0,1,1,"Hyper",0,e,0,e,e,e],[0,1,2,"Super",0,e,0,e,e,e],[0,1,3,"Fn",0,e,0,e,e,e],[0,1,4,"FnLock",0,e,0,e,e,e],[0,1,5,"Suspend",0,e,0,e,e,e],[0,1,6,"Resume",0,e,0,e,e,e],[0,1,7,"Turbo",0,e,0,e,e,e],[0,1,8,"Sleep",0,e,0,"VK_SLEEP",e,e],[0,1,9,"WakeUp",0,e,0,e,e,e],[31,0,10,"KeyA",31,"A",65,"VK_A",e,e],[32,0,11,"KeyB",32,"B",66,"VK_B",e,e],[33,0,12,"KeyC",33,"C",67,"VK_C",e,e],[34,0,13,"KeyD",34,"D",68,"VK_D",e,e],[35,0,14,"KeyE",35,"E",69,"VK_E",e,e],[36,0,15,"KeyF",36,"F",70,"VK_F",e,e],[37,0,16,"KeyG",37,"G",71,"VK_G",e,e],[38,0,17,"KeyH",38,"H",72,"VK_H",e,e],[39,0,18,"KeyI",39,"I",73,"VK_I",e,e],[40,0,19,"KeyJ",40,"J",74,"VK_J",e,e],[41,0,20,"KeyK",41,"K",75,"VK_K",e,e],[42,0,21,"KeyL",42,"L",76,"VK_L",e,e],[43,0,22,"KeyM",43,"M",77,"VK_M",e,e],[44,0,23,"KeyN",44,"N",78,"VK_N",e,e],[45,0,24,"KeyO",45,"O",79,"VK_O",e,e],[46,0,25,"KeyP",46,"P",80,"VK_P",e,e],[47,0,26,"KeyQ",47,"Q",81,"VK_Q",e,e],[48,0,27,"KeyR",48,"R",82,"VK_R",e,e],[49,0,28,"KeyS",49,"S",83,"VK_S",e,e],[50,0,29,"KeyT",50,"T",84,"VK_T",e,e],[51,0,30,"KeyU",51,"U",85,"VK_U",e,e],[52,0,31,"KeyV",52,"V",86,"VK_V",e,e],[53,0,32,"KeyW",53,"W",87,"VK_W",e,e],[54,0,33,"KeyX",54,"X",88,"VK_X",e,e],[55,0,34,"KeyY",55,"Y",89,"VK_Y",e,e],[56,0,35,"KeyZ",56,"Z",90,"VK_Z",e,e],[22,0,36,"Digit1",22,"1",49,"VK_1",e,e],[23,0,37,"Digit2",23,"2",50,"VK_2",e,e],[24,0,38,"Digit3",24,"3",51,"VK_3",e,e],[25,0,39,"Digit4",25,"4",52,"VK_4",e,e],[26,0,40,"Digit5",26,"5",53,"VK_5",e,e],[27,0,41,"Digit6",27,"6",54,"VK_6",e,e],[28,0,42,"Digit7",28,"7",55,"VK_7",e,e],[29,0,43,"Digit8",29,"8",56,"VK_8",e,e],[30,0,44,"Digit9",30,"9",57,"VK_9",e,e],[21,0,45,"Digit0",21,"0",48,"VK_0",e,e],[3,1,46,"Enter",3,"Enter",13,"VK_RETURN",e,e],[9,1,47,"Escape",9,"Escape",27,"VK_ESCAPE",e,e],[1,1,48,"Backspace",1,"Backspace",8,"VK_BACK",e,e],[2,1,49,"Tab",2,"Tab",9,"VK_TAB",e,e],[10,1,50,"Space",10,"Space",32,"VK_SPACE",e,e],[83,0,51,"Minus",83,"-",189,"VK_OEM_MINUS","-","OEM_MINUS"],[81,0,52,"Equal",81,"=",187,"VK_OEM_PLUS","=","OEM_PLUS"],[87,0,53,"BracketLeft",87,"[",219,"VK_OEM_4","[","OEM_4"],[89,0,54,"BracketRight",89,"]",221,"VK_OEM_6","]","OEM_6"],[88,0,55,"Backslash",88,"\\",220,"VK_OEM_5","\\","OEM_5"],[0,0,56,"IntlHash",0,e,0,e,e,e],[80,0,57,"Semicolon",80,";",186,"VK_OEM_1",";","OEM_1"],[90,0,58,"Quote",90,"'",222,"VK_OEM_7","'","OEM_7"],[86,0,59,"Backquote",86,"`",192,"VK_OEM_3","`","OEM_3"],[82,0,60,"Comma",82,",",188,"VK_OEM_COMMA",",","OEM_COMMA"],[84,0,61,"Period",84,".",190,"VK_OEM_PERIOD",".","OEM_PERIOD"],[85,0,62,"Slash",85,"/",191,"VK_OEM_2","/","OEM_2"],[8,1,63,"CapsLock",8,"CapsLock",20,"VK_CAPITAL",e,e],[59,1,64,"F1",59,"F1",112,"VK_F1",e,e],[60,1,65,"F2",60,"F2",113,"VK_F2",e,e],[61,1,66,"F3",61,"F3",114,"VK_F3",e,e],[62,1,67,"F4",62,"F4",115,"VK_F4",e,e],[63,1,68,"F5",63,"F5",116,"VK_F5",e,e],[64,1,69,"F6",64,"F6",117,"VK_F6",e,e],[65,1,70,"F7",65,"F7",118,"VK_F7",e,e],[66,1,71,"F8",66,"F8",119,"VK_F8",e,e],[67,1,72,"F9",67,"F9",120,"VK_F9",e,e],[68,1,73,"F10",68,"F10",121,"VK_F10",e,e],[69,1,74,"F11",69,"F11",122,"VK_F11",e,e],[70,1,75,"F12",70,"F12",123,"VK_F12",e,e],[0,1,76,"PrintScreen",0,e,0,e,e,e],[79,1,77,"ScrollLock",79,"ScrollLock",145,"VK_SCROLL",e,e],[7,1,78,"Pause",7,"PauseBreak",19,"VK_PAUSE",e,e],[19,1,79,"Insert",19,"Insert",45,"VK_INSERT",e,e],[14,1,80,"Home",14,"Home",36,"VK_HOME",e,e],[11,1,81,"PageUp",11,"PageUp",33,"VK_PRIOR",e,e],[20,1,82,"Delete",20,"Delete",46,"VK_DELETE",e,e],[13,1,83,"End",13,"End",35,"VK_END",e,e],[12,1,84,"PageDown",12,"PageDown",34,"VK_NEXT",e,e],[17,1,85,"ArrowRight",17,"RightArrow",39,"VK_RIGHT","Right",e],[15,1,86,"ArrowLeft",15,"LeftArrow",37,"VK_LEFT","Left",e],[18,1,87,"ArrowDown",18,"DownArrow",40,"VK_DOWN","Down",e],[16,1,88,"ArrowUp",16,"UpArrow",38,"VK_UP","Up",e],[78,1,89,"NumLock",78,"NumLock",144,"VK_NUMLOCK",e,e],[108,1,90,"NumpadDivide",108,"NumPad_Divide",111,"VK_DIVIDE",e,e],[103,1,91,"NumpadMultiply",103,"NumPad_Multiply",106,"VK_MULTIPLY",e,e],[106,1,92,"NumpadSubtract",106,"NumPad_Subtract",109,"VK_SUBTRACT",e,e],[104,1,93,"NumpadAdd",104,"NumPad_Add",107,"VK_ADD",e,e],[3,1,94,"NumpadEnter",3,e,0,e,e,e],[94,1,95,"Numpad1",94,"NumPad1",97,"VK_NUMPAD1",e,e],[95,1,96,"Numpad2",95,"NumPad2",98,"VK_NUMPAD2",e,e],[96,1,97,"Numpad3",96,"NumPad3",99,"VK_NUMPAD3",e,e],[97,1,98,"Numpad4",97,"NumPad4",100,"VK_NUMPAD4",e,e],[98,1,99,"Numpad5",98,"NumPad5",101,"VK_NUMPAD5",e,e],[99,1,100,"Numpad6",99,"NumPad6",102,"VK_NUMPAD6",e,e],[100,1,101,"Numpad7",100,"NumPad7",103,"VK_NUMPAD7",e,e],[101,1,102,"Numpad8",101,"NumPad8",104,"VK_NUMPAD8",e,e],[102,1,103,"Numpad9",102,"NumPad9",105,"VK_NUMPAD9",e,e],[93,1,104,"Numpad0",93,"NumPad0",96,"VK_NUMPAD0",e,e],[107,1,105,"NumpadDecimal",107,"NumPad_Decimal",110,"VK_DECIMAL",e,e],[92,0,106,"IntlBackslash",92,"OEM_102",226,"VK_OEM_102",e,e],[58,1,107,"ContextMenu",58,"ContextMenu",93,e,e,e],[0,1,108,"Power",0,e,0,e,e,e],[0,1,109,"NumpadEqual",0,e,0,e,e,e],[71,1,110,"F13",71,"F13",124,"VK_F13",e,e],[72,1,111,"F14",72,"F14",125,"VK_F14",e,e],[73,1,112,"F15",73,"F15",126,"VK_F15",e,e],[74,1,113,"F16",74,"F16",127,"VK_F16",e,e],[75,1,114,"F17",75,"F17",128,"VK_F17",e,e],[76,1,115,"F18",76,"F18",129,"VK_F18",e,e],[77,1,116,"F19",77,"F19",130,"VK_F19",e,e],[0,1,117,"F20",0,e,0,"VK_F20",e,e],[0,1,118,"F21",0,e,0,"VK_F21",e,e],[0,1,119,"F22",0,e,0,"VK_F22",e,e],[0,1,120,"F23",0,e,0,"VK_F23",e,e],[0,1,121,"F24",0,e,0,"VK_F24",e,e],[0,1,122,"Open",0,e,0,e,e,e],[0,1,123,"Help",0,e,0,e,e,e],[0,1,124,"Select",0,e,0,e,e,e],[0,1,125,"Again",0,e,0,e,e,e],[0,1,126,"Undo",0,e,0,e,e,e],[0,1,127,"Cut",0,e,0,e,e,e],[0,1,128,"Copy",0,e,0,e,e,e],[0,1,129,"Paste",0,e,0,e,e,e],[0,1,130,"Find",0,e,0,e,e,e],[0,1,131,"AudioVolumeMute",112,"AudioVolumeMute",173,"VK_VOLUME_MUTE",e,e],[0,1,132,"AudioVolumeUp",113,"AudioVolumeUp",175,"VK_VOLUME_UP",e,e],[0,1,133,"AudioVolumeDown",114,"AudioVolumeDown",174,"VK_VOLUME_DOWN",e,e],[105,1,134,"NumpadComma",105,"NumPad_Separator",108,"VK_SEPARATOR",e,e],[110,0,135,"IntlRo",110,"ABNT_C1",193,"VK_ABNT_C1",e,e],[0,1,136,"KanaMode",0,e,0,e,e,e],[0,0,137,"IntlYen",0,e,0,e,e,e],[0,1,138,"Convert",0,e,0,e,e,e],[0,1,139,"NonConvert",0,e,0,e,e,e],[0,1,140,"Lang1",0,e,0,e,e,e],[0,1,141,"Lang2",0,e,0,e,e,e],[0,1,142,"Lang3",0,e,0,e,e,e],[0,1,143,"Lang4",0,e,0,e,e,e],[0,1,144,"Lang5",0,e,0,e,e,e],[0,1,145,"Abort",0,e,0,e,e,e],[0,1,146,"Props",0,e,0,e,e,e],[0,1,147,"NumpadParenLeft",0,e,0,e,e,e],[0,1,148,"NumpadParenRight",0,e,0,e,e,e],[0,1,149,"NumpadBackspace",0,e,0,e,e,e],[0,1,150,"NumpadMemoryStore",0,e,0,e,e,e],[0,1,151,"NumpadMemoryRecall",0,e,0,e,e,e],[0,1,152,"NumpadMemoryClear",0,e,0,e,e,e],[0,1,153,"NumpadMemoryAdd",0,e,0,e,e,e],[0,1,154,"NumpadMemorySubtract",0,e,0,e,e,e],[0,1,155,"NumpadClear",0,e,0,e,e,e],[0,1,156,"NumpadClearEntry",0,e,0,e,e,e],[5,1,0,e,5,"Ctrl",17,"VK_CONTROL",e,e],[4,1,0,e,4,"Shift",16,"VK_SHIFT",e,e],[6,1,0,e,6,"Alt",18,"VK_MENU",e,e],[57,1,0,e,57,"Meta",0,"VK_COMMAND",e,e],[5,1,157,"ControlLeft",5,e,0,"VK_LCONTROL",e,e],[4,1,158,"ShiftLeft",4,e,0,"VK_LSHIFT",e,e],[6,1,159,"AltLeft",6,e,0,"VK_LMENU",e,e],[57,1,160,"MetaLeft",57,e,0,"VK_LWIN",e,e],[5,1,161,"ControlRight",5,e,0,"VK_RCONTROL",e,e],[4,1,162,"ShiftRight",4,e,0,"VK_RSHIFT",e,e],[6,1,163,"AltRight",6,e,0,"VK_RMENU",e,e],[57,1,164,"MetaRight",57,e,0,"VK_RWIN",e,e],[0,1,165,"BrightnessUp",0,e,0,e,e,e],[0,1,166,"BrightnessDown",0,e,0,e,e,e],[0,1,167,"MediaPlay",0,e,0,e,e,e],[0,1,168,"MediaRecord",0,e,0,e,e,e],[0,1,169,"MediaFastForward",0,e,0,e,e,e],[0,1,170,"MediaRewind",0,e,0,e,e,e],[114,1,171,"MediaTrackNext",119,"MediaTrackNext",176,"VK_MEDIA_NEXT_TRACK",e,e],[115,1,172,"MediaTrackPrevious",120,"MediaTrackPrevious",177,"VK_MEDIA_PREV_TRACK",e,e],[116,1,173,"MediaStop",121,"MediaStop",178,"VK_MEDIA_STOP",e,e],[0,1,174,"Eject",0,e,0,e,e,e],[117,1,175,"MediaPlayPause",122,"MediaPlayPause",179,"VK_MEDIA_PLAY_PAUSE",e,e],[0,1,176,"MediaSelect",123,"LaunchMediaPlayer",181,"VK_MEDIA_LAUNCH_MEDIA_SELECT",e,e],[0,1,177,"LaunchMail",124,"LaunchMail",180,"VK_MEDIA_LAUNCH_MAIL",e,e],[0,1,178,"LaunchApp2",125,"LaunchApp2",183,"VK_MEDIA_LAUNCH_APP2",e,e],[0,1,179,"LaunchApp1",0,e,0,"VK_MEDIA_LAUNCH_APP1",e,e],[0,1,180,"SelectTask",0,e,0,e,e,e],[0,1,181,"LaunchScreenSaver",0,e,0,e,e,e],[0,1,182,"BrowserSearch",115,"BrowserSearch",170,"VK_BROWSER_SEARCH",e,e],[0,1,183,"BrowserHome",116,"BrowserHome",172,"VK_BROWSER_HOME",e,e],[112,1,184,"BrowserBack",117,"BrowserBack",166,"VK_BROWSER_BACK",e,e],[113,1,185,"BrowserForward",118,"BrowserForward",167,"VK_BROWSER_FORWARD",e,e],[0,1,186,"BrowserStop",0,e,0,"VK_BROWSER_STOP",e,e],[0,1,187,"BrowserRefresh",0,e,0,"VK_BROWSER_REFRESH",e,e],[0,1,188,"BrowserFavorites",0,e,0,"VK_BROWSER_FAVORITES",e,e],[0,1,189,"ZoomToggle",0,e,0,e,e,e],[0,1,190,"MailReply",0,e,0,e,e,e],[0,1,191,"MailForward",0,e,0,e,e,e],[0,1,192,"MailSend",0,e,0,e,e,e],[109,1,0,e,109,"KeyInComposition",229,e,e,e],[111,1,0,e,111,"ABNT_C2",194,"VK_ABNT_C2",e,e],[91,1,0,e,91,"OEM_8",223,"VK_OEM_8",e,e],[0,1,0,e,0,e,0,"VK_CLEAR",e,e],[0,1,0,e,0,e,0,"VK_KANA",e,e],[0,1,0,e,0,e,0,"VK_HANGUL",e,e],[0,1,0,e,0,e,0,"VK_JUNJA",e,e],[0,1,0,e,0,e,0,"VK_FINAL",e,e],[0,1,0,e,0,e,0,"VK_HANJA",e,e],[0,1,0,e,0,e,0,"VK_KANJI",e,e],[0,1,0,e,0,e,0,"VK_CONVERT",e,e],[0,1,0,e,0,e,0,"VK_NONCONVERT",e,e],[0,1,0,e,0,e,0,"VK_ACCEPT",e,e],[0,1,0,e,0,e,0,"VK_MODECHANGE",e,e],[0,1,0,e,0,e,0,"VK_SELECT",e,e],[0,1,0,e,0,e,0,"VK_PRINT",e,e],[0,1,0,e,0,e,0,"VK_EXECUTE",e,e],[0,1,0,e,0,e,0,"VK_SNAPSHOT",e,e],[0,1,0,e,0,e,0,"VK_HELP",e,e],[0,1,0,e,0,e,0,"VK_APPS",e,e],[0,1,0,e,0,e,0,"VK_PROCESSKEY",e,e],[0,1,0,e,0,e,0,"VK_PACKET",e,e],[0,1,0,e,0,e,0,"VK_DBE_SBCSCHAR",e,e],[0,1,0,e,0,e,0,"VK_DBE_DBCSCHAR",e,e],[0,1,0,e,0,e,0,"VK_ATTN",e,e],[0,1,0,e,0,e,0,"VK_CRSEL",e,e],[0,1,0,e,0,e,0,"VK_EXSEL",e,e],[0,1,0,e,0,e,0,"VK_EREOF",e,e],[0,1,0,e,0,e,0,"VK_PLAY",e,e],[0,1,0,e,0,e,0,"VK_ZOOM",e,e],[0,1,0,e,0,e,0,"VK_NONAME",e,e],[0,1,0,e,0,e,0,"VK_PA1",e,e],[0,1,0,e,0,e,0,"VK_OEM_CLEAR",e,e]];let n=[],r=[];for(const i of t){const[e,t,o,a,s,u,c,l,p,f]=i;if(r[o]||(r[o]=!0,vt[o]=a,yt[a]=o,Et[a.toLowerCase()]=o,t&&(_t[o]=s,0!==s&&3!==s&&5!==s&&4!==s&&6!==s&&57!==s&&(Ct[s]=o))),!n[s]){if(n[s]=!0,!u)throw new Error(`String representation missing for key code ${s} around scan code ${a}`);ft.define(s,u),dt.define(s,p||u),ht.define(s,f||p||u)}c&&(mt[c]=s),l&&(gt[l]=s)}Ct[3]=46}(),(At=Tt||(Tt={})).toString=function(e){return ft.keyCodeToStr(e)},At.fromString=function(e){return ft.strToKeyCode(e)},At.toUserSettingsUS=function(e){return dt.keyCodeToStr(e)},At.toUserSettingsGeneral=function(e){return ht.keyCodeToStr(e)},At.fromUserSettings=function(e){return dt.strToKeyCode(e)||ht.strToKeyCode(e)},At.toElectronAccelerator=function(e){if(e>=93&&e<=108)return null;switch(e){case 16:return"Up";case 18:return"Down";case 15:return"Left";case 17:return"Right"}return ft.keyCodeToStr(e)};class jn extends Le{constructor(e,t,n,r){super(e,t,n,r),this.selectionStartLineNumber=e,this.selectionStartColumn=t,this.positionLineNumber=n,this.positionColumn=r}toString(){return"["+this.selectionStartLineNumber+","+this.selectionStartColumn+" -> "+this.positionLineNumber+","+this.positionColumn+"]"}equalsSelection(e){return jn.selectionsEqual(this,e)}static selectionsEqual(e,t){return e.selectionStartLineNumber===t.selectionStartLineNumber&&e.selectionStartColumn===t.selectionStartColumn&&e.positionLineNumber===t.positionLineNumber&&e.positionColumn===t.positionColumn}getDirection(){return this.selectionStartLineNumber===this.startLineNumber&&this.selectionStartColumn===this.startColumn?0:1}setEndPosition(e,t){return 0===this.getDirection()?new jn(this.startLineNumber,this.startColumn,e,t):new jn(e,t,this.startLineNumber,this.startColumn)}getPosition(){return new we(this.positionLineNumber,this.positionColumn)}setStartPosition(e,t){return 0===this.getDirection()?new jn(e,t,this.endLineNumber,this.endColumn):new jn(this.endLineNumber,this.endColumn,e,t)}static fromPositions(e,t=e){return new jn(e.lineNumber,e.column,t.lineNumber,t.column)}static liftSelection(e){return new jn(e.selectionStartLineNumber,e.selectionStartColumn,e.positionLineNumber,e.positionColumn)}static selectionsArrEqual(e,t){if(e&&!t||!e&&t)return!1;if(!e&&!t)return!0;if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(!this.selectionsEqual(e[n],t[n]))return!1;return!0}static isISelection(e){return e&&"number"==typeof e.selectionStartLineNumber&&"number"==typeof e.selectionStartColumn&&"number"==typeof e.positionLineNumber&&"number"==typeof e.positionColumn}static createWithDirection(e,t,n,r,i){return 0===i?new jn(e,t,n,r):new jn(n,r,e,t)}}class Un{constructor(e,t,n){this._tokenBrand=void 0,this.offset=0|e,this.type=t,this.language=n}toString(){return"("+this.offset+", "+this.type+")"}}(It=Rt||(Rt={}))[It.Unknown=0]="Unknown",It[It.Disabled=1]="Disabled",It[It.Enabled=2]="Enabled",(xt=Dt||(Dt={}))[xt.KeepWhitespace=1]="KeepWhitespace",xt[xt.InsertAsSnippet=4]="InsertAsSnippet",(St=bt||(bt={}))[St.Method=0]="Method",St[St.Function=1]="Function",St[St.Constructor=2]="Constructor",St[St.Field=3]="Field",St[St.Variable=4]="Variable",St[St.Class=5]="Class",St[St.Struct=6]="Struct",St[St.Interface=7]="Interface",St[St.Module=8]="Module",St[St.Property=9]="Property",St[St.Event=10]="Event",St[St.Operator=11]="Operator",St[St.Unit=12]="Unit",St[St.Value=13]="Value",St[St.Constant=14]="Constant",St[St.Enum=15]="Enum",St[St.EnumMember=16]="EnumMember",St[St.Keyword=17]="Keyword",St[St.Text=18]="Text",St[St.Color=19]="Color",St[St.File=20]="File",St[St.Reference=21]="Reference",St[St.Customcolor=22]="Customcolor",St[St.Folder=23]="Folder",St[St.TypeParameter=24]="TypeParameter",St[St.User=25]="User",St[St.Issue=26]="Issue",St[St.Snippet=27]="Snippet",(Ot=kt||(kt={}))[Ot.Deprecated=1]="Deprecated",(Pt=Nt||(Nt={}))[Pt.Invoke=0]="Invoke",Pt[Pt.TriggerCharacter=1]="TriggerCharacter",Pt[Pt.TriggerForIncompleteCompletions=2]="TriggerForIncompleteCompletions",(Lt=wt||(wt={}))[Lt.EXACT=0]="EXACT",Lt[Lt.ABOVE=1]="ABOVE",Lt[Lt.BELOW=2]="BELOW",(Mt=Ft||(Ft={}))[Mt.NotSet=0]="NotSet",Mt[Mt.ContentFlush=1]="ContentFlush",Mt[Mt.RecoverFromMarkers=2]="RecoverFromMarkers",Mt[Mt.Explicit=3]="Explicit",Mt[Mt.Paste=4]="Paste",Mt[Mt.Undo=5]="Undo",Mt[Mt.Redo=6]="Redo",(Bt=$t||($t={}))[Bt.LF=1]="LF",Bt[Bt.CRLF=2]="CRLF",(jt=qt||(qt={}))[jt.Text=0]="Text",jt[jt.Read=1]="Read",jt[jt.Write=2]="Write",(Wt=Ut||(Ut={}))[Wt.None=0]="None",Wt[Wt.Keep=1]="Keep",Wt[Wt.Brackets=2]="Brackets",Wt[Wt.Advanced=3]="Advanced",Wt[Wt.Full=4]="Full",(Gt=Kt||(Kt={}))[Gt.acceptSuggestionOnCommitCharacter=0]="acceptSuggestionOnCommitCharacter",Gt[Gt.acceptSuggestionOnEnter=1]="acceptSuggestionOnEnter",Gt[Gt.accessibilitySupport=2]="accessibilitySupport",Gt[Gt.accessibilityPageSize=3]="accessibilityPageSize",Gt[Gt.ariaLabel=4]="ariaLabel",Gt[Gt.autoClosingBrackets=5]="autoClosingBrackets",Gt[Gt.autoClosingDelete=6]="autoClosingDelete",Gt[Gt.autoClosingOvertype=7]="autoClosingOvertype",Gt[Gt.autoClosingQuotes=8]="autoClosingQuotes",Gt[Gt.autoIndent=9]="autoIndent",Gt[Gt.automaticLayout=10]="automaticLayout",Gt[Gt.autoSurround=11]="autoSurround",Gt[Gt.bracketPairColorization=12]="bracketPairColorization",Gt[Gt.guides=13]="guides",Gt[Gt.codeLens=14]="codeLens",Gt[Gt.codeLensFontFamily=15]="codeLensFontFamily",Gt[Gt.codeLensFontSize=16]="codeLensFontSize",Gt[Gt.colorDecorators=17]="colorDecorators",Gt[Gt.columnSelection=18]="columnSelection",Gt[Gt.comments=19]="comments",Gt[Gt.contextmenu=20]="contextmenu",Gt[Gt.copyWithSyntaxHighlighting=21]="copyWithSyntaxHighlighting",Gt[Gt.cursorBlinking=22]="cursorBlinking",Gt[Gt.cursorSmoothCaretAnimation=23]="cursorSmoothCaretAnimation",Gt[Gt.cursorStyle=24]="cursorStyle",Gt[Gt.cursorSurroundingLines=25]="cursorSurroundingLines",Gt[Gt.cursorSurroundingLinesStyle=26]="cursorSurroundingLinesStyle",Gt[Gt.cursorWidth=27]="cursorWidth",Gt[Gt.disableLayerHinting=28]="disableLayerHinting",Gt[Gt.disableMonospaceOptimizations=29]="disableMonospaceOptimizations",Gt[Gt.domReadOnly=30]="domReadOnly",Gt[Gt.dragAndDrop=31]="dragAndDrop",Gt[Gt.emptySelectionClipboard=32]="emptySelectionClipboard",Gt[Gt.extraEditorClassName=33]="extraEditorClassName",Gt[Gt.fastScrollSensitivity=34]="fastScrollSensitivity",Gt[Gt.find=35]="find",Gt[Gt.fixedOverflowWidgets=36]="fixedOverflowWidgets",Gt[Gt.folding=37]="folding",Gt[Gt.foldingStrategy=38]="foldingStrategy",Gt[Gt.foldingHighlight=39]="foldingHighlight",Gt[Gt.foldingImportsByDefault=40]="foldingImportsByDefault",Gt[Gt.unfoldOnClickAfterEndOfLine=41]="unfoldOnClickAfterEndOfLine",Gt[Gt.fontFamily=42]="fontFamily",Gt[Gt.fontInfo=43]="fontInfo",Gt[Gt.fontLigatures=44]="fontLigatures",Gt[Gt.fontSize=45]="fontSize",Gt[Gt.fontWeight=46]="fontWeight",Gt[Gt.formatOnPaste=47]="formatOnPaste",Gt[Gt.formatOnType=48]="formatOnType",Gt[Gt.glyphMargin=49]="glyphMargin",Gt[Gt.gotoLocation=50]="gotoLocation",Gt[Gt.hideCursorInOverviewRuler=51]="hideCursorInOverviewRuler",Gt[Gt.hover=52]="hover",Gt[Gt.inDiffEditor=53]="inDiffEditor",Gt[Gt.inlineSuggest=54]="inlineSuggest",Gt[Gt.letterSpacing=55]="letterSpacing",Gt[Gt.lightbulb=56]="lightbulb",Gt[Gt.lineDecorationsWidth=57]="lineDecorationsWidth",Gt[Gt.lineHeight=58]="lineHeight",Gt[Gt.lineNumbers=59]="lineNumbers",Gt[Gt.lineNumbersMinChars=60]="lineNumbersMinChars",Gt[Gt.linkedEditing=61]="linkedEditing",Gt[Gt.links=62]="links",Gt[Gt.matchBrackets=63]="matchBrackets",Gt[Gt.minimap=64]="minimap",Gt[Gt.mouseStyle=65]="mouseStyle",Gt[Gt.mouseWheelScrollSensitivity=66]="mouseWheelScrollSensitivity",Gt[Gt.mouseWheelZoom=67]="mouseWheelZoom",Gt[Gt.multiCursorMergeOverlapping=68]="multiCursorMergeOverlapping",Gt[Gt.multiCursorModifier=69]="multiCursorModifier",Gt[Gt.multiCursorPaste=70]="multiCursorPaste",Gt[Gt.occurrencesHighlight=71]="occurrencesHighlight",Gt[Gt.overviewRulerBorder=72]="overviewRulerBorder",Gt[Gt.overviewRulerLanes=73]="overviewRulerLanes",Gt[Gt.padding=74]="padding",Gt[Gt.parameterHints=75]="parameterHints",Gt[Gt.peekWidgetDefaultFocus=76]="peekWidgetDefaultFocus",Gt[Gt.definitionLinkOpensInPeek=77]="definitionLinkOpensInPeek",Gt[Gt.quickSuggestions=78]="quickSuggestions",Gt[Gt.quickSuggestionsDelay=79]="quickSuggestionsDelay",Gt[Gt.readOnly=80]="readOnly",Gt[Gt.renameOnType=81]="renameOnType",Gt[Gt.renderControlCharacters=82]="renderControlCharacters",Gt[Gt.renderFinalNewline=83]="renderFinalNewline",Gt[Gt.renderLineHighlight=84]="renderLineHighlight",Gt[Gt.renderLineHighlightOnlyWhenFocus=85]="renderLineHighlightOnlyWhenFocus",Gt[Gt.renderValidationDecorations=86]="renderValidationDecorations",Gt[Gt.renderWhitespace=87]="renderWhitespace",Gt[Gt.revealHorizontalRightPadding=88]="revealHorizontalRightPadding",Gt[Gt.roundedSelection=89]="roundedSelection",Gt[Gt.rulers=90]="rulers",Gt[Gt.scrollbar=91]="scrollbar",Gt[Gt.scrollBeyondLastColumn=92]="scrollBeyondLastColumn",Gt[Gt.scrollBeyondLastLine=93]="scrollBeyondLastLine",Gt[Gt.scrollPredominantAxis=94]="scrollPredominantAxis",Gt[Gt.selectionClipboard=95]="selectionClipboard",Gt[Gt.selectionHighlight=96]="selectionHighlight",Gt[Gt.selectOnLineNumbers=97]="selectOnLineNumbers",Gt[Gt.showFoldingControls=98]="showFoldingControls",Gt[Gt.showUnused=99]="showUnused",Gt[Gt.snippetSuggestions=100]="snippetSuggestions",Gt[Gt.smartSelect=101]="smartSelect",Gt[Gt.smoothScrolling=102]="smoothScrolling",Gt[Gt.stickyTabStops=103]="stickyTabStops",Gt[Gt.stopRenderingLineAfter=104]="stopRenderingLineAfter",Gt[Gt.suggest=105]="suggest",Gt[Gt.suggestFontSize=106]="suggestFontSize",Gt[Gt.suggestLineHeight=107]="suggestLineHeight",Gt[Gt.suggestOnTriggerCharacters=108]="suggestOnTriggerCharacters",Gt[Gt.suggestSelection=109]="suggestSelection",Gt[Gt.tabCompletion=110]="tabCompletion",Gt[Gt.tabIndex=111]="tabIndex",Gt[Gt.unusualLineTerminators=112]="unusualLineTerminators",Gt[Gt.useShadowDOM=113]="useShadowDOM",Gt[Gt.useTabStops=114]="useTabStops",Gt[Gt.wordSeparators=115]="wordSeparators",Gt[Gt.wordWrap=116]="wordWrap",Gt[Gt.wordWrapBreakAfterCharacters=117]="wordWrapBreakAfterCharacters",Gt[Gt.wordWrapBreakBeforeCharacters=118]="wordWrapBreakBeforeCharacters",Gt[Gt.wordWrapColumn=119]="wordWrapColumn",Gt[Gt.wordWrapOverride1=120]="wordWrapOverride1",Gt[Gt.wordWrapOverride2=121]="wordWrapOverride2",Gt[Gt.wrappingIndent=122]="wrappingIndent",Gt[Gt.wrappingStrategy=123]="wrappingStrategy",Gt[Gt.showDeprecated=124]="showDeprecated",Gt[Gt.inlayHints=125]="inlayHints",Gt[Gt.editorClassName=126]="editorClassName",Gt[Gt.pixelRatio=127]="pixelRatio",Gt[Gt.tabFocusMode=128]="tabFocusMode",Gt[Gt.layoutInfo=129]="layoutInfo",Gt[Gt.wrappingInfo=130]="wrappingInfo",(Ht=Vt||(Vt={}))[Ht.TextDefined=0]="TextDefined",Ht[Ht.LF=1]="LF",Ht[Ht.CRLF=2]="CRLF",(Yt=zt||(zt={}))[Yt.LF=0]="LF",Yt[Yt.CRLF=1]="CRLF",(Jt=Xt||(Xt={}))[Jt.None=0]="None",Jt[Jt.Indent=1]="Indent",Jt[Jt.IndentOutdent=2]="IndentOutdent",Jt[Jt.Outdent=3]="Outdent",(Zt=Qt||(Qt={}))[Zt.Other=0]="Other",Zt[Zt.Type=1]="Type",Zt[Zt.Parameter=2]="Parameter",(tn=en||(en={}))[tn.Automatic=0]="Automatic",tn[tn.Explicit=1]="Explicit",(rn=nn||(nn={}))[rn.DependsOnKbLayout=-1]="DependsOnKbLayout",rn[rn.Unknown=0]="Unknown",rn[rn.Backspace=1]="Backspace",rn[rn.Tab=2]="Tab",rn[rn.Enter=3]="Enter",rn[rn.Shift=4]="Shift",rn[rn.Ctrl=5]="Ctrl",rn[rn.Alt=6]="Alt",rn[rn.PauseBreak=7]="PauseBreak",rn[rn.CapsLock=8]="CapsLock",rn[rn.Escape=9]="Escape",rn[rn.Space=10]="Space",rn[rn.PageUp=11]="PageUp",rn[rn.PageDown=12]="PageDown",rn[rn.End=13]="End",rn[rn.Home=14]="Home",rn[rn.LeftArrow=15]="LeftArrow",rn[rn.UpArrow=16]="UpArrow",rn[rn.RightArrow=17]="RightArrow",rn[rn.DownArrow=18]="DownArrow",rn[rn.Insert=19]="Insert",rn[rn.Delete=20]="Delete",rn[rn.Digit0=21]="Digit0",rn[rn.Digit1=22]="Digit1",rn[rn.Digit2=23]="Digit2",rn[rn.Digit3=24]="Digit3",rn[rn.Digit4=25]="Digit4",rn[rn.Digit5=26]="Digit5",rn[rn.Digit6=27]="Digit6",rn[rn.Digit7=28]="Digit7",rn[rn.Digit8=29]="Digit8",rn[rn.Digit9=30]="Digit9",rn[rn.KeyA=31]="KeyA",rn[rn.KeyB=32]="KeyB",rn[rn.KeyC=33]="KeyC",rn[rn.KeyD=34]="KeyD",rn[rn.KeyE=35]="KeyE",rn[rn.KeyF=36]="KeyF",rn[rn.KeyG=37]="KeyG",rn[rn.KeyH=38]="KeyH",rn[rn.KeyI=39]="KeyI",rn[rn.KeyJ=40]="KeyJ",rn[rn.KeyK=41]="KeyK",rn[rn.KeyL=42]="KeyL",rn[rn.KeyM=43]="KeyM",rn[rn.KeyN=44]="KeyN",rn[rn.KeyO=45]="KeyO",rn[rn.KeyP=46]="KeyP",rn[rn.KeyQ=47]="KeyQ",rn[rn.KeyR=48]="KeyR",rn[rn.KeyS=49]="KeyS",rn[rn.KeyT=50]="KeyT",rn[rn.KeyU=51]="KeyU",rn[rn.KeyV=52]="KeyV",rn[rn.KeyW=53]="KeyW",rn[rn.KeyX=54]="KeyX",rn[rn.KeyY=55]="KeyY",rn[rn.KeyZ=56]="KeyZ",rn[rn.Meta=57]="Meta",rn[rn.ContextMenu=58]="ContextMenu",rn[rn.F1=59]="F1",rn[rn.F2=60]="F2",rn[rn.F3=61]="F3",rn[rn.F4=62]="F4",rn[rn.F5=63]="F5",rn[rn.F6=64]="F6",rn[rn.F7=65]="F7",rn[rn.F8=66]="F8",rn[rn.F9=67]="F9",rn[rn.F10=68]="F10",rn[rn.F11=69]="F11",rn[rn.F12=70]="F12",rn[rn.F13=71]="F13",rn[rn.F14=72]="F14",rn[rn.F15=73]="F15",rn[rn.F16=74]="F16",rn[rn.F17=75]="F17",rn[rn.F18=76]="F18",rn[rn.F19=77]="F19",rn[rn.NumLock=78]="NumLock",rn[rn.ScrollLock=79]="ScrollLock",rn[rn.Semicolon=80]="Semicolon",rn[rn.Equal=81]="Equal",rn[rn.Comma=82]="Comma",rn[rn.Minus=83]="Minus",rn[rn.Period=84]="Period",rn[rn.Slash=85]="Slash",rn[rn.Backquote=86]="Backquote",rn[rn.BracketLeft=87]="BracketLeft",rn[rn.Backslash=88]="Backslash",rn[rn.BracketRight=89]="BracketRight",rn[rn.Quote=90]="Quote",rn[rn.OEM_8=91]="OEM_8",rn[rn.IntlBackslash=92]="IntlBackslash",rn[rn.Numpad0=93]="Numpad0",rn[rn.Numpad1=94]="Numpad1",rn[rn.Numpad2=95]="Numpad2",rn[rn.Numpad3=96]="Numpad3",rn[rn.Numpad4=97]="Numpad4",rn[rn.Numpad5=98]="Numpad5",rn[rn.Numpad6=99]="Numpad6",rn[rn.Numpad7=100]="Numpad7",rn[rn.Numpad8=101]="Numpad8",rn[rn.Numpad9=102]="Numpad9",rn[rn.NumpadMultiply=103]="NumpadMultiply",rn[rn.NumpadAdd=104]="NumpadAdd",rn[rn.NUMPAD_SEPARATOR=105]="NUMPAD_SEPARATOR",rn[rn.NumpadSubtract=106]="NumpadSubtract",rn[rn.NumpadDecimal=107]="NumpadDecimal",rn[rn.NumpadDivide=108]="NumpadDivide",rn[rn.KEY_IN_COMPOSITION=109]="KEY_IN_COMPOSITION",rn[rn.ABNT_C1=110]="ABNT_C1",rn[rn.ABNT_C2=111]="ABNT_C2",rn[rn.AudioVolumeMute=112]="AudioVolumeMute",rn[rn.AudioVolumeUp=113]="AudioVolumeUp",rn[rn.AudioVolumeDown=114]="AudioVolumeDown",rn[rn.BrowserSearch=115]="BrowserSearch",rn[rn.BrowserHome=116]="BrowserHome",rn[rn.BrowserBack=117]="BrowserBack",rn[rn.BrowserForward=118]="BrowserForward",rn[rn.MediaTrackNext=119]="MediaTrackNext",rn[rn.MediaTrackPrevious=120]="MediaTrackPrevious",rn[rn.MediaStop=121]="MediaStop",rn[rn.MediaPlayPause=122]="MediaPlayPause",rn[rn.LaunchMediaPlayer=123]="LaunchMediaPlayer",rn[rn.LaunchMail=124]="LaunchMail",rn[rn.LaunchApp2=125]="LaunchApp2",rn[rn.MAX_VALUE=126]="MAX_VALUE",(an=on||(on={}))[an.Hint=1]="Hint",an[an.Info=2]="Info",an[an.Warning=4]="Warning",an[an.Error=8]="Error",(un=sn||(sn={}))[un.Unnecessary=1]="Unnecessary",un[un.Deprecated=2]="Deprecated",(ln=cn||(cn={}))[ln.Inline=1]="Inline",ln[ln.Gutter=2]="Gutter",(fn=pn||(pn={}))[fn.UNKNOWN=0]="UNKNOWN",fn[fn.TEXTAREA=1]="TEXTAREA",fn[fn.GUTTER_GLYPH_MARGIN=2]="GUTTER_GLYPH_MARGIN",fn[fn.GUTTER_LINE_NUMBERS=3]="GUTTER_LINE_NUMBERS",fn[fn.GUTTER_LINE_DECORATIONS=4]="GUTTER_LINE_DECORATIONS",fn[fn.GUTTER_VIEW_ZONE=5]="GUTTER_VIEW_ZONE",fn[fn.CONTENT_TEXT=6]="CONTENT_TEXT",fn[fn.CONTENT_EMPTY=7]="CONTENT_EMPTY",fn[fn.CONTENT_VIEW_ZONE=8]="CONTENT_VIEW_ZONE",fn[fn.CONTENT_WIDGET=9]="CONTENT_WIDGET",fn[fn.OVERVIEW_RULER=10]="OVERVIEW_RULER",fn[fn.SCROLLBAR=11]="SCROLLBAR",fn[fn.OVERLAY_WIDGET=12]="OVERLAY_WIDGET",fn[fn.OUTSIDE_EDITOR=13]="OUTSIDE_EDITOR",(hn=dn||(dn={}))[hn.TOP_RIGHT_CORNER=0]="TOP_RIGHT_CORNER",hn[hn.BOTTOM_RIGHT_CORNER=1]="BOTTOM_RIGHT_CORNER",hn[hn.TOP_CENTER=2]="TOP_CENTER",(gn=mn||(mn={}))[gn.Left=1]="Left",gn[gn.Center=2]="Center",gn[gn.Right=4]="Right",gn[gn.Full=7]="Full",(yn=vn||(vn={}))[yn.Off=0]="Off",yn[yn.On=1]="On",yn[yn.Relative=2]="Relative",yn[yn.Interval=3]="Interval",yn[yn.Custom=4]="Custom",(_n=En||(En={}))[_n.None=0]="None",_n[_n.Text=1]="Text",_n[_n.Blocks=2]="Blocks",(Tn=Cn||(Cn={}))[Tn.Smooth=0]="Smooth",Tn[Tn.Immediate=1]="Immediate",(Rn=An||(An={}))[Rn.Auto=1]="Auto",Rn[Rn.Hidden=2]="Hidden",Rn[Rn.Visible=3]="Visible",(Dn=In||(In={}))[Dn.LTR=0]="LTR",Dn[Dn.RTL=1]="RTL",(bn=xn||(xn={}))[bn.Invoke=1]="Invoke",bn[bn.TriggerCharacter=2]="TriggerCharacter",bn[bn.ContentChange=3]="ContentChange",(kn=Sn||(Sn={}))[kn.File=0]="File",kn[kn.Module=1]="Module",kn[kn.Namespace=2]="Namespace",kn[kn.Package=3]="Package",kn[kn.Class=4]="Class",kn[kn.Method=5]="Method",kn[kn.Property=6]="Property",kn[kn.Field=7]="Field",kn[kn.Constructor=8]="Constructor",kn[kn.Enum=9]="Enum",kn[kn.Interface=10]="Interface",kn[kn.Function=11]="Function",kn[kn.Variable=12]="Variable",kn[kn.Constant=13]="Constant",kn[kn.String=14]="String",kn[kn.Number=15]="Number",kn[kn.Boolean=16]="Boolean",kn[kn.Array=17]="Array",kn[kn.Object=18]="Object",kn[kn.Key=19]="Key",kn[kn.Null=20]="Null",kn[kn.EnumMember=21]="EnumMember",kn[kn.Struct=22]="Struct",kn[kn.Event=23]="Event",kn[kn.Operator=24]="Operator",kn[kn.TypeParameter=25]="TypeParameter",(Nn=On||(On={}))[Nn.Deprecated=1]="Deprecated",(wn=Pn||(Pn={}))[wn.Hidden=0]="Hidden",wn[wn.Blink=1]="Blink",wn[wn.Smooth=2]="Smooth",wn[wn.Phase=3]="Phase",wn[wn.Expand=4]="Expand",wn[wn.Solid=5]="Solid",(Fn=Ln||(Ln={}))[Fn.Line=1]="Line",Fn[Fn.Block=2]="Block",Fn[Fn.Underline=3]="Underline",Fn[Fn.LineThin=4]="LineThin",Fn[Fn.BlockOutline=5]="BlockOutline",Fn[Fn.UnderlineThin=6]="UnderlineThin",($n=Mn||(Mn={}))[$n.AlwaysGrowsWhenTypingAtEdges=0]="AlwaysGrowsWhenTypingAtEdges",$n[$n.NeverGrowsWhenTypingAtEdges=1]="NeverGrowsWhenTypingAtEdges",$n[$n.GrowsOnlyWhenTypingBefore=2]="GrowsOnlyWhenTypingBefore",$n[$n.GrowsOnlyWhenTypingAfter=3]="GrowsOnlyWhenTypingAfter",(qn=Bn||(Bn={}))[qn.None=0]="None",qn[qn.Same=1]="Same",qn[qn.Indent=2]="Indent",qn[qn.DeepIndent=3]="DeepIndent";class Wn{static chord(e,t){return function(e,t){return(e|(65535&t)<<16>>>0)>>>0}(e,t)}}Wn.CtrlCmd=2048,Wn.Shift=1024,Wn.Alt=512,Wn.WinCtrl=256;var Kn=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(PI){o(PI)}}function s(e){try{u(r.throw(e))}catch(PI){o(PI)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))};class Gn extends class{constructor(e,t,n,r){this._uri=e,this._lines=t,this._eol=n,this._versionId=r,this._lineStarts=null,this._cachedTextValue=null}dispose(){this._lines.length=0}get version(){return this._versionId}getText(){return null===this._cachedTextValue&&(this._cachedTextValue=this._lines.join(this._eol)),this._cachedTextValue}onEvents(e){e.eol&&e.eol!==this._eol&&(this._eol=e.eol,this._lineStarts=null);const t=e.changes;for(const n of t)this._acceptDeleteRange(n.range),this._acceptInsertText(new we(n.range.startLineNumber,n.range.startColumn),n.text);this._versionId=e.versionId,this._cachedTextValue=null}_ensureLineStarts(){if(!this._lineStarts){const e=this._eol.length,t=this._lines.length,n=new Uint32Array(t);for(let r=0;r<t;r++)n[r]=this._lines[r].length+e;this._lineStarts=new ze(n)}}_setLineText(e,t){this._lines[e]=t,this._lineStarts&&this._lineStarts.changeValue(e,this._lines[e].length+this._eol.length)}_acceptDeleteRange(e){if(e.startLineNumber!==e.endLineNumber)this._setLineText(e.startLineNumber-1,this._lines[e.startLineNumber-1].substring(0,e.startColumn-1)+this._lines[e.endLineNumber-1].substring(e.endColumn-1)),this._lines.splice(e.startLineNumber,e.endLineNumber-e.startLineNumber),this._lineStarts&&this._lineStarts.removeValues(e.startLineNumber,e.endLineNumber-e.startLineNumber);else{if(e.startColumn===e.endColumn)return;this._setLineText(e.startLineNumber-1,this._lines[e.startLineNumber-1].substring(0,e.startColumn-1)+this._lines[e.startLineNumber-1].substring(e.endColumn-1))}}_acceptInsertText(e,t){if(0===t.length)return;let n=t.split(/\r\n|\r|\n/);if(1===n.length)return void this._setLineText(e.lineNumber-1,this._lines[e.lineNumber-1].substring(0,e.column-1)+n[0]+this._lines[e.lineNumber-1].substring(e.column-1));n[n.length-1]+=this._lines[e.lineNumber-1].substring(e.column-1),this._setLineText(e.lineNumber-1,this._lines[e.lineNumber-1].substring(0,e.column-1)+n[0]);let r=new Uint32Array(n.length-1);for(let i=1;i<n.length;i++)this._lines.splice(e.lineNumber+i-1,0,n[i]),r[i-1]=n[i].length+this._eol.length;this._lineStarts&&this._lineStarts.insertValues(e.lineNumber,r)}}{get uri(){return this._uri}get eol(){return this._eol}getValue(){return this.getText()}getLinesContent(){return this._lines.slice(0)}getLineCount(){return this._lines.length}getLineContent(e){return this._lines[e-1]}getWordAtPosition(e,t){let n=Je(e.column,function(e){let t=Ye;if(e&&e instanceof RegExp)if(e.global)t=e;else{let n="g";e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),t=new RegExp(e.source,n)}return t.lastIndex=0,t}(t),this._lines[e.lineNumber-1],0);return n?new Le(e.lineNumber,n.startColumn,e.lineNumber,n.endColumn):null}words(e){const t=this._lines,n=this._wordenize.bind(this);let r=0,i="",o=0,a=[];return{*[Symbol.iterator](){for(;;)if(o<a.length){const e=i.substring(a[o].start,a[o].end);o+=1,yield e}else{if(!(r<t.length))break;i=t[r],a=n(i,e),o=0,r+=1}}}}getLineWords(e,t){let n=this._lines[e-1],r=this._wordenize(n,t),i=[];for(const o of r)i.push({word:n.substring(o.start,o.end),startColumn:o.start+1,endColumn:o.end+1});return i}_wordenize(e,t){const n=[];let r;for(t.lastIndex=0;(r=t.exec(e))&&0!==r[0].length;)n.push({start:r.index,end:r.index+r[0].length});return n}getValueInRange(e){if((e=this._validateRange(e)).startLineNumber===e.endLineNumber)return this._lines[e.startLineNumber-1].substring(e.startColumn-1,e.endColumn-1);let t=this._eol,n=e.startLineNumber-1,r=e.endLineNumber-1,i=[];i.push(this._lines[n].substring(e.startColumn-1));for(let o=n+1;o<r;o++)i.push(this._lines[o]);return i.push(this._lines[r].substring(0,e.endColumn-1)),i.join(t)}offsetAt(e){return e=this._validatePosition(e),this._ensureLineStarts(),this._lineStarts.getPrefixSum(e.lineNumber-2)+(e.column-1)}positionAt(e){e=Math.floor(e),e=Math.max(0,e),this._ensureLineStarts();let t=this._lineStarts.getIndexOf(e),n=this._lines[t.index].length;return{lineNumber:1+t.index,column:1+Math.min(t.remainder,n)}}_validateRange(e){const t=this._validatePosition({lineNumber:e.startLineNumber,column:e.startColumn}),n=this._validatePosition({lineNumber:e.endLineNumber,column:e.endColumn});return t.lineNumber!==e.startLineNumber||t.column!==e.startColumn||n.lineNumber!==e.endLineNumber||n.column!==e.endColumn?{startLineNumber:t.lineNumber,startColumn:t.column,endLineNumber:n.lineNumber,endColumn:n.column}:e}_validatePosition(e){if(!we.isIPosition(e))throw new Error("bad position");let{lineNumber:t,column:n}=e,r=!1;if(t<1)t=1,n=1,r=!0;else if(t>this._lines.length)t=this._lines.length,n=this._lines[t-1].length+1,r=!0;else{let e=this._lines[t-1].length+1;n<1?(n=1,r=!0):n>e&&(n=e,r=!0)}return r?{lineNumber:t,column:n}:e}}class Vn{constructor(e,t){this._host=e,this._models=Object.create(null),this._foreignModuleFactory=t,this._foreignModule=null}dispose(){this._models=Object.create(null)}_getModel(e){return this._models[e]}_getModels(){let e=[];return Object.keys(this._models).forEach((t=>e.push(this._models[t]))),e}acceptNewModel(e){this._models[e.url]=new Gn(Ae.parse(e.url),e.lines,e.EOL,e.versionId)}acceptModelChanged(e,t){if(!this._models[e])return;this._models[e].onEvents(t)}acceptRemovedModel(e){this._models[e]&&delete this._models[e]}computeDiff(e,t,n,r){return Kn(this,void 0,void 0,(function*(){const i=this._getModel(e),o=this._getModel(t);if(!i||!o)return null;const a=i.getLinesContent(),s=o.getLinesContent(),u=new je(a,s,{shouldComputeCharChanges:!0,shouldPostProcessCharChanges:!0,shouldIgnoreTrimWhitespace:n,shouldMakePrettyDiff:!0,maxComputationTime:r}).computeDiff(),c=!(u.changes.length>0)&&this._modelsAreIdentical(i,o);return{quitEarly:u.quitEarly,identical:c,changes:u.changes}}))}_modelsAreIdentical(e,t){const n=e.getLineCount();if(n!==t.getLineCount())return!1;for(let r=1;r<=n;r++){if(e.getLineContent(r)!==t.getLineContent(r))return!1}return!0}computeMoreMinimalEdits(e,t){return Kn(this,void 0,void 0,(function*(){const n=this._getModel(e);if(!n)return t;const r=[];let i;t=t.slice(0).sort(((e,t)=>{if(e.range&&t.range)return Le.compareRangesUsingStarts(e.range,t.range);return(e.range?0:1)-(t.range?0:1)}));for(let{range:e,text:o,eol:a}of t){if("number"==typeof a&&(i=a),Le.isEmpty(e)&&!o)continue;const t=n.getValueInRange(e);if(o=o.replace(/\r\n|\n|\r/g,n.eol),t===o)continue;if(Math.max(o.length,t.length)>Vn._diffLimit){r.push({range:e,text:o});continue}const s=z(t,o,!1),u=n.offsetAt(Le.lift(e).getStartPosition());for(const e of s){const t=n.positionAt(u+e.originalStart),i=n.positionAt(u+e.originalStart+e.originalLength),a={text:o.substr(e.modifiedStart,e.modifiedLength),range:{startLineNumber:t.lineNumber,startColumn:t.column,endLineNumber:i.lineNumber,endColumn:i.column}};n.getValueInRange(a.range)!==a.text&&r.push(a)}}return"number"==typeof i&&r.push({eol:i,text:"",range:{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0}}),r}))}computeLinks(e){return Kn(this,void 0,void 0,(function*(){let t=this._getModel(e);return t?function(e){return e&&"function"==typeof e.getLineCount&&"function"==typeof e.getLineContent?it.computeLinks(e):[]}(t):null}))}textualSuggest(e,t,n,r){return Kn(this,void 0,void 0,(function*(){const i=new S(!0),o=new RegExp(n,r),a=new Set;e:for(let n of e){const e=this._getModel(n);if(e)for(let n of e.words(o))if(n!==t&&isNaN(Number(n))&&(a.add(n),a.size>Vn._suggestionsLimit))break e}return{words:Array.from(a),duration:i.elapsed()}}))}computeWordRanges(e,t,n,r){return Kn(this,void 0,void 0,(function*(){let i=this._getModel(e);if(!i)return Object.create(null);const o=new RegExp(n,r),a=Object.create(null);for(let e=t.startLineNumber;e<t.endLineNumber;e++){let t=i.getLineWords(e,o);for(const n of t){if(!isNaN(Number(n.word)))continue;let t=a[n.word];t||(t=[],a[n.word]=t),t.push({startLineNumber:e,startColumn:n.startColumn,endLineNumber:e,endColumn:n.endColumn})}}return a}))}navigateValueSet(e,t,n,r,i){return Kn(this,void 0,void 0,(function*(){let o=this._getModel(e);if(!o)return null;let a=new RegExp(r,i);t.startColumn===t.endColumn&&(t={startLineNumber:t.startLineNumber,startColumn:t.startColumn,endLineNumber:t.endLineNumber,endColumn:t.endColumn+1});let s=o.getValueInRange(t),u=o.getWordAtPosition({lineNumber:t.startLineNumber,column:t.startColumn},a);if(!u)return null;let c=o.getValueInRange(u);return ot.INSTANCE.navigateValueSet(t,s,u,c,n)}))}loadForeignModule(e,t,n){let r={host:function(e,t){const n=e=>function(){const n=Array.prototype.slice.call(arguments,0);return t(e,n)};let r={};for(const i of e)r[i]=n(i);return r}(n,((e,t)=>this._host.fhr(e,t))),getMirrorModels:()=>this._getModels()};return this._foreignModuleFactory?(this._foreignModule=this._foreignModuleFactory(r,t),Promise.resolve(P(this._foreignModule))):Promise.reject(new Error("Unexpected usage"))}fmr(e,t){if(!this._foreignModule||"function"!=typeof this._foreignModule[e])return Promise.reject(new Error("Missing requestHandler or method: "+e));try{return Promise.resolve(this._foreignModule[e].apply(this._foreignModule,t))}catch(PI){return Promise.reject(PI)}}}Vn._diffLimit=1e5,Vn._suggestionsLimit=1e4,"function"==typeof importScripts&&(T.monaco={editor:void 0,languages:void 0,CancellationTokenSource:lt,Emitter:N,KeyCode:nn,KeyMod:Wn,Position:we,Range:Le,Selection:jn,SelectionDirection:In,MarkerSeverity:on,MarkerTag:sn,Uri:Ae,Token:Un});let Hn=!1;function zn(e){if(Hn)return;Hn=!0;const t=new W((e=>{self.postMessage(e)}),(t=>new Vn(t,e)));self.onmessage=e=>{t.onmessage(e.data)}}self.onmessage=e=>{Hn||zn(null)};var Yn,Xn,Jn=function(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))},Qn=function(){function e(e,t,n,r){this._uri=e,this._languageId=t,this._version=n,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content},e.prototype.update=function(t,n){for(var r=0,i=t;r<i.length;r++){var o=i[r];if(e.isIncremental(o)){var a=tr(o.range),s=this.offsetAt(a.start),u=this.offsetAt(a.end);this._content=this._content.substring(0,s)+o.text+this._content.substring(u,this._content.length);var c=Math.max(a.start.line,0),l=Math.max(a.end.line,0),p=this._lineOffsets,f=er(o.text,!1,s);if(l-c===f.length)for(var d=0,h=f.length;d<h;d++)p[d+c+1]=f[d];else f.length<1e4?p.splice.apply(p,Jn([c+1,l-c],f,!1)):this._lineOffsets=p=p.slice(0,c+1).concat(f,p.slice(l+1));var m=o.text.length-(u-s);if(0!==m)for(d=c+1+f.length,h=p.length;d<h;d++)p[d]=p[d]+m}else{if(!e.isFull(o))throw new Error("Unknown change event received");this._content=o.text,this._lineOffsets=void 0}}this._version=n},e.prototype.getLineOffsets=function(){return void 0===this._lineOffsets&&(this._lineOffsets=er(this._content,!0)),this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),n=0,r=t.length;if(0===r)return{line:0,character:e};for(;n<r;){var i=Math.floor((n+r)/2);t[i]>e?r=i:n=i+1}var o=n-1;return{line:o,character:e-t[o]}},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var n=t[e.line],r=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,r),n)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e.isIncremental=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)},e.isFull=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength},e}();function Zn(e,t){if(e.length<=1)return e;var n=e.length/2|0,r=e.slice(0,n),i=e.slice(n);Zn(r,t),Zn(i,t);for(var o=0,a=0,s=0;o<r.length&&a<i.length;){var u=t(r[o],i[a]);e[s++]=u<=0?r[o++]:i[a++]}for(;o<r.length;)e[s++]=r[o++];for(;a<i.length;)e[s++]=i[a++];return e}function er(e,t,n){void 0===n&&(n=0);for(var r=t?[n]:[],i=0;i<e.length;i++){var o=e.charCodeAt(i);13!==o&&10!==o||(13===o&&i+1<e.length&&10===e.charCodeAt(i+1)&&i++,r.push(n+i+1))}return r}function tr(e){var t=e.start,n=e.end;return t.line>n.line||t.line===n.line&&t.character>n.character?{start:n,end:t}:e}function nr(e){var t=tr(e.range);return t!==e.range?{newText:e.newText,range:t}:e}(Xn=Yn||(Yn={})).create=function(e,t,n,r){return new Qn(e,t,n,r)},Xn.update=function(e,t,n){if(e instanceof Qn)return e.update(t,n),e;throw new Error("TextDocument.update: document must be created by TextDocument.create")},Xn.applyEdits=function(e,t){for(var n=e.getText(),r=0,i=[],o=0,a=Zn(t.map(nr),(function(e,t){var n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n}));o<a.length;o++){var s=a[o],u=e.offsetAt(s.range.start);if(u<r)throw new Error("Overlapping edit");u>r&&i.push(n.substring(r,u)),s.newText.length&&i.push(s.newText),r=e.offsetAt(s.range.end)}return i.push(n.substr(r)),i.join("")};var rr="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function ir(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function or(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})})),t}var ar={},sr={},ur={},cr={},lr={},pr={},fr={};let dr;function hr(){if(void 0===dr)throw new Error("No runtime abstraction layer installed");return dr}Object.defineProperty(fr,"__esModule",{value:!0}),(hr||(hr={})).install=function(e){if(void 0===e)throw new Error("No runtime abstraction layer provided");dr=e},fr.default=hr;var mr,gr={};mr=gr,Object.defineProperty(mr,"__esModule",{value:!0}),mr.Disposable=void 0,(mr.Disposable||(mr.Disposable={})).create=function(e){return{dispose:e}};var vr={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Emitter=e.Event=void 0;const t=fr;!function(e){const t={dispose(){}};e.None=function(){return t}}(e.Event||(e.Event={}));class n{add(e,t=null,n){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(t),Array.isArray(n)&&n.push({dispose:()=>this.remove(e,t)})}remove(e,t=null){if(!this._callbacks)return;let n=!1;for(let r=0,i=this._callbacks.length;r<i;r++)if(this._callbacks[r]===e){if(this._contexts[r]===t)return this._callbacks.splice(r,1),void this._contexts.splice(r,1);n=!0}if(n)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...e){if(!this._callbacks)return[];const n=[],r=this._callbacks.slice(0),i=this._contexts.slice(0);for(let o=0,a=r.length;o<a;o++)try{n.push(r[o].apply(i[o],e))}catch(PI){t.default().console.error(PI)}return n}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class r{constructor(e){this._options=e}get event(){return this._event||(this._event=(e,t,i)=>{this._callbacks||(this._callbacks=new n),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,t);const o={dispose:()=>{this._callbacks&&(this._callbacks.remove(e,t),o.dispose=r._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(i)&&i.push(o),o}),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}e.Emitter=r,r._noop=function(){}}(vr);var yr={};Object.defineProperty(yr,"__esModule",{value:!0}),yr.AbstractMessageBuffer=void 0;yr.AbstractMessageBuffer=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encoding(){return this._encoding}append(e){const t="string"==typeof e?this.fromString(e,this._encoding):e;this._chunks.push(t),this._totalLength+=t.byteLength}tryReadHeaders(){if(0===this._chunks.length)return;let e=0,t=0,n=0,r=0;e:for(;t<this._chunks.length;){const i=this._chunks[t];for(n=0;n<i.length;){switch(i[n]){case 13:switch(e){case 0:e=1;break;case 2:e=3;break;default:e=0}break;case 10:switch(e){case 1:e=2;break;case 3:e=4,n++;break e;default:e=0}break;default:e=0}n++}r+=i.byteLength,t++}if(4!==e)return;const i=this._read(r+n),o=new Map,a=this.toString(i,"ascii").split("\r\n");if(a.length<2)return o;for(let s=0;s<a.length-2;s++){const e=a[s],t=e.indexOf(":");if(-1===t)throw new Error("Message header must separate key and value using :");const n=e.substr(0,t),r=e.substr(t+1).trim();o.set(n,r)}return o}tryReadBody(e){if(!(this._totalLength<e))return this._read(e)}get numberOfBytes(){return this._totalLength}_read(e){if(0===e)return this.emptyBuffer();if(e>this._totalLength)throw new Error("Cannot read so many bytes!");if(this._chunks[0].byteLength===e){const t=this._chunks[0];return this._chunks.shift(),this._totalLength-=e,this.asNative(t)}if(this._chunks[0].byteLength>e){const t=this._chunks[0],n=this.asNative(t,e);return this._chunks[0]=t.slice(e),this._totalLength-=e,n}const t=this.allocNative(e);let n=0;for(;e>0;){const r=this._chunks[0];if(r.byteLength>e){const i=r.slice(0,e);t.set(i,n),n+=e,this._chunks[0]=r.slice(e),this._totalLength-=e,e-=e}else t.set(r,n),n+=r.byteLength,this._chunks.shift(),this._totalLength-=r.byteLength,e-=r.byteLength}return t}},Object.defineProperty(pr,"__esModule",{value:!0});const Er=fr,_r=gr,Cr=vr,Tr=yr;class Ar extends Tr.AbstractMessageBuffer{constructor(e="utf-8"){super(e),this.asciiDecoder=new TextDecoder("ascii")}emptyBuffer(){return Ar.emptyBuffer}fromString(e,t){return(new TextEncoder).encode(e)}toString(e,t){return"ascii"===t?this.asciiDecoder.decode(e):new TextDecoder(t).decode(e)}asNative(e,t){return void 0===t?e:e.slice(0,t)}allocNative(e){return new Uint8Array(e)}}Ar.emptyBuffer=new Uint8Array(0);class Rr{constructor(e){this.socket=e,this._onData=new Cr.Emitter,this._messageListener=e=>{e.data.arrayBuffer().then((e=>{this._onData.fire(new Uint8Array(e))}))},this.socket.addEventListener("message",this._messageListener)}onClose(e){return this.socket.addEventListener("close",e),_r.Disposable.create((()=>this.socket.removeEventListener("close",e)))}onError(e){return this.socket.addEventListener("error",e),_r.Disposable.create((()=>this.socket.removeEventListener("error",e)))}onEnd(e){return this.socket.addEventListener("end",e),_r.Disposable.create((()=>this.socket.removeEventListener("end",e)))}onData(e){return this._onData.event(e)}}class Ir{constructor(e){this.socket=e}onClose(e){return this.socket.addEventListener("close",e),_r.Disposable.create((()=>this.socket.removeEventListener("close",e)))}onError(e){return this.socket.addEventListener("error",e),_r.Disposable.create((()=>this.socket.removeEventListener("error",e)))}onEnd(e){return this.socket.addEventListener("end",e),_r.Disposable.create((()=>this.socket.removeEventListener("end",e)))}write(e,t){if("string"==typeof e){if(void 0!==t&&"utf-8"!==t)throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${t}`);this.socket.send(e)}else this.socket.send(e);return Promise.resolve()}end(){this.socket.close()}}const Dr=new TextEncoder,xr=Object.freeze({messageBuffer:Object.freeze({create:e=>new Ar(e)}),applicationJson:Object.freeze({encoder:Object.freeze({name:"application/json",encode:(e,t)=>{if("utf-8"!==t.charset)throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${t.charset}`);return Promise.resolve(Dr.encode(JSON.stringify(e,void 0,0)))}}),decoder:Object.freeze({name:"application/json",decode:(e,t)=>{if(!(e instanceof Uint8Array))throw new Error("In a Browser environments only Uint8Arrays are supported.");return Promise.resolve(JSON.parse(new TextDecoder(t.charset).decode(e)))}})}),stream:Object.freeze({asReadableStream:e=>new Rr(e),asWritableStream:e=>new Ir(e)}),console:console,timer:Object.freeze({setTimeout:(e,t,...n)=>setTimeout(e,t,...n),clearTimeout(e){clearTimeout(e)},setImmediate:(e,...t)=>setTimeout(e,0,...t),clearImmediate(e){clearTimeout(e)}})});function br(){return xr}(br||(br={})).install=function(){Er.default.install(xr)},pr.default=br;var Sr={},kr={},Or={};function Nr(e){return"string"==typeof e||e instanceof String}function Pr(e){return Array.isArray(e)}Object.defineProperty(Or,"__esModule",{value:!0}),Or.stringArray=Or.array=Or.func=Or.error=Or.number=Or.string=Or.boolean=void 0,Or.boolean=function(e){return!0===e||!1===e},Or.string=Nr,Or.number=function(e){return"number"==typeof e||e instanceof Number},Or.error=function(e){return e instanceof Error},Or.func=function(e){return"function"==typeof e},Or.array=Pr,Or.stringArray=function(e){return Pr(e)&&e.every((e=>Nr(e)))},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isResponseMessage=e.isNotificationMessage=e.isRequestMessage=e.NotificationType9=e.NotificationType8=e.NotificationType7=e.NotificationType6=e.NotificationType5=e.NotificationType4=e.NotificationType3=e.NotificationType2=e.NotificationType1=e.NotificationType0=e.NotificationType=e.RequestType9=e.RequestType8=e.RequestType7=e.RequestType6=e.RequestType5=e.RequestType4=e.RequestType3=e.RequestType2=e.RequestType1=e.RequestType=e.RequestType0=e.AbstractMessageSignature=e.ParameterStructures=e.ResponseError=e.ErrorCodes=void 0;const t=Or;var n,r;(r=n=e.ErrorCodes||(e.ErrorCodes={})).ParseError=-32700,r.InvalidRequest=-32600,r.MethodNotFound=-32601,r.InvalidParams=-32602,r.InternalError=-32603,r.jsonrpcReservedErrorRangeStart=-32099,r.serverErrorStart=r.jsonrpcReservedErrorRangeStart,r.MessageWriteError=-32099,r.MessageReadError=-32098,r.ServerNotInitialized=-32002,r.UnknownErrorCode=-32001,r.jsonrpcReservedErrorRangeEnd=-32e3,r.serverErrorEnd=r.jsonrpcReservedErrorRangeEnd;class i extends Error{constructor(e,r,o){super(r),this.code=t.number(e)?e:n.UnknownErrorCode,this.data=o,Object.setPrototypeOf(this,i.prototype)}toJson(){return{code:this.code,message:this.message,data:this.data}}}e.ResponseError=i;class o{constructor(e){this.kind=e}static is(e){return e===o.auto||e===o.byName||e===o.byPosition}toString(){return this.kind}}e.ParameterStructures=o,o.auto=new o("auto"),o.byPosition=new o("byPosition"),o.byName=new o("byName");class a{constructor(e,t){this.method=e,this.numberOfParams=t}get parameterStructures(){return o.auto}}e.AbstractMessageSignature=a;e.RequestType0=class extends a{constructor(e){super(e,0)}};e.RequestType=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.RequestType1=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.RequestType2=class extends a{constructor(e){super(e,2)}};e.RequestType3=class extends a{constructor(e){super(e,3)}};e.RequestType4=class extends a{constructor(e){super(e,4)}};e.RequestType5=class extends a{constructor(e){super(e,5)}};e.RequestType6=class extends a{constructor(e){super(e,6)}};e.RequestType7=class extends a{constructor(e){super(e,7)}};e.RequestType8=class extends a{constructor(e){super(e,8)}};e.RequestType9=class extends a{constructor(e){super(e,9)}};e.NotificationType=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.NotificationType0=class extends a{constructor(e){super(e,0)}};e.NotificationType1=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.NotificationType2=class extends a{constructor(e){super(e,2)}};e.NotificationType3=class extends a{constructor(e){super(e,3)}};e.NotificationType4=class extends a{constructor(e){super(e,4)}};e.NotificationType5=class extends a{constructor(e){super(e,5)}};e.NotificationType6=class extends a{constructor(e){super(e,6)}};e.NotificationType7=class extends a{constructor(e){super(e,7)}};e.NotificationType8=class extends a{constructor(e){super(e,8)}};e.NotificationType9=class extends a{constructor(e){super(e,9)}},e.isRequestMessage=function(e){const n=e;return n&&t.string(n.method)&&(t.string(n.id)||t.number(n.id))},e.isNotificationMessage=function(e){const n=e;return n&&t.string(n.method)&&void 0===e.id},e.isResponseMessage=function(e){const n=e;return n&&(void 0!==n.result||!!n.error)&&(t.string(n.id)||t.number(n.id)||null===n.id)}}(kr);var wr={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CancellationTokenSource=e.CancellationToken=void 0;const t=fr,n=Or,r=vr;var i,o;(o=i=e.CancellationToken||(e.CancellationToken={})).None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:r.Event.None}),o.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:r.Event.None}),o.is=function(e){const t=e;return t&&(t===o.None||t===o.Cancelled||n.boolean(t.isCancellationRequested)&&!!t.onCancellationRequested)};const a=Object.freeze((function(e,n){const r=t.default().timer.setTimeout(e.bind(n),0);return{dispose(){t.default().timer.clearTimeout(r)}}}));class s{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?a:(this._emitter||(this._emitter=new r.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}e.CancellationTokenSource=class{get token(){return this._token||(this._token=new s),this._token}cancel(){this._token?this._token.cancel():this._token=i.Cancelled}dispose(){this._token?this._token instanceof s&&this._token.dispose():this._token=i.None}}}(wr);var Lr={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ReadableStreamMessageReader=e.AbstractMessageReader=e.MessageReader=void 0;const t=fr,n=Or,r=vr;var i;(e.MessageReader||(e.MessageReader={})).is=function(e){let t=e;return t&&n.func(t.listen)&&n.func(t.dispose)&&n.func(t.onError)&&n.func(t.onClose)&&n.func(t.onPartialMessage)};class o{constructor(){this.errorEmitter=new r.Emitter,this.closeEmitter=new r.Emitter,this.partialMessageEmitter=new r.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}e.AbstractMessageReader=o,(i||(i={})).fromOptions=function(e){var n;let r,i;const o=new Map;let a;const s=new Map;if(void 0===e||"string"==typeof e)r=null!=e?e:"utf-8";else{if(r=null!==(n=e.charset)&&void 0!==n?n:"utf-8",void 0!==e.contentDecoder&&(i=e.contentDecoder,o.set(i.name,i)),void 0!==e.contentDecoders)for(const t of e.contentDecoders)o.set(t.name,t);if(void 0!==e.contentTypeDecoder&&(a=e.contentTypeDecoder,s.set(a.name,a)),void 0!==e.contentTypeDecoders)for(const t of e.contentTypeDecoders)s.set(t.name,t)}return void 0===a&&(a=t.default().applicationJson.decoder,s.set(a.name,a)),{charset:r,contentDecoder:i,contentDecoders:o,contentTypeDecoder:a,contentTypeDecoders:s}};e.ReadableStreamMessageReader=class extends o{constructor(e,n){super(),this.readable=e,this.options=i.fromOptions(n),this.buffer=t.default().messageBuffer.create(this.options.charset),this._partialMessageTimeout=1e4,this.nextMessageLength=-1,this.messageToken=0}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e;const t=this.readable.onData((e=>{this.onData(e)}));return this.readable.onError((e=>this.fireError(e))),this.readable.onClose((()=>this.fireClose())),t}onData(e){for(this.buffer.append(e);;){if(-1===this.nextMessageLength){const e=this.buffer.tryReadHeaders();if(!e)return;const t=e.get("Content-Length");if(!t)throw new Error("Header must provide a Content-Length property.");const n=parseInt(t);if(isNaN(n))throw new Error("Content-Length value must be a number.");this.nextMessageLength=n}const e=this.buffer.tryReadBody(this.nextMessageLength);if(void 0===e)return void this.setPartialMessageTimer();let t;this.clearPartialMessageTimer(),this.nextMessageLength=-1,t=void 0!==this.options.contentDecoder?this.options.contentDecoder.decode(e):Promise.resolve(e),t.then((e=>{this.options.contentTypeDecoder.decode(e,this.options).then((e=>{this.callback(e)}),(e=>{this.fireError(e)}))}),(e=>{this.fireError(e)}))}}clearPartialMessageTimer(){this.partialMessageTimer&&(t.default().timer.clearTimeout(this.partialMessageTimer),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),this._partialMessageTimeout<=0||(this.partialMessageTimer=t.default().timer.setTimeout(((e,t)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:t}),this.setPartialMessageTimer())}),this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}}(Lr);var Fr={},Mr={};Object.defineProperty(Mr,"__esModule",{value:!0}),Mr.Semaphore=void 0;const $r=fr;Mr.Semaphore=class{constructor(e=1){if(e<=0)throw new Error("Capacity must be greater than 0");this._capacity=e,this._active=0,this._waiting=[]}lock(e){return new Promise(((t,n)=>{this._waiting.push({thunk:e,resolve:t,reject:n}),this.runNext()}))}get active(){return this._active}runNext(){0!==this._waiting.length&&this._active!==this._capacity&&$r.default().timer.setImmediate((()=>this.doRunNext()))}doRunNext(){if(0===this._waiting.length||this._active===this._capacity)return;const e=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{const t=e.thunk();t instanceof Promise?t.then((t=>{this._active--,e.resolve(t),this.runNext()}),(t=>{this._active--,e.reject(t),this.runNext()})):(this._active--,e.resolve(t),this.runNext())}catch(t){this._active--,e.reject(t),this.runNext()}}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WriteableStreamMessageWriter=e.AbstractMessageWriter=e.MessageWriter=void 0;const t=fr,n=Or,r=Mr,i=vr;var o;(e.MessageWriter||(e.MessageWriter={})).is=function(e){let t=e;return t&&n.func(t.dispose)&&n.func(t.onClose)&&n.func(t.onError)&&n.func(t.write)};class a{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,t,n){this.errorEmitter.fire([this.asError(e),t,n])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}e.AbstractMessageWriter=a,(o||(o={})).fromOptions=function(e){var n,r;return void 0===e||"string"==typeof e?{charset:null!=e?e:"utf-8",contentTypeEncoder:t.default().applicationJson.encoder}:{charset:null!==(n=e.charset)&&void 0!==n?n:"utf-8",contentEncoder:e.contentEncoder,contentTypeEncoder:null!==(r=e.contentTypeEncoder)&&void 0!==r?r:t.default().applicationJson.encoder}};e.WriteableStreamMessageWriter=class extends a{constructor(e,t){super(),this.writable=e,this.options=o.fromOptions(t),this.errorCount=0,this.writeSemaphore=new r.Semaphore(1),this.writable.onError((e=>this.fireError(e))),this.writable.onClose((()=>this.fireClose()))}async write(e){return this.writeSemaphore.lock((async()=>this.options.contentTypeEncoder.encode(e,this.options).then((e=>void 0!==this.options.contentEncoder?this.options.contentEncoder.encode(e):e)).then((t=>{const n=[];return n.push("Content-Length: ",t.byteLength.toString(),"\r\n"),n.push("\r\n"),this.doWrite(e,n,t)}),(e=>{throw this.fireError(e),e}))))}async doWrite(e,t,n){try{return await this.writable.write(t.join(""),"ascii"),this.writable.write(n)}catch(r){return this.handleError(r,e),Promise.reject(r)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){this.writable.end()}}}(Fr);var Br={},qr={};!function(e){var t,n;Object.defineProperty(e,"__esModule",{value:!0}),e.LRUCache=e.LinkedMap=e.Touch=void 0,(n=t=e.Touch||(e.Touch={})).None=0,n.First=1,n.AsOld=n.First,n.Last=2,n.AsNew=n.Last;class r{constructor(){this[Symbol.toStringTag]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){var e;return null===(e=this._head)||void 0===e?void 0:e.value}get last(){var e;return null===(e=this._tail)||void 0===e?void 0:e.value}has(e){return this._map.has(e)}get(e,n=t.None){const r=this._map.get(e);if(r)return n!==t.None&&this.touch(r,n),r.value}set(e,n,r=t.None){let i=this._map.get(e);if(i)i.value=n,r!==t.None&&this.touch(i,r);else{switch(i={key:e,value:n,next:void 0,previous:void 0},r){case t.None:this.addItemLast(i);break;case t.First:this.addItemFirst(i);break;case t.Last:default:this.addItemLast(i)}this._map.set(e,i),this._size++}return this}delete(e){return!!this.remove(e)}remove(e){const t=this._map.get(e);if(t)return this._map.delete(e),this.removeItem(t),this._size--,t.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){const n=this._state;let r=this._head;for(;r;){if(t?e.bind(t)(r.value,r.key,this):e(r.value,r.key,this),this._state!==n)throw new Error("LinkedMap got modified during iteration.");r=r.next}}keys(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.key,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}values(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.value,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}entries(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:[n.key,n.value],done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}[Symbol.iterator](){return this.entries()}trimOld(e){if(e>=this.size)return;if(0===e)return void this.clear();let t=this._head,n=this.size;for(;t&&n>e;)this._map.delete(t.key),t=t.next,n--;this._head=t,this._size=n,t&&(t.previous=void 0),this._state++}addItemFirst(e){if(this._head||this._tail){if(!this._head)throw new Error("Invalid list");e.next=this._head,this._head.previous=e}else this._tail=e;this._head=e,this._state++}addItemLast(e){if(this._head||this._tail){if(!this._tail)throw new Error("Invalid list");e.previous=this._tail,this._tail.next=e}else this._head=e;this._tail=e,this._state++}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head){if(!e.next)throw new Error("Invalid list");e.next.previous=void 0,this._head=e.next}else if(e===this._tail){if(!e.previous)throw new Error("Invalid list");e.previous.next=void 0,this._tail=e.previous}else{const t=e.next,n=e.previous;if(!t||!n)throw new Error("Invalid list");t.previous=n,n.next=t}e.next=void 0,e.previous=void 0,this._state++}touch(e,n){if(!this._head||!this._tail)throw new Error("Invalid list");if(n===t.First||n===t.Last)if(n===t.First){if(e===this._head)return;const t=e.next,n=e.previous;e===this._tail?(n.next=void 0,this._tail=n):(t.previous=n,n.next=t),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e,this._state++}else if(n===t.Last){if(e===this._tail)return;const t=e.next,n=e.previous;e===this._head?(t.previous=void 0,this._head=t):(t.previous=n,n.next=t),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e,this._state++}}toJSON(){const e=[];return this.forEach(((t,n)=>{e.push([n,t])})),e}fromJSON(e){this.clear();for(const[t,n]of e)this.set(t,n)}}e.LinkedMap=r;e.LRUCache=class extends r{constructor(e,t=1){super(),this._limit=e,this._ratio=Math.min(Math.max(0,t),1)}get limit(){return this._limit}set limit(e){this._limit=e,this.checkTrim()}get ratio(){return this._ratio}set ratio(e){this._ratio=Math.min(Math.max(0,e),1),this.checkTrim()}get(e,n=t.AsNew){return super.get(e,n)}peek(e){return super.get(e,t.None)}set(e,n){return super.set(e,n,t.Last),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}}}(qr),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.createMessageConnection=e.ConnectionOptions=e.CancellationStrategy=e.CancellationSenderStrategy=e.CancellationReceiverStrategy=e.ConnectionStrategy=e.ConnectionError=e.ConnectionErrors=e.LogTraceNotification=e.SetTraceNotification=e.TraceFormat=e.Trace=e.NullLogger=e.ProgressType=void 0;const t=fr,n=Or,r=kr,i=qr,o=vr,a=wr;var s,u,c,l,p,f,d,h,m,g,v,y,E,_,C,T,A,R,I,D;(s||(s={})).type=new r.NotificationType("$/cancelRequest"),(u||(u={})).type=new r.NotificationType("$/progress");e.ProgressType=class{constructor(){}},(c||(c={})).is=function(e){return n.func(e)},e.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),(p=l=e.Trace||(e.Trace={}))[p.Off=0]="Off",p[p.Messages=1]="Messages",p[p.Verbose=2]="Verbose",function(e){e.fromString=function(t){if(!n.string(t))return e.Off;switch(t=t.toLowerCase()){case"off":return e.Off;case"messages":return e.Messages;case"verbose":return e.Verbose;default:return e.Off}},e.toString=function(t){switch(t){case e.Off:return"off";case e.Messages:return"messages";case e.Verbose:return"verbose";default:return"off"}}}(l=e.Trace||(e.Trace={})),(d=e.TraceFormat||(e.TraceFormat={})).Text="text",d.JSON="json",function(e){e.fromString=function(t){return"json"===(t=t.toLowerCase())?e.JSON:e.Text}}(f=e.TraceFormat||(e.TraceFormat={})),(h=e.SetTraceNotification||(e.SetTraceNotification={})).type=new r.NotificationType("$/setTrace"),(m=e.LogTraceNotification||(e.LogTraceNotification={})).type=new r.NotificationType("$/logTrace"),(v=g=e.ConnectionErrors||(e.ConnectionErrors={}))[v.Closed=1]="Closed",v[v.Disposed=2]="Disposed",v[v.AlreadyListening=3]="AlreadyListening";class x extends Error{constructor(e,t){super(t),this.code=e,Object.setPrototypeOf(this,x.prototype)}}e.ConnectionError=x,(y=e.ConnectionStrategy||(e.ConnectionStrategy={})).is=function(e){const t=e;return t&&n.func(t.cancelUndispatched)},(_=E=e.CancellationReceiverStrategy||(e.CancellationReceiverStrategy={})).Message=Object.freeze({createCancellationTokenSource:e=>new a.CancellationTokenSource}),_.is=function(e){const t=e;return t&&n.func(t.createCancellationTokenSource)},(T=C=e.CancellationSenderStrategy||(e.CancellationSenderStrategy={})).Message=Object.freeze({sendCancellation(e,t){e.sendNotification(s.type,{id:t})},cleanup(e){}}),T.is=function(e){const t=e;return t&&n.func(t.sendCancellation)&&n.func(t.cleanup)},(R=A=e.CancellationStrategy||(e.CancellationStrategy={})).Message=Object.freeze({receiver:E.Message,sender:C.Message}),R.is=function(e){const t=e;return t&&E.is(t.receiver)&&C.is(t.sender)},(e.ConnectionOptions||(e.ConnectionOptions={})).is=function(e){const t=e;return t&&(A.is(t.cancellationStrategy)||y.is(t.connectionStrategy))},(D=I||(I={}))[D.New=1]="New",D[D.Listening=2]="Listening",D[D.Closed=3]="Closed",D[D.Disposed=4]="Disposed",e.createMessageConnection=function(p,d,v,y){const E=void 0!==v?v:e.NullLogger;let _=0,C=0,T=0;const R="2.0";let D;const b=Object.create(null);let S;const k=Object.create(null),O=new Map;let N,P,w=new i.LinkedMap,L=Object.create(null),F=Object.create(null),M=l.Off,$=f.Text,B=I.New;const q=new o.Emitter,j=new o.Emitter,U=new o.Emitter,W=new o.Emitter,K=new o.Emitter,G=y&&y.cancellationStrategy?y.cancellationStrategy:A.Message;function V(e){if(null===e)throw new Error("Can't send requests with id null since the response can't be correlated.");return"req-"+e.toString()}function H(e,t){var n;r.isRequestMessage(t)?e.set(V(t.id),t):r.isResponseMessage(t)?e.set(null===(n=t.id)?"res-unknown-"+(++T).toString():"res-"+n.toString(),t):e.set("not-"+(++C).toString(),t)}function z(e){}function Y(){return B===I.Listening}function X(){return B===I.Closed}function J(){return B===I.Disposed}function Q(){B!==I.New&&B!==I.Listening||(B=I.Closed,j.fire(void 0))}function Z(){N||0===w.size||(N=t.default().timer.setImmediate((()=>{N=void 0,function(){if(0===w.size)return;const e=w.shift();try{r.isRequestMessage(e)?function(e){if(J())return;function t(t,n,i){const o={jsonrpc:R,id:e.id};t instanceof r.ResponseError?o.error=t.toJson():o.result=void 0===t?null:t,te(o,n,i),d.write(o)}function i(t,n,r){const i={jsonrpc:R,id:e.id,error:t.toJson()};te(i,n,r),d.write(i)}function o(t,n,r){void 0===t&&(t=null);const i={jsonrpc:R,id:e.id,result:t};te(i,n,r),d.write(i)}!function(e){if(M===l.Off||!P)return;if($===f.Text){let t;M===l.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),P.log(`Received request '${e.method} - (${e.id})'.`,t)}else ne("receive-request",e)}(e);const a=b[e.method];let s,u;a&&(s=a.type,u=a.handler);const c=Date.now();if(u||D){const a=String(e.id),l=G.receiver.createCancellationTokenSource(a);F[a]=l;try{let p;if(u)if(void 0===e.params){if(void 0!==s&&0!==s.numberOfParams)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines ${s.numberOfParams} params but recevied none.`),e.method,c);p=u(l.token)}else if(Array.isArray(e.params)){if(void 0!==s&&s.parameterStructures===r.ParameterStructures.byName)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by name but received parameters by position`),e.method,c);p=u(...e.params,l.token)}else{if(void 0!==s&&s.parameterStructures===r.ParameterStructures.byPosition)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by position but received parameters by name`),e.method,c);p=u(e.params,l.token)}else D&&(p=D(e.method,e.params,l.token));const f=p;p?f.then?f.then((n=>{delete F[a],t(n,e.method,c)}),(t=>{delete F[a],t instanceof r.ResponseError?i(t,e.method,c):t&&n.string(t.message)?i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,c):i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)})):(delete F[a],t(p,e.method,c)):(delete F[a],o(p,e.method,c))}catch(p){delete F[a],p instanceof r.ResponseError?t(p,e.method,c):p&&n.string(p.message)?i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${p.message}`),e.method,c):i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)}}else i(new r.ResponseError(r.ErrorCodes.MethodNotFound,`Unhandled method ${e.method}`),e.method,c)}(e):r.isNotificationMessage(e)?function(e){if(J())return;let t,n;if(e.method===s.type.method)n=e=>{const t=e.id,n=F[String(t)];n&&n.cancel()};else{const r=k[e.method];r&&(n=r.handler,t=r.type)}if(n||S)try{!function(e){if(M===l.Off||!P||e.method===m.type.method)return;if($===f.Text){let t;M===l.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),P.log(`Received notification '${e.method}'.`,t)}else ne("receive-notification",e)}(e),n?void 0===e.params?(void 0!==t&&0!==t.numberOfParams&&t.parameterStructures!==r.ParameterStructures.byName&&E.error(`Notification ${e.method} defines ${t.numberOfParams} params but recevied none.`),n()):Array.isArray(e.params)?(void 0!==t&&(t.parameterStructures===r.ParameterStructures.byName&&E.error(`Notification ${e.method} defines parameters by name but received parameters by position`),t.numberOfParams!==e.params.length&&E.error(`Notification ${e.method} defines ${t.numberOfParams} params but received ${e.params.length} argumennts`)),n(...e.params)):(void 0!==t&&t.parameterStructures===r.ParameterStructures.byPosition&&E.error(`Notification ${e.method} defines parameters by position but received parameters by name`),n(e.params)):S&&S(e.method,e.params)}catch(i){i.message?E.error(`Notification handler '${e.method}' failed with message: ${i.message}`):E.error(`Notification handler '${e.method}' failed unexpectedly.`)}else U.fire(e)}(e):r.isResponseMessage(e)?function(e){if(J())return;if(null===e.id)e.error?E.error(`Received response message without id: Error is: \n${JSON.stringify(e.error,void 0,4)}`):E.error("Received response message without id. No further error information provided.");else{const n=String(e.id),i=L[n];if(function(e,t){if(M===l.Off||!P)return;if($===f.Text){let n;if(M===l.Verbose&&(e.error&&e.error.data?n=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?n=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(n="No result returned.\n\n")),t){const r=e.error?` Request failed: ${e.error.message} (${e.error.code}).`:"";P.log(`Received response '${t.method} - (${e.id})' in ${Date.now()-t.timerStart}ms.${r}`,n)}else P.log(`Received response ${e.id} without active response promise.`,n)}else ne("receive-response",e)}(e,i),i){delete L[n];try{if(e.error){const t=e.error;i.reject(new r.ResponseError(t.code,t.message,t.data))}else{if(void 0===e.result)throw new Error("Should never happen.");i.resolve(e.result)}}catch(t){t.message?E.error(`Response handler '${i.method}' failed with message: ${t.message}`):E.error(`Response handler '${i.method}' failed unexpectedly.`)}}}}(e):function(e){if(!e)return void E.error("Received empty message.");E.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e,null,4)}`);const t=e;if(n.string(t.id)||n.number(t.id)){const e=String(t.id),n=L[e];n&&n.reject(new Error("The received response has neither a result nor an error property."))}}(e)}finally{Z()}}()})))}p.onClose(Q),p.onError((function(e){q.fire([e,void 0,void 0])})),d.onClose(Q),d.onError((function(e){q.fire(e)}));const ee=e=>{try{if(r.isNotificationMessage(e)&&e.method===s.type.method){const t=V(e.params.id),n=w.get(t);if(r.isRequestMessage(n)){const r=null==y?void 0:y.connectionStrategy,i=r&&r.cancelUndispatched?r.cancelUndispatched(n,z):void 0;if(i&&(void 0!==i.error||void 0!==i.result))return w.delete(t),i.id=n.id,te(i,e.method,Date.now()),void d.write(i)}}H(w,e)}finally{Z()}};function te(e,t,n){if(M!==l.Off&&P)if($===f.Text){let r;M===l.Verbose&&(e.error&&e.error.data?r=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?r=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(r="No result returned.\n\n")),P.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now()-n}ms`,r)}else ne("send-response",e)}function ne(e,t){if(!P||M===l.Off)return;const n={isLSPMessage:!0,type:e,message:t,timestamp:Date.now()};P.log(n)}function re(){if(X())throw new x(g.Closed,"Connection is closed.");if(J())throw new x(g.Disposed,"Connection is disposed.")}function ie(e){return void 0===e?null:e}function oe(e){return null===e?void 0:e}function ae(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}function se(e,t){switch(e){case r.ParameterStructures.auto:return ae(t)?oe(t):[ie(t)];case r.ParameterStructures.byName:if(!ae(t))throw new Error("Recevied parameters by name but param is not an object literal.");return oe(t);case r.ParameterStructures.byPosition:return[ie(t)];default:throw new Error(`Unknown parameter structure ${e.toString()}`)}}function ue(e,t){let n;const r=e.numberOfParams;switch(r){case 0:n=void 0;break;case 1:n=se(e.parameterStructures,t[0]);break;default:n=[];for(let e=0;e<t.length&&e<r;e++)n.push(ie(t[e]));if(t.length<r)for(let e=t.length;e<r;e++)n.push(null)}return n}const ce={sendNotification:(e,...t)=>{let i,o;if(re(),n.string(e)){i=e;const n=t[0];let a=0,s=r.ParameterStructures.auto;r.ParameterStructures.is(n)&&(a=1,s=n);let u=t.length;const c=u-a;switch(c){case 0:o=void 0;break;case 1:o=se(s,t[a]);break;default:if(s===r.ParameterStructures.byName)throw new Error(`Recevied ${c} parameters for 'by Name' notification parameter structure.`);o=t.slice(a,u).map((e=>ie(e)))}}else{const n=t;i=e.method,o=ue(e,n)}const a={jsonrpc:R,method:i,params:o};!function(e){if(M!==l.Off&&P)if($===f.Text){let t;M===l.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),P.log(`Sending notification '${e.method}'.`,t)}else ne("send-notification",e)}(a),d.write(a)},onNotification:(e,t)=>{let r;return re(),n.func(e)?S=e:t&&(n.string(e)?(r=e,k[e]={type:void 0,handler:t}):(r=e.method,k[e.method]={type:e,handler:t})),{dispose:()=>{void 0!==r?delete k[r]:S=void 0}}},onProgress:(e,t,n)=>{if(O.has(t))throw new Error(`Progress handler for token ${t} already registered`);return O.set(t,n),{dispose:()=>{O.delete(t)}}},sendProgress:(e,t,n)=>{ce.sendNotification(u.type,{token:t,value:n})},onUnhandledProgress:W.event,sendRequest:(e,...t)=>{let i,o,s;if(re(),function(){if(!Y())throw new Error("Call listen() first.")}(),n.string(e)){i=e;const n=t[0],u=t[t.length-1];let c=0,l=r.ParameterStructures.auto;r.ParameterStructures.is(n)&&(c=1,l=n);let p=t.length;a.CancellationToken.is(u)&&(p-=1,s=u);const f=p-c;switch(f){case 0:o=void 0;break;case 1:o=se(l,t[c]);break;default:if(l===r.ParameterStructures.byName)throw new Error(`Recevied ${f} parameters for 'by Name' request parameter structure.`);o=t.slice(c,p).map((e=>ie(e)))}}else{const n=t;i=e.method,o=ue(e,n);const r=e.numberOfParams;s=a.CancellationToken.is(n[r])?n[r]:void 0}const u=_++;let c;s&&(c=s.onCancellationRequested((()=>{G.sender.sendCancellation(ce,u)})));return new Promise(((e,t)=>{const n={jsonrpc:R,id:u,method:i,params:o};let a={method:i,timerStart:Date.now(),resolve:t=>{e(t),G.sender.cleanup(u),null==c||c.dispose()},reject:e=>{t(e),G.sender.cleanup(u),null==c||c.dispose()}};!function(e){if(M!==l.Off&&P)if($===f.Text){let t;M===l.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),P.log(`Sending request '${e.method} - (${e.id})'.`,t)}else ne("send-request",e)}(n);try{d.write(n)}catch(PI){a.reject(new r.ResponseError(r.ErrorCodes.MessageWriteError,PI.message?PI.message:"Unknown reason")),a=null}a&&(L[String(u)]=a)}))},onRequest:(e,t)=>{re();let r=null;return c.is(e)?(r=void 0,D=e):n.string(e)?(r=null,void 0!==t&&(r=e,b[e]={handler:t,type:void 0})):void 0!==t&&(r=e.method,b[e.method]={type:e,handler:t}),{dispose:()=>{null!==r&&(void 0!==r?delete b[r]:D=void 0)}}},trace:(e,t,r)=>{let i=!1,o=f.Text;void 0!==r&&(n.boolean(r)?i=r:(i=r.sendNotification||!1,o=r.traceFormat||f.Text)),M=e,$=o,P=M===l.Off?void 0:t,!i||X()||J()||ce.sendNotification(h.type,{value:l.toString(e)})},onError:q.event,onClose:j.event,onUnhandledNotification:U.event,onDispose:K.event,end:()=>{d.end()},dispose:()=>{if(J())return;B=I.Disposed,K.fire(void 0);const e=new Error("Connection got disposed.");Object.keys(L).forEach((t=>{L[t].reject(e)})),L=Object.create(null),F=Object.create(null),w=new i.LinkedMap,n.func(d.dispose)&&d.dispose(),n.func(p.dispose)&&p.dispose()},listen:()=>{re(),function(){if(Y())throw new x(g.AlreadyListening,"Connection is already listening")}(),B=I.Listening,p.listen(ee)},inspect:()=>{t.default().console.log("inspect")}};return ce.onNotification(m.type,(e=>{M!==l.Off&&P&&P.log(e.message,M===l.Verbose?e.verbose:void 0)})),ce.onNotification(u.type,(e=>{const t=O.get(e.token);t?t(e.value):W.fire(e)})),ce}}(Br),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CancellationSenderStrategy=e.CancellationReceiverStrategy=e.ConnectionError=e.ConnectionErrors=e.LogTraceNotification=e.SetTraceNotification=e.TraceFormat=e.Trace=e.ProgressType=e.createMessageConnection=e.NullLogger=e.ConnectionOptions=e.ConnectionStrategy=e.WriteableStreamMessageWriter=e.AbstractMessageWriter=e.MessageWriter=e.ReadableStreamMessageReader=e.AbstractMessageReader=e.MessageReader=e.CancellationToken=e.CancellationTokenSource=e.Emitter=e.Event=e.Disposable=e.ParameterStructures=e.NotificationType9=e.NotificationType8=e.NotificationType7=e.NotificationType6=e.NotificationType5=e.NotificationType4=e.NotificationType3=e.NotificationType2=e.NotificationType1=e.NotificationType0=e.NotificationType=e.ErrorCodes=e.ResponseError=e.RequestType9=e.RequestType8=e.RequestType7=e.RequestType6=e.RequestType5=e.RequestType4=e.RequestType3=e.RequestType2=e.RequestType1=e.RequestType0=e.RequestType=e.RAL=void 0,e.CancellationStrategy=void 0;const t=kr;Object.defineProperty(e,"RequestType",{enumerable:!0,get:function(){return t.RequestType}}),Object.defineProperty(e,"RequestType0",{enumerable:!0,get:function(){return t.RequestType0}}),Object.defineProperty(e,"RequestType1",{enumerable:!0,get:function(){return t.RequestType1}}),Object.defineProperty(e,"RequestType2",{enumerable:!0,get:function(){return t.RequestType2}}),Object.defineProperty(e,"RequestType3",{enumerable:!0,get:function(){return t.RequestType3}}),Object.defineProperty(e,"RequestType4",{enumerable:!0,get:function(){return t.RequestType4}}),Object.defineProperty(e,"RequestType5",{enumerable:!0,get:function(){return t.RequestType5}}),Object.defineProperty(e,"RequestType6",{enumerable:!0,get:function(){return t.RequestType6}}),Object.defineProperty(e,"RequestType7",{enumerable:!0,get:function(){return t.RequestType7}}),Object.defineProperty(e,"RequestType8",{enumerable:!0,get:function(){return t.RequestType8}}),Object.defineProperty(e,"RequestType9",{enumerable:!0,get:function(){return t.RequestType9}}),Object.defineProperty(e,"ResponseError",{enumerable:!0,get:function(){return t.ResponseError}}),Object.defineProperty(e,"ErrorCodes",{enumerable:!0,get:function(){return t.ErrorCodes}}),Object.defineProperty(e,"NotificationType",{enumerable:!0,get:function(){return t.NotificationType}}),Object.defineProperty(e,"NotificationType0",{enumerable:!0,get:function(){return t.NotificationType0}}),Object.defineProperty(e,"NotificationType1",{enumerable:!0,get:function(){return t.NotificationType1}}),Object.defineProperty(e,"NotificationType2",{enumerable:!0,get:function(){return t.NotificationType2}}),Object.defineProperty(e,"NotificationType3",{enumerable:!0,get:function(){return t.NotificationType3}}),Object.defineProperty(e,"NotificationType4",{enumerable:!0,get:function(){return t.NotificationType4}}),Object.defineProperty(e,"NotificationType5",{enumerable:!0,get:function(){return t.NotificationType5}}),Object.defineProperty(e,"NotificationType6",{enumerable:!0,get:function(){return t.NotificationType6}}),Object.defineProperty(e,"NotificationType7",{enumerable:!0,get:function(){return t.NotificationType7}}),Object.defineProperty(e,"NotificationType8",{enumerable:!0,get:function(){return t.NotificationType8}}),Object.defineProperty(e,"NotificationType9",{enumerable:!0,get:function(){return t.NotificationType9}}),Object.defineProperty(e,"ParameterStructures",{enumerable:!0,get:function(){return t.ParameterStructures}});const n=gr;Object.defineProperty(e,"Disposable",{enumerable:!0,get:function(){return n.Disposable}});const r=vr;Object.defineProperty(e,"Event",{enumerable:!0,get:function(){return r.Event}}),Object.defineProperty(e,"Emitter",{enumerable:!0,get:function(){return r.Emitter}});const i=wr;Object.defineProperty(e,"CancellationTokenSource",{enumerable:!0,get:function(){return i.CancellationTokenSource}}),Object.defineProperty(e,"CancellationToken",{enumerable:!0,get:function(){return i.CancellationToken}});const o=Lr;Object.defineProperty(e,"MessageReader",{enumerable:!0,get:function(){return o.MessageReader}}),Object.defineProperty(e,"AbstractMessageReader",{enumerable:!0,get:function(){return o.AbstractMessageReader}}),Object.defineProperty(e,"ReadableStreamMessageReader",{enumerable:!0,get:function(){return o.ReadableStreamMessageReader}});const a=Fr;Object.defineProperty(e,"MessageWriter",{enumerable:!0,get:function(){return a.MessageWriter}}),Object.defineProperty(e,"AbstractMessageWriter",{enumerable:!0,get:function(){return a.AbstractMessageWriter}}),Object.defineProperty(e,"WriteableStreamMessageWriter",{enumerable:!0,get:function(){return a.WriteableStreamMessageWriter}});const s=Br;Object.defineProperty(e,"ConnectionStrategy",{enumerable:!0,get:function(){return s.ConnectionStrategy}}),Object.defineProperty(e,"ConnectionOptions",{enumerable:!0,get:function(){return s.ConnectionOptions}}),Object.defineProperty(e,"NullLogger",{enumerable:!0,get:function(){return s.NullLogger}}),Object.defineProperty(e,"createMessageConnection",{enumerable:!0,get:function(){return s.createMessageConnection}}),Object.defineProperty(e,"ProgressType",{enumerable:!0,get:function(){return s.ProgressType}}),Object.defineProperty(e,"Trace",{enumerable:!0,get:function(){return s.Trace}}),Object.defineProperty(e,"TraceFormat",{enumerable:!0,get:function(){return s.TraceFormat}}),Object.defineProperty(e,"SetTraceNotification",{enumerable:!0,get:function(){return s.SetTraceNotification}}),Object.defineProperty(e,"LogTraceNotification",{enumerable:!0,get:function(){return s.LogTraceNotification}}),Object.defineProperty(e,"ConnectionErrors",{enumerable:!0,get:function(){return s.ConnectionErrors}}),Object.defineProperty(e,"ConnectionError",{enumerable:!0,get:function(){return s.ConnectionError}}),Object.defineProperty(e,"CancellationReceiverStrategy",{enumerable:!0,get:function(){return s.CancellationReceiverStrategy}}),Object.defineProperty(e,"CancellationSenderStrategy",{enumerable:!0,get:function(){return s.CancellationSenderStrategy}}),Object.defineProperty(e,"CancellationStrategy",{enumerable:!0,get:function(){return s.CancellationStrategy}});const u=fr;e.RAL=u.default}(Sr),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createMessageConnection=e.BrowserMessageWriter=e.BrowserMessageReader=void 0;pr.default.install();const r=Sr;n(Sr,e);class i extends r.AbstractMessageReader{constructor(e){super(),this._onData=new r.Emitter,this._messageListener=e=>{this._onData.fire(e.data)},e.addEventListener("error",(e=>this.fireError(e))),e.onmessage=this._messageListener}listen(e){return this._onData.event(e)}}e.BrowserMessageReader=i;class o extends r.AbstractMessageWriter{constructor(e){super(),this.context=e,this.errorCount=0,e.addEventListener("error",(e=>this.fireError(e)))}write(e){try{return this.context.postMessage(e),Promise.resolve()}catch(t){return this.handleError(t,e),Promise.reject(t)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){}}e.BrowserMessageWriter=o,e.createMessageConnection=function(e,t,n,i){return void 0===n&&(n=r.NullLogger),r.ConnectionStrategy.is(i)&&(i={connectionStrategy:i}),r.createMessageConnection(e,t,n,i)}}(lr);var jr,Ur,Wr,Kr,Gr,Vr,Hr,zr,Yr,Xr,Jr,Qr,Zr,ei,ti,ni,ri,ii,oi,ai,si,ui,ci,li,pi,fi,di,hi,mi,gi,vi,yi,Ei,_i,Ci,Ti,Ai,Ri,Ii,Di,xi,bi,Si,ki,Oi,Ni,Pi,wi,Li,Fi=lr,Mi={};(Ur=jr||(jr={})).MIN_VALUE=-2147483648,Ur.MAX_VALUE=2147483647,(Kr=Wr||(Wr={})).MIN_VALUE=0,Kr.MAX_VALUE=2147483647,(Vr=Gr||(Gr={})).create=function(e,t){return e===Number.MAX_VALUE&&(e=Wr.MAX_VALUE),t===Number.MAX_VALUE&&(t=Wr.MAX_VALUE),{line:e,character:t}},Vr.is=function(e){var t=e;return Fo.objectLiteral(t)&&Fo.uinteger(t.line)&&Fo.uinteger(t.character)},(zr=Hr||(Hr={})).create=function(e,t,n,r){if(Fo.uinteger(e)&&Fo.uinteger(t)&&Fo.uinteger(n)&&Fo.uinteger(r))return{start:Gr.create(e,t),end:Gr.create(n,r)};if(Gr.is(e)&&Gr.is(t))return{start:e,end:t};throw new Error("Range#create called with invalid arguments["+e+", "+t+", "+n+", "+r+"]")},zr.is=function(e){var t=e;return Fo.objectLiteral(t)&&Gr.is(t.start)&&Gr.is(t.end)},(Xr=Yr||(Yr={})).create=function(e,t){return{uri:e,range:t}},Xr.is=function(e){var t=e;return Fo.defined(t)&&Hr.is(t.range)&&(Fo.string(t.uri)||Fo.undefined(t.uri))},(Qr=Jr||(Jr={})).create=function(e,t,n,r){return{targetUri:e,targetRange:t,targetSelectionRange:n,originSelectionRange:r}},Qr.is=function(e){var t=e;return Fo.defined(t)&&Hr.is(t.targetRange)&&Fo.string(t.targetUri)&&(Hr.is(t.targetSelectionRange)||Fo.undefined(t.targetSelectionRange))&&(Hr.is(t.originSelectionRange)||Fo.undefined(t.originSelectionRange))},(ei=Zr||(Zr={})).create=function(e,t,n,r){return{red:e,green:t,blue:n,alpha:r}},ei.is=function(e){var t=e;return Fo.numberRange(t.red,0,1)&&Fo.numberRange(t.green,0,1)&&Fo.numberRange(t.blue,0,1)&&Fo.numberRange(t.alpha,0,1)},(ni=ti||(ti={})).create=function(e,t){return{range:e,color:t}},ni.is=function(e){var t=e;return Hr.is(t.range)&&Zr.is(t.color)},(ii=ri||(ri={})).create=function(e,t,n){return{label:e,textEdit:t,additionalTextEdits:n}},ii.is=function(e){var t=e;return Fo.string(t.label)&&(Fo.undefined(t.textEdit)||_i.is(t))&&(Fo.undefined(t.additionalTextEdits)||Fo.typedArray(t.additionalTextEdits,_i.is))},(ai=oi||(oi={})).Comment="comment",ai.Imports="imports",ai.Region="region",(ui=si||(si={})).create=function(e,t,n,r,i){var o={startLine:e,endLine:t};return Fo.defined(n)&&(o.startCharacter=n),Fo.defined(r)&&(o.endCharacter=r),Fo.defined(i)&&(o.kind=i),o},ui.is=function(e){var t=e;return Fo.uinteger(t.startLine)&&Fo.uinteger(t.startLine)&&(Fo.undefined(t.startCharacter)||Fo.uinteger(t.startCharacter))&&(Fo.undefined(t.endCharacter)||Fo.uinteger(t.endCharacter))&&(Fo.undefined(t.kind)||Fo.string(t.kind))},(li=ci||(ci={})).create=function(e,t){return{location:e,message:t}},li.is=function(e){var t=e;return Fo.defined(t)&&Yr.is(t.location)&&Fo.string(t.message)},(fi=pi||(pi={})).Error=1,fi.Warning=2,fi.Information=3,fi.Hint=4,(hi=di||(di={})).Unnecessary=1,hi.Deprecated=2,(mi||(mi={})).is=function(e){var t=e;return null!=t&&Fo.string(t.href)},(vi=gi||(gi={})).create=function(e,t,n,r,i,o){var a={range:e,message:t};return Fo.defined(n)&&(a.severity=n),Fo.defined(r)&&(a.code=r),Fo.defined(i)&&(a.source=i),Fo.defined(o)&&(a.relatedInformation=o),a},vi.is=function(e){var t,n=e;return Fo.defined(n)&&Hr.is(n.range)&&Fo.string(n.message)&&(Fo.number(n.severity)||Fo.undefined(n.severity))&&(Fo.integer(n.code)||Fo.string(n.code)||Fo.undefined(n.code))&&(Fo.undefined(n.codeDescription)||Fo.string(null===(t=n.codeDescription)||void 0===t?void 0:t.href))&&(Fo.string(n.source)||Fo.undefined(n.source))&&(Fo.undefined(n.relatedInformation)||Fo.typedArray(n.relatedInformation,ci.is))},(Ei=yi||(yi={})).create=function(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var i={title:e,command:t};return Fo.defined(n)&&n.length>0&&(i.arguments=n),i},Ei.is=function(e){var t=e;return Fo.defined(t)&&Fo.string(t.title)&&Fo.string(t.command)},(Ci=_i||(_i={})).replace=function(e,t){return{range:e,newText:t}},Ci.insert=function(e,t){return{range:{start:e,end:e},newText:t}},Ci.del=function(e){return{range:e,newText:""}},Ci.is=function(e){var t=e;return Fo.objectLiteral(t)&&Fo.string(t.newText)&&Hr.is(t.range)},(Ai=Ti||(Ti={})).create=function(e,t,n){var r={label:e};return void 0!==t&&(r.needsConfirmation=t),void 0!==n&&(r.description=n),r},Ai.is=function(e){var t=e;return void 0!==t&&Fo.objectLiteral(t)&&Fo.string(t.label)&&(Fo.boolean(t.needsConfirmation)||void 0===t.needsConfirmation)&&(Fo.string(t.description)||void 0===t.description)},(Ri||(Ri={})).is=function(e){return"string"==typeof e},(Di=Ii||(Ii={})).replace=function(e,t,n){return{range:e,newText:t,annotationId:n}},Di.insert=function(e,t,n){return{range:{start:e,end:e},newText:t,annotationId:n}},Di.del=function(e,t){return{range:e,newText:"",annotationId:t}},Di.is=function(e){var t=e;return _i.is(t)&&(Ti.is(t.annotationId)||Ri.is(t.annotationId))},(bi=xi||(xi={})).create=function(e,t){return{textDocument:e,edits:t}},bi.is=function(e){var t=e;return Fo.defined(t)&&Ui.is(t.textDocument)&&Array.isArray(t.edits)},(ki=Si||(Si={})).create=function(e,t,n){var r={kind:"create",uri:e};return void 0===t||void 0===t.overwrite&&void 0===t.ignoreIfExists||(r.options=t),void 0!==n&&(r.annotationId=n),r},ki.is=function(e){var t=e;return t&&"create"===t.kind&&Fo.string(t.uri)&&(void 0===t.options||(void 0===t.options.overwrite||Fo.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||Fo.boolean(t.options.ignoreIfExists)))&&(void 0===t.annotationId||Ri.is(t.annotationId))},(Ni=Oi||(Oi={})).create=function(e,t,n,r){var i={kind:"rename",oldUri:e,newUri:t};return void 0===n||void 0===n.overwrite&&void 0===n.ignoreIfExists||(i.options=n),void 0!==r&&(i.annotationId=r),i},Ni.is=function(e){var t=e;return t&&"rename"===t.kind&&Fo.string(t.oldUri)&&Fo.string(t.newUri)&&(void 0===t.options||(void 0===t.options.overwrite||Fo.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||Fo.boolean(t.options.ignoreIfExists)))&&(void 0===t.annotationId||Ri.is(t.annotationId))},(wi=Pi||(Pi={})).create=function(e,t,n){var r={kind:"delete",uri:e};return void 0===t||void 0===t.recursive&&void 0===t.ignoreIfNotExists||(r.options=t),void 0!==n&&(r.annotationId=n),r},wi.is=function(e){var t=e;return t&&"delete"===t.kind&&Fo.string(t.uri)&&(void 0===t.options||(void 0===t.options.recursive||Fo.boolean(t.options.recursive))&&(void 0===t.options.ignoreIfNotExists||Fo.boolean(t.options.ignoreIfNotExists)))&&(void 0===t.annotationId||Ri.is(t.annotationId))},(Li||(Li={})).is=function(e){var t=e;return t&&(void 0!==t.changes||void 0!==t.documentChanges)&&(void 0===t.documentChanges||t.documentChanges.every((function(e){return Fo.string(e.kind)?Si.is(e)||Oi.is(e)||Pi.is(e):xi.is(e)})))};var $i,Bi,qi,ji,Ui,Wi,Ki,Gi,Vi,Hi,zi,Yi,Xi,Ji,Qi,Zi,eo,to,no,ro,io,oo,ao,so,uo,co,lo,po,fo,ho,mo,go,vo,yo,Eo,_o,Co,To,Ao,Ro,Io,Do,xo,bo,So,ko,Oo,No=function(){function e(e,t){this.edits=e,this.changeAnnotations=t}return e.prototype.insert=function(e,t,n){var r,i;if(void 0===n?r=_i.insert(e,t):Ri.is(n)?(i=n,r=Ii.insert(e,t,n)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(n),r=Ii.insert(e,t,i)),this.edits.push(r),void 0!==i)return i},e.prototype.replace=function(e,t,n){var r,i;if(void 0===n?r=_i.replace(e,t):Ri.is(n)?(i=n,r=Ii.replace(e,t,n)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(n),r=Ii.replace(e,t,i)),this.edits.push(r),void 0!==i)return i},e.prototype.delete=function(e,t){var n,r;if(void 0===t?n=_i.del(e):Ri.is(t)?(r=t,n=Ii.del(e,t)):(this.assertChangeAnnotations(this.changeAnnotations),r=this.changeAnnotations.manage(t),n=Ii.del(e,r)),this.edits.push(n),void 0!==r)return r},e.prototype.add=function(e){this.edits.push(e)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e.prototype.assertChangeAnnotations=function(e){if(void 0===e)throw new Error("Text edit change is not configured to manage change annotations.")},e}(),Po=function(){function e(e){this._annotations=void 0===e?Object.create(null):e,this._counter=0,this._size=0}return e.prototype.all=function(){return this._annotations},Object.defineProperty(e.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),e.prototype.manage=function(e,t){var n;if(Ri.is(e)?n=e:(n=this.nextId(),t=e),void 0!==this._annotations[n])throw new Error("Id "+n+" is already in use.");if(void 0===t)throw new Error("No annotation provided for id "+n);return this._annotations[n]=t,this._size++,n},e.prototype.nextId=function(){return this._counter++,this._counter.toString()},e}(),wo=function(){function e(e){var t=this;this._textEditChanges=Object.create(null),void 0!==e?(this._workspaceEdit=e,e.documentChanges?(this._changeAnnotations=new Po(e.changeAnnotations),e.changeAnnotations=this._changeAnnotations.all(),e.documentChanges.forEach((function(e){if(xi.is(e)){var n=new No(e.edits,t._changeAnnotations);t._textEditChanges[e.textDocument.uri]=n}}))):e.changes&&Object.keys(e.changes).forEach((function(n){var r=new No(e.changes[n]);t._textEditChanges[n]=r}))):this._workspaceEdit={}}return Object.defineProperty(e.prototype,"edit",{get:function(){return this.initDocumentChanges(),void 0!==this._changeAnnotations&&(0===this._changeAnnotations.size?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit},enumerable:!1,configurable:!0}),e.prototype.getTextEditChange=function(e){if(Ui.is(e)){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var t={uri:e.uri,version:e.version};if(!(r=this._textEditChanges[t.uri])){var n={textDocument:t,edits:i=[]};this._workspaceEdit.documentChanges.push(n),r=new No(i,this._changeAnnotations),this._textEditChanges[t.uri]=r}return r}if(this.initChanges(),void 0===this._workspaceEdit.changes)throw new Error("Workspace edit is not configured for normal text edit changes.");var r;if(!(r=this._textEditChanges[e])){var i=[];this._workspaceEdit.changes[e]=i,r=new No(i),this._textEditChanges[e]=r}return r},e.prototype.initDocumentChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._changeAnnotations=new Po,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())},e.prototype.initChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._workspaceEdit.changes=Object.create(null))},e.prototype.createFile=function(e,t,n){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(Ti.is(t)||Ri.is(t)?r=t:n=t,void 0===r?i=Si.create(e,n):(o=Ri.is(r)?r:this._changeAnnotations.manage(r),i=Si.create(e,n,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e.prototype.renameFile=function(e,t,n,r){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var i,o,a;if(Ti.is(n)||Ri.is(n)?i=n:r=n,void 0===i?o=Oi.create(e,t,r):(a=Ri.is(i)?i:this._changeAnnotations.manage(i),o=Oi.create(e,t,r,a)),this._workspaceEdit.documentChanges.push(o),void 0!==a)return a},e.prototype.deleteFile=function(e,t,n){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(Ti.is(t)||Ri.is(t)?r=t:n=t,void 0===r?i=Pi.create(e,n):(o=Ri.is(r)?r:this._changeAnnotations.manage(r),i=Pi.create(e,n,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e}();(Bi=$i||($i={})).create=function(e){return{uri:e}},Bi.is=function(e){var t=e;return Fo.defined(t)&&Fo.string(t.uri)},(ji=qi||(qi={})).create=function(e,t){return{uri:e,version:t}},ji.is=function(e){var t=e;return Fo.defined(t)&&Fo.string(t.uri)&&Fo.integer(t.version)},(Wi=Ui||(Ui={})).create=function(e,t){return{uri:e,version:t}},Wi.is=function(e){var t=e;return Fo.defined(t)&&Fo.string(t.uri)&&(null===t.version||Fo.integer(t.version))},(Gi=Ki||(Ki={})).create=function(e,t,n,r){return{uri:e,languageId:t,version:n,text:r}},Gi.is=function(e){var t=e;return Fo.defined(t)&&Fo.string(t.uri)&&Fo.string(t.languageId)&&Fo.integer(t.version)&&Fo.string(t.text)},(Hi=Vi||(Vi={})).PlainText="plaintext",Hi.Markdown="markdown",function(e){e.is=function(t){var n=t;return n===e.PlainText||n===e.Markdown}}(Vi||(Vi={})),(zi||(zi={})).is=function(e){var t=e;return Fo.objectLiteral(e)&&Vi.is(t.kind)&&Fo.string(t.value)},function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25}(Yi||(Yi={})),(Ji=Xi||(Xi={})).PlainText=1,Ji.Snippet=2,function(e){e.Deprecated=1}(Qi||(Qi={})),(eo=Zi||(Zi={})).create=function(e,t,n){return{newText:e,insert:t,replace:n}},eo.is=function(e){var t=e;return t&&Fo.string(t.newText)&&Hr.is(t.insert)&&Hr.is(t.replace)},(no=to||(to={})).asIs=1,no.adjustIndentation=2,(ro||(ro={})).create=function(e){return{label:e}},(io||(io={})).create=function(e,t){return{items:e||[],isIncomplete:!!t}},(ao=oo||(oo={})).fromPlainText=function(e){return e.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},ao.is=function(e){var t=e;return Fo.string(t)||Fo.objectLiteral(t)&&Fo.string(t.language)&&Fo.string(t.value)},(so||(so={})).is=function(e){var t=e;return!!t&&Fo.objectLiteral(t)&&(zi.is(t.contents)||oo.is(t.contents)||Fo.typedArray(t.contents,oo.is))&&(void 0===e.range||Hr.is(e.range))},(uo||(uo={})).create=function(e,t){return t?{label:e,documentation:t}:{label:e}},(co||(co={})).create=function(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var i={label:e};return Fo.defined(t)&&(i.documentation=t),Fo.defined(n)?i.parameters=n:i.parameters=[],i},function(e){e.Text=1,e.Read=2,e.Write=3}(lo||(lo={})),(po||(po={})).create=function(e,t){var n={range:e};return Fo.number(t)&&(n.kind=t),n},function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26}(fo||(fo={})),function(e){e.Deprecated=1}(ho||(ho={})),(mo||(mo={})).create=function(e,t,n,r,i){var o={name:e,kind:t,location:{uri:r,range:n}};return i&&(o.containerName=i),o},(vo=go||(go={})).create=function(e,t,n,r,i,o){var a={name:e,detail:t,kind:n,range:r,selectionRange:i};return void 0!==o&&(a.children=o),a},vo.is=function(e){var t=e;return t&&Fo.string(t.name)&&Fo.number(t.kind)&&Hr.is(t.range)&&Hr.is(t.selectionRange)&&(void 0===t.detail||Fo.string(t.detail))&&(void 0===t.deprecated||Fo.boolean(t.deprecated))&&(void 0===t.children||Array.isArray(t.children))&&(void 0===t.tags||Array.isArray(t.tags))},(Eo=yo||(yo={})).Empty="",Eo.QuickFix="quickfix",Eo.Refactor="refactor",Eo.RefactorExtract="refactor.extract",Eo.RefactorInline="refactor.inline",Eo.RefactorRewrite="refactor.rewrite",Eo.Source="source",Eo.SourceOrganizeImports="source.organizeImports",Eo.SourceFixAll="source.fixAll",(Co=_o||(_o={})).create=function(e,t){var n={diagnostics:e};return null!=t&&(n.only=t),n},Co.is=function(e){var t=e;return Fo.defined(t)&&Fo.typedArray(t.diagnostics,gi.is)&&(void 0===t.only||Fo.typedArray(t.only,Fo.string))},(Ao=To||(To={})).create=function(e,t,n){var r={title:e},i=!0;return"string"==typeof t?(i=!1,r.kind=t):yi.is(t)?r.command=t:r.edit=t,i&&void 0!==n&&(r.kind=n),r},Ao.is=function(e){var t=e;return t&&Fo.string(t.title)&&(void 0===t.diagnostics||Fo.typedArray(t.diagnostics,gi.is))&&(void 0===t.kind||Fo.string(t.kind))&&(void 0!==t.edit||void 0!==t.command)&&(void 0===t.command||yi.is(t.command))&&(void 0===t.isPreferred||Fo.boolean(t.isPreferred))&&(void 0===t.edit||Li.is(t.edit))},(Io=Ro||(Ro={})).create=function(e,t){var n={range:e};return Fo.defined(t)&&(n.data=t),n},Io.is=function(e){var t=e;return Fo.defined(t)&&Hr.is(t.range)&&(Fo.undefined(t.command)||yi.is(t.command))},(xo=Do||(Do={})).create=function(e,t){return{tabSize:e,insertSpaces:t}},xo.is=function(e){var t=e;return Fo.defined(t)&&Fo.uinteger(t.tabSize)&&Fo.boolean(t.insertSpaces)},(So=bo||(bo={})).create=function(e,t,n){return{range:e,target:t,data:n}},So.is=function(e){var t=e;return Fo.defined(t)&&Hr.is(t.range)&&(Fo.undefined(t.target)||Fo.string(t.target))},(Oo=ko||(ko={})).create=function(e,t){return{range:e,parent:t}},Oo.is=function(e){var t=e;return void 0!==t&&Hr.is(t.range)&&(void 0===t.parent||Oo.is(t.parent))};var Lo;!function(e){function t(e,n){if(e.length<=1)return e;var r=e.length/2|0,i=e.slice(0,r),o=e.slice(r);t(i,n),t(o,n);for(var a=0,s=0,u=0;a<i.length&&s<o.length;){var c=n(i[a],o[s]);e[u++]=c<=0?i[a++]:o[s++]}for(;a<i.length;)e[u++]=i[a++];for(;s<o.length;)e[u++]=o[s++];return e}e.create=function(e,t,n,r){return new Bo(e,t,n,r)},e.is=function(e){var t=e;return!!(Fo.defined(t)&&Fo.string(t.uri)&&(Fo.undefined(t.languageId)||Fo.string(t.languageId))&&Fo.uinteger(t.lineCount)&&Fo.func(t.getText)&&Fo.func(t.positionAt)&&Fo.func(t.offsetAt))},e.applyEdits=function(e,n){for(var r=e.getText(),i=t(n,(function(e,t){var n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n})),o=r.length,a=i.length-1;a>=0;a--){var s=i[a],u=e.offsetAt(s.range.start),c=e.offsetAt(s.range.end);if(!(c<=o))throw new Error("Overlapping edit");r=r.substring(0,u)+s.newText+r.substring(c,r.length),o=u}return r}}(Lo||(Lo={}));var Fo,Mo,$o,Bo=function(){function e(e,t,n,r){this._uri=e,this._languageId=t,this._version=n,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content},e.prototype.update=function(e,t){this._content=e.text,this._version=t,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(void 0===this._lineOffsets){for(var e=[],t=this._content,n=!0,r=0;r<t.length;r++){n&&(e.push(r),n=!1);var i=t.charAt(r);n="\r"===i||"\n"===i,"\r"===i&&r+1<t.length&&"\n"===t.charAt(r+1)&&r++}n&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),n=0,r=t.length;if(0===r)return Gr.create(0,e);for(;n<r;){var i=Math.floor((n+r)/2);t[i]>e?r=i:n=i+1}var o=n-1;return Gr.create(o,e-t[o])},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var n=t[e.line],r=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,r),n)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e}();Mo=Fo||(Fo={}),$o=Object.prototype.toString,Mo.defined=function(e){return void 0!==e},Mo.undefined=function(e){return void 0===e},Mo.boolean=function(e){return!0===e||!1===e},Mo.string=function(e){return"[object String]"===$o.call(e)},Mo.number=function(e){return"[object Number]"===$o.call(e)},Mo.numberRange=function(e,t,n){return"[object Number]"===$o.call(e)&&t<=e&&e<=n},Mo.integer=function(e){return"[object Number]"===$o.call(e)&&-2147483648<=e&&e<=2147483647},Mo.uinteger=function(e){return"[object Number]"===$o.call(e)&&0<=e&&e<=2147483647},Mo.func=function(e){return"[object Function]"===$o.call(e)},Mo.objectLiteral=function(e){return null!==e&&"object"==typeof e},Mo.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)};var qo=or(Object.freeze({__proto__:null,get integer(){return jr},get uinteger(){return Wr},get Position(){return Gr},get Range(){return Hr},get Location(){return Yr},get LocationLink(){return Jr},get Color(){return Zr},get ColorInformation(){return ti},get ColorPresentation(){return ri},get FoldingRangeKind(){return oi},get FoldingRange(){return si},get DiagnosticRelatedInformation(){return ci},get DiagnosticSeverity(){return pi},get DiagnosticTag(){return di},get CodeDescription(){return mi},get Diagnostic(){return gi},get Command(){return yi},get TextEdit(){return _i},get ChangeAnnotation(){return Ti},get ChangeAnnotationIdentifier(){return Ri},get AnnotatedTextEdit(){return Ii},get TextDocumentEdit(){return xi},get CreateFile(){return Si},get RenameFile(){return Oi},get DeleteFile(){return Pi},get WorkspaceEdit(){return Li},WorkspaceChange:wo,get TextDocumentIdentifier(){return $i},get VersionedTextDocumentIdentifier(){return qi},get OptionalVersionedTextDocumentIdentifier(){return Ui},get TextDocumentItem(){return Ki},get MarkupKind(){return Vi},get MarkupContent(){return zi},get CompletionItemKind(){return Yi},get InsertTextFormat(){return Xi},get CompletionItemTag(){return Qi},get InsertReplaceEdit(){return Zi},get InsertTextMode(){return to},get CompletionItem(){return ro},get CompletionList(){return io},get MarkedString(){return oo},get Hover(){return so},get ParameterInformation(){return uo},get SignatureInformation(){return co},get DocumentHighlightKind(){return lo},get DocumentHighlight(){return po},get SymbolKind(){return fo},get SymbolTag(){return ho},get SymbolInformation(){return mo},get DocumentSymbol(){return go},get CodeActionKind(){return yo},get CodeActionContext(){return _o},get CodeAction(){return To},get CodeLens(){return Ro},get FormattingOptions(){return Do},get DocumentLink(){return bo},get SelectionRange(){return ko},EOL:["\n","\r\n","\r"],get TextDocument(){return Lo}})),jo={};Object.defineProperty(jo,"__esModule",{value:!0}),jo.ProtocolNotificationType=jo.ProtocolNotificationType0=jo.ProtocolRequestType=jo.ProtocolRequestType0=jo.RegistrationType=void 0;const Uo=lr;jo.RegistrationType=class{constructor(e){this.method=e}};jo.ProtocolRequestType0=class extends Uo.RequestType0{constructor(e){super(e)}};jo.ProtocolRequestType=class extends Uo.RequestType{constructor(e){super(e,Uo.ParameterStructures.byName)}};jo.ProtocolNotificationType0=class extends Uo.NotificationType0{constructor(e){super(e)}};jo.ProtocolNotificationType=class extends Uo.NotificationType{constructor(e){super(e,Uo.ParameterStructures.byName)}};var Wo={},Ko={};function Go(e){return"string"==typeof e||e instanceof String}function Vo(e){return Array.isArray(e)}Object.defineProperty(Ko,"__esModule",{value:!0}),Ko.objectLiteral=Ko.typedArray=Ko.stringArray=Ko.array=Ko.func=Ko.error=Ko.number=Ko.string=Ko.boolean=void 0,Ko.boolean=function(e){return!0===e||!1===e},Ko.string=Go,Ko.number=function(e){return"number"==typeof e||e instanceof Number},Ko.error=function(e){return e instanceof Error},Ko.func=function(e){return"function"==typeof e},Ko.array=Vo,Ko.stringArray=function(e){return Vo(e)&&e.every((e=>Go(e)))},Ko.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},Ko.objectLiteral=function(e){return null!==e&&"object"==typeof e};var Ho={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ImplementationRequest=void 0;const t=jo;var n;(n=e.ImplementationRequest||(e.ImplementationRequest={})).method="textDocument/implementation",n.type=new t.ProtocolRequestType(n.method)}(Ho);var zo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.TypeDefinitionRequest=void 0;const t=jo;var n;(n=e.TypeDefinitionRequest||(e.TypeDefinitionRequest={})).method="textDocument/typeDefinition",n.type=new t.ProtocolRequestType(n.method)}(zo);var Yo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DidChangeWorkspaceFoldersNotification=e.WorkspaceFoldersRequest=void 0;const t=jo;(e.WorkspaceFoldersRequest||(e.WorkspaceFoldersRequest={})).type=new t.ProtocolRequestType0("workspace/workspaceFolders"),(e.DidChangeWorkspaceFoldersNotification||(e.DidChangeWorkspaceFoldersNotification={})).type=new t.ProtocolNotificationType("workspace/didChangeWorkspaceFolders")}(Yo);var Xo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ConfigurationRequest=void 0;const t=jo;(e.ConfigurationRequest||(e.ConfigurationRequest={})).type=new t.ProtocolRequestType("workspace/configuration")}(Xo);var Jo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ColorPresentationRequest=e.DocumentColorRequest=void 0;const t=jo;var n;(n=e.DocumentColorRequest||(e.DocumentColorRequest={})).method="textDocument/documentColor",n.type=new t.ProtocolRequestType(n.method),(e.ColorPresentationRequest||(e.ColorPresentationRequest={})).type=new t.ProtocolRequestType("textDocument/colorPresentation")}(Jo);var Qo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.FoldingRangeRequest=e.FoldingRangeKind=void 0;const t=jo;var n;!function(e){e.Comment="comment",e.Imports="imports",e.Region="region"}(e.FoldingRangeKind||(e.FoldingRangeKind={})),(n=e.FoldingRangeRequest||(e.FoldingRangeRequest={})).method="textDocument/foldingRange",n.type=new t.ProtocolRequestType(n.method)}(Qo);var Zo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DeclarationRequest=void 0;const t=jo;var n;(n=e.DeclarationRequest||(e.DeclarationRequest={})).method="textDocument/declaration",n.type=new t.ProtocolRequestType(n.method)}(Zo);var ea={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.SelectionRangeRequest=void 0;const t=jo;var n;(n=e.SelectionRangeRequest||(e.SelectionRangeRequest={})).method="textDocument/selectionRange",n.type=new t.ProtocolRequestType(n.method)}(ea);var ta={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WorkDoneProgressCancelNotification=e.WorkDoneProgressCreateRequest=e.WorkDoneProgress=void 0;const t=lr,n=jo;var r;(r=e.WorkDoneProgress||(e.WorkDoneProgress={})).type=new t.ProgressType,r.is=function(e){return e===r.type},(e.WorkDoneProgressCreateRequest||(e.WorkDoneProgressCreateRequest={})).type=new n.ProtocolRequestType("window/workDoneProgress/create"),(e.WorkDoneProgressCancelNotification||(e.WorkDoneProgressCancelNotification={})).type=new n.ProtocolNotificationType("window/workDoneProgress/cancel")}(ta);var na={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CallHierarchyOutgoingCallsRequest=e.CallHierarchyIncomingCallsRequest=e.CallHierarchyPrepareRequest=void 0;const t=jo;var n,r,i;(n=e.CallHierarchyPrepareRequest||(e.CallHierarchyPrepareRequest={})).method="textDocument/prepareCallHierarchy",n.type=new t.ProtocolRequestType(n.method),(r=e.CallHierarchyIncomingCallsRequest||(e.CallHierarchyIncomingCallsRequest={})).method="callHierarchy/incomingCalls",r.type=new t.ProtocolRequestType(r.method),(i=e.CallHierarchyOutgoingCallsRequest||(e.CallHierarchyOutgoingCallsRequest={})).method="callHierarchy/outgoingCalls",i.type=new t.ProtocolRequestType(i.method)}(na);var ra={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.SemanticTokensRefreshRequest=e.SemanticTokensRangeRequest=e.SemanticTokensDeltaRequest=e.SemanticTokensRequest=e.SemanticTokensRegistrationType=e.TokenFormat=e.SemanticTokens=e.SemanticTokenModifiers=e.SemanticTokenTypes=void 0;const t=jo;var n,r,i,o,a,s,u;(n=e.SemanticTokenTypes||(e.SemanticTokenTypes={})).namespace="namespace",n.type="type",n.class="class",n.enum="enum",n.interface="interface",n.struct="struct",n.typeParameter="typeParameter",n.parameter="parameter",n.variable="variable",n.property="property",n.enumMember="enumMember",n.event="event",n.function="function",n.method="method",n.macro="macro",n.keyword="keyword",n.modifier="modifier",n.comment="comment",n.string="string",n.number="number",n.regexp="regexp",n.operator="operator",(r=e.SemanticTokenModifiers||(e.SemanticTokenModifiers={})).declaration="declaration",r.definition="definition",r.readonly="readonly",r.static="static",r.deprecated="deprecated",r.abstract="abstract",r.async="async",r.modification="modification",r.documentation="documentation",r.defaultLibrary="defaultLibrary",(e.SemanticTokens||(e.SemanticTokens={})).is=function(e){const t=e;return void 0!==t&&(void 0===t.resultId||"string"==typeof t.resultId)&&Array.isArray(t.data)&&(0===t.data.length||"number"==typeof t.data[0])},(e.TokenFormat||(e.TokenFormat={})).Relative="relative",(i=e.SemanticTokensRegistrationType||(e.SemanticTokensRegistrationType={})).method="textDocument/semanticTokens",i.type=new t.RegistrationType(i.method),(o=e.SemanticTokensRequest||(e.SemanticTokensRequest={})).method="textDocument/semanticTokens/full",o.type=new t.ProtocolRequestType(o.method),(a=e.SemanticTokensDeltaRequest||(e.SemanticTokensDeltaRequest={})).method="textDocument/semanticTokens/full/delta",a.type=new t.ProtocolRequestType(a.method),(s=e.SemanticTokensRangeRequest||(e.SemanticTokensRangeRequest={})).method="textDocument/semanticTokens/range",s.type=new t.ProtocolRequestType(s.method),(u=e.SemanticTokensRefreshRequest||(e.SemanticTokensRefreshRequest={})).method="workspace/semanticTokens/refresh",u.type=new t.ProtocolRequestType0(u.method)}(ra);var ia={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ShowDocumentRequest=void 0;const t=jo;var n;(n=e.ShowDocumentRequest||(e.ShowDocumentRequest={})).method="window/showDocument",n.type=new t.ProtocolRequestType(n.method)}(ia);var oa={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.LinkedEditingRangeRequest=void 0;const t=jo;var n;(n=e.LinkedEditingRangeRequest||(e.LinkedEditingRangeRequest={})).method="textDocument/linkedEditingRange",n.type=new t.ProtocolRequestType(n.method)}(oa);var aa={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WillDeleteFilesRequest=e.DidDeleteFilesNotification=e.DidRenameFilesNotification=e.WillRenameFilesRequest=e.DidCreateFilesNotification=e.WillCreateFilesRequest=e.FileOperationPatternKind=void 0;const t=jo;var n,r,i,o,a,s,u;(n=e.FileOperationPatternKind||(e.FileOperationPatternKind={})).file="file",n.folder="folder",(r=e.WillCreateFilesRequest||(e.WillCreateFilesRequest={})).method="workspace/willCreateFiles",r.type=new t.ProtocolRequestType(r.method),(i=e.DidCreateFilesNotification||(e.DidCreateFilesNotification={})).method="workspace/didCreateFiles",i.type=new t.ProtocolNotificationType(i.method),(o=e.WillRenameFilesRequest||(e.WillRenameFilesRequest={})).method="workspace/willRenameFiles",o.type=new t.ProtocolRequestType(o.method),(a=e.DidRenameFilesNotification||(e.DidRenameFilesNotification={})).method="workspace/didRenameFiles",a.type=new t.ProtocolNotificationType(a.method),(s=e.DidDeleteFilesNotification||(e.DidDeleteFilesNotification={})).method="workspace/didDeleteFiles",s.type=new t.ProtocolNotificationType(s.method),(u=e.WillDeleteFilesRequest||(e.WillDeleteFilesRequest={})).method="workspace/willDeleteFiles",u.type=new t.ProtocolRequestType(u.method)}(aa);var sa={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.MonikerRequest=e.MonikerKind=e.UniquenessLevel=void 0;const t=jo;var n,r,i;(n=e.UniquenessLevel||(e.UniquenessLevel={})).document="document",n.project="project",n.group="group",n.scheme="scheme",n.global="global",(r=e.MonikerKind||(e.MonikerKind={})).import="import",r.export="export",r.local="local",(i=e.MonikerRequest||(e.MonikerRequest={})).method="textDocument/moniker",i.type=new t.ProtocolRequestType(i.method)}(sa),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DocumentLinkRequest=e.CodeLensRefreshRequest=e.CodeLensResolveRequest=e.CodeLensRequest=e.WorkspaceSymbolRequest=e.CodeActionResolveRequest=e.CodeActionRequest=e.DocumentSymbolRequest=e.DocumentHighlightRequest=e.ReferencesRequest=e.DefinitionRequest=e.SignatureHelpRequest=e.SignatureHelpTriggerKind=e.HoverRequest=e.CompletionResolveRequest=e.CompletionRequest=e.CompletionTriggerKind=e.PublishDiagnosticsNotification=e.WatchKind=e.FileChangeType=e.DidChangeWatchedFilesNotification=e.WillSaveTextDocumentWaitUntilRequest=e.WillSaveTextDocumentNotification=e.TextDocumentSaveReason=e.DidSaveTextDocumentNotification=e.DidCloseTextDocumentNotification=e.DidChangeTextDocumentNotification=e.TextDocumentContentChangeEvent=e.DidOpenTextDocumentNotification=e.TextDocumentSyncKind=e.TelemetryEventNotification=e.LogMessageNotification=e.ShowMessageRequest=e.ShowMessageNotification=e.MessageType=e.DidChangeConfigurationNotification=e.ExitNotification=e.ShutdownRequest=e.InitializedNotification=e.InitializeError=e.InitializeRequest=e.WorkDoneProgressOptions=e.TextDocumentRegistrationOptions=e.StaticRegistrationOptions=e.FailureHandlingKind=e.ResourceOperationKind=e.UnregistrationRequest=e.RegistrationRequest=e.DocumentSelector=e.DocumentFilter=void 0,e.MonikerRequest=e.MonikerKind=e.UniquenessLevel=e.WillDeleteFilesRequest=e.DidDeleteFilesNotification=e.WillRenameFilesRequest=e.DidRenameFilesNotification=e.WillCreateFilesRequest=e.DidCreateFilesNotification=e.FileOperationPatternKind=e.LinkedEditingRangeRequest=e.ShowDocumentRequest=e.SemanticTokensRegistrationType=e.SemanticTokensRefreshRequest=e.SemanticTokensRangeRequest=e.SemanticTokensDeltaRequest=e.SemanticTokensRequest=e.TokenFormat=e.SemanticTokens=e.SemanticTokenModifiers=e.SemanticTokenTypes=e.CallHierarchyPrepareRequest=e.CallHierarchyOutgoingCallsRequest=e.CallHierarchyIncomingCallsRequest=e.WorkDoneProgressCancelNotification=e.WorkDoneProgressCreateRequest=e.WorkDoneProgress=e.SelectionRangeRequest=e.DeclarationRequest=e.FoldingRangeRequest=e.ColorPresentationRequest=e.DocumentColorRequest=e.ConfigurationRequest=e.DidChangeWorkspaceFoldersNotification=e.WorkspaceFoldersRequest=e.TypeDefinitionRequest=e.ImplementationRequest=e.ApplyWorkspaceEditRequest=e.ExecuteCommandRequest=e.PrepareRenameRequest=e.RenameRequest=e.PrepareSupportDefaultBehavior=e.DocumentOnTypeFormattingRequest=e.DocumentRangeFormattingRequest=e.DocumentFormattingRequest=e.DocumentLinkResolveRequest=void 0;const t=Ko,n=jo,r=Ho;Object.defineProperty(e,"ImplementationRequest",{enumerable:!0,get:function(){return r.ImplementationRequest}});const i=zo;Object.defineProperty(e,"TypeDefinitionRequest",{enumerable:!0,get:function(){return i.TypeDefinitionRequest}});const o=Yo;Object.defineProperty(e,"WorkspaceFoldersRequest",{enumerable:!0,get:function(){return o.WorkspaceFoldersRequest}}),Object.defineProperty(e,"DidChangeWorkspaceFoldersNotification",{enumerable:!0,get:function(){return o.DidChangeWorkspaceFoldersNotification}});const a=Xo;Object.defineProperty(e,"ConfigurationRequest",{enumerable:!0,get:function(){return a.ConfigurationRequest}});const s=Jo;Object.defineProperty(e,"DocumentColorRequest",{enumerable:!0,get:function(){return s.DocumentColorRequest}}),Object.defineProperty(e,"ColorPresentationRequest",{enumerable:!0,get:function(){return s.ColorPresentationRequest}});const u=Qo;Object.defineProperty(e,"FoldingRangeRequest",{enumerable:!0,get:function(){return u.FoldingRangeRequest}});const c=Zo;Object.defineProperty(e,"DeclarationRequest",{enumerable:!0,get:function(){return c.DeclarationRequest}});const l=ea;Object.defineProperty(e,"SelectionRangeRequest",{enumerable:!0,get:function(){return l.SelectionRangeRequest}});const p=ta;Object.defineProperty(e,"WorkDoneProgress",{enumerable:!0,get:function(){return p.WorkDoneProgress}}),Object.defineProperty(e,"WorkDoneProgressCreateRequest",{enumerable:!0,get:function(){return p.WorkDoneProgressCreateRequest}}),Object.defineProperty(e,"WorkDoneProgressCancelNotification",{enumerable:!0,get:function(){return p.WorkDoneProgressCancelNotification}});const f=na;Object.defineProperty(e,"CallHierarchyIncomingCallsRequest",{enumerable:!0,get:function(){return f.CallHierarchyIncomingCallsRequest}}),Object.defineProperty(e,"CallHierarchyOutgoingCallsRequest",{enumerable:!0,get:function(){return f.CallHierarchyOutgoingCallsRequest}}),Object.defineProperty(e,"CallHierarchyPrepareRequest",{enumerable:!0,get:function(){return f.CallHierarchyPrepareRequest}});const d=ra;Object.defineProperty(e,"SemanticTokenTypes",{enumerable:!0,get:function(){return d.SemanticTokenTypes}}),Object.defineProperty(e,"SemanticTokenModifiers",{enumerable:!0,get:function(){return d.SemanticTokenModifiers}}),Object.defineProperty(e,"SemanticTokens",{enumerable:!0,get:function(){return d.SemanticTokens}}),Object.defineProperty(e,"TokenFormat",{enumerable:!0,get:function(){return d.TokenFormat}}),Object.defineProperty(e,"SemanticTokensRequest",{enumerable:!0,get:function(){return d.SemanticTokensRequest}}),Object.defineProperty(e,"SemanticTokensDeltaRequest",{enumerable:!0,get:function(){return d.SemanticTokensDeltaRequest}}),Object.defineProperty(e,"SemanticTokensRangeRequest",{enumerable:!0,get:function(){return d.SemanticTokensRangeRequest}}),Object.defineProperty(e,"SemanticTokensRefreshRequest",{enumerable:!0,get:function(){return d.SemanticTokensRefreshRequest}}),Object.defineProperty(e,"SemanticTokensRegistrationType",{enumerable:!0,get:function(){return d.SemanticTokensRegistrationType}});const h=ia;Object.defineProperty(e,"ShowDocumentRequest",{enumerable:!0,get:function(){return h.ShowDocumentRequest}});const m=oa;Object.defineProperty(e,"LinkedEditingRangeRequest",{enumerable:!0,get:function(){return m.LinkedEditingRangeRequest}});const g=aa;Object.defineProperty(e,"FileOperationPatternKind",{enumerable:!0,get:function(){return g.FileOperationPatternKind}}),Object.defineProperty(e,"DidCreateFilesNotification",{enumerable:!0,get:function(){return g.DidCreateFilesNotification}}),Object.defineProperty(e,"WillCreateFilesRequest",{enumerable:!0,get:function(){return g.WillCreateFilesRequest}}),Object.defineProperty(e,"DidRenameFilesNotification",{enumerable:!0,get:function(){return g.DidRenameFilesNotification}}),Object.defineProperty(e,"WillRenameFilesRequest",{enumerable:!0,get:function(){return g.WillRenameFilesRequest}}),Object.defineProperty(e,"DidDeleteFilesNotification",{enumerable:!0,get:function(){return g.DidDeleteFilesNotification}}),Object.defineProperty(e,"WillDeleteFilesRequest",{enumerable:!0,get:function(){return g.WillDeleteFilesRequest}});const v=sa;var y,E,_,C,T,A,R,I,D,x,b,S,k,O,N,P,w,L,F,M,$,B,q,j,U,W,K,G,V,H,z,Y,X,J,Q,Z,ee,te;Object.defineProperty(e,"UniquenessLevel",{enumerable:!0,get:function(){return v.UniquenessLevel}}),Object.defineProperty(e,"MonikerKind",{enumerable:!0,get:function(){return v.MonikerKind}}),Object.defineProperty(e,"MonikerRequest",{enumerable:!0,get:function(){return v.MonikerRequest}}),(y=e.DocumentFilter||(e.DocumentFilter={})).is=function(e){const n=e;return t.string(n.language)||t.string(n.scheme)||t.string(n.pattern)},(E=e.DocumentSelector||(e.DocumentSelector={})).is=function(e){if(!Array.isArray(e))return!1;for(let n of e)if(!t.string(n)&&!y.is(n))return!1;return!0},(e.RegistrationRequest||(e.RegistrationRequest={})).type=new n.ProtocolRequestType("client/registerCapability"),(e.UnregistrationRequest||(e.UnregistrationRequest={})).type=new n.ProtocolRequestType("client/unregisterCapability"),(_=e.ResourceOperationKind||(e.ResourceOperationKind={})).Create="create",_.Rename="rename",_.Delete="delete",(C=e.FailureHandlingKind||(e.FailureHandlingKind={})).Abort="abort",C.Transactional="transactional",C.TextOnlyTransactional="textOnlyTransactional",C.Undo="undo",(e.StaticRegistrationOptions||(e.StaticRegistrationOptions={})).hasId=function(e){const n=e;return n&&t.string(n.id)&&n.id.length>0},(e.TextDocumentRegistrationOptions||(e.TextDocumentRegistrationOptions={})).is=function(e){const t=e;return t&&(null===t.documentSelector||E.is(t.documentSelector))},(T=e.WorkDoneProgressOptions||(e.WorkDoneProgressOptions={})).is=function(e){const n=e;return t.objectLiteral(n)&&(void 0===n.workDoneProgress||t.boolean(n.workDoneProgress))},T.hasWorkDoneProgress=function(e){const n=e;return n&&t.boolean(n.workDoneProgress)},(e.InitializeRequest||(e.InitializeRequest={})).type=new n.ProtocolRequestType("initialize"),(e.InitializeError||(e.InitializeError={})).unknownProtocolVersion=1,(e.InitializedNotification||(e.InitializedNotification={})).type=new n.ProtocolNotificationType("initialized"),(e.ShutdownRequest||(e.ShutdownRequest={})).type=new n.ProtocolRequestType0("shutdown"),(e.ExitNotification||(e.ExitNotification={})).type=new n.ProtocolNotificationType0("exit"),(e.DidChangeConfigurationNotification||(e.DidChangeConfigurationNotification={})).type=new n.ProtocolNotificationType("workspace/didChangeConfiguration"),(A=e.MessageType||(e.MessageType={})).Error=1,A.Warning=2,A.Info=3,A.Log=4,(e.ShowMessageNotification||(e.ShowMessageNotification={})).type=new n.ProtocolNotificationType("window/showMessage"),(e.ShowMessageRequest||(e.ShowMessageRequest={})).type=new n.ProtocolRequestType("window/showMessageRequest"),(e.LogMessageNotification||(e.LogMessageNotification={})).type=new n.ProtocolNotificationType("window/logMessage"),(e.TelemetryEventNotification||(e.TelemetryEventNotification={})).type=new n.ProtocolNotificationType("telemetry/event"),(R=e.TextDocumentSyncKind||(e.TextDocumentSyncKind={})).None=0,R.Full=1,R.Incremental=2,(I=e.DidOpenTextDocumentNotification||(e.DidOpenTextDocumentNotification={})).method="textDocument/didOpen",I.type=new n.ProtocolNotificationType(I.method),(D=e.TextDocumentContentChangeEvent||(e.TextDocumentContentChangeEvent={})).isIncremental=function(e){let t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)},D.isFull=function(e){let t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength},(x=e.DidChangeTextDocumentNotification||(e.DidChangeTextDocumentNotification={})).method="textDocument/didChange",x.type=new n.ProtocolNotificationType(x.method),(b=e.DidCloseTextDocumentNotification||(e.DidCloseTextDocumentNotification={})).method="textDocument/didClose",b.type=new n.ProtocolNotificationType(b.method),(S=e.DidSaveTextDocumentNotification||(e.DidSaveTextDocumentNotification={})).method="textDocument/didSave",S.type=new n.ProtocolNotificationType(S.method),(k=e.TextDocumentSaveReason||(e.TextDocumentSaveReason={})).Manual=1,k.AfterDelay=2,k.FocusOut=3,(O=e.WillSaveTextDocumentNotification||(e.WillSaveTextDocumentNotification={})).method="textDocument/willSave",O.type=new n.ProtocolNotificationType(O.method),(N=e.WillSaveTextDocumentWaitUntilRequest||(e.WillSaveTextDocumentWaitUntilRequest={})).method="textDocument/willSaveWaitUntil",N.type=new n.ProtocolRequestType(N.method),(e.DidChangeWatchedFilesNotification||(e.DidChangeWatchedFilesNotification={})).type=new n.ProtocolNotificationType("workspace/didChangeWatchedFiles"),(P=e.FileChangeType||(e.FileChangeType={})).Created=1,P.Changed=2,P.Deleted=3,(w=e.WatchKind||(e.WatchKind={})).Create=1,w.Change=2,w.Delete=4,(e.PublishDiagnosticsNotification||(e.PublishDiagnosticsNotification={})).type=new n.ProtocolNotificationType("textDocument/publishDiagnostics"),function(e){e.Invoked=1,e.TriggerCharacter=2,e.TriggerForIncompleteCompletions=3}(e.CompletionTriggerKind||(e.CompletionTriggerKind={})),(L=e.CompletionRequest||(e.CompletionRequest={})).method="textDocument/completion",L.type=new n.ProtocolRequestType(L.method),(F=e.CompletionResolveRequest||(e.CompletionResolveRequest={})).method="completionItem/resolve",F.type=new n.ProtocolRequestType(F.method),(M=e.HoverRequest||(e.HoverRequest={})).method="textDocument/hover",M.type=new n.ProtocolRequestType(M.method),function(e){e.Invoked=1,e.TriggerCharacter=2,e.ContentChange=3}(e.SignatureHelpTriggerKind||(e.SignatureHelpTriggerKind={})),($=e.SignatureHelpRequest||(e.SignatureHelpRequest={})).method="textDocument/signatureHelp",$.type=new n.ProtocolRequestType($.method),(B=e.DefinitionRequest||(e.DefinitionRequest={})).method="textDocument/definition",B.type=new n.ProtocolRequestType(B.method),(q=e.ReferencesRequest||(e.ReferencesRequest={})).method="textDocument/references",q.type=new n.ProtocolRequestType(q.method),(j=e.DocumentHighlightRequest||(e.DocumentHighlightRequest={})).method="textDocument/documentHighlight",j.type=new n.ProtocolRequestType(j.method),(U=e.DocumentSymbolRequest||(e.DocumentSymbolRequest={})).method="textDocument/documentSymbol",U.type=new n.ProtocolRequestType(U.method),(W=e.CodeActionRequest||(e.CodeActionRequest={})).method="textDocument/codeAction",W.type=new n.ProtocolRequestType(W.method),(K=e.CodeActionResolveRequest||(e.CodeActionResolveRequest={})).method="codeAction/resolve",K.type=new n.ProtocolRequestType(K.method),(G=e.WorkspaceSymbolRequest||(e.WorkspaceSymbolRequest={})).method="workspace/symbol",G.type=new n.ProtocolRequestType(G.method),(V=e.CodeLensRequest||(e.CodeLensRequest={})).method="textDocument/codeLens",V.type=new n.ProtocolRequestType(V.method),(H=e.CodeLensResolveRequest||(e.CodeLensResolveRequest={})).method="codeLens/resolve",H.type=new n.ProtocolRequestType(H.method),(z=e.CodeLensRefreshRequest||(e.CodeLensRefreshRequest={})).method="workspace/codeLens/refresh",z.type=new n.ProtocolRequestType0(z.method),(Y=e.DocumentLinkRequest||(e.DocumentLinkRequest={})).method="textDocument/documentLink",Y.type=new n.ProtocolRequestType(Y.method),(X=e.DocumentLinkResolveRequest||(e.DocumentLinkResolveRequest={})).method="documentLink/resolve",X.type=new n.ProtocolRequestType(X.method),(J=e.DocumentFormattingRequest||(e.DocumentFormattingRequest={})).method="textDocument/formatting",J.type=new n.ProtocolRequestType(J.method),(Q=e.DocumentRangeFormattingRequest||(e.DocumentRangeFormattingRequest={})).method="textDocument/rangeFormatting",Q.type=new n.ProtocolRequestType(Q.method),(Z=e.DocumentOnTypeFormattingRequest||(e.DocumentOnTypeFormattingRequest={})).method="textDocument/onTypeFormatting",Z.type=new n.ProtocolRequestType(Z.method),(e.PrepareSupportDefaultBehavior||(e.PrepareSupportDefaultBehavior={})).Identifier=1,(ee=e.RenameRequest||(e.RenameRequest={})).method="textDocument/rename",ee.type=new n.ProtocolRequestType(ee.method),(te=e.PrepareRenameRequest||(e.PrepareRenameRequest={})).method="textDocument/prepareRename",te.type=new n.ProtocolRequestType(te.method),(e.ExecuteCommandRequest||(e.ExecuteCommandRequest={})).type=new n.ProtocolRequestType("workspace/executeCommand"),(e.ApplyWorkspaceEditRequest||(e.ApplyWorkspaceEditRequest={})).type=new n.ProtocolRequestType("workspace/applyEdit")}(Wo);var ua={};Object.defineProperty(ua,"__esModule",{value:!0}),ua.createProtocolConnection=void 0;const ca=lr;ua.createProtocolConnection=function(e,t,n,r){return ca.ConnectionStrategy.is(r)&&(r={connectionStrategy:r}),ca.createMessageConnection(e,t,n,r)},function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.LSPErrorCodes=e.createProtocolConnection=void 0,n(lr,e),n(qo,e),n(jo,e),n(Wo,e);var r,i=ua;Object.defineProperty(e,"createProtocolConnection",{enumerable:!0,get:function(){return i.createProtocolConnection}}),(r=e.LSPErrorCodes||(e.LSPErrorCodes={})).lspReservedErrorRangeStart=-32899,r.ContentModified=-32801,r.RequestCancelled=-32800,r.lspReservedErrorRangeEnd=-32800}(Mi),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createProtocolConnection=void 0;const r=Fi;n(Fi,e),n(Mi,e),e.createProtocolConnection=function(e,t,n,i){return r.createMessageConnection(e,t,n,i)}}(cr),Object.defineProperty(ur,"__esModule",{value:!0}),ur.SemanticTokensBuilder=ur.SemanticTokensFeature=void 0;const la=cr;ur.SemanticTokensFeature=e=>class extends e{get semanticTokens(){return{on:e=>{const t=la.SemanticTokensRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onDelta:e=>{const t=la.SemanticTokensDeltaRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onRange:e=>{const t=la.SemanticTokensRangeRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}};ur.SemanticTokensBuilder=class{constructor(){this._prevData=void 0,this.initialize()}initialize(){this._id=Date.now(),this._prevLine=0,this._prevChar=0,this._data=[],this._dataLen=0}push(e,t,n,r,i){let o=e,a=t;this._dataLen>0&&(o-=this._prevLine,0===o&&(a-=this._prevChar)),this._data[this._dataLen++]=o,this._data[this._dataLen++]=a,this._data[this._dataLen++]=n,this._data[this._dataLen++]=r,this._data[this._dataLen++]=i,this._prevLine=e,this._prevChar=t}get id(){return this._id.toString()}previousResult(e){this.id===e&&(this._prevData=this._data),this.initialize()}build(){return this._prevData=void 0,{resultId:this.id,data:this._data}}canBuildEdits(){return void 0!==this._prevData}buildEdits(){if(void 0!==this._prevData){const e=this._prevData.length,t=this._data.length;let n=0;for(;n<t&&n<e&&this._prevData[n]===this._data[n];)n++;if(n<t&&n<e){let r=0;for(;r<t&&r<e&&this._prevData[e-1-r]===this._data[t-1-r];)r++;const i=this._data.slice(n,t-r);return{resultId:this.id,edits:[{start:n,deleteCount:e-r-n,data:i}]}}return n<t?{resultId:this.id,edits:[{start:n,deleteCount:0,data:this._data.slice(n)}]}:n<e?{resultId:this.id,edits:[{start:n,deleteCount:e-n}]}:{resultId:this.id,edits:[]}}return this.build()}};var pa={},fa={};function da(e){return"string"==typeof e||e instanceof String}function ha(e){return"function"==typeof e}function ma(e){return Array.isArray(e)}Object.defineProperty(fa,"__esModule",{value:!0}),fa.thenable=fa.typedArray=fa.stringArray=fa.array=fa.func=fa.error=fa.number=fa.string=fa.boolean=void 0,fa.boolean=function(e){return!0===e||!1===e},fa.string=da,fa.number=function(e){return"number"==typeof e||e instanceof Number},fa.error=function(e){return e instanceof Error},fa.func=ha,fa.array=ma,fa.stringArray=function(e){return ma(e)&&e.every((e=>da(e)))},fa.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},fa.thenable=function(e){return e&&ha(e.then)};var ga={};Object.defineProperty(ga,"__esModule",{value:!0}),ga.generateUuid=ga.parse=ga.isUUID=ga.v4=ga.empty=void 0;class va{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}}class ya extends va{constructor(){super([ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),"-",ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),"-","4",ya._randomHex(),ya._randomHex(),ya._randomHex(),"-",ya._oneOf(ya._timeHighBits),ya._randomHex(),ya._randomHex(),ya._randomHex(),"-",ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex(),ya._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return ya._oneOf(ya._chars)}}function Ea(){return new ya}ya._chars=["0","1","2","3","4","5","6","6","7","8","9","a","b","c","d","e","f"],ya._timeHighBits=["8","9","a","b"],ga.empty=new va("00000000-0000-0000-0000-000000000000"),ga.v4=Ea;const _a=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function Ca(e){return _a.test(e)}ga.isUUID=Ca,ga.parse=function(e){if(!Ca(e))throw new Error("invalid uuid");return new va(e)},ga.generateUuid=function(){return Ea().asHex()};var Ta={};Object.defineProperty(Ta,"__esModule",{value:!0}),Ta.attachPartialResult=Ta.ProgressFeature=Ta.attachWorkDone=void 0;const Aa=cr,Ra=ga;class Ia{constructor(e,t){this._connection=e,this._token=t,Ia.Instances.set(this._token,this)}begin(e,t,n,r){let i={kind:"begin",title:e,percentage:t,message:n,cancellable:r};this._connection.sendProgress(Aa.WorkDoneProgress.type,this._token,i)}report(e,t){let n={kind:"report"};"number"==typeof e?(n.percentage=e,void 0!==t&&(n.message=t)):n.message=e,this._connection.sendProgress(Aa.WorkDoneProgress.type,this._token,n)}done(){Ia.Instances.delete(this._token),this._connection.sendProgress(Aa.WorkDoneProgress.type,this._token,{kind:"end"})}}Ia.Instances=new Map;class Da extends Ia{constructor(e,t){super(e,t),this._source=new Aa.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose(),super.done()}cancel(){this._source.cancel()}}class xa{constructor(){}begin(){}report(){}done(){}}class ba extends xa{constructor(){super(),this._source=new Aa.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose()}cancel(){this._source.cancel()}}Ta.attachWorkDone=function(e,t){if(void 0===t||void 0===t.workDoneToken)return new xa;const n=t.workDoneToken;return delete t.workDoneToken,new Ia(e,n)};var Sa;Ta.ProgressFeature=e=>class extends e{constructor(){super(),this._progressSupported=!1}initialize(e){var t;!0===(null===(t=null==e?void 0:e.window)||void 0===t?void 0:t.workDoneProgress)&&(this._progressSupported=!0,this.connection.onNotification(Aa.WorkDoneProgressCancelNotification.type,(e=>{let t=Ia.Instances.get(e.token);(t instanceof Da||t instanceof ba)&&t.cancel()})))}attachWorkDoneProgress(e){return void 0===e?new xa:new Ia(this.connection,e)}createWorkDoneProgress(){if(this._progressSupported){const e=Ra.generateUuid();return this.connection.sendRequest(Aa.WorkDoneProgressCreateRequest.type,{token:e}).then((()=>new Da(this.connection,e)))}return Promise.resolve(new ba)}},(Sa||(Sa={})).type=new Aa.ProgressType;class ka{constructor(e,t){this._connection=e,this._token=t}report(e){this._connection.sendProgress(Sa.type,this._token,e)}}Ta.attachPartialResult=function(e,t){if(void 0===t||void 0===t.partialResultToken)return;const n=t.partialResultToken;return delete t.partialResultToken,new ka(e,n)};var Oa={};Object.defineProperty(Oa,"__esModule",{value:!0}),Oa.ConfigurationFeature=void 0;const Na=cr,Pa=fa;Oa.ConfigurationFeature=e=>class extends e{getConfiguration(e){return e?Pa.string(e)?this._getConfiguration({section:e}):this._getConfiguration(e):this._getConfiguration({})}_getConfiguration(e){let t={items:Array.isArray(e)?e:[e]};return this.connection.sendRequest(Na.ConfigurationRequest.type,t).then((t=>Array.isArray(e)?t:t[0]))}};var wa={};Object.defineProperty(wa,"__esModule",{value:!0}),wa.WorkspaceFoldersFeature=void 0;const La=cr;wa.WorkspaceFoldersFeature=e=>class extends e{initialize(e){let t=e.workspace;t&&t.workspaceFolders&&(this._onDidChangeWorkspaceFolders=new La.Emitter,this.connection.onNotification(La.DidChangeWorkspaceFoldersNotification.type,(e=>{this._onDidChangeWorkspaceFolders.fire(e.event)})))}getWorkspaceFolders(){return this.connection.sendRequest(La.WorkspaceFoldersRequest.type)}get onDidChangeWorkspaceFolders(){if(!this._onDidChangeWorkspaceFolders)throw new Error("Client doesn't support sending workspace folder change events.");return this._unregistration||(this._unregistration=this.connection.client.register(La.DidChangeWorkspaceFoldersNotification.type)),this._onDidChangeWorkspaceFolders.event}};var Fa={};Object.defineProperty(Fa,"__esModule",{value:!0}),Fa.CallHierarchyFeature=void 0;const Ma=cr;Fa.CallHierarchyFeature=e=>class extends e{get callHierarchy(){return{onPrepare:e=>{this.connection.onRequest(Ma.CallHierarchyPrepareRequest.type,((t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)))},onIncomingCalls:e=>{const t=Ma.CallHierarchyIncomingCallsRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onOutgoingCalls:e=>{const t=Ma.CallHierarchyOutgoingCallsRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}};var $a={};Object.defineProperty($a,"__esModule",{value:!0}),$a.ShowDocumentFeature=void 0;const Ba=cr;$a.ShowDocumentFeature=e=>class extends e{showDocument(e){return this.connection.sendRequest(Ba.ShowDocumentRequest.type,e)}};var qa={};Object.defineProperty(qa,"__esModule",{value:!0}),qa.FileOperationsFeature=void 0;const ja=cr;qa.FileOperationsFeature=e=>class extends e{onDidCreateFiles(e){this.connection.onNotification(ja.DidCreateFilesNotification.type,(t=>{e(t)}))}onDidRenameFiles(e){this.connection.onNotification(ja.DidRenameFilesNotification.type,(t=>{e(t)}))}onDidDeleteFiles(e){this.connection.onNotification(ja.DidDeleteFilesNotification.type,(t=>{e(t)}))}onWillCreateFiles(e){return this.connection.onRequest(ja.WillCreateFilesRequest.type,((t,n)=>e(t,n)))}onWillRenameFiles(e){return this.connection.onRequest(ja.WillRenameFilesRequest.type,((t,n)=>e(t,n)))}onWillDeleteFiles(e){return this.connection.onRequest(ja.WillDeleteFilesRequest.type,((t,n)=>e(t,n)))}};var Ua={};Object.defineProperty(Ua,"__esModule",{value:!0}),Ua.LinkedEditingRangeFeature=void 0;const Wa=cr;Ua.LinkedEditingRangeFeature=e=>class extends e{onLinkedEditingRange(e){this.connection.onRequest(Wa.LinkedEditingRangeRequest.type,((t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)))}};var Ka={};Object.defineProperty(Ka,"__esModule",{value:!0}),Ka.MonikerFeature=void 0;const Ga=cr;Ka.MonikerFeature=e=>class extends e{get moniker(){return{on:e=>{const t=Ga.MonikerRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.createConnection=e.combineFeatures=e.combineLanguagesFeatures=e.combineWorkspaceFeatures=e.combineWindowFeatures=e.combineClientFeatures=e.combineTracerFeatures=e.combineTelemetryFeatures=e.combineConsoleFeatures=e._LanguagesImpl=e.BulkUnregistration=e.BulkRegistration=e.ErrorMessageTracker=e.TextDocuments=void 0;const t=cr,n=fa,r=ga,i=Ta,o=Oa,a=wa,s=Fa,u=ur,c=$a,l=qa,p=Ua,f=Ka;function d(e){if(null!==e)return e}e.TextDocuments=class{constructor(e){this._documents=Object.create(null),this._configuration=e,this._onDidChangeContent=new t.Emitter,this._onDidOpen=new t.Emitter,this._onDidClose=new t.Emitter,this._onDidSave=new t.Emitter,this._onWillSave=new t.Emitter}get onDidChangeContent(){return this._onDidChangeContent.event}get onDidOpen(){return this._onDidOpen.event}get onWillSave(){return this._onWillSave.event}onWillSaveWaitUntil(e){this._willSaveWaitUntil=e}get onDidSave(){return this._onDidSave.event}get onDidClose(){return this._onDidClose.event}get(e){return this._documents[e]}all(){return Object.keys(this._documents).map((e=>this._documents[e]))}keys(){return Object.keys(this._documents)}listen(e){e.__textDocumentSync=t.TextDocumentSyncKind.Full,e.onDidOpenTextDocument((e=>{let t=e.textDocument,n=this._configuration.create(t.uri,t.languageId,t.version,t.text);this._documents[t.uri]=n;let r=Object.freeze({document:n});this._onDidOpen.fire(r),this._onDidChangeContent.fire(r)})),e.onDidChangeTextDocument((e=>{let t=e.textDocument,n=e.contentChanges;if(0===n.length)return;let r=this._documents[t.uri];const{version:i}=t;if(null==i)throw new Error(`Received document change event for ${t.uri} without valid version identifier`);r=this._configuration.update(r,n,i),this._documents[t.uri]=r,this._onDidChangeContent.fire(Object.freeze({document:r}))})),e.onDidCloseTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&(delete this._documents[e.textDocument.uri],this._onDidClose.fire(Object.freeze({document:t})))})),e.onWillSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onWillSave.fire(Object.freeze({document:t,reason:e.reason}))})),e.onWillSaveTextDocumentWaitUntil(((e,t)=>{let n=this._documents[e.textDocument.uri];return n&&this._willSaveWaitUntil?this._willSaveWaitUntil(Object.freeze({document:n,reason:e.reason}),t):[]})),e.onDidSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onDidSave.fire(Object.freeze({document:t}))}))}};e.ErrorMessageTracker=class{constructor(){this._messages=Object.create(null)}add(e){let t=this._messages[e];t||(t=0),t++,this._messages[e]=t}sendErrors(e){Object.keys(this._messages).forEach((t=>{e.window.showErrorMessage(t)}))}};class h{constructor(){}rawAttach(e){this._rawConnection=e}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}fillServerCapabilities(e){}initialize(e){}error(e){this.send(t.MessageType.Error,e)}warn(e){this.send(t.MessageType.Warning,e)}info(e){this.send(t.MessageType.Info,e)}log(e){this.send(t.MessageType.Log,e)}send(e,n){this._rawConnection&&this._rawConnection.sendNotification(t.LogMessageNotification.type,{type:e,message:n})}}const m=c.ShowDocumentFeature(i.ProgressFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}showErrorMessage(e,...n){let r={type:t.MessageType.Error,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}showWarningMessage(e,...n){let r={type:t.MessageType.Warning,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}showInformationMessage(e,...n){let r={type:t.MessageType.Info,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}}));(e.BulkRegistration||(e.BulkRegistration={})).create=function(){return new g};class g{constructor(){this._registrations=[],this._registered=new Set}add(e,t){const i=n.string(e)?e:e.method;if(this._registered.has(i))throw new Error(`${i} is already added to this registration`);const o=r.generateUuid();this._registrations.push({id:o,method:i,registerOptions:t||{}}),this._registered.add(i)}asRegistrationParams(){return{registrations:this._registrations}}}(e.BulkUnregistration||(e.BulkUnregistration={})).create=function(){return new v(void 0,[])};class v{constructor(e,t){this._connection=e,this._unregistrations=new Map,t.forEach((e=>{this._unregistrations.set(e.method,e)}))}get isAttached(){return!!this._connection}attach(e){this._connection=e}add(e){this._unregistrations.set(e.method,e)}dispose(){let e=[];for(let t of this._unregistrations.values())e.push(t);let n={unregisterations:e};this._connection.sendRequest(t.UnregistrationRequest.type,n).then(void 0,(e=>{this._connection.console.info("Bulk unregistration failed.")}))}disposeSingle(e){const r=n.string(e)?e:e.method,i=this._unregistrations.get(r);if(!i)return!1;let o={unregisterations:[i]};return this._connection.sendRequest(t.UnregistrationRequest.type,o).then((()=>{this._unregistrations.delete(r)}),(e=>{this._connection.console.info(`Un-registering request handler for ${i.id} failed.`)})),!0}}class y{attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}register(e,t,n){return e instanceof g?this.registerMany(e):e instanceof v?this.registerSingle1(e,t,n):this.registerSingle2(e,t)}registerSingle1(e,i,o){const a=n.string(i)?i:i.method,s=r.generateUuid();let u={registrations:[{id:s,method:a,registerOptions:o||{}}]};return e.isAttached||e.attach(this.connection),this.connection.sendRequest(t.RegistrationRequest.type,u).then((t=>(e.add({id:s,method:a}),e)),(e=>(this.connection.console.info(`Registering request handler for ${a} failed.`),Promise.reject(e))))}registerSingle2(e,i){const o=n.string(e)?e:e.method,a=r.generateUuid();let s={registrations:[{id:a,method:o,registerOptions:i||{}}]};return this.connection.sendRequest(t.RegistrationRequest.type,s).then((e=>t.Disposable.create((()=>{this.unregisterSingle(a,o)}))),(e=>(this.connection.console.info(`Registering request handler for ${o} failed.`),Promise.reject(e))))}unregisterSingle(e,n){let r={unregisterations:[{id:e,method:n}]};return this.connection.sendRequest(t.UnregistrationRequest.type,r).then(void 0,(t=>{this.connection.console.info(`Un-registering request handler for ${e} failed.`)}))}registerMany(e){let n=e.asRegistrationParams();return this.connection.sendRequest(t.RegistrationRequest.type,n).then((()=>new v(this._connection,n.registrations.map((e=>({id:e.id,method:e.method}))))),(e=>(this.connection.console.info("Bulk registration failed."),Promise.reject(e))))}}const E=l.FileOperationsFeature(a.WorkspaceFoldersFeature(o.ConfigurationFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}applyEdit(e){let n=(r=e)&&r.edit?e:{edit:e};var r;return this.connection.sendRequest(t.ApplyWorkspaceEditRequest.type,n)}})));class _{constructor(){this._trace=t.Trace.Off}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}set trace(e){this._trace=e}log(e,n){this._trace!==t.Trace.Off&&this.connection.sendNotification(t.LogTraceNotification.type,{message:e,verbose:this._trace===t.Trace.Verbose?n:void 0})}}class C{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}logEvent(e){this.connection.sendNotification(t.TelemetryEventNotification.type,e)}}class T{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}attachWorkDoneProgress(e){return i.attachWorkDone(this.connection,e)}attachPartialResultProgress(e,t){return i.attachPartialResult(this.connection,t)}}e._LanguagesImpl=T;const A=f.MonikerFeature(p.LinkedEditingRangeFeature(u.SemanticTokensFeature(s.CallHierarchyFeature(T))));function R(e,t){return function(n){return t(e(n))}}function I(e,t){return function(n){return t(e(n))}}function D(e,t){return function(n){return t(e(n))}}function x(e,t){return function(n){return t(e(n))}}function b(e,t){return function(n){return t(e(n))}}function S(e,t){return function(n){return t(e(n))}}e.combineConsoleFeatures=R,e.combineTelemetryFeatures=I,e.combineTracerFeatures=D,e.combineClientFeatures=x,e.combineWindowFeatures=b,e.combineWorkspaceFeatures=S,e.combineLanguagesFeatures=function(e,t){return function(n){return t(e(n))}},e.combineFeatures=function(e,t){function n(e,t,n){return e&&t?n(e,t):e||t}return{__brand:"features",console:n(e.console,t.console,R),tracer:n(e.tracer,t.tracer,D),telemetry:n(e.telemetry,t.telemetry,I),client:n(e.client,t.client,x),window:n(e.window,t.window,b),workspace:n(e.workspace,t.workspace,S)}},e.createConnection=function(e,r,o){const a=o&&o.console?new(o.console(h)):new h,s=e(a);a.rawAttach(s);const u=o&&o.tracer?new(o.tracer(_)):new _,c=o&&o.telemetry?new(o.telemetry(C)):new C,l=o&&o.client?new(o.client(y)):new y,p=o&&o.window?new(o.window(m)):new m,f=o&&o.workspace?new(o.workspace(E)):new E,d=o&&o.languages?new(o.languages(A)):new A,g=[a,u,c,l,p,f,d];function v(e){return e instanceof Promise?e:n.thenable(e)?new Promise(((t,n)=>{e.then((e=>t(e)),(e=>n(e)))})):Promise.resolve(e)}let T,R,I,D={listen:()=>s.listen(),sendRequest:(e,...t)=>s.sendRequest(n.string(e)?e:e.method,...t),onRequest:(e,t)=>s.onRequest(e,t),sendNotification:(e,t)=>{const r=n.string(e)?e:e.method;1===arguments.length?s.sendNotification(r):s.sendNotification(r,t)},onNotification:(e,t)=>s.onNotification(e,t),onProgress:s.onProgress,sendProgress:s.sendProgress,onInitialize:e=>R=e,onInitialized:e=>s.onNotification(t.InitializedNotification.type,e),onShutdown:e=>T=e,onExit:e=>I=e,get console(){return a},get telemetry(){return c},get tracer(){return u},get client(){return l},get window(){return p},get workspace(){return f},get languages(){return d},onDidChangeConfiguration:e=>s.onNotification(t.DidChangeConfigurationNotification.type,e),onDidChangeWatchedFiles:e=>s.onNotification(t.DidChangeWatchedFilesNotification.type,e),__textDocumentSync:void 0,onDidOpenTextDocument:e=>s.onNotification(t.DidOpenTextDocumentNotification.type,e),onDidChangeTextDocument:e=>s.onNotification(t.DidChangeTextDocumentNotification.type,e),onDidCloseTextDocument:e=>s.onNotification(t.DidCloseTextDocumentNotification.type,e),onWillSaveTextDocument:e=>s.onNotification(t.WillSaveTextDocumentNotification.type,e),onWillSaveTextDocumentWaitUntil:e=>s.onRequest(t.WillSaveTextDocumentWaitUntilRequest.type,e),onDidSaveTextDocument:e=>s.onNotification(t.DidSaveTextDocumentNotification.type,e),sendDiagnostics:e=>s.sendNotification(t.PublishDiagnosticsNotification.type,e),onHover:e=>s.onRequest(t.HoverRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onCompletion:e=>s.onRequest(t.CompletionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCompletionResolve:e=>s.onRequest(t.CompletionResolveRequest.type,e),onSignatureHelp:e=>s.onRequest(t.SignatureHelpRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDeclaration:e=>s.onRequest(t.DeclarationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDefinition:e=>s.onRequest(t.DefinitionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onTypeDefinition:e=>s.onRequest(t.TypeDefinitionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onImplementation:e=>s.onRequest(t.ImplementationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onReferences:e=>s.onRequest(t.ReferencesRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentHighlight:e=>s.onRequest(t.DocumentHighlightRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentSymbol:e=>s.onRequest(t.DocumentSymbolRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onWorkspaceSymbol:e=>s.onRequest(t.WorkspaceSymbolRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeAction:e=>s.onRequest(t.CodeActionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeActionResolve:e=>s.onRequest(t.CodeActionResolveRequest.type,((t,n)=>e(t,n))),onCodeLens:e=>s.onRequest(t.CodeLensRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeLensResolve:e=>s.onRequest(t.CodeLensResolveRequest.type,((t,n)=>e(t,n))),onDocumentFormatting:e=>s.onRequest(t.DocumentFormattingRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDocumentRangeFormatting:e=>s.onRequest(t.DocumentRangeFormattingRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDocumentOnTypeFormatting:e=>s.onRequest(t.DocumentOnTypeFormattingRequest.type,((t,n)=>e(t,n))),onRenameRequest:e=>s.onRequest(t.RenameRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onPrepareRename:e=>s.onRequest(t.PrepareRenameRequest.type,((t,n)=>e(t,n))),onDocumentLinks:e=>s.onRequest(t.DocumentLinkRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentLinkResolve:e=>s.onRequest(t.DocumentLinkResolveRequest.type,((t,n)=>e(t,n))),onDocumentColor:e=>s.onRequest(t.DocumentColorRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onColorPresentation:e=>s.onRequest(t.ColorPresentationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onFoldingRanges:e=>s.onRequest(t.FoldingRangeRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onSelectionRanges:e=>s.onRequest(t.SelectionRangeRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onExecuteCommand:e=>s.onRequest(t.ExecuteCommandRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),dispose:()=>s.dispose()};for(let t of g)t.attach(D);return s.onRequest(t.InitializeRequest.type,(e=>{r.initialize(e),n.string(e.trace)&&(u.trace=t.Trace.fromString(e.trace));for(let t of g)t.initialize(e.capabilities);if(R){return v(R(e,(new t.CancellationTokenSource).token,i.attachWorkDone(s,e),void 0)).then((e=>{if(e instanceof t.ResponseError)return e;let r=e;r||(r={capabilities:{}});let i=r.capabilities;i||(i={},r.capabilities=i),void 0===i.textDocumentSync||null===i.textDocumentSync?i.textDocumentSync=n.number(D.__textDocumentSync)?D.__textDocumentSync:t.TextDocumentSyncKind.None:n.number(i.textDocumentSync)||n.number(i.textDocumentSync.change)||(i.textDocumentSync.change=n.number(D.__textDocumentSync)?D.__textDocumentSync:t.TextDocumentSyncKind.None);for(let t of g)t.fillServerCapabilities(i);return r}))}{let e={capabilities:{textDocumentSync:t.TextDocumentSyncKind.None}};for(let t of g)t.fillServerCapabilities(e.capabilities);return e}})),s.onRequest(t.ShutdownRequest.type,(()=>(r.shutdownReceived=!0,T?T((new t.CancellationTokenSource).token):void 0))),s.onNotification(t.ExitNotification.type,(()=>{try{I&&I()}finally{r.shutdownReceived?r.exit(0):r.exit(1)}})),s.onNotification(t.SetTraceNotification.type,(e=>{u.trace=t.Trace.fromString(e.value)})),D}}(pa),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.ProposedFeatures=e.SemanticTokensBuilder=void 0;const r=ur;Object.defineProperty(e,"SemanticTokensBuilder",{enumerable:!0,get:function(){return r.SemanticTokensBuilder}}),n(cr,e),n(pa,e),(e.ProposedFeatures||(e.ProposedFeatures={})).all={__brand:"features"}}(sr);var Va=cr;!function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createConnection=void 0;const r=sr;n(Va,e),n(sr,e);let i=!1;const o={initialize:e=>{},get shutdownReceived(){return i},set shutdownReceived(e){i=e},exit:e=>{}};e.createConnection=function(e,t,n,i){let a,s,u,c;return void 0!==e&&"features"===e.__brand&&(a=e,e=t,t=n,n=i),r.ConnectionStrategy.is(e)||r.ConnectionOptions.is(e)?c=e:(s=e,u=t,c=n),r.createConnection((e=>r.createProtocolConnection(s,u,e,c)),o,a)}}(ar);var Ha,za={};Ha=(()=>{var e={470:e=>{function t(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function n(e,t){for(var n,r="",i=0,o=-1,a=0,s=0;s<=e.length;++s){if(s<e.length)n=e.charCodeAt(s);else{if(47===n)break;n=47}if(47===n){if(o===s-1||1===a);else if(o!==s-1&&2===a){if(r.length<2||2!==i||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var u=r.lastIndexOf("/");if(u!==r.length-1){-1===u?(r="",i=0):i=(r=r.slice(0,u)).length-1-r.lastIndexOf("/"),o=s,a=0;continue}}else if(2===r.length||1===r.length){r="",i=0,o=s,a=0;continue}t&&(r.length>0?r+="/..":r="..",i=2)}else r.length>0?r+="/"+e.slice(o+1,s):r=e.slice(o+1,s),i=s-o-1;o=s,a=0}else 46===n&&-1!==a?++a:a=-1}return r}var r={resolve:function(){for(var e,r="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var a;o>=0?a=arguments[o]:(void 0===e&&(e=process.cwd()),a=e),t(a),0!==a.length&&(r=a+"/"+r,i=47===a.charCodeAt(0))}return r=n(r,!i),i?r.length>0?"/"+r:"/":r.length>0?r:"."},normalize:function(e){if(t(e),0===e.length)return".";var r=47===e.charCodeAt(0),i=47===e.charCodeAt(e.length-1);return 0!==(e=n(e,!r)).length||r||(e="."),e.length>0&&i&&(e+="/"),r?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,n=0;n<arguments.length;++n){var i=arguments[n];t(i),i.length>0&&(void 0===e?e=i:e+="/"+i)}return void 0===e?".":r.normalize(e)},relative:function(e,n){if(t(e),t(n),e===n)return"";if((e=r.resolve(e))===(n=r.resolve(n)))return"";for(var i=1;i<e.length&&47===e.charCodeAt(i);++i);for(var o=e.length,a=o-i,s=1;s<n.length&&47===n.charCodeAt(s);++s);for(var u=n.length-s,c=a<u?a:u,l=-1,p=0;p<=c;++p){if(p===c){if(u>c){if(47===n.charCodeAt(s+p))return n.slice(s+p+1);if(0===p)return n.slice(s+p)}else a>c&&(47===e.charCodeAt(i+p)?l=p:0===p&&(l=0));break}var f=e.charCodeAt(i+p);if(f!==n.charCodeAt(s+p))break;47===f&&(l=p)}var d="";for(p=i+l+1;p<=o;++p)p!==o&&47!==e.charCodeAt(p)||(0===d.length?d+="..":d+="/..");return d.length>0?d+n.slice(s+l):(s+=l,47===n.charCodeAt(s)&&++s,n.slice(s))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var n=e.charCodeAt(0),r=47===n,i=-1,o=!0,a=e.length-1;a>=1;--a)if(47===(n=e.charCodeAt(a))){if(!o){i=a;break}}else o=!1;return-1===i?r?"/":".":r&&1===i?"//":e.slice(0,i)},basename:function(e,n){if(void 0!==n&&"string"!=typeof n)throw new TypeError('"ext" argument must be a string');t(e);var r,i=0,o=-1,a=!0;if(void 0!==n&&n.length>0&&n.length<=e.length){if(n.length===e.length&&n===e)return"";var s=n.length-1,u=-1;for(r=e.length-1;r>=0;--r){var c=e.charCodeAt(r);if(47===c){if(!a){i=r+1;break}}else-1===u&&(a=!1,u=r+1),s>=0&&(c===n.charCodeAt(s)?-1==--s&&(o=r):(s=-1,o=u))}return i===o?o=u:-1===o&&(o=e.length),e.slice(i,o)}for(r=e.length-1;r>=0;--r)if(47===e.charCodeAt(r)){if(!a){i=r+1;break}}else-1===o&&(a=!1,o=r+1);return-1===o?"":e.slice(i,o)},extname:function(e){t(e);for(var n=-1,r=0,i=-1,o=!0,a=0,s=e.length-1;s>=0;--s){var u=e.charCodeAt(s);if(47!==u)-1===i&&(o=!1,i=s+1),46===u?-1===n?n=s:1!==a&&(a=1):-1!==n&&(a=-1);else if(!o){r=s+1;break}}return-1===n||-1===i||0===a||1===a&&n===i-1&&n===r+1?"":e.slice(n,i)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return n=(t=e).dir||t.root,r=t.base||(t.name||"")+(t.ext||""),n?n===t.root?n+r:n+"/"+r:r;var t,n,r},parse:function(e){t(e);var n={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return n;var r,i=e.charCodeAt(0),o=47===i;o?(n.root="/",r=1):r=0;for(var a=-1,s=0,u=-1,c=!0,l=e.length-1,p=0;l>=r;--l)if(47!==(i=e.charCodeAt(l)))-1===u&&(c=!1,u=l+1),46===i?-1===a?a=l:1!==p&&(p=1):-1!==a&&(p=-1);else if(!c){s=l+1;break}return-1===a||-1===u||0===p||1===p&&a===u-1&&a===s+1?-1!==u&&(n.base=n.name=0===s&&o?e.slice(1,u):e.slice(s,u)):(0===s&&o?(n.name=e.slice(1,a),n.base=e.slice(1,u)):(n.name=e.slice(s,a),n.base=e.slice(s,u)),n.ext=e.slice(a,u)),s>0?n.dir=e.slice(0,s-1):o&&(n.dir="/"),n},sep:"/",delimiter:":",win32:null,posix:null};r.posix=r,e.exports=r},447:(e,t,n)=>{var r;if(n.r(t),n.d(t,{URI:()=>h,Utils:()=>I}),"object"==typeof process)r="win32"===process.platform;else if("object"==typeof navigator){var i=navigator.userAgent;r=i.indexOf("Windows")>=0}var o,a,s=(o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),u=/^\w[\w\d+.-]*$/,c=/^\//,l=/^\/\//,p="",f="/",d=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,h=function(){function e(e,t,n,r,i,o){var a,s;void 0===o&&(o=!1),"object"==typeof e?(this.scheme=e.scheme||p,this.authority=e.authority||p,this.path=e.path||p,this.query=e.query||p,this.fragment=e.fragment||p):(this.scheme=(s=o,(a=e)||s?a:"file"),this.authority=t||p,this.path=function(e,t){switch(e){case"https":case"http":case"file":t?t[0]!==f&&(t=f+t):t=f}return t}(this.scheme,n||p),this.query=r||p,this.fragment=i||p,function(e,t){if(!e.scheme&&t)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'+e.authority+'", path: "'+e.path+'", query: "'+e.query+'", fragment: "'+e.fragment+'"}');if(e.scheme&&!u.test(e.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(e.path)if(e.authority){if(!c.test(e.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(l.test(e.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}(this,o))}return e.isUri=function(t){return t instanceof e||!!t&&"string"==typeof t.authority&&"string"==typeof t.fragment&&"string"==typeof t.path&&"string"==typeof t.query&&"string"==typeof t.scheme&&"function"==typeof t.fsPath&&"function"==typeof t.with&&"function"==typeof t.toString},Object.defineProperty(e.prototype,"fsPath",{get:function(){return _(this,!1)},enumerable:!1,configurable:!0}),e.prototype.with=function(e){if(!e)return this;var t=e.scheme,n=e.authority,r=e.path,i=e.query,o=e.fragment;return void 0===t?t=this.scheme:null===t&&(t=p),void 0===n?n=this.authority:null===n&&(n=p),void 0===r?r=this.path:null===r&&(r=p),void 0===i?i=this.query:null===i&&(i=p),void 0===o?o=this.fragment:null===o&&(o=p),t===this.scheme&&n===this.authority&&r===this.path&&i===this.query&&o===this.fragment?this:new g(t,n,r,i,o)},e.parse=function(e,t){void 0===t&&(t=!1);var n=d.exec(e);return n?new g(n[2]||p,R(n[4]||p),R(n[5]||p),R(n[7]||p),R(n[9]||p),t):new g(p,p,p,p,p)},e.file=function(e){var t=p;if(r&&(e=e.replace(/\\/g,f)),e[0]===f&&e[1]===f){var n=e.indexOf(f,2);-1===n?(t=e.substring(2),e=f):(t=e.substring(2,n),e=e.substring(n)||f)}return new g("file",t,e,p,p)},e.from=function(e){return new g(e.scheme,e.authority,e.path,e.query,e.fragment)},e.prototype.toString=function(e){return void 0===e&&(e=!1),C(this,e)},e.prototype.toJSON=function(){return this},e.revive=function(t){if(t){if(t instanceof e)return t;var n=new g(t);return n._formatted=t.external,n._fsPath=t._sep===m?t.fsPath:null,n}return t},e}(),m=r?1:void 0,g=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._formatted=null,t._fsPath=null,t}return s(t,e),Object.defineProperty(t.prototype,"fsPath",{get:function(){return this._fsPath||(this._fsPath=_(this,!1)),this._fsPath},enumerable:!1,configurable:!0}),t.prototype.toString=function(e){return void 0===e&&(e=!1),e?C(this,!0):(this._formatted||(this._formatted=C(this,!1)),this._formatted)},t.prototype.toJSON=function(){var e={$mid:1};return this._fsPath&&(e.fsPath=this._fsPath,e._sep=m),this._formatted&&(e.external=this._formatted),this.path&&(e.path=this.path),this.scheme&&(e.scheme=this.scheme),this.authority&&(e.authority=this.authority),this.query&&(e.query=this.query),this.fragment&&(e.fragment=this.fragment),e},t}(h),v=((a={})[58]="%3A",a[47]="%2F",a[63]="%3F",a[35]="%23",a[91]="%5B",a[93]="%5D",a[64]="%40",a[33]="%21",a[36]="%24",a[38]="%26",a[39]="%27",a[40]="%28",a[41]="%29",a[42]="%2A",a[43]="%2B",a[44]="%2C",a[59]="%3B",a[61]="%3D",a[32]="%20",a);function y(e,t){for(var n=void 0,r=-1,i=0;i<e.length;i++){var o=e.charCodeAt(i);if(o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||45===o||46===o||95===o||126===o||t&&47===o)-1!==r&&(n+=encodeURIComponent(e.substring(r,i)),r=-1),void 0!==n&&(n+=e.charAt(i));else{void 0===n&&(n=e.substr(0,i));var a=v[o];void 0!==a?(-1!==r&&(n+=encodeURIComponent(e.substring(r,i)),r=-1),n+=a):-1===r&&(r=i)}}return-1!==r&&(n+=encodeURIComponent(e.substring(r))),void 0!==n?n:e}function E(e){for(var t=void 0,n=0;n<e.length;n++){var r=e.charCodeAt(n);35===r||63===r?(void 0===t&&(t=e.substr(0,n)),t+=v[r]):void 0!==t&&(t+=e[n])}return void 0!==t?t:e}function _(e,t){var n;return n=e.authority&&e.path.length>1&&"file"===e.scheme?"//"+e.authority+e.path:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?t?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,r&&(n=n.replace(/\//g,"\\")),n}function C(e,t){var n=t?E:y,r="",i=e.scheme,o=e.authority,a=e.path,s=e.query,u=e.fragment;if(i&&(r+=i,r+=":"),(o||"file"===i)&&(r+=f,r+=f),o){var c=o.indexOf("@");if(-1!==c){var l=o.substr(0,c);o=o.substr(c+1),-1===(c=l.indexOf(":"))?r+=n(l,!1):(r+=n(l.substr(0,c),!1),r+=":",r+=n(l.substr(c+1),!1)),r+="@"}-1===(c=(o=o.toLowerCase()).indexOf(":"))?r+=n(o,!1):(r+=n(o.substr(0,c),!1),r+=o.substr(c))}if(a){if(a.length>=3&&47===a.charCodeAt(0)&&58===a.charCodeAt(2))(p=a.charCodeAt(1))>=65&&p<=90&&(a="/"+String.fromCharCode(p+32)+":"+a.substr(3));else if(a.length>=2&&58===a.charCodeAt(1)){var p;(p=a.charCodeAt(0))>=65&&p<=90&&(a=String.fromCharCode(p+32)+":"+a.substr(2))}r+=n(a,!0)}return s&&(r+="?",r+=n(s,!1)),u&&(r+="#",r+=t?u:y(u,!1)),r}function T(e){try{return decodeURIComponent(e)}catch(t){return e.length>3?e.substr(0,3)+T(e.substr(3)):e}}var A=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function R(e){return e.match(A)?e.replace(A,(function(e){return T(e)})):e}var I,D,x=n(470),b=function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r},S=x.posix||x;(D=I||(I={})).joinPath=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return e.with({path:S.join.apply(S,b([e.path],t))})},D.resolvePath=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=e.path||"/";return e.with({path:S.resolve.apply(S,b([r],t))})},D.dirname=function(e){var t=S.dirname(e.path);return 1===t.length&&46===t.charCodeAt(0)?e:e.with({path:t})},D.basename=function(e){return S.basename(e.path)},D.extname=function(e){return S.extname(e.path)}}},t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}return n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(447)})();const{URI:Ya,Utils:Xa}=Ha;class Ja{constructor(e,t){this.startFn=e,this.nextFn=t}iterator(){const e={state:this.startFn(),next:()=>this.nextFn(e.state),[Symbol.iterator]:()=>e};return e}[Symbol.iterator](){return this.iterator()}isEmpty(){return!!this.iterator().next().done}count(){const e=this.iterator();let t=0,n=e.next();for(;!n.done;)t++,n=e.next();return t}toArray(){const e=[],t=this.iterator();let n;do{n=t.next(),void 0!==n.value&&e.push(n.value)}while(!n.done);return e}toSet(){return new Set(this)}toMap(e,t){const n=this.map((n=>[e?e(n):n,t?t(n):n]));return new Map(n)}toString(){return this.join()}concat(e){const t=e[Symbol.iterator]();return new Ja((()=>({first:this.startFn(),firstDone:!1})),(e=>{let n;if(!e.firstDone){do{if(n=this.nextFn(e.first),!n.done)return n}while(!n.done);e.firstDone=!0}do{if(n=t.next(),!n.done)return n}while(!n.done);return ts}))}join(e=","){const t=this.iterator();let n,r="",i=!1;do{n=t.next(),n.done||(i&&(r+=e),r+=Qa(n.value)),i=!0}while(!n.done);return r}indexOf(e,t=0){const n=this.iterator();let r=0,i=n.next();for(;!i.done;){if(r>=t&&i.value===e)return r;i=n.next(),r++}return-1}every(e){const t=this.iterator();let n=t.next();for(;!n.done;){if(!e(n.value))return!1;n=t.next()}return!0}some(e){const t=this.iterator();let n=t.next();for(;!n.done;){if(e(n.value))return!0;n=t.next()}return!1}forEach(e){const t=this.iterator();let n=0,r=t.next();for(;!r.done;)e(r.value,n),r=t.next(),n++}map(e){return new Ja(this.startFn,(t=>{const{done:n,value:r}=this.nextFn(t);return n?ts:{done:!1,value:e(r)}}))}filter(e){return new Ja(this.startFn,(t=>{let n;do{if(n=this.nextFn(t),!n.done&&e(n.value))return n}while(!n.done);return ts}))}reduce(e,t){const n=this.iterator();let r=t,i=n.next();for(;!i.done;)r=void 0===r?i.value:e(r,i.value),i=n.next();return r}reduceRight(e,t){return this.recursiveReduce(this.iterator(),e,t)}recursiveReduce(e,t,n){const r=e.next();if(r.done)return n;const i=this.recursiveReduce(e,t,n);return void 0===i?r.value:t(i,r.value)}find(e){const t=this.iterator();let n=t.next();for(;!n.done;){if(e(n.value))return n.value;n=t.next()}}findIndex(e){const t=this.iterator();let n=0,r=t.next();for(;!r.done;){if(e(r.value))return n;r=t.next(),n++}return-1}includes(e){const t=this.iterator();let n=t.next();for(;!n.done;){if(n.value===e)return!0;n=t.next()}return!1}flatMap(e){return new Ja((()=>({this:this.startFn()})),(t=>{do{if(t.iterator){const e=t.iterator.next();if(!e.done)return e;t.iterator=void 0}const{done:n,value:r}=this.nextFn(t.this);if(!n){const n=e(r);if(!Za(n))return{done:!1,value:n};t.iterator=n[Symbol.iterator]()}}while(t.iterator);return ts}))}flat(e=1){if(e<=0)return this;const t=e>1?this.flat(e-1):this;return new Ja((()=>({this:t.startFn()})),(e=>{do{if(e.iterator){const t=e.iterator.next();if(!t.done)return t;e.iterator=void 0}const{done:n,value:r}=t.nextFn(e.this);if(!n){if(!Za(r))return{done:!1,value:r};e.iterator=r[Symbol.iterator]()}}while(e.iterator);return ts}))}head(){const e=this.iterator().next();if(!e.done)return e.value}tail(e=1){return new Ja((()=>{const t=this.startFn();for(let n=0;n<e;n++){if(this.nextFn(t).done)return t}return t}),this.nextFn)}limit(e){return new Ja((()=>({size:0,state:this.startFn()})),(t=>(t.size++,t.size>e?ts:this.nextFn(t.state))))}distinct(e){const t=new Set;return this.filter((n=>{const r=e?e(n):n;return!t.has(r)&&(t.add(r),!0)}))}}function Qa(e){return"string"==typeof e?e:void 0===e?"undefined":"function"==typeof e.toString?e.toString():Object.prototype.toString.call(e)}function Za(e){return!!e&&"function"==typeof e[Symbol.iterator]}const es=new Ja((()=>{}),(()=>ts)),ts=Object.freeze({done:!0,value:void 0});function ns(...e){if(1===e.length){const t=e[0];if(t instanceof Ja)return t;if(Za(t))return new Ja((()=>t[Symbol.iterator]()),(e=>e.next()));if("number"==typeof t.length)return new Ja((()=>({index:0})),(e=>e.index<t.length?{done:!1,value:t[e.index++]}:ts))}return e.length>1?new Ja((()=>({collIndex:0,arrIndex:0})),(t=>{do{if(t.iterator){const e=t.iterator.next();if(!e.done)return e;t.iterator=void 0}if(t.array){if(t.arrIndex<t.array.length)return{done:!1,value:t.array[t.arrIndex++]};t.array=void 0,t.arrIndex=0}if(t.collIndex<e.length){const n=e[t.collIndex++];Za(n)?t.iterator=n[Symbol.iterator]():n&&"number"==typeof n.length&&(t.array=n)}}while(t.iterator||t.array||t.collIndex<e.length);return ts})):es}class rs extends Ja{constructor(e,t){super((()=>({iterators:[t(e)[Symbol.iterator]()],pruned:!1})),(e=>{for(e.pruned&&(e.iterators.pop(),e.pruned=!1);e.iterators.length>0;){const n=e.iterators[e.iterators.length-1].next();if(!n.done)return e.iterators.push(t(n.value)[Symbol.iterator]()),n;e.iterators.pop()}return ts}))}iterator(){const e={state:this.startFn(),next:()=>this.nextFn(e.state),prune:()=>{e.state.pruned=!0},[Symbol.iterator]:()=>e};return e}}var is,os;function as(e,t){const n={parseResult:t,textDocument:e,uri:Ya.parse(e.uri),state:1,references:[]};return t.value.$document=n,n}(os=is||(is={}))[os.Changed=0]="Changed",os[os.Parsed=1]="Parsed",os[os.Indexed=2]="Indexed",os[os.Processed=3]="Processed",os[os.Linked=4]="Linked",os[os.Validated=5]="Validated";class ss{constructor(e){this.languageMetaData=e.LanguageMetaData}fromUri(e){const t=za.readFileSync(e.fsPath,"utf-8");return Yn.create(e.toString(),this.languageMetaData.languageId,0,t)}}class us{constructor(e){this.parser=e.parser.LangiumParser}fromTextDocument(e){return as(e,this.parser.parse(e.getText()))}}class cs{constructor(e){this.documentMap=new Map,this.textDocuments=e.documents.TextDocuments,this.textDocumentFactory=e.documents.TextDocumentFactory,this.langiumDocumentFactory=e.documents.LangiumDocumentFactory}get all(){return ns(this.documentMap.values())}getOrCreateDocument(e){const t=e.toString();let n=this.documentMap.get(t);if(n)return n;let r=this.textDocuments.get(t);return r||(r=this.textDocumentFactory.fromUri(e)),n=this.langiumDocumentFactory.fromTextDocument(r),this.documentMap.set(t,n),n}hasDocument(e){return this.documentMap.has(e.toString())}invalidateDocument(e){const t=e.toString(),n=this.documentMap.get(t);n&&(n.state=0,this.documentMap.delete(t))}}let ls=0;const ps=Symbol("OperationCancelled");async function fs(e){if(e===lr.CancellationToken.None)return;const t=Date.now();if(t-ls>=10&&(ls=t,await new Promise((e=>{setImmediate(e)}))),e.isCancellationRequested)throw ps}class ds{constructor(e){this.connection=e.lsp.Connection,this.linker=e.references.Linker,this.scopeComputation=e.references.ScopeComputation,this.documentValidator=e.validation.DocumentValidator,this.langiumDocuments=e.documents.LangiumDocuments,this.indexManager=e.index.IndexManager}async build(e,t=ar.CancellationToken.None){return await this.buildDocuments([e],t),{document:e,diagnostics:await this.validate(e,t,!0)}}async validate(e,t=ar.CancellationToken.None,n=!1){let r=[];const i=this.documentValidator;return(this.connection||n)&&(r=await i.validateDocument(e,t),this.connection&&this.connection.sendDiagnostics({uri:e.textDocument.uri,diagnostics:r}),e.state=is.Validated),r}async update(e,t,n=ar.CancellationToken.None){for(const o of t)this.langiumDocuments.invalidateDocument(o);this.indexManager.remove(t);for(const o of e)this.langiumDocuments.invalidateDocument(o);await fs(n);const r=e.map((e=>this.langiumDocuments.getOrCreateDocument(e))),i=this.collectDocuments(r,t);await this.buildDocuments(i,n)}collectDocuments(e,t){const n=e.map((e=>e.uri)).concat(t),r=this.indexManager.getAffectedDocuments(n).toArray();r.forEach((e=>{this.linker.unlink(e),e.state=is.Indexed}));const i=new Set([...e,...r,...this.langiumDocuments.all.filter((e=>e.state<is.Validated))]);return Array.from(i)}async buildDocuments(e,t){await this.indexManager.update(e.filter((e=>e.state<is.Indexed)),t),await this.runCancelable(e,is.Processed,t,(e=>this.process(e,t))),await this.runCancelable(e,is.Linked,t,(e=>this.linker.link(e,t))),await this.runCancelable(e,is.Validated,t,(e=>this.validate(e,t)))}async runCancelable(e,t,n,r){for(const i of e.filter((e=>e.state<t)))await fs(n),await r(i)}async process(e,t){e.precomputedScopes=await this.scopeComputation.computeScope(e,t),e.state=is.Processed}}var hs,ms,gs,vs={exports:{}};hs=vs,ms="undefined"!=typeof self?self:rr,gs=function(){function e(){}e.prototype.saveState=function(){return{idx:this.idx,input:this.input,groupIdx:this.groupIdx}},e.prototype.restoreState=function(e){this.idx=e.idx,this.input=e.input,this.groupIdx=e.groupIdx},e.prototype.pattern=function(e){this.idx=0,this.input=e,this.groupIdx=0,this.consumeChar("/");var t=this.disjunction();this.consumeChar("/");for(var n={type:"Flags",loc:{begin:this.idx,end:e.length},global:!1,ignoreCase:!1,multiLine:!1,unicode:!1,sticky:!1};this.isRegExpFlag();)switch(this.popChar()){case"g":s(n,"global");break;case"i":s(n,"ignoreCase");break;case"m":s(n,"multiLine");break;case"u":s(n,"unicode");break;case"y":s(n,"sticky")}if(this.idx!==this.input.length)throw Error("Redundant input: "+this.input.substring(this.idx));return{type:"Pattern",flags:n,value:t,loc:this.loc(0)}},e.prototype.disjunction=function(){var e=[],t=this.idx;for(e.push(this.alternative());"|"===this.peekChar();)this.consumeChar("|"),e.push(this.alternative());return{type:"Disjunction",value:e,loc:this.loc(t)}},e.prototype.alternative=function(){for(var e=[],t=this.idx;this.isTerm();)e.push(this.term());return{type:"Alternative",value:e,loc:this.loc(t)}},e.prototype.term=function(){return this.isAssertion()?this.assertion():this.atom()},e.prototype.assertion=function(){var e=this.idx;switch(this.popChar()){case"^":return{type:"StartAnchor",loc:this.loc(e)};case"$":return{type:"EndAnchor",loc:this.loc(e)};case"\\":switch(this.popChar()){case"b":return{type:"WordBoundary",loc:this.loc(e)};case"B":return{type:"NonWordBoundary",loc:this.loc(e)}}throw Error("Invalid Assertion Escape");case"(":var t;switch(this.consumeChar("?"),this.popChar()){case"=":t="Lookahead";break;case"!":t="NegativeLookahead"}u(t);var n=this.disjunction();return this.consumeChar(")"),{type:t,value:n,loc:this.loc(e)}}!function(){throw Error("Internal Error - Should never get here!")}()},e.prototype.quantifier=function(e){var t,n=this.idx;switch(this.popChar()){case"*":t={atLeast:0,atMost:1/0};break;case"+":t={atLeast:1,atMost:1/0};break;case"?":t={atLeast:0,atMost:1};break;case"{":var r=this.integerIncludingZero();switch(this.popChar()){case"}":t={atLeast:r,atMost:r};break;case",":t=this.isDigit()?{atLeast:r,atMost:this.integerIncludingZero()}:{atLeast:r,atMost:1/0},this.consumeChar("}")}if(!0===e&&void 0===t)return;u(t)}if(!0!==e||void 0!==t)return u(t),"?"===this.peekChar(0)?(this.consumeChar("?"),t.greedy=!1):t.greedy=!0,t.type="Quantifier",t.loc=this.loc(n),t},e.prototype.atom=function(){var e,t=this.idx;switch(this.peekChar()){case".":e=this.dotAll();break;case"\\":e=this.atomEscape();break;case"[":e=this.characterClass();break;case"(":e=this.group()}return void 0===e&&this.isPatternCharacter()&&(e=this.patternCharacter()),u(e),e.loc=this.loc(t),this.isQuantifier()&&(e.quantifier=this.quantifier()),e},e.prototype.dotAll=function(){return this.consumeChar("."),{type:"Set",complement:!0,value:[o("\n"),o("\r"),o("\u2028"),o("\u2029")]}},e.prototype.atomEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return this.decimalEscapeAtom();case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},e.prototype.decimalEscapeAtom=function(){return{type:"GroupBackReference",value:this.positiveInteger()}},e.prototype.characterClassEscape=function(){var e,t=!1;switch(this.popChar()){case"d":e=c;break;case"D":e=c,t=!0;break;case"s":e=p;break;case"S":e=p,t=!0;break;case"w":e=l;break;case"W":e=l,t=!0}return u(e),{type:"Set",value:e,complement:t}},e.prototype.controlEscapeAtom=function(){var e;switch(this.popChar()){case"f":e=o("\f");break;case"n":e=o("\n");break;case"r":e=o("\r");break;case"t":e=o("\t");break;case"v":e=o("\v")}return u(e),{type:"Character",value:e}},e.prototype.controlLetterEscapeAtom=function(){this.consumeChar("c");var e=this.popChar();if(!1===/[a-zA-Z]/.test(e))throw Error("Invalid ");return{type:"Character",value:e.toUpperCase().charCodeAt(0)-64}},e.prototype.nulCharacterAtom=function(){return this.consumeChar("0"),{type:"Character",value:o("\0")}},e.prototype.hexEscapeSequenceAtom=function(){return this.consumeChar("x"),this.parseHexDigits(2)},e.prototype.regExpUnicodeEscapeSequenceAtom=function(){return this.consumeChar("u"),this.parseHexDigits(4)},e.prototype.identityEscapeAtom=function(){return{type:"Character",value:o(this.popChar())}},e.prototype.classPatternCharacterAtom=function(){switch(this.peekChar()){case"\n":case"\r":case"\u2028":case"\u2029":case"\\":case"]":throw Error("TBD");default:return{type:"Character",value:o(this.popChar())}}},e.prototype.characterClass=function(){var e=[],t=!1;for(this.consumeChar("["),"^"===this.peekChar(0)&&(this.consumeChar("^"),t=!0);this.isClassAtom();){var n=this.classAtom();if("Character"===n.type&&this.isRangeDash()){this.consumeChar("-");var r=this.classAtom();if("Character"===r.type){if(r.value<n.value)throw Error("Range out of order in character class");e.push({from:n.value,to:r.value})}else a(n.value,e),e.push(o("-")),a(r.value,e)}else a(n.value,e)}return this.consumeChar("]"),{type:"Set",complement:t,value:e}},e.prototype.classAtom=function(){switch(this.peekChar()){case"]":case"\n":case"\r":case"\u2028":case"\u2029":throw Error("TBD");case"\\":return this.classEscape();default:return this.classPatternCharacterAtom()}},e.prototype.classEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"b":return this.consumeChar("b"),{type:"Character",value:o("\b")};case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},e.prototype.group=function(){var e=!0;switch(this.consumeChar("("),this.peekChar(0)){case"?":this.consumeChar("?"),this.consumeChar(":"),e=!1;break;default:this.groupIdx++}var t=this.disjunction();this.consumeChar(")");var n={type:"Group",capturing:e,value:t};return e&&(n.idx=this.groupIdx),n},e.prototype.positiveInteger=function(){var e=this.popChar();if(!1===i.test(e))throw Error("Expecting a positive integer");for(;r.test(this.peekChar(0));)e+=this.popChar();return parseInt(e,10)},e.prototype.integerIncludingZero=function(){var e=this.popChar();if(!1===r.test(e))throw Error("Expecting an integer");for(;r.test(this.peekChar(0));)e+=this.popChar();return parseInt(e,10)},e.prototype.patternCharacter=function(){var e=this.popChar();switch(e){case"\n":case"\r":case"\u2028":case"\u2029":case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":throw Error("TBD");default:return{type:"Character",value:o(e)}}},e.prototype.isRegExpFlag=function(){switch(this.peekChar(0)){case"g":case"i":case"m":case"u":case"y":return!0;default:return!1}},e.prototype.isRangeDash=function(){return"-"===this.peekChar()&&this.isClassAtom(1)},e.prototype.isDigit=function(){return r.test(this.peekChar(0))},e.prototype.isClassAtom=function(e){switch(void 0===e&&(e=0),this.peekChar(e)){case"]":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},e.prototype.isTerm=function(){return this.isAtom()||this.isAssertion()},e.prototype.isAtom=function(){if(this.isPatternCharacter())return!0;switch(this.peekChar(0)){case".":case"\\":case"[":case"(":return!0;default:return!1}},e.prototype.isAssertion=function(){switch(this.peekChar(0)){case"^":case"$":return!0;case"\\":switch(this.peekChar(1)){case"b":case"B":return!0;default:return!1}case"(":return"?"===this.peekChar(1)&&("="===this.peekChar(2)||"!"===this.peekChar(2));default:return!1}},e.prototype.isQuantifier=function(){var e=this.saveState();try{return void 0!==this.quantifier(!0)}catch(PI){return!1}finally{this.restoreState(e)}},e.prototype.isPatternCharacter=function(){switch(this.peekChar()){case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":case"/":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},e.prototype.parseHexDigits=function(e){for(var t="",r=0;r<e;r++){var i=this.popChar();if(!1===n.test(i))throw Error("Expecting a HexDecimal digits");t+=i}return{type:"Character",value:parseInt(t,16)}},e.prototype.peekChar=function(e){return void 0===e&&(e=0),this.input[this.idx+e]},e.prototype.popChar=function(){var e=this.peekChar(0);return this.consumeChar(),e},e.prototype.consumeChar=function(e){if(void 0!==e&&this.input[this.idx]!==e)throw Error("Expected: '"+e+"' but found: '"+this.input[this.idx]+"' at offset: "+this.idx);if(this.idx>=this.input.length)throw Error("Unexpected end of input");this.idx++},e.prototype.loc=function(e){return{begin:e,end:this.idx}};var t,n=/[0-9a-fA-F]/,r=/[0-9]/,i=/[1-9]/;function o(e){return e.charCodeAt(0)}function a(e,t){void 0!==e.length?e.forEach((function(e){t.push(e)})):t.push(e)}function s(e,t){if(!0===e[t])throw"duplicate flag "+t;e[t]=!0}function u(e){if(void 0===e)throw Error("Internal Error - Should never get here!")}var c=[];for(t=o("0");t<=o("9");t++)c.push(t);var l=[o("_")].concat(c);for(t=o("a");t<=o("z");t++)l.push(t);for(t=o("A");t<=o("Z");t++)l.push(t);var p=[o(" "),o("\f"),o("\n"),o("\r"),o("\t"),o("\v"),o("\t"),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o("\u2028"),o("\u2029"),o(" "),o(" "),o("　"),o("\ufeff")];function f(){}return f.prototype.visitChildren=function(e){for(var t in e){var n=e[t];e.hasOwnProperty(t)&&(void 0!==n.type?this.visit(n):Array.isArray(n)&&n.forEach((function(e){this.visit(e)}),this))}},f.prototype.visit=function(e){switch(e.type){case"Pattern":this.visitPattern(e);break;case"Flags":this.visitFlags(e);break;case"Disjunction":this.visitDisjunction(e);break;case"Alternative":this.visitAlternative(e);break;case"StartAnchor":this.visitStartAnchor(e);break;case"EndAnchor":this.visitEndAnchor(e);break;case"WordBoundary":this.visitWordBoundary(e);break;case"NonWordBoundary":this.visitNonWordBoundary(e);break;case"Lookahead":this.visitLookahead(e);break;case"NegativeLookahead":this.visitNegativeLookahead(e);break;case"Character":this.visitCharacter(e);break;case"Set":this.visitSet(e);break;case"Group":this.visitGroup(e);break;case"GroupBackReference":this.visitGroupBackReference(e);break;case"Quantifier":this.visitQuantifier(e)}this.visitChildren(e)},f.prototype.visitPattern=function(e){},f.prototype.visitFlags=function(e){},f.prototype.visitDisjunction=function(e){},f.prototype.visitAlternative=function(e){},f.prototype.visitStartAnchor=function(e){},f.prototype.visitEndAnchor=function(e){},f.prototype.visitWordBoundary=function(e){},f.prototype.visitNonWordBoundary=function(e){},f.prototype.visitLookahead=function(e){},f.prototype.visitNegativeLookahead=function(e){},f.prototype.visitCharacter=function(e){},f.prototype.visitSet=function(e){},f.prototype.visitGroup=function(e){},f.prototype.visitGroupBackReference=function(e){},f.prototype.visitQuantifier=function(e){},{RegExpParser:e,BaseRegExpVisitor:f,VERSION:"0.5.0"}},hs.exports?hs.exports=gs():ms.regexpToAst=gs();const ys=new vs.exports.RegExpParser;class Es extends vs.exports.BaseRegExpVisitor{constructor(){super(...arguments),this.isStarting=!0,this.endRegexStack=[],this.multiline=!1}get endRegex(){return this.endRegexStack.join("")}reset(e){this.multiline=!1,this.regex=e,this.startRegex="",this.isStarting=!0,this.endRegexStack=[]}visitGroup(e){e.quantifier&&(this.isStarting=!1,this.endRegexStack=[])}visitCharacter(e){const t=String.fromCharCode(e.value);if(this.multiline||"\n"!==t||(this.multiline=!0),e.quantifier)this.isStarting=!1,this.endRegexStack=[];else{const e=Ts(t);this.endRegexStack.push(e),this.isStarting&&(this.startRegex+=e)}}visitSet(e){if(!this.multiline){const t=this.regex.substring(e.loc.begin,e.loc.end),n=new RegExp(t);this.multiline=!!"\n".match(n)}if(e.quantifier)this.isStarting=!1,this.endRegexStack=[];else{const t=this.regex.substring(e.loc.begin,e.loc.end);this.endRegexStack.push(t),this.isStarting&&(this.startRegex+=t)}}}const _s=new Es;function Cs(e){try{return"string"!=typeof e&&(e=e.source),e=`/${e}/`,_s.reset(e),_s.visit(ys.pattern(e)),_s.multiline}catch{return!1}}function Ts(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function As(e,t){const n=function(e){"string"==typeof e&&(e=new RegExp(e));const t=e,n=e.source;let r=0;function i(){let e,o="";function a(e){o+=n.substr(r,e),r+=e}function s(e){o+="(?:"+n.substr(r,e)+"|$)",r+=e}for(;r<n.length;)switch(n[r]){case"\\":switch(n[r+1]){case"c":s(3);break;case"x":s(4);break;case"u":t.unicode?"{"===n[r+2]?s(n.indexOf("}",r)-r+1):s(6):s(2);break;case"p":case"P":t.unicode?s(n.indexOf("}",r)-r+1):s(2);break;case"k":s(n.indexOf(">",r)-r+1);break;default:s(2)}break;case"[":e=/\[(?:\\.|.)*?\]/g,e.lastIndex=r,e=e.exec(n)||[],s(e[0].length);break;case"|":case"^":case"$":case"*":case"+":case"?":a(1);break;case"{":e=/\{\d+,?\d*\}/g,e.lastIndex=r,e=e.exec(n),e?a(e[0].length):s(1);break;case"(":if("?"===n[r+1])switch(n[r+2]){case":":o+="(?:",r+=3,o+=i()+"|$)";break;case"=":o+="(?=",r+=3,o+=i()+")";break;case"!":e=r,r+=3,i(),o+=n.substr(e,r-e);break;case"<":switch(n[r+3]){case"=":case"!":e=r,r+=4,i(),o+=n.substr(e,r-e);break;default:a(n.indexOf(">",r)-r+1),o+=i()+"|$)"}}else a(1),o+=i()+"|$)";break;case")":return++r,o;default:s(1)}return o}return new RegExp(i(),e.flags)}(e),r=t.match(n);return!!r&&r[0].length>0}var Rs={},Is={};Object.defineProperty(Is,"__esModule",{value:!0}),Is.VERSION=void 0,Is.VERSION="9.1.0";var Ds={},xs={},bs=rr&&rr.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))};function Ss(e){return e&&0===e.length}function ks(e){return null==e?[]:Object.keys(e)}function Os(e){for(var t=[],n=Object.keys(e),r=0;r<n.length;r++)t.push(e[n[r]]);return t}function Ns(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++)t.call(null,e[n],n);else{if(!js(e))throw Error("non exhaustive match");var r=ks(e);for(n=0;n<r.length;n++){var i=r[n],o=e[i];t.call(null,o,i)}}}function Ps(e,t){var n=[];if(Array.isArray(e))for(var r=0;r<e.length;r++){var i=e[r];t.call(null,i)&&n.push(i)}return n}function ws(e,t){return Ps(e,(function(e){return!t(e)}))}function Ls(e,t){return!!js(e)&&e.hasOwnProperty(t)}function Fs(e,t){return void 0!==Bs(e,(function(e){return e===t}))}function Ms(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n]);return t}function $s(e){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}function Bs(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(t.call(null,r))return r}}function qs(e,t,n){for(var r=Array.isArray(e),i=r?e:Os(e),o=r?[]:ks(e),a=n,s=0;s<i.length;s++)a=t.call(null,a,i[s],r?s:o[s]);return a}function js(e){return e instanceof Object}function Us(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0;r<t.length;r++)for(var i=t[r],o=ks(i),a=0;a<o.length;a++){var s=o[a];Ls(e,s)||(e[s]=i[s])}return e}Object.defineProperty(xs,"__esModule",{value:!0}),xs.toFastProperties=xs.timer=xs.peek=xs.isES2015MapSupported=xs.PRINT_WARNING=xs.PRINT_ERROR=xs.packArray=xs.IDENTITY=xs.NOOP=xs.merge=xs.groupBy=xs.defaults=xs.assignNoOverwrite=xs.assign=xs.zipObject=xs.sortBy=xs.indexOf=xs.some=xs.difference=xs.every=xs.isObject=xs.isRegExp=xs.isArray=xs.partial=xs.uniq=xs.compact=xs.reduce=xs.findAll=xs.find=xs.cloneObj=xs.cloneArr=xs.contains=xs.has=xs.pick=xs.reject=xs.filter=xs.dropRight=xs.drop=xs.isFunction=xs.isUndefined=xs.isString=xs.forEach=xs.last=xs.first=xs.flatten=xs.map=xs.mapValues=xs.values=xs.keys=xs.isEmpty=void 0,xs.upperFirst=void 0,xs.isEmpty=Ss,xs.keys=ks,xs.values=Os,xs.mapValues=function(e,t){for(var n=[],r=ks(e),i=0;i<r.length;i++){var o=r[i];n.push(t.call(null,e[o],o))}return n},xs.map=function(e,t){for(var n=[],r=0;r<e.length;r++)n.push(t.call(null,e[r],r));return n},xs.flatten=function e(t){for(var n=[],r=0;r<t.length;r++){var i=t[r];Array.isArray(i)?n=n.concat(e(i)):n.push(i)}return n},xs.first=function(e){return Ss(e)?void 0:e[0]},xs.last=function(e){var t=e&&e.length;return t?e[t-1]:void 0},xs.forEach=Ns,xs.isString=function(e){return"string"==typeof e},xs.isUndefined=function(e){return void 0===e},xs.isFunction=function(e){return e instanceof Function},xs.drop=function(e,t){return void 0===t&&(t=1),e.slice(t,e.length)},xs.dropRight=function(e,t){return void 0===t&&(t=1),e.slice(0,e.length-t)},xs.filter=Ps,xs.reject=ws,xs.pick=function(e,t){for(var n=Object.keys(e),r={},i=0;i<n.length;i++){var o=n[i],a=e[o];t(a)&&(r[o]=a)}return r},xs.has=Ls,xs.contains=Fs,xs.cloneArr=Ms,xs.cloneObj=$s,xs.find=Bs,xs.findAll=function(e,t){for(var n=[],r=0;r<e.length;r++){var i=e[r];t.call(null,i)&&n.push(i)}return n},xs.reduce=qs,xs.compact=function(e){return ws(e,(function(e){return null==e}))},xs.uniq=function(e,t){void 0===t&&(t=function(e){return e});var n=[];return qs(e,(function(e,r){var i=t(r);return Fs(n,i)?e:(n.push(i),e.concat(r))}),[])},xs.partial=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=[null],i=r.concat(t);return Function.bind.apply(e,i)},xs.isArray=function(e){return Array.isArray(e)},xs.isRegExp=function(e){return e instanceof RegExp},xs.isObject=js,xs.every=function(e,t){for(var n=0;n<e.length;n++)if(!t(e[n],n))return!1;return!0},xs.difference=function(e,t){return ws(e,(function(e){return Fs(t,e)}))},xs.some=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!0;return!1},xs.indexOf=function(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return n;return-1},xs.sortBy=function(e,t){var n=Ms(e);return n.sort((function(e,n){return t(e)-t(n)})),n},xs.zipObject=function(e,t){if(e.length!==t.length)throw Error("can't zipObject with different number of keys and values!");for(var n={},r=0;r<e.length;r++)n[e[r]]=t[r];return n},xs.assign=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0;r<t.length;r++)for(var i=t[r],o=ks(i),a=0;a<o.length;a++){var s=o[a];e[s]=i[s]}return e},xs.assignNoOverwrite=Us,xs.defaults=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Us.apply(void 0,bs([{}],e,!1))},xs.groupBy=function(e,t){var n={};return Ns(e,(function(e){var r=t(e),i=n[r];i?i.push(e):n[r]=[e]})),n},xs.merge=function(e,t){for(var n=$s(e),r=ks(t),i=0;i<r.length;i++){var o=r[i],a=t[o];n[o]=a}return n},xs.NOOP=function(){},xs.IDENTITY=function(e){return e},xs.packArray=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];t.push(void 0!==r?r:void 0)}return t},xs.PRINT_ERROR=function(e){console&&console.error&&console.error("Error: "+e)},xs.PRINT_WARNING=function(e){console&&console.warn&&console.warn("Warning: "+e)},xs.isES2015MapSupported=function(){return"function"==typeof Map},xs.peek=function(e){return e[e.length-1]},xs.timer=function(e){var t=(new Date).getTime(),n=e();return{time:(new Date).getTime()-t,value:n}},xs.toFastProperties=function(e){function t(){}t.prototype=e;var n=new t;function r(){return typeof n.bar}return r(),r(),e},xs.upperFirst=function(e){if(!e)return e;var t=function(e,t){var n=e.substring(t,t+1);return Ws.test(n)?n:e[t]}(e,0);return t.toUpperCase()+e.substring(t.length)};var Ws=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;var Ks={},Gs={},Vs={},Hs={},zs={},Ys={},Xs={},Js={};Object.defineProperty(Js,"__esModule",{value:!0}),Js.clearRegExpParserCache=Js.getRegExpAst=void 0;var Qs=vs.exports,Zs={},eu=new Qs.RegExpParser;Js.getRegExpAst=function(e){var t=e.toString();if(Zs.hasOwnProperty(t))return Zs[t];var n=eu.pattern(t);return Zs[t]=n,n},Js.clearRegExpParserCache=function(){Zs={}},function(e){var t,n=rr&&rr.__extends||(t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.canMatchCharCode=e.firstCharOptimizedIndices=e.getOptimizedStartCodesIndices=e.failedOptimizationPrefixMsg=void 0;var r=vs.exports,i=xs,o=Js,a=Ys,s="Complement Sets are not supported for first char optimization";function u(e,t,n){switch(e.type){case"Disjunction":for(var r=0;r<e.value.length;r++)u(e.value[r],t,n);break;case"Alternative":var o=e.value;for(r=0;r<o.length;r++){var l=o[r];switch(l.type){case"EndAnchor":case"GroupBackReference":case"Lookahead":case"NegativeLookahead":case"StartAnchor":case"WordBoundary":case"NonWordBoundary":continue}var f=l;switch(f.type){case"Character":c(f.value,t,n);break;case"Set":if(!0===f.complement)throw Error(s);(0,i.forEach)(f.value,(function(e){if("number"==typeof e)c(e,t,n);else{var r=e;if(!0===n)for(var i=r.from;i<=r.to;i++)c(i,t,n);else{for(i=r.from;i<=r.to&&i<a.minOptimizationVal;i++)c(i,t,n);if(r.to>=a.minOptimizationVal)for(var o=r.from>=a.minOptimizationVal?r.from:a.minOptimizationVal,s=r.to,u=(0,a.charCodeToOptimizedIndex)(o),l=(0,a.charCodeToOptimizedIndex)(s),p=u;p<=l;p++)t[p]=p}}}));break;case"Group":u(f.value,t,n);break;default:throw Error("Non Exhaustive Match")}var d=void 0!==f.quantifier&&0===f.quantifier.atLeast;if("Group"===f.type&&!1===p(f)||"Group"!==f.type&&!1===d)break}break;default:throw Error("non exhaustive match!")}return(0,i.values)(t)}function c(e,t,n){var r=(0,a.charCodeToOptimizedIndex)(e);t[r]=r,!0===n&&function(e,t){var n=String.fromCharCode(e),r=n.toUpperCase();if(r!==n){t[i=(0,a.charCodeToOptimizedIndex)(r.charCodeAt(0))]=i}else{var i,o=n.toLowerCase();if(o!==n)t[i=(0,a.charCodeToOptimizedIndex)(o.charCodeAt(0))]=i}}(e,t)}function l(e,t){return(0,i.find)(e.value,(function(e){if("number"==typeof e)return(0,i.contains)(t,e);var n=e;return void 0!==(0,i.find)(t,(function(e){return n.from<=e&&e<=n.to}))}))}function p(e){return!(!e.quantifier||0!==e.quantifier.atLeast)||!!e.value&&((0,i.isArray)(e.value)?(0,i.every)(e.value,p):p(e.value))}e.failedOptimizationPrefixMsg='Unable to use "first char" lexer optimizations:\n',e.getOptimizedStartCodesIndices=function(t,n){void 0===n&&(n=!1);try{var a=(0,o.getRegExpAst)(t);return u(a.value,{},a.flags.ignoreCase)}catch(PI){if(PI.message===s)n&&(0,i.PRINT_WARNING)(e.failedOptimizationPrefixMsg+"\tUnable to optimize: < "+t.toString()+" >\n\tComplement Sets cannot be automatically optimized.\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.");else{var c="";n&&(c="\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details."),(0,i.PRINT_ERROR)(e.failedOptimizationPrefixMsg+"\n\tFailed parsing: < "+t.toString()+" >\n\tUsing the regexp-to-ast library version: "+r.VERSION+"\n\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues"+c)}}return[]},e.firstCharOptimizedIndices=u;var f=function(e){function t(t){var n=e.call(this)||this;return n.targetCharCodes=t,n.found=!1,n}return n(t,e),t.prototype.visitChildren=function(t){if(!0!==this.found){switch(t.type){case"Lookahead":return void this.visitLookahead(t);case"NegativeLookahead":return void this.visitNegativeLookahead(t)}e.prototype.visitChildren.call(this,t)}},t.prototype.visitCharacter=function(e){(0,i.contains)(this.targetCharCodes,e.value)&&(this.found=!0)},t.prototype.visitSet=function(e){e.complement?void 0===l(e,this.targetCharCodes)&&(this.found=!0):void 0!==l(e,this.targetCharCodes)&&(this.found=!0)},t}(r.BaseRegExpVisitor);e.canMatchCharCode=function(e,t){if(t instanceof RegExp){var n=(0,o.getRegExpAst)(t),r=new f(e);return r.visit(n),r.found}return void 0!==(0,i.find)(t,(function(t){return(0,i.contains)(e,t.charCodeAt(0))}))}}(Xs),function(e){var t,n=rr&&rr.__extends||(t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.charCodeToOptimizedIndex=e.minOptimizationVal=e.buildLineBreakIssueMessage=e.LineTerminatorOptimizedTester=e.isShortPattern=e.isCustomPattern=e.cloneEmptyGroups=e.performWarningRuntimeChecks=e.performRuntimeChecks=e.addStickyFlag=e.addStartOfInput=e.findUnreachablePatterns=e.findModesThatDoNotExist=e.findInvalidGroupType=e.findDuplicatePatterns=e.findUnsupportedFlags=e.findStartOfInputAnchor=e.findEmptyMatchRegExps=e.findEndOfInputAnchor=e.findInvalidPatterns=e.findMissingPatterns=e.validatePatterns=e.analyzeTokenTypes=e.enableSticky=e.disableSticky=e.SUPPORT_STICKY=e.MODES=e.DEFAULT_MODE=void 0;var r=vs.exports,i=zs,o=xs,a=Xs,s=Js,u="PATTERN";function c(e){var t=(0,o.filter)(e,(function(e){return!(0,o.has)(e,u)}));return{errors:(0,o.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- missing static 'PATTERN' property",type:i.LexerDefinitionErrorType.MISSING_PATTERN,tokenTypes:[e]}})),valid:(0,o.difference)(e,t)}}function l(e){var t=(0,o.filter)(e,(function(e){var t=e.PATTERN;return!((0,o.isRegExp)(t)||(0,o.isFunction)(t)||(0,o.has)(t,"exec")||(0,o.isString)(t))}));return{errors:(0,o.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' can only be a RegExp, a Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",type:i.LexerDefinitionErrorType.INVALID_PATTERN,tokenTypes:[e]}})),valid:(0,o.difference)(e,t)}}e.DEFAULT_MODE="defaultMode",e.MODES="modes",e.SUPPORT_STICKY="boolean"==typeof new RegExp("(?:)").sticky,e.disableSticky=function(){e.SUPPORT_STICKY=!1},e.enableSticky=function(){e.SUPPORT_STICKY=!0},e.analyzeTokenTypes=function(t,n){var r,s=(n=(0,o.defaults)(n,{useSticky:e.SUPPORT_STICKY,debug:!1,safeMode:!1,positionTracking:"full",lineTerminatorCharacters:["\r","\n"],tracer:function(e,t){return t()}})).tracer;s("initCharCodeToOptimizedIndexMap",(function(){!function(){if((0,o.isEmpty)(S)){S=new Array(65536);for(var e=0;e<65536;e++)S[e]=e>255?255+~~(e/255):e}}()})),s("Reject Lexer.NA",(function(){r=(0,o.reject)(t,(function(e){return e.PATTERN===i.Lexer.NA}))}));var u,c,l,p,f,d,h,m,g,v,y,E=!1;s("Transform Patterns",(function(){E=!1,u=(0,o.map)(r,(function(e){var t=e.PATTERN;if((0,o.isRegExp)(t)){var r=t.source;return 1!==r.length||"^"===r||"$"===r||"."===r||t.ignoreCase?2!==r.length||"\\"!==r[0]||(0,o.contains)(["d","D","s","S","t","r","n","t","0","c","b","B","f","v","w","W"],r[1])?n.useSticky?T(t):C(t):r[1]:r}if((0,o.isFunction)(t))return E=!0,{exec:t};if((0,o.has)(t,"exec"))return E=!0,t;if("string"==typeof t){if(1===t.length)return t;var i=t.replace(/[\\^$.*+?()[\]{}|]/g,"\\$&"),a=new RegExp(i);return n.useSticky?T(a):C(a)}throw Error("non exhaustive match")}))})),s("misc mapping",(function(){c=(0,o.map)(r,(function(e){return e.tokenTypeIdx})),l=(0,o.map)(r,(function(e){var t=e.GROUP;if(t!==i.Lexer.SKIPPED){if((0,o.isString)(t))return t;if((0,o.isUndefined)(t))return!1;throw Error("non exhaustive match")}})),p=(0,o.map)(r,(function(e){var t=e.LONGER_ALT;if(t)return(0,o.isArray)(t)?(0,o.map)(t,(function(e){return(0,o.indexOf)(r,e)})):[(0,o.indexOf)(r,t)]})),f=(0,o.map)(r,(function(e){return e.PUSH_MODE})),d=(0,o.map)(r,(function(e){return(0,o.has)(e,"POP_MODE")}))})),s("Line Terminator Handling",(function(){var e=x(n.lineTerminatorCharacters);h=(0,o.map)(r,(function(e){return!1})),"onlyOffset"!==n.positionTracking&&(h=(0,o.map)(r,(function(t){return(0,o.has)(t,"LINE_BREAKS")?t.LINE_BREAKS:!1===I(t,e)?(0,a.canMatchCharCode)(e,t.PATTERN):void 0})))})),s("Misc Mapping #2",(function(){m=(0,o.map)(r,A),g=(0,o.map)(u,R),v=(0,o.reduce)(r,(function(e,t){var n=t.GROUP;return(0,o.isString)(n)&&n!==i.Lexer.SKIPPED&&(e[n]=[]),e}),{}),y=(0,o.map)(u,(function(e,t){return{pattern:u[t],longerAlt:p[t],canLineTerminator:h[t],isCustom:m[t],short:g[t],group:l[t],push:f[t],pop:d[t],tokenTypeIdx:c[t],tokenType:r[t]}}))}));var _=!0,D=[];return n.safeMode||s("First Char Optimization",(function(){D=(0,o.reduce)(r,(function(e,t,r){if("string"==typeof t.PATTERN){var i=k(t.PATTERN.charCodeAt(0));b(e,i,y[r])}else if((0,o.isArray)(t.START_CHARS_HINT)){var s;(0,o.forEach)(t.START_CHARS_HINT,(function(t){var n=k("string"==typeof t?t.charCodeAt(0):t);s!==n&&(s=n,b(e,n,y[r]))}))}else if((0,o.isRegExp)(t.PATTERN))if(t.PATTERN.unicode)_=!1,n.ensureOptimizations&&(0,o.PRINT_ERROR)(a.failedOptimizationPrefixMsg+"\tUnable to analyze < "+t.PATTERN.toString()+" > pattern.\n\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE");else{var u=(0,a.getOptimizedStartCodesIndices)(t.PATTERN,n.ensureOptimizations);(0,o.isEmpty)(u)&&(_=!1),(0,o.forEach)(u,(function(t){b(e,t,y[r])}))}else n.ensureOptimizations&&(0,o.PRINT_ERROR)(a.failedOptimizationPrefixMsg+"\tTokenType: <"+t.name+"> is using a custom token pattern without providing <start_chars_hint> parameter.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE"),_=!1;return e}),[])})),s("ArrayPacking",(function(){D=(0,o.packArray)(D)})),{emptyGroups:v,patternIdxToConfig:y,charCodeToPatternIdxToConfig:D,hasCustom:E,canBeOptimized:_}},e.validatePatterns=function(e,t){var n=[],r=c(e);n=n.concat(r.errors);var i=l(r.valid),a=i.valid;return n=(n=(n=(n=(n=n.concat(i.errors)).concat(function(e){var t=[],n=(0,o.filter)(e,(function(e){return(0,o.isRegExp)(e.PATTERN)}));return t=(t=(t=(t=(t=t.concat(f(n))).concat(m(n))).concat(g(n))).concat(v(n))).concat(d(n))}(a))).concat(y(a))).concat(E(a,t))).concat(_(a))},e.findMissingPatterns=c,e.findInvalidPatterns=l;var p=/[^\\][\$]/;function f(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.found=!1,t}return n(t,e),t.prototype.visitEndAnchor=function(e){this.found=!0},t}(r.BaseRegExpVisitor),a=(0,o.filter)(e,(function(e){var n=e.PATTERN;try{var r=(0,s.getRegExpAst)(n),i=new t;return i.visit(r),i.found}catch(PI){return p.test(n.source)}}));return(0,o.map)(a,(function(e){return{message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+e.name+"<- static 'PATTERN' cannot contain end of input anchor '$'\n\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:i.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,tokenTypes:[e]}}))}function d(e){var t=(0,o.filter)(e,(function(e){return e.PATTERN.test("")}));return(0,o.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' must not match an empty string",type:i.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,tokenTypes:[e]}}))}e.findEndOfInputAnchor=f,e.findEmptyMatchRegExps=d;var h=/[^\\[][\^]|^\^/;function m(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.found=!1,t}return n(t,e),t.prototype.visitStartAnchor=function(e){this.found=!0},t}(r.BaseRegExpVisitor),a=(0,o.filter)(e,(function(e){var n=e.PATTERN;try{var r=(0,s.getRegExpAst)(n),i=new t;return i.visit(r),i.found}catch(PI){return h.test(n.source)}}));return(0,o.map)(a,(function(e){return{message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+e.name+"<- static 'PATTERN' cannot contain start of input anchor '^'\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:i.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,tokenTypes:[e]}}))}function g(e){var t=(0,o.filter)(e,(function(e){var t=e.PATTERN;return t instanceof RegExp&&(t.multiline||t.global)}));return(0,o.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' may NOT contain global('g') or multiline('m')",type:i.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,tokenTypes:[e]}}))}function v(e){var t=[],n=(0,o.map)(e,(function(n){return(0,o.reduce)(e,(function(e,r){return n.PATTERN.source!==r.PATTERN.source||(0,o.contains)(t,r)||r.PATTERN===i.Lexer.NA||(t.push(r),e.push(r)),e}),[])}));n=(0,o.compact)(n);var r=(0,o.filter)(n,(function(e){return e.length>1}));return(0,o.map)(r,(function(e){var t=(0,o.map)(e,(function(e){return e.name}));return{message:"The same RegExp pattern ->"+(0,o.first)(e).PATTERN+"<-has been used in all of the following Token Types: "+t.join(", ")+" <-",type:i.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,tokenTypes:e}}))}function y(e){var t=(0,o.filter)(e,(function(e){if(!(0,o.has)(e,"GROUP"))return!1;var t=e.GROUP;return t!==i.Lexer.SKIPPED&&t!==i.Lexer.NA&&!(0,o.isString)(t)}));return(0,o.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",type:i.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,tokenTypes:[e]}}))}function E(e,t){var n=(0,o.filter)(e,(function(e){return void 0!==e.PUSH_MODE&&!(0,o.contains)(t,e.PUSH_MODE)}));return(0,o.map)(n,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->"+e.PUSH_MODE+"<-which does not exist",type:i.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,tokenTypes:[e]}}))}function _(e){var t=[],n=(0,o.reduce)(e,(function(e,t,n){var r,a,s=t.PATTERN;return s===i.Lexer.NA||((0,o.isString)(s)?e.push({str:s,idx:n,tokenType:t}):(0,o.isRegExp)(s)&&(r=s,a=[".","\\","[","]","|","^","$","(",")","?","*","+","{"],void 0===(0,o.find)(a,(function(e){return-1!==r.source.indexOf(e)})))&&e.push({str:s.source,idx:n,tokenType:t})),e}),[]);return(0,o.forEach)(e,(function(e,r){(0,o.forEach)(n,(function(n){var a=n.str,s=n.idx,u=n.tokenType;if(r<s&&function(e,t){if((0,o.isRegExp)(t)){var n=t.exec(e);return null!==n&&0===n.index}if((0,o.isFunction)(t))return t(e,0,[],{});if((0,o.has)(t,"exec"))return t.exec(e,0,[],{});if("string"==typeof t)return t===e;throw Error("non exhaustive match")}(a,e.PATTERN)){var c="Token: ->"+u.name+"<- can never be matched.\nBecause it appears AFTER the Token Type ->"+e.name+"<-in the lexer's definition.\nSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE";t.push({message:c,type:i.LexerDefinitionErrorType.UNREACHABLE_PATTERN,tokenTypes:[e,u]})}}))})),t}function C(e){var t=e.ignoreCase?"i":"";return new RegExp("^(?:"+e.source+")",t)}function T(e){var t=e.ignoreCase?"iy":"y";return new RegExp(""+e.source,t)}function A(e){var t=e.PATTERN;if((0,o.isRegExp)(t))return!1;if((0,o.isFunction)(t))return!0;if((0,o.has)(t,"exec"))return!0;if((0,o.isString)(t))return!1;throw Error("non exhaustive match")}function R(e){return!(!(0,o.isString)(e)||1!==e.length)&&e.charCodeAt(0)}function I(e,t){if((0,o.has)(e,"LINE_BREAKS"))return!1;if((0,o.isRegExp)(e.PATTERN)){try{(0,a.canMatchCharCode)(t,e.PATTERN)}catch(PI){return{issue:i.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,errMsg:PI.message}}return!1}if((0,o.isString)(e.PATTERN))return!1;if(A(e))return{issue:i.LexerDefinitionErrorType.CUSTOM_LINE_BREAK};throw Error("non exhaustive match")}function D(e,t){if(t.issue===i.LexerDefinitionErrorType.IDENTIFY_TERMINATOR)return"Warning: unable to identify line terminator usage in pattern.\n\tThe problem is in the <"+e.name+"> Token Type\n\t Root cause: "+t.errMsg+".\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR";if(t.issue===i.LexerDefinitionErrorType.CUSTOM_LINE_BREAK)return"Warning: A Custom Token Pattern should specify the <line_breaks> option.\n\tThe problem is in the <"+e.name+"> Token Type\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK";throw Error("non exhaustive match")}function x(e){return(0,o.map)(e,(function(e){return(0,o.isString)(e)&&e.length>0?e.charCodeAt(0):e}))}function b(e,t,n){void 0===e[t]?e[t]=[n]:e[t].push(n)}e.findStartOfInputAnchor=m,e.findUnsupportedFlags=g,e.findDuplicatePatterns=v,e.findInvalidGroupType=y,e.findModesThatDoNotExist=E,e.findUnreachablePatterns=_,e.addStartOfInput=C,e.addStickyFlag=T,e.performRuntimeChecks=function(t,n,r){var a=[];return(0,o.has)(t,e.DEFAULT_MODE)||a.push({message:"A MultiMode Lexer cannot be initialized without a <"+e.DEFAULT_MODE+"> property in its definition\n",type:i.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE}),(0,o.has)(t,e.MODES)||a.push({message:"A MultiMode Lexer cannot be initialized without a <"+e.MODES+"> property in its definition\n",type:i.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY}),(0,o.has)(t,e.MODES)&&(0,o.has)(t,e.DEFAULT_MODE)&&!(0,o.has)(t.modes,t.defaultMode)&&a.push({message:"A MultiMode Lexer cannot be initialized with a "+e.DEFAULT_MODE+": <"+t.defaultMode+">which does not exist\n",type:i.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST}),(0,o.has)(t,e.MODES)&&(0,o.forEach)(t.modes,(function(e,t){(0,o.forEach)(e,(function(e,n){(0,o.isUndefined)(e)&&a.push({message:"A Lexer cannot be initialized using an undefined Token Type. Mode:<"+t+"> at index: <"+n+">\n",type:i.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED})}))})),a},e.performWarningRuntimeChecks=function(e,t,n){var r=[],s=!1,u=(0,o.compact)((0,o.flatten)((0,o.mapValues)(e.modes,(function(e){return e})))),c=(0,o.reject)(u,(function(e){return e.PATTERN===i.Lexer.NA})),l=x(n);return t&&(0,o.forEach)(c,(function(e){var t=I(e,l);if(!1!==t){var n={message:D(e,t),type:t.issue,tokenType:e};r.push(n)}else(0,o.has)(e,"LINE_BREAKS")?!0===e.LINE_BREAKS&&(s=!0):(0,a.canMatchCharCode)(l,e.PATTERN)&&(s=!0)})),t&&!s&&r.push({message:"Warning: No LINE_BREAKS Found.\n\tThis Lexer has been defined to track line and column information,\n\tBut none of the Token Types can be identified as matching a line terminator.\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \n\tfor details.",type:i.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS}),r},e.cloneEmptyGroups=function(e){var t={},n=(0,o.keys)(e);return(0,o.forEach)(n,(function(n){var r=e[n];if(!(0,o.isArray)(r))throw Error("non exhaustive match");t[n]=[]})),t},e.isCustomPattern=A,e.isShortPattern=R,e.LineTerminatorOptimizedTester={test:function(e){for(var t=e.length,n=this.lastIndex;n<t;n++){var r=e.charCodeAt(n);if(10===r)return this.lastIndex=n+1,!0;if(13===r)return 10===e.charCodeAt(n+1)?this.lastIndex=n+2:this.lastIndex=n+1,!0}return!1},lastIndex:0},e.buildLineBreakIssueMessage=D,e.minOptimizationVal=256;var S=[];function k(t){return t<e.minOptimizationVal?t:S[t]}e.charCodeToOptimizedIndex=k}(Ys);var tu={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isTokenType=e.hasExtendingTokensTypesMapProperty=e.hasExtendingTokensTypesProperty=e.hasCategoriesProperty=e.hasShortKeyProperty=e.singleAssignCategoriesToksMap=e.assignCategoriesMapProp=e.assignCategoriesTokensProp=e.assignTokenDefaultProps=e.expandCategories=e.augmentTokenTypes=e.tokenIdxToClass=e.tokenShortNameIdx=e.tokenStructuredMatcherNoCategories=e.tokenStructuredMatcher=void 0;var t=xs;function n(e){for(var n=(0,t.cloneArr)(e),r=e,i=!0;i;){r=(0,t.compact)((0,t.flatten)((0,t.map)(r,(function(e){return e.CATEGORIES}))));var o=(0,t.difference)(r,n);n=n.concat(o),(0,t.isEmpty)(o)?i=!1:r=o}return n}function r(n){(0,t.forEach)(n,(function(n){s(n)||(e.tokenIdxToClass[e.tokenShortNameIdx]=n,n.tokenTypeIdx=e.tokenShortNameIdx++),u(n)&&!(0,t.isArray)(n.CATEGORIES)&&(n.CATEGORIES=[n.CATEGORIES]),u(n)||(n.CATEGORIES=[]),c(n)||(n.categoryMatches=[]),l(n)||(n.categoryMatchesMap={})}))}function i(n){(0,t.forEach)(n,(function(n){n.categoryMatches=[],(0,t.forEach)(n.categoryMatchesMap,(function(t,r){n.categoryMatches.push(e.tokenIdxToClass[r].tokenTypeIdx)}))}))}function o(e){(0,t.forEach)(e,(function(e){a([],e)}))}function a(e,n){(0,t.forEach)(e,(function(e){n.categoryMatchesMap[e.tokenTypeIdx]=!0})),(0,t.forEach)(n.CATEGORIES,(function(r){var i=e.concat(n);(0,t.contains)(i,r)||a(i,r)}))}function s(e){return(0,t.has)(e,"tokenTypeIdx")}function u(e){return(0,t.has)(e,"CATEGORIES")}function c(e){return(0,t.has)(e,"categoryMatches")}function l(e){return(0,t.has)(e,"categoryMatchesMap")}e.tokenStructuredMatcher=function(e,t){var n=e.tokenTypeIdx;return n===t.tokenTypeIdx||!0===t.isParent&&!0===t.categoryMatchesMap[n]},e.tokenStructuredMatcherNoCategories=function(e,t){return e.tokenTypeIdx===t.tokenTypeIdx},e.tokenShortNameIdx=1,e.tokenIdxToClass={},e.augmentTokenTypes=function(e){var a=n(e);r(a),o(a),i(a),(0,t.forEach)(a,(function(e){e.isParent=e.categoryMatches.length>0}))},e.expandCategories=n,e.assignTokenDefaultProps=r,e.assignCategoriesTokensProp=i,e.assignCategoriesMapProp=o,e.singleAssignCategoriesToksMap=a,e.hasShortKeyProperty=s,e.hasCategoriesProperty=u,e.hasExtendingTokensTypesProperty=c,e.hasExtendingTokensTypesMapProperty=l,e.isTokenType=function(e){return(0,t.has)(e,"tokenTypeIdx")}}(tu);var nu={};Object.defineProperty(nu,"__esModule",{value:!0}),nu.defaultLexerErrorProvider=void 0,nu.defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:function(e){return"Unable to pop Lexer Mode after encountering Token ->"+e.image+"<- The Mode Stack is empty"},buildUnexpectedCharactersMessage:function(e,t,n,r,i){return"unexpected character: ->"+e.charAt(t)+"<- at offset: "+t+", skipped "+n+" characters."}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Lexer=e.LexerDefinitionErrorType=void 0;var t,n=Ys,r=xs,i=tu,o=nu,a=Js;(t=e.LexerDefinitionErrorType||(e.LexerDefinitionErrorType={}))[t.MISSING_PATTERN=0]="MISSING_PATTERN",t[t.INVALID_PATTERN=1]="INVALID_PATTERN",t[t.EOI_ANCHOR_FOUND=2]="EOI_ANCHOR_FOUND",t[t.UNSUPPORTED_FLAGS_FOUND=3]="UNSUPPORTED_FLAGS_FOUND",t[t.DUPLICATE_PATTERNS_FOUND=4]="DUPLICATE_PATTERNS_FOUND",t[t.INVALID_GROUP_TYPE_FOUND=5]="INVALID_GROUP_TYPE_FOUND",t[t.PUSH_MODE_DOES_NOT_EXIST=6]="PUSH_MODE_DOES_NOT_EXIST",t[t.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE=7]="MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE",t[t.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY=8]="MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY",t[t.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST=9]="MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST",t[t.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED=10]="LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED",t[t.SOI_ANCHOR_FOUND=11]="SOI_ANCHOR_FOUND",t[t.EMPTY_MATCH_PATTERN=12]="EMPTY_MATCH_PATTERN",t[t.NO_LINE_BREAKS_FLAGS=13]="NO_LINE_BREAKS_FLAGS",t[t.UNREACHABLE_PATTERN=14]="UNREACHABLE_PATTERN",t[t.IDENTIFY_TERMINATOR=15]="IDENTIFY_TERMINATOR",t[t.CUSTOM_LINE_BREAK=16]="CUSTOM_LINE_BREAK";var s={deferDefinitionErrorsHandling:!1,positionTracking:"full",lineTerminatorsPattern:/\n|\r\n?/g,lineTerminatorCharacters:["\n","\r"],ensureOptimizations:!1,safeMode:!1,errorMessageProvider:o.defaultLexerErrorProvider,traceInitPerf:!1,skipValidations:!1};Object.freeze(s);var u=function(){function e(e,t){var o=this;if(void 0===t&&(t=s),this.lexerDefinition=e,this.lexerDefinitionErrors=[],this.lexerDefinitionWarning=[],this.patternIdxToConfig={},this.charCodeToPatternIdxToConfig={},this.modes=[],this.emptyGroups={},this.config=void 0,this.trackStartLines=!0,this.trackEndLines=!0,this.hasCustom=!1,this.canModeBeOptimized={},"boolean"==typeof t)throw Error("The second argument to the Lexer constructor is now an ILexerConfig Object.\na boolean 2nd argument is no longer supported");this.config=(0,r.merge)(s,t);var u=this.config.traceInitPerf;!0===u?(this.traceInitMaxIdent=1/0,this.traceInitPerf=!0):"number"==typeof u&&(this.traceInitMaxIdent=u,this.traceInitPerf=!0),this.traceInitIndent=-1,this.TRACE_INIT("Lexer Constructor",(function(){var u,c=!0;o.TRACE_INIT("Lexer Config handling",(function(){if(o.config.lineTerminatorsPattern===s.lineTerminatorsPattern)o.config.lineTerminatorsPattern=n.LineTerminatorOptimizedTester;else if(o.config.lineTerminatorCharacters===s.lineTerminatorCharacters)throw Error("Error: Missing <lineTerminatorCharacters> property on the Lexer config.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS");if(t.safeMode&&t.ensureOptimizations)throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');o.trackStartLines=/full|onlyStart/i.test(o.config.positionTracking),o.trackEndLines=/full/i.test(o.config.positionTracking),(0,r.isArray)(e)?((u={modes:{}}).modes[n.DEFAULT_MODE]=(0,r.cloneArr)(e),u[n.DEFAULT_MODE]=n.DEFAULT_MODE):(c=!1,u=(0,r.cloneObj)(e))})),!1===o.config.skipValidations&&(o.TRACE_INIT("performRuntimeChecks",(function(){o.lexerDefinitionErrors=o.lexerDefinitionErrors.concat((0,n.performRuntimeChecks)(u,o.trackStartLines,o.config.lineTerminatorCharacters))})),o.TRACE_INIT("performWarningRuntimeChecks",(function(){o.lexerDefinitionWarning=o.lexerDefinitionWarning.concat((0,n.performWarningRuntimeChecks)(u,o.trackStartLines,o.config.lineTerminatorCharacters))}))),u.modes=u.modes?u.modes:{},(0,r.forEach)(u.modes,(function(e,t){u.modes[t]=(0,r.reject)(e,(function(e){return(0,r.isUndefined)(e)}))}));var l=(0,r.keys)(u.modes);if((0,r.forEach)(u.modes,(function(e,a){o.TRACE_INIT("Mode: <"+a+"> processing",(function(){var s;(o.modes.push(a),!1===o.config.skipValidations&&o.TRACE_INIT("validatePatterns",(function(){o.lexerDefinitionErrors=o.lexerDefinitionErrors.concat((0,n.validatePatterns)(e,l))})),(0,r.isEmpty)(o.lexerDefinitionErrors))&&((0,i.augmentTokenTypes)(e),o.TRACE_INIT("analyzeTokenTypes",(function(){s=(0,n.analyzeTokenTypes)(e,{lineTerminatorCharacters:o.config.lineTerminatorCharacters,positionTracking:t.positionTracking,ensureOptimizations:t.ensureOptimizations,safeMode:t.safeMode,tracer:o.TRACE_INIT.bind(o)})})),o.patternIdxToConfig[a]=s.patternIdxToConfig,o.charCodeToPatternIdxToConfig[a]=s.charCodeToPatternIdxToConfig,o.emptyGroups=(0,r.merge)(o.emptyGroups,s.emptyGroups),o.hasCustom=s.hasCustom||o.hasCustom,o.canModeBeOptimized[a]=s.canBeOptimized)}))})),o.defaultMode=u.defaultMode,!(0,r.isEmpty)(o.lexerDefinitionErrors)&&!o.config.deferDefinitionErrorsHandling){var p=(0,r.map)(o.lexerDefinitionErrors,(function(e){return e.message})).join("-----------------------\n");throw new Error("Errors detected in definition of Lexer:\n"+p)}(0,r.forEach)(o.lexerDefinitionWarning,(function(e){(0,r.PRINT_WARNING)(e.message)})),o.TRACE_INIT("Choosing sub-methods implementations",(function(){if(n.SUPPORT_STICKY?(o.chopInput=r.IDENTITY,o.match=o.matchWithTest):(o.updateLastIndex=r.NOOP,o.match=o.matchWithExec),c&&(o.handleModes=r.NOOP),!1===o.trackStartLines&&(o.computeNewColumn=r.IDENTITY),!1===o.trackEndLines&&(o.updateTokenEndLineColumnLocation=r.NOOP),/full/i.test(o.config.positionTracking))o.createTokenInstance=o.createFullToken;else if(/onlyStart/i.test(o.config.positionTracking))o.createTokenInstance=o.createStartOnlyToken;else{if(!/onlyOffset/i.test(o.config.positionTracking))throw Error('Invalid <positionTracking> config option: "'+o.config.positionTracking+'"');o.createTokenInstance=o.createOffsetOnlyToken}o.hasCustom?(o.addToken=o.addTokenUsingPush,o.handlePayload=o.handlePayloadWithCustom):(o.addToken=o.addTokenUsingMemberAccess,o.handlePayload=o.handlePayloadNoCustom)})),o.TRACE_INIT("Failed Optimization Warnings",(function(){var e=(0,r.reduce)(o.canModeBeOptimized,(function(e,t,n){return!1===t&&e.push(n),e}),[]);if(t.ensureOptimizations&&!(0,r.isEmpty)(e))throw Error("Lexer Modes: < "+e.join(", ")+' > cannot be optimized.\n\t Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\n\t Or inspect the console log for details on how to resolve these issues.')})),o.TRACE_INIT("clearRegExpParserCache",(function(){(0,a.clearRegExpParserCache)()})),o.TRACE_INIT("toFastProperties",(function(){(0,r.toFastProperties)(o)}))}))}return e.prototype.tokenize=function(e,t){if(void 0===t&&(t=this.defaultMode),!(0,r.isEmpty)(this.lexerDefinitionErrors)){var n=(0,r.map)(this.lexerDefinitionErrors,(function(e){return e.message})).join("-----------------------\n");throw new Error("Unable to Tokenize because Errors detected in definition of Lexer:\n"+n)}return this.tokenizeInternal(e,t)},e.prototype.tokenizeInternal=function(e,t){var i,o,a,s,u,c,l,p,f,d,h,m,g,v,y,E=this,_=e,C=_.length,T=0,A=0,R=this.hasCustom?0:Math.floor(e.length/10),I=new Array(R),D=[],x=this.trackStartLines?1:void 0,b=this.trackStartLines?1:void 0,S=(0,n.cloneEmptyGroups)(this.emptyGroups),k=this.trackStartLines,O=this.config.lineTerminatorsPattern,N=0,P=[],w=[],L=[],F=[];Object.freeze(F);var M=void 0;function $(){return P}function B(e){var t=(0,n.charCodeToOptimizedIndex)(e),r=w[t];return void 0===r?F:r}var q,j=function(e){if(1===L.length&&void 0===e.tokenType.PUSH_MODE){var t=E.config.errorMessageProvider.buildUnableToPopLexerModeMessage(e);D.push({offset:e.startOffset,line:void 0!==e.startLine?e.startLine:void 0,column:void 0!==e.startColumn?e.startColumn:void 0,length:e.image.length,message:t})}else{L.pop();var n=(0,r.last)(L);P=E.patternIdxToConfig[n],w=E.charCodeToPatternIdxToConfig[n],N=P.length;var i=E.canModeBeOptimized[n]&&!1===E.config.safeMode;M=w&&i?B:$}};function U(e){L.push(e),w=this.charCodeToPatternIdxToConfig[e],P=this.patternIdxToConfig[e],N=P.length,N=P.length;var t=this.canModeBeOptimized[e]&&!1===this.config.safeMode;M=w&&t?B:$}for(U.call(this,t);T<C;){c=null;var W=_.charCodeAt(T),K=M(W),G=K.length;for(i=0;i<G;i++){var V=(q=K[i]).pattern;if(l=null,!1!==(re=q.short)?W===re&&(c=V):!0===q.isCustom?null!==(y=V.exec(_,T,I,S))?(c=y[0],void 0!==y.payload&&(l=y.payload)):c=null:(this.updateLastIndex(V,T),c=this.match(V,e,T)),null!==c){if(void 0!==(u=q.longerAlt)){var H=u.length;for(a=0;a<H;a++){var z=P[u[a]],Y=z.pattern;if(p=null,!0===z.isCustom?null!==(y=Y.exec(_,T,I,S))?(s=y[0],void 0!==y.payload&&(p=y.payload)):s=null:(this.updateLastIndex(Y,T),s=this.match(Y,e,T)),s&&s.length>c.length){c=s,l=p,q=z;break}}}break}}if(null!==c){if(f=c.length,void 0!==(d=q.group)&&(h=q.tokenTypeIdx,m=this.createTokenInstance(c,T,h,q.tokenType,x,b,f),this.handlePayload(m,l),!1===d?A=this.addToken(I,A,m):S[d].push(m)),e=this.chopInput(e,f),T+=f,b=this.computeNewColumn(b,f),!0===k&&!0===q.canLineTerminator){var X=0,J=void 0,Q=void 0;O.lastIndex=0;do{!0===(J=O.test(c))&&(Q=O.lastIndex-1,X++)}while(!0===J);0!==X&&(x+=X,b=f-Q,this.updateTokenEndLineColumnLocation(m,d,Q,X,x,b,f))}this.handleModes(q,j,U,m)}else{for(var Z=T,ee=x,te=b,ne=!1;!ne&&T<C;)for(_.charCodeAt(T),e=this.chopInput(e,1),T++,o=0;o<N;o++){var re,ie=P[o];V=ie.pattern;if(!1!==(re=ie.short)?_.charCodeAt(T)===re&&(ne=!0):!0===ie.isCustom?ne=null!==V.exec(_,T,I,S):(this.updateLastIndex(V,T),ne=null!==V.exec(e)),!0===ne)break}g=T-Z,v=this.config.errorMessageProvider.buildUnexpectedCharactersMessage(_,Z,g,ee,te),D.push({offset:Z,line:ee,column:te,length:g,message:v})}}return this.hasCustom||(I.length=A),{tokens:I,groups:S,errors:D}},e.prototype.handleModes=function(e,t,n,r){if(!0===e.pop){var i=e.push;t(r),void 0!==i&&n.call(this,i)}else void 0!==e.push&&n.call(this,e.push)},e.prototype.chopInput=function(e,t){return e.substring(t)},e.prototype.updateLastIndex=function(e,t){e.lastIndex=t},e.prototype.updateTokenEndLineColumnLocation=function(e,t,n,r,i,o,a){var s,u;void 0!==t&&(u=(s=n===a-1)?-1:0,1===r&&!0===s||(e.endLine=i+u,e.endColumn=o-1-u))},e.prototype.computeNewColumn=function(e,t){return e+t},e.prototype.createTokenInstance=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return null},e.prototype.createOffsetOnlyToken=function(e,t,n,r){return{image:e,startOffset:t,tokenTypeIdx:n,tokenType:r}},e.prototype.createStartOnlyToken=function(e,t,n,r,i,o){return{image:e,startOffset:t,startLine:i,startColumn:o,tokenTypeIdx:n,tokenType:r}},e.prototype.createFullToken=function(e,t,n,r,i,o,a){return{image:e,startOffset:t,endOffset:t+a-1,startLine:i,endLine:i,startColumn:o,endColumn:o+a-1,tokenTypeIdx:n,tokenType:r}},e.prototype.addToken=function(e,t,n){return 666},e.prototype.addTokenUsingPush=function(e,t,n){return e.push(n),t},e.prototype.addTokenUsingMemberAccess=function(e,t,n){return e[t]=n,++t},e.prototype.handlePayload=function(e,t){},e.prototype.handlePayloadNoCustom=function(e,t){},e.prototype.handlePayloadWithCustom=function(e,t){null!==t&&(e.payload=t)},e.prototype.match=function(e,t,n){return null},e.prototype.matchWithTest=function(e,t,n){return!0===e.test(t)?t.substring(n,e.lastIndex):null},e.prototype.matchWithExec=function(e,t){var n=e.exec(t);return null!==n?n[0]:n},e.prototype.TRACE_INIT=function(e,t){if(!0===this.traceInitPerf){this.traceInitIndent++;var n=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(n+"--\x3e <"+e+">");var i=(0,r.timer)(t),o=i.time,a=i.value,s=o>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&s(n+"<-- <"+e+"> time: "+o+"ms"),this.traceInitIndent--,a}return t()},e.SKIPPED="This marks a skipped Token pattern, this means each token identified by it willbe consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.",e.NA=/NOT_APPLICABLE/,e}();e.Lexer=u}(zs),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.tokenMatcher=e.createTokenInstance=e.EOF=e.createToken=e.hasTokenLabel=e.tokenName=e.tokenLabel=void 0;var t=xs,n=zs,r=tu;function i(e){return(0,t.isString)(e.LABEL)&&""!==e.LABEL}e.tokenLabel=function(e){return i(e)?e.LABEL:e.name},e.tokenName=function(e){return e.name},e.hasTokenLabel=i;var o="parent",a="categories",s="label",u="group",c="push_mode",l="pop_mode",p="longer_alt",f="line_breaks",d="start_chars_hint";function h(e){return function(e){var n=e.pattern,i={};i.name=e.name,(0,t.isUndefined)(n)||(i.PATTERN=n);if((0,t.has)(e,o))throw"The parent property is no longer supported.\nSee: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.";(0,t.has)(e,a)&&(i.CATEGORIES=e.categories);(0,r.augmentTokenTypes)([i]),(0,t.has)(e,s)&&(i.LABEL=e.label);(0,t.has)(e,u)&&(i.GROUP=e.group);(0,t.has)(e,l)&&(i.POP_MODE=e.pop_mode);(0,t.has)(e,c)&&(i.PUSH_MODE=e.push_mode);(0,t.has)(e,p)&&(i.LONGER_ALT=e.longer_alt);(0,t.has)(e,f)&&(i.LINE_BREAKS=e.line_breaks);(0,t.has)(e,d)&&(i.START_CHARS_HINT=e.start_chars_hint);return i}(e)}e.createToken=h,e.EOF=h({name:"EOF",pattern:n.Lexer.NA}),(0,r.augmentTokenTypes)([e.EOF]),e.createTokenInstance=function(e,t,n,r,i,o,a,s){return{image:t,startOffset:n,endOffset:r,startLine:i,endLine:o,startColumn:a,endColumn:s,tokenTypeIdx:e.tokenTypeIdx,tokenType:e}},e.tokenMatcher=function(e,t){return(0,r.tokenStructuredMatcher)(e,t)}}(Hs);var ru,iu=rr&&rr.__extends||(ru=function(e,t){return(ru=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}ru(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(Vs,"__esModule",{value:!0}),Vs.serializeProduction=Vs.serializeGrammar=Vs.Terminal=Vs.Alternation=Vs.RepetitionWithSeparator=Vs.Repetition=Vs.RepetitionMandatoryWithSeparator=Vs.RepetitionMandatory=Vs.Option=Vs.Alternative=Vs.Rule=Vs.NonTerminal=Vs.AbstractProduction=void 0;var ou=xs,au=Hs,su=function(){function e(e){this._definition=e}return Object.defineProperty(e.prototype,"definition",{get:function(){return this._definition},set:function(e){this._definition=e},enumerable:!1,configurable:!0}),e.prototype.accept=function(e){e.visit(this),(0,ou.forEach)(this.definition,(function(t){t.accept(e)}))},e}();Vs.AbstractProduction=su;var uu=function(e){function t(t){var n=e.call(this,[])||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),Object.defineProperty(t.prototype,"definition",{get:function(){return void 0!==this.referencedRule?this.referencedRule.definition:[]},set:function(e){},enumerable:!1,configurable:!0}),t.prototype.accept=function(e){e.visit(this)},t}(su);Vs.NonTerminal=uu;var cu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.orgText="",(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.Rule=cu;var lu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.ignoreAmbiguities=!1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.Alternative=lu;var pu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.Option=pu;var fu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.RepetitionMandatory=fu;var du=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.RepetitionMandatoryWithSeparator=du;var hu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.Repetition=hu;var mu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),t}(su);Vs.RepetitionWithSeparator=mu;var gu=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,n.ignoreAmbiguities=!1,n.hasPredicates=!1,(0,ou.assign)(n,(0,ou.pick)(t,(function(e){return void 0!==e}))),n}return iu(t,e),Object.defineProperty(t.prototype,"definition",{get:function(){return this._definition},set:function(e){this._definition=e},enumerable:!1,configurable:!0}),t}(su);Vs.Alternation=gu;var vu=function(){function e(e){this.idx=1,(0,ou.assign)(this,(0,ou.pick)(e,(function(e){return void 0!==e})))}return e.prototype.accept=function(e){e.visit(this)},e}();function yu(e){function t(e){return(0,ou.map)(e,yu)}if(e instanceof uu){var n={type:"NonTerminal",name:e.nonTerminalName,idx:e.idx};return(0,ou.isString)(e.label)&&(n.label=e.label),n}if(e instanceof lu)return{type:"Alternative",definition:t(e.definition)};if(e instanceof pu)return{type:"Option",idx:e.idx,definition:t(e.definition)};if(e instanceof fu)return{type:"RepetitionMandatory",idx:e.idx,definition:t(e.definition)};if(e instanceof du)return{type:"RepetitionMandatoryWithSeparator",idx:e.idx,separator:yu(new vu({terminalType:e.separator})),definition:t(e.definition)};if(e instanceof mu)return{type:"RepetitionWithSeparator",idx:e.idx,separator:yu(new vu({terminalType:e.separator})),definition:t(e.definition)};if(e instanceof hu)return{type:"Repetition",idx:e.idx,definition:t(e.definition)};if(e instanceof gu)return{type:"Alternation",idx:e.idx,definition:t(e.definition)};if(e instanceof vu){var r={type:"Terminal",name:e.terminalType.name,label:(0,au.tokenLabel)(e.terminalType),idx:e.idx};(0,ou.isString)(e.label)&&(r.terminalLabel=e.label);var i=e.terminalType.PATTERN;return e.terminalType.PATTERN&&(r.pattern=(0,ou.isRegExp)(i)?i.source:i),r}if(e instanceof cu)return{type:"Rule",name:e.name,orgText:e.orgText,definition:t(e.definition)};throw Error("non exhaustive match")}Vs.Terminal=vu,Vs.serializeGrammar=function(e){return(0,ou.map)(e,yu)},Vs.serializeProduction=yu,Object.defineProperty(Gs,"__esModule",{value:!0}),Gs.RestWalker=void 0;var Eu=xs,_u=Vs,Cu=function(){function e(){}return e.prototype.walk=function(e,t){var n=this;void 0===t&&(t=[]),(0,Eu.forEach)(e.definition,(function(r,i){var o=(0,Eu.drop)(e.definition,i+1);if(r instanceof _u.NonTerminal)n.walkProdRef(r,o,t);else if(r instanceof _u.Terminal)n.walkTerminal(r,o,t);else if(r instanceof _u.Alternative)n.walkFlat(r,o,t);else if(r instanceof _u.Option)n.walkOption(r,o,t);else if(r instanceof _u.RepetitionMandatory)n.walkAtLeastOne(r,o,t);else if(r instanceof _u.RepetitionMandatoryWithSeparator)n.walkAtLeastOneSep(r,o,t);else if(r instanceof _u.RepetitionWithSeparator)n.walkManySep(r,o,t);else if(r instanceof _u.Repetition)n.walkMany(r,o,t);else{if(!(r instanceof _u.Alternation))throw Error("non exhaustive match");n.walkOr(r,o,t)}}))},e.prototype.walkTerminal=function(e,t,n){},e.prototype.walkProdRef=function(e,t,n){},e.prototype.walkFlat=function(e,t,n){var r=t.concat(n);this.walk(e,r)},e.prototype.walkOption=function(e,t,n){var r=t.concat(n);this.walk(e,r)},e.prototype.walkAtLeastOne=function(e,t,n){var r=[new _u.Option({definition:e.definition})].concat(t,n);this.walk(e,r)},e.prototype.walkAtLeastOneSep=function(e,t,n){var r=Tu(e,t,n);this.walk(e,r)},e.prototype.walkMany=function(e,t,n){var r=[new _u.Option({definition:e.definition})].concat(t,n);this.walk(e,r)},e.prototype.walkManySep=function(e,t,n){var r=Tu(e,t,n);this.walk(e,r)},e.prototype.walkOr=function(e,t,n){var r=this,i=t.concat(n);(0,Eu.forEach)(e.definition,(function(e){var t=new _u.Alternative({definition:[e]});r.walk(t,i)}))},e}();function Tu(e,t,n){return[new _u.Option({definition:[new _u.Terminal({terminalType:e.separator})].concat(e.definition)})].concat(t,n)}Gs.RestWalker=Cu;var Au={},Ru={},Iu={};Object.defineProperty(Iu,"__esModule",{value:!0}),Iu.GAstVisitor=void 0;var Du=Vs,xu=function(){function e(){}return e.prototype.visit=function(e){var t=e;switch(t.constructor){case Du.NonTerminal:return this.visitNonTerminal(t);case Du.Alternative:return this.visitAlternative(t);case Du.Option:return this.visitOption(t);case Du.RepetitionMandatory:return this.visitRepetitionMandatory(t);case Du.RepetitionMandatoryWithSeparator:return this.visitRepetitionMandatoryWithSeparator(t);case Du.RepetitionWithSeparator:return this.visitRepetitionWithSeparator(t);case Du.Repetition:return this.visitRepetition(t);case Du.Alternation:return this.visitAlternation(t);case Du.Terminal:return this.visitTerminal(t);case Du.Rule:return this.visitRule(t);default:throw Error("non exhaustive match")}},e.prototype.visitNonTerminal=function(e){},e.prototype.visitAlternative=function(e){},e.prototype.visitOption=function(e){},e.prototype.visitRepetition=function(e){},e.prototype.visitRepetitionMandatory=function(e){},e.prototype.visitRepetitionMandatoryWithSeparator=function(e){},e.prototype.visitRepetitionWithSeparator=function(e){},e.prototype.visitAlternation=function(e){},e.prototype.visitTerminal=function(e){},e.prototype.visitRule=function(e){},e}();Iu.GAstVisitor=xu;var bu=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Ru,"__esModule",{value:!0}),Ru.collectMethods=Ru.DslMethodsCollectorVisitor=Ru.getProductionDslName=Ru.isBranchingProd=Ru.isOptionalProd=Ru.isSequenceProd=void 0;var Su=xs,ku=Vs,Ou=Iu;Ru.isSequenceProd=function(e){return e instanceof ku.Alternative||e instanceof ku.Option||e instanceof ku.Repetition||e instanceof ku.RepetitionMandatory||e instanceof ku.RepetitionMandatoryWithSeparator||e instanceof ku.RepetitionWithSeparator||e instanceof ku.Terminal||e instanceof ku.Rule},Ru.isOptionalProd=function e(t,n){return void 0===n&&(n=[]),!!(t instanceof ku.Option||t instanceof ku.Repetition||t instanceof ku.RepetitionWithSeparator)||(t instanceof ku.Alternation?(0,Su.some)(t.definition,(function(t){return e(t,n)})):!(t instanceof ku.NonTerminal&&(0,Su.contains)(n,t))&&(t instanceof ku.AbstractProduction&&(t instanceof ku.NonTerminal&&n.push(t),(0,Su.every)(t.definition,(function(t){return e(t,n)})))))},Ru.isBranchingProd=function(e){return e instanceof ku.Alternation},Ru.getProductionDslName=function(e){if(e instanceof ku.NonTerminal)return"SUBRULE";if(e instanceof ku.Option)return"OPTION";if(e instanceof ku.Alternation)return"OR";if(e instanceof ku.RepetitionMandatory)return"AT_LEAST_ONE";if(e instanceof ku.RepetitionMandatoryWithSeparator)return"AT_LEAST_ONE_SEP";if(e instanceof ku.RepetitionWithSeparator)return"MANY_SEP";if(e instanceof ku.Repetition)return"MANY";if(e instanceof ku.Terminal)return"CONSUME";throw Error("non exhaustive match")};var Nu=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.separator="-",t.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]},t}return bu(t,e),t.prototype.reset=function(){this.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]}},t.prototype.visitTerminal=function(e){var t=e.terminalType.name+this.separator+"Terminal";(0,Su.has)(this.dslMethods,t)||(this.dslMethods[t]=[]),this.dslMethods[t].push(e)},t.prototype.visitNonTerminal=function(e){var t=e.nonTerminalName+this.separator+"Terminal";(0,Su.has)(this.dslMethods,t)||(this.dslMethods[t]=[]),this.dslMethods[t].push(e)},t.prototype.visitOption=function(e){this.dslMethods.option.push(e)},t.prototype.visitRepetitionWithSeparator=function(e){this.dslMethods.repetitionWithSeparator.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.dslMethods.repetitionMandatory.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.dslMethods.repetitionMandatoryWithSeparator.push(e)},t.prototype.visitRepetition=function(e){this.dslMethods.repetition.push(e)},t.prototype.visitAlternation=function(e){this.dslMethods.alternation.push(e)},t}(Ou.GAstVisitor);Ru.DslMethodsCollectorVisitor=Nu;var Pu=new Nu;Ru.collectMethods=function(e){Pu.reset(),e.accept(Pu);var t=Pu.dslMethods;return Pu.reset(),t},Object.defineProperty(Au,"__esModule",{value:!0}),Au.firstForTerminal=Au.firstForBranching=Au.firstForSequence=Au.first=void 0;var wu=xs,Lu=Vs,Fu=Ru;function Mu(e){if(e instanceof Lu.NonTerminal)return Mu(e.referencedRule);if(e instanceof Lu.Terminal)return qu(e);if((0,Fu.isSequenceProd)(e))return $u(e);if((0,Fu.isBranchingProd)(e))return Bu(e);throw Error("non exhaustive match")}function $u(e){for(var t,n=[],r=e.definition,i=0,o=r.length>i,a=!0;o&&a;)t=r[i],a=(0,Fu.isOptionalProd)(t),n=n.concat(Mu(t)),i+=1,o=r.length>i;return(0,wu.uniq)(n)}function Bu(e){var t=(0,wu.map)(e.definition,(function(e){return Mu(e)}));return(0,wu.uniq)((0,wu.flatten)(t))}function qu(e){return[e.terminalType]}Au.first=Mu,Au.firstForSequence=$u,Au.firstForBranching=Bu,Au.firstForTerminal=qu;var ju={};Object.defineProperty(ju,"__esModule",{value:!0}),ju.IN=void 0,ju.IN="_~IN~_";var Uu=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Ks,"__esModule",{value:!0}),Ks.buildInProdFollowPrefix=Ks.buildBetweenProdsFollowPrefix=Ks.computeAllProdsFollows=Ks.ResyncFollowsWalker=void 0;var Wu=Au,Ku=xs,Gu=ju,Vu=Vs,Hu=function(e){function t(t){var n=e.call(this)||this;return n.topProd=t,n.follows={},n}return Uu(t,e),t.prototype.startWalking=function(){return this.walk(this.topProd),this.follows},t.prototype.walkTerminal=function(e,t,n){},t.prototype.walkProdRef=function(e,t,n){var r=zu(e.referencedRule,e.idx)+this.topProd.name,i=t.concat(n),o=new Vu.Alternative({definition:i}),a=(0,Wu.first)(o);this.follows[r]=a},t}(Gs.RestWalker);function zu(e,t){return e.name+t+Gu.IN}Ks.ResyncFollowsWalker=Hu,Ks.computeAllProdsFollows=function(e){var t={};return(0,Ku.forEach)(e,(function(e){var n=new Hu(e).startWalking();(0,Ku.assign)(t,n)})),t},Ks.buildBetweenProdsFollowPrefix=zu,Ks.buildInProdFollowPrefix=function(e){return e.terminalType.name+e.idx+Gu.IN};var Yu={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.defaultGrammarValidatorErrorProvider=e.defaultGrammarResolverErrorProvider=e.defaultParserErrorProvider=void 0;var t=Hs,n=xs,r=xs,i=Vs,o=Ru;e.defaultParserErrorProvider={buildMismatchTokenMessage:function(e){var n=e.expected,r=e.actual;return e.previous,e.ruleName,"Expecting "+((0,t.hasTokenLabel)(n)?"--\x3e "+(0,t.tokenLabel)(n)+" <--":"token of type --\x3e "+n.name+" <--")+" but found --\x3e '"+r.image+"' <--"},buildNotAllInputParsedMessage:function(e){var t=e.firstRedundant;return e.ruleName,"Redundant input, expecting EOF but found: "+t.image},buildNoViableAltMessage:function(e){var n=e.expectedPathsPerAlt,i=e.actual;e.previous;var o=e.customUserDescription;e.ruleName;var a="Expecting: ",s="\nbut found: '"+(0,r.first)(i).image+"'";if(o)return a+o+s;var u=(0,r.reduce)(n,(function(e,t){return e.concat(t)}),[]),c=(0,r.map)(u,(function(e){return"["+(0,r.map)(e,(function(e){return(0,t.tokenLabel)(e)})).join(", ")+"]"}));return a+("one of these possible Token sequences:\n"+(0,r.map)(c,(function(e,t){return"  "+(t+1)+". "+e})).join("\n"))+s},buildEarlyExitMessage:function(e){var n=e.expectedIterationPaths,i=e.actual,o=e.customUserDescription;e.ruleName;var a="Expecting: ",s="\nbut found: '"+(0,r.first)(i).image+"'";return o?a+o+s:a+("expecting at least one iteration which starts with one of these possible Token sequences::\n  <"+(0,r.map)(n,(function(e){return"["+(0,r.map)(e,(function(e){return(0,t.tokenLabel)(e)})).join(",")+"]"})).join(" ,")+">")+s}},Object.freeze(e.defaultParserErrorProvider),e.defaultGrammarResolverErrorProvider={buildRuleNotFoundError:function(e,t){return"Invalid grammar, reference to a rule which is not defined: ->"+t.nonTerminalName+"<-\ninside top level rule: ->"+e.name+"<-"}},e.defaultGrammarValidatorErrorProvider={buildDuplicateFoundError:function(e,t){var n,a=e.name,s=(0,r.first)(t),u=s.idx,c=(0,o.getProductionDslName)(s),l=(n=s)instanceof i.Terminal?n.terminalType.name:n instanceof i.NonTerminal?n.nonTerminalName:"",p="->"+c+(u>0?u:"")+"<- "+(l?"with argument: ->"+l+"<-":"")+"\n                  appears more than once ("+t.length+" times) in the top level rule: ->"+a+"<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  ";return p=(p=p.replace(/[ \t]+/g," ")).replace(/\s\s+/g,"\n")},buildNamespaceConflictError:function(e){return"Namespace conflict found in grammar.\nThe grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <"+e.name+">.\nTo resolve this make sure each Terminal and Non-Terminal names are unique\nThis is easy to accomplish by using the convention that Terminal names start with an uppercase letter\nand Non-Terminal names start with a lower case letter."},buildAlternationPrefixAmbiguityError:function(e){var n=(0,r.map)(e.prefixPath,(function(e){return(0,t.tokenLabel)(e)})).join(", "),i=0===e.alternation.idx?"":e.alternation.idx;return"Ambiguous alternatives: <"+e.ambiguityIndices.join(" ,")+"> due to common lookahead prefix\nin <OR"+i+"> inside <"+e.topLevelRule.name+"> Rule,\n<"+n+"> may appears as a prefix path in all these alternatives.\nSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\nFor Further details."},buildAlternationAmbiguityError:function(e){var n=(0,r.map)(e.prefixPath,(function(e){return(0,t.tokenLabel)(e)})).join(", "),i=0===e.alternation.idx?"":e.alternation.idx,o="Ambiguous Alternatives Detected: <"+e.ambiguityIndices.join(" ,")+"> in <OR"+i+"> inside <"+e.topLevelRule.name+"> Rule,\n<"+n+"> may appears as a prefix path in all these alternatives.\n";return o+="See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\nFor Further details."},buildEmptyRepetitionError:function(e){var t=(0,o.getProductionDslName)(e.repetition);return 0!==e.repetition.idx&&(t+=e.repetition.idx),"The repetition <"+t+"> within Rule <"+e.topLevelRule.name+"> can never consume any tokens.\nThis could lead to an infinite loop."},buildTokenNameError:function(e){return"deprecated"},buildEmptyAlternationError:function(e){return"Ambiguous empty alternative: <"+(e.emptyChoiceIdx+1)+"> in <OR"+e.alternation.idx+"> inside <"+e.topLevelRule.name+"> Rule.\nOnly the last alternative may be an empty alternative."},buildTooManyAlternativesError:function(e){return"An Alternation cannot have more than 256 alternatives:\n<OR"+e.alternation.idx+"> inside <"+e.topLevelRule.name+"> Rule.\n has "+(e.alternation.definition.length+1)+" alternatives."},buildLeftRecursionError:function(e){var t=e.topLevelRule.name;return"Left Recursion found in grammar.\nrule: <"+t+"> can be invoked from itself (directly or indirectly)\nwithout consuming any Tokens. The grammar path that causes this is: \n "+(t+" --\x3e "+n.map(e.leftRecursionPath,(function(e){return e.name})).concat([t]).join(" --\x3e "))+"\n To fix this refactor your grammar to remove the left recursion.\nsee: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring."},buildInvalidRuleNameError:function(e){return"deprecated"},buildDuplicateRuleNameError:function(e){return"Duplicate definition, rule: ->"+(e.topLevelRule instanceof i.Rule?e.topLevelRule.name:e.topLevelRule)+"<- is already defined in the grammar: ->"+e.grammarName+"<-"}}}(Yu);var Xu={},Ju={},Qu=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Ju,"__esModule",{value:!0}),Ju.GastRefResolverVisitor=Ju.resolveGrammar=void 0;var Zu=Ds,ec=xs,tc=Iu;Ju.resolveGrammar=function(e,t){var n=new nc(e,t);return n.resolveRefs(),n.errors};var nc=function(e){function t(t,n){var r=e.call(this)||this;return r.nameToTopRule=t,r.errMsgProvider=n,r.errors=[],r}return Qu(t,e),t.prototype.resolveRefs=function(){var e=this;(0,ec.forEach)((0,ec.values)(this.nameToTopRule),(function(t){e.currTopLevel=t,t.accept(e)}))},t.prototype.visitNonTerminal=function(e){var t=this.nameToTopRule[e.nonTerminalName];if(t)e.referencedRule=t;else{var n=this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel,e);this.errors.push({message:n,type:Zu.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,ruleName:this.currTopLevel.name,unresolvedRefName:e.nonTerminalName})}},t}(tc.GAstVisitor);Ju.GastRefResolverVisitor=nc;var rc={},ic={},oc={},ac=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(oc,"__esModule",{value:!0}),oc.nextPossibleTokensAfter=oc.possiblePathsFrom=oc.NextTerminalAfterAtLeastOneSepWalker=oc.NextTerminalAfterAtLeastOneWalker=oc.NextTerminalAfterManySepWalker=oc.NextTerminalAfterManyWalker=oc.AbstractNextTerminalAfterProductionWalker=oc.NextAfterTokenWalker=oc.AbstractNextPossibleTokensWalker=void 0;var sc=Gs,uc=xs,cc=Au,lc=Vs,pc=function(e){function t(t,n){var r=e.call(this)||this;return r.topProd=t,r.path=n,r.possibleTokTypes=[],r.nextProductionName="",r.nextProductionOccurrence=0,r.found=!1,r.isAtEndOfPath=!1,r}return ac(t,e),t.prototype.startWalking=function(){if(this.found=!1,this.path.ruleStack[0]!==this.topProd.name)throw Error("The path does not start with the walker's top Rule!");return this.ruleStack=(0,uc.cloneArr)(this.path.ruleStack).reverse(),this.occurrenceStack=(0,uc.cloneArr)(this.path.occurrenceStack).reverse(),this.ruleStack.pop(),this.occurrenceStack.pop(),this.updateExpectedNext(),this.walk(this.topProd),this.possibleTokTypes},t.prototype.walk=function(t,n){void 0===n&&(n=[]),this.found||e.prototype.walk.call(this,t,n)},t.prototype.walkProdRef=function(e,t,n){if(e.referencedRule.name===this.nextProductionName&&e.idx===this.nextProductionOccurrence){var r=t.concat(n);this.updateExpectedNext(),this.walk(e.referencedRule,r)}},t.prototype.updateExpectedNext=function(){(0,uc.isEmpty)(this.ruleStack)?(this.nextProductionName="",this.nextProductionOccurrence=0,this.isAtEndOfPath=!0):(this.nextProductionName=this.ruleStack.pop(),this.nextProductionOccurrence=this.occurrenceStack.pop())},t}(sc.RestWalker);oc.AbstractNextPossibleTokensWalker=pc;var fc=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.path=n,r.nextTerminalName="",r.nextTerminalOccurrence=0,r.nextTerminalName=r.path.lastTok.name,r.nextTerminalOccurrence=r.path.lastTokOccurrence,r}return ac(t,e),t.prototype.walkTerminal=function(e,t,n){if(this.isAtEndOfPath&&e.terminalType.name===this.nextTerminalName&&e.idx===this.nextTerminalOccurrence&&!this.found){var r=t.concat(n),i=new lc.Alternative({definition:r});this.possibleTokTypes=(0,cc.first)(i),this.found=!0}},t}(pc);oc.NextAfterTokenWalker=fc;var dc=function(e){function t(t,n){var r=e.call(this)||this;return r.topRule=t,r.occurrence=n,r.result={token:void 0,occurrence:void 0,isEndOfRule:void 0},r}return ac(t,e),t.prototype.startWalking=function(){return this.walk(this.topRule),this.result},t}(sc.RestWalker);oc.AbstractNextTerminalAfterProductionWalker=dc;var hc=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ac(t,e),t.prototype.walkMany=function(t,n,r){if(t.idx===this.occurrence){var i=(0,uc.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof lc.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkMany.call(this,t,n,r)},t}(dc);oc.NextTerminalAfterManyWalker=hc;var mc=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ac(t,e),t.prototype.walkManySep=function(t,n,r){if(t.idx===this.occurrence){var i=(0,uc.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof lc.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkManySep.call(this,t,n,r)},t}(dc);oc.NextTerminalAfterManySepWalker=mc;var gc=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ac(t,e),t.prototype.walkAtLeastOne=function(t,n,r){if(t.idx===this.occurrence){var i=(0,uc.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof lc.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkAtLeastOne.call(this,t,n,r)},t}(dc);oc.NextTerminalAfterAtLeastOneWalker=gc;var vc=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ac(t,e),t.prototype.walkAtLeastOneSep=function(t,n,r){if(t.idx===this.occurrence){var i=(0,uc.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof lc.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkAtLeastOneSep.call(this,t,n,r)},t}(dc);function yc(e,t,n,r){var i=(0,uc.cloneArr)(n);i.push(e.name);var o=(0,uc.cloneArr)(r);return o.push(1),{idx:t,def:e.definition,ruleStack:i,occurrenceStack:o}}oc.NextTerminalAfterAtLeastOneSepWalker=vc,oc.possiblePathsFrom=function e(t,n,r){void 0===r&&(r=[]),r=(0,uc.cloneArr)(r);var i=[],o=0;function a(a){var s=e(a.concat((0,uc.drop)(t,o+1)),n,r);return i.concat(s)}for(;r.length<n&&o<t.length;){var s=t[o];if(s instanceof lc.Alternative)return a(s.definition);if(s instanceof lc.NonTerminal)return a(s.definition);if(s instanceof lc.Option)i=a(s.definition);else{if(s instanceof lc.RepetitionMandatory)return a(u=s.definition.concat([new lc.Repetition({definition:s.definition})]));if(s instanceof lc.RepetitionMandatoryWithSeparator)return a(u=[new lc.Alternative({definition:s.definition}),new lc.Repetition({definition:[new lc.Terminal({terminalType:s.separator})].concat(s.definition)})]);if(s instanceof lc.RepetitionWithSeparator){var u=s.definition.concat([new lc.Repetition({definition:[new lc.Terminal({terminalType:s.separator})].concat(s.definition)})]);i=a(u)}else if(s instanceof lc.Repetition){u=s.definition.concat([new lc.Repetition({definition:s.definition})]);i=a(u)}else{if(s instanceof lc.Alternation)return(0,uc.forEach)(s.definition,(function(e){!1===(0,uc.isEmpty)(e.definition)&&(i=a(e.definition))})),i;if(!(s instanceof lc.Terminal))throw Error("non exhaustive match");r.push(s.terminalType)}}o++}return i.push({partialPath:r,suffixDef:(0,uc.drop)(t,o)}),i},oc.nextPossibleTokensAfter=function(e,t,n,r){var i="EXIT_NONE_TERMINAL",o=[i],a="EXIT_ALTERNATIVE",s=!1,u=t.length,c=u-r-1,l=[],p=[];for(p.push({idx:-1,def:e,ruleStack:[],occurrenceStack:[]});!(0,uc.isEmpty)(p);){var f=p.pop();if(f!==a){var d=f.def,h=f.idx,m=f.ruleStack,g=f.occurrenceStack;if(!(0,uc.isEmpty)(d)){var v=d[0];if(v===i){var y={idx:h,def:(0,uc.drop)(d),ruleStack:(0,uc.dropRight)(m),occurrenceStack:(0,uc.dropRight)(g)};p.push(y)}else if(v instanceof lc.Terminal)if(h<u-1){var E=h+1;if(n(t[E],v.terminalType)){y={idx:E,def:(0,uc.drop)(d),ruleStack:m,occurrenceStack:g};p.push(y)}}else{if(h!==u-1)throw Error("non exhaustive match");l.push({nextTokenType:v.terminalType,nextTokenOccurrence:v.idx,ruleStack:m,occurrenceStack:g}),s=!0}else if(v instanceof lc.NonTerminal){var _=(0,uc.cloneArr)(m);_.push(v.nonTerminalName);var C=(0,uc.cloneArr)(g);C.push(v.idx);y={idx:h,def:v.definition.concat(o,(0,uc.drop)(d)),ruleStack:_,occurrenceStack:C};p.push(y)}else if(v instanceof lc.Option){var T={idx:h,def:(0,uc.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);var A={idx:h,def:v.definition.concat((0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof lc.RepetitionMandatory){var R=new lc.Repetition({definition:v.definition,idx:v.idx});y={idx:h,def:v.definition.concat([R],(0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(y)}else if(v instanceof lc.RepetitionMandatoryWithSeparator){var I=new lc.Terminal({terminalType:v.separator});R=new lc.Repetition({definition:[I].concat(v.definition),idx:v.idx}),y={idx:h,def:v.definition.concat([R],(0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(y)}else if(v instanceof lc.RepetitionWithSeparator){T={idx:h,def:(0,uc.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);I=new lc.Terminal({terminalType:v.separator});var D=new lc.Repetition({definition:[I].concat(v.definition),idx:v.idx});A={idx:h,def:v.definition.concat([D],(0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof lc.Repetition){T={idx:h,def:(0,uc.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);D=new lc.Repetition({definition:v.definition,idx:v.idx}),A={idx:h,def:v.definition.concat([D],(0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof lc.Alternation)for(var x=v.definition.length-1;x>=0;x--){var b={idx:h,def:v.definition[x].definition.concat((0,uc.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(b),p.push(a)}else if(v instanceof lc.Alternative)p.push({idx:h,def:v.definition.concat((0,uc.drop)(d)),ruleStack:m,occurrenceStack:g});else{if(!(v instanceof lc.Rule))throw Error("non exhaustive match");p.push(yc(v,h,m,g))}}}else s&&(0,uc.last)(p).idx<=c&&p.pop()}return l},function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.areTokenCategoriesNotUsed=e.isStrictPrefixOfPath=e.containsPath=e.getLookaheadPathsForOptionalProd=e.getLookaheadPathsForOr=e.lookAheadSequenceFromAlternatives=e.buildSingleAlternativeLookaheadFunction=e.buildAlternativesLookAheadFunc=e.buildLookaheadFuncForOptionalProd=e.buildLookaheadFuncForOr=e.getProdType=e.PROD_TYPE=void 0;var n,r,i=xs,o=oc,a=Gs,s=tu,u=Vs,c=Iu;(r=n=e.PROD_TYPE||(e.PROD_TYPE={}))[r.OPTION=0]="OPTION",r[r.REPETITION=1]="REPETITION",r[r.REPETITION_MANDATORY=2]="REPETITION_MANDATORY",r[r.REPETITION_MANDATORY_WITH_SEPARATOR=3]="REPETITION_MANDATORY_WITH_SEPARATOR",r[r.REPETITION_WITH_SEPARATOR=4]="REPETITION_WITH_SEPARATOR",r[r.ALTERNATION=5]="ALTERNATION",e.getProdType=function(e){if(e instanceof u.Option)return n.OPTION;if(e instanceof u.Repetition)return n.REPETITION;if(e instanceof u.RepetitionMandatory)return n.REPETITION_MANDATORY;if(e instanceof u.RepetitionMandatoryWithSeparator)return n.REPETITION_MANDATORY_WITH_SEPARATOR;if(e instanceof u.RepetitionWithSeparator)return n.REPETITION_WITH_SEPARATOR;if(e instanceof u.Alternation)return n.ALTERNATION;throw Error("non exhaustive match")},e.buildLookaheadFuncForOr=function(e,t,n,r,i,o){var a=g(e,t,n);return o(a,r,E(a)?s.tokenStructuredMatcherNoCategories:s.tokenStructuredMatcher,i)},e.buildLookaheadFuncForOptionalProd=function(e,t,n,r,i,o){var a=v(e,t,i,n),u=E(a)?s.tokenStructuredMatcherNoCategories:s.tokenStructuredMatcher;return o(a[0],u,r)},e.buildAlternativesLookAheadFunc=function(e,t,n,r){var o=e.length,a=(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return 1===e.length}))}));if(t)return function(t){for(var r=(0,i.map)(t,(function(e){return e.GATE})),a=0;a<o;a++){var s=e[a],u=s.length,c=r[a];if(void 0===c||!1!==c.call(this))e:for(var l=0;l<u;l++){for(var p=s[l],f=p.length,d=0;d<f;d++){var h=this.LA(d+1);if(!1===n(h,p[d]))continue e}return a}}};if(a&&!r){var s=(0,i.map)(e,(function(e){return(0,i.flatten)(e)})),u=(0,i.reduce)(s,(function(e,t,n){return(0,i.forEach)(t,(function(t){(0,i.has)(e,t.tokenTypeIdx)||(e[t.tokenTypeIdx]=n),(0,i.forEach)(t.categoryMatches,(function(t){(0,i.has)(e,t)||(e[t]=n)}))})),e}),[]);return function(){var e=this.LA(1);return u[e.tokenTypeIdx]}}return function(){for(var t=0;t<o;t++){var r=e[t],i=r.length;e:for(var a=0;a<i;a++){for(var s=r[a],u=s.length,c=0;c<u;c++){var l=this.LA(c+1);if(!1===n(l,s[c]))continue e}return t}}}},e.buildSingleAlternativeLookaheadFunction=function(e,t,n){var r=(0,i.every)(e,(function(e){return 1===e.length})),o=e.length;if(r&&!n){var a=(0,i.flatten)(e);if(1===a.length&&(0,i.isEmpty)(a[0].categoryMatches)){var s=a[0].tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===s}}var u=(0,i.reduce)(a,(function(e,t,n){return e[t.tokenTypeIdx]=!0,(0,i.forEach)(t.categoryMatches,(function(t){e[t]=!0})),e}),[]);return function(){var e=this.LA(1);return!0===u[e.tokenTypeIdx]}}return function(){e:for(var n=0;n<o;n++){for(var r=e[n],i=r.length,a=0;a<i;a++){var s=this.LA(a+1);if(!1===t(s,r[a]))continue e}return!0}return!1}};var l=function(e){function r(t,n,r){var i=e.call(this)||this;return i.topProd=t,i.targetOccurrence=n,i.targetProdType=r,i}return t(r,e),r.prototype.startWalking=function(){return this.walk(this.topProd),this.restDef},r.prototype.checkIsTarget=function(e,t,n,r){return e.idx===this.targetOccurrence&&this.targetProdType===t&&(this.restDef=n.concat(r),!0)},r.prototype.walkOption=function(t,r,i){this.checkIsTarget(t,n.OPTION,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkAtLeastOne=function(t,r,i){this.checkIsTarget(t,n.REPETITION_MANDATORY,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkAtLeastOneSep=function(t,r,i){this.checkIsTarget(t,n.REPETITION_MANDATORY_WITH_SEPARATOR,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkMany=function(t,r,i){this.checkIsTarget(t,n.REPETITION,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkManySep=function(t,r,i){this.checkIsTarget(t,n.REPETITION_WITH_SEPARATOR,r,i)||e.prototype.walkOption.call(this,t,r,i)},r}(a.RestWalker),p=function(e){function r(t,n,r){var i=e.call(this)||this;return i.targetOccurrence=t,i.targetProdType=n,i.targetRef=r,i.result=[],i}return t(r,e),r.prototype.checkIsTarget=function(e,t){e.idx!==this.targetOccurrence||this.targetProdType!==t||void 0!==this.targetRef&&e!==this.targetRef||(this.result=e.definition)},r.prototype.visitOption=function(e){this.checkIsTarget(e,n.OPTION)},r.prototype.visitRepetition=function(e){this.checkIsTarget(e,n.REPETITION)},r.prototype.visitRepetitionMandatory=function(e){this.checkIsTarget(e,n.REPETITION_MANDATORY)},r.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.checkIsTarget(e,n.REPETITION_MANDATORY_WITH_SEPARATOR)},r.prototype.visitRepetitionWithSeparator=function(e){this.checkIsTarget(e,n.REPETITION_WITH_SEPARATOR)},r.prototype.visitAlternation=function(e){this.checkIsTarget(e,n.ALTERNATION)},r}(c.GAstVisitor);function f(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=[];return t}function d(e){for(var t=[""],n=0;n<e.length;n++){for(var r=e[n],i=[],o=0;o<t.length;o++){var a=t[o];i.push(a+"_"+r.tokenTypeIdx);for(var s=0;s<r.categoryMatches.length;s++){var u="_"+r.categoryMatches[s];i.push(a+u)}}t=i}return t}function h(e,t,n){for(var r=0;r<e.length;r++)if(r!==n)for(var i=e[r],o=0;o<t.length;o++){if(!0===i[t[o]])return!1}return!0}function m(e,t){for(var n=(0,i.map)(e,(function(e){return(0,o.possiblePathsFrom)([e],1)})),r=f(n.length),a=(0,i.map)(n,(function(e){var t={};return(0,i.forEach)(e,(function(e){var n=d(e.partialPath);(0,i.forEach)(n,(function(e){t[e]=!0}))})),t})),s=n,u=1;u<=t;u++){var c=s;s=f(c.length);for(var l=function(e){for(var n=c[e],l=0;l<n.length;l++){var p=n[l].partialPath,f=n[l].suffixDef,m=d(p);if(h(a,m,e)||(0,i.isEmpty)(f)||p.length===t){var g=r[e];if(!1===y(g,p)){g.push(p);for(var v=0;v<m.length;v++){var E=m[v];a[e][E]=!0}}}else{var _=(0,o.possiblePathsFrom)(f,u+1,p);s[e]=s[e].concat(_),(0,i.forEach)(_,(function(t){var n=d(t.partialPath);(0,i.forEach)(n,(function(t){a[e][t]=!0}))}))}}},p=0;p<c.length;p++)l(p)}return r}function g(e,t,r,i){var o=new p(e,n.ALTERNATION,i);return t.accept(o),m(o.result,r)}function v(e,t,n,r){var i=new p(e,n);t.accept(i);var o=i.result,a=new l(t,e,n).startWalking();return m([new u.Alternative({definition:o}),new u.Alternative({definition:a})],r)}function y(e,t){e:for(var n=0;n<e.length;n++){var r=e[n];if(r.length===t.length){for(var i=0;i<r.length;i++){var o=t[i],a=r[i];if(!1===(o===a||void 0!==a.categoryMatchesMap[o.tokenTypeIdx]))continue e}return!0}}return!1}function E(e){return(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return(0,i.isEmpty)(e.categoryMatches)}))}))}))}e.lookAheadSequenceFromAlternatives=m,e.getLookaheadPathsForOr=g,e.getLookaheadPathsForOptionalProd=v,e.containsPath=y,e.isStrictPrefixOfPath=function(e,t){return e.length<t.length&&(0,i.every)(e,(function(e,n){var r=t[n];return e===r||r.categoryMatchesMap[e.tokenTypeIdx]}))},e.areTokenCategoriesNotUsed=E}(ic);var Ec=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(rc,"__esModule",{value:!0}),rc.checkPrefixAlternativesAmbiguities=rc.validateSomeNonEmptyLookaheadPath=rc.validateTooManyAlts=rc.RepetionCollector=rc.validateAmbiguousAlternationAlternatives=rc.validateEmptyOrAlternative=rc.getFirstNoneTerminal=rc.validateNoLeftRecursion=rc.validateRuleIsOverridden=rc.validateRuleDoesNotAlreadyExist=rc.OccurrenceValidationCollector=rc.identifyProductionForDuplicates=rc.validateGrammar=void 0;var _c=xs,Cc=xs,Tc=Ds,Ac=Ru,Rc=ic,Ic=oc,Dc=Vs,xc=Iu;function bc(e){return(0,Ac.getProductionDslName)(e)+"_#_"+e.idx+"_#_"+Sc(e)}function Sc(e){return e instanceof Dc.Terminal?e.terminalType.name:e instanceof Dc.NonTerminal?e.nonTerminalName:""}rc.validateGrammar=function(e,t,n,r,i){var o=_c.map(e,(function(e){return function(e,t){var n=new kc;e.accept(n);var r=n.allProductions,i=_c.groupBy(r,bc),o=_c.pick(i,(function(e){return e.length>1}));return _c.map(_c.values(o),(function(n){var r=_c.first(n),i=t.buildDuplicateFoundError(e,n),o=(0,Ac.getProductionDslName)(r),a={message:i,type:Tc.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,ruleName:e.name,dslName:o,occurrence:r.idx},s=Sc(r);return s&&(a.parameter=s),a}))}(e,r)})),a=_c.map(e,(function(e){return Nc(e,e,r)})),s=[],u=[],c=[];(0,Cc.every)(a,Cc.isEmpty)&&(s=(0,Cc.map)(e,(function(e){return Lc(e,r)})),u=(0,Cc.map)(e,(function(e){return Fc(e,t,r)})),c=Bc(e,t,r));var l=function(e,t,n){var r=[],i=(0,Cc.map)(t,(function(e){return e.name}));return(0,Cc.forEach)(e,(function(e){var t=e.name;if((0,Cc.contains)(i,t)){var o=n.buildNamespaceConflictError(e);r.push({message:o,type:Tc.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,ruleName:t})}})),r}(e,n,r),p=(0,Cc.map)(e,(function(e){return $c(e,r)})),f=(0,Cc.map)(e,(function(t){return Oc(t,e,i,r)}));return _c.flatten(o.concat(c,a,s,u,l,p,f))},rc.identifyProductionForDuplicates=bc;var kc=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.allProductions=[],t}return Ec(t,e),t.prototype.visitNonTerminal=function(e){this.allProductions.push(e)},t.prototype.visitOption=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetition=function(e){this.allProductions.push(e)},t.prototype.visitAlternation=function(e){this.allProductions.push(e)},t.prototype.visitTerminal=function(e){this.allProductions.push(e)},t}(xc.GAstVisitor);function Oc(e,t,n,r){var i=[];if((0,Cc.reduce)(t,(function(t,n){return n.name===e.name?t+1:t}),0)>1){var o=r.buildDuplicateRuleNameError({topLevelRule:e,grammarName:n});i.push({message:o,type:Tc.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:e.name})}return i}function Nc(e,t,n,r){void 0===r&&(r=[]);var i=[],o=Pc(t.definition);if(_c.isEmpty(o))return[];var a=e.name;_c.contains(o,e)&&i.push({message:n.buildLeftRecursionError({topLevelRule:e,leftRecursionPath:r}),type:Tc.ParserDefinitionErrorType.LEFT_RECURSION,ruleName:a});var s=_c.difference(o,r.concat([e])),u=_c.map(s,(function(t){var i=_c.cloneArr(r);return i.push(t),Nc(e,t,n,i)}));return i.concat(_c.flatten(u))}function Pc(e){var t=[];if(_c.isEmpty(e))return t;var n=_c.first(e);if(n instanceof Dc.NonTerminal)t.push(n.referencedRule);else if(n instanceof Dc.Alternative||n instanceof Dc.Option||n instanceof Dc.RepetitionMandatory||n instanceof Dc.RepetitionMandatoryWithSeparator||n instanceof Dc.RepetitionWithSeparator||n instanceof Dc.Repetition)t=t.concat(Pc(n.definition));else if(n instanceof Dc.Alternation)t=_c.flatten(_c.map(n.definition,(function(e){return Pc(e.definition)})));else if(!(n instanceof Dc.Terminal))throw Error("non exhaustive match");var r=(0,Ac.isOptionalProd)(n),i=e.length>1;if(r&&i){var o=_c.drop(e);return t.concat(Pc(o))}return t}rc.OccurrenceValidationCollector=kc,rc.validateRuleDoesNotAlreadyExist=Oc,rc.validateRuleIsOverridden=function(e,t,n){var r,i=[];return _c.contains(t,e)||(r="Invalid rule override, rule: ->"+e+"<- cannot be overridden in the grammar: ->"+n+"<-as it is not defined in any of the super grammars ",i.push({message:r,type:Tc.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,ruleName:e})),i},rc.validateNoLeftRecursion=Nc,rc.getFirstNoneTerminal=Pc;var wc=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.alternations=[],t}return Ec(t,e),t.prototype.visitAlternation=function(e){this.alternations.push(e)},t}(xc.GAstVisitor);function Lc(e,t){var n=new wc;e.accept(n);var r=n.alternations;return _c.reduce(r,(function(n,r){var i=_c.dropRight(r.definition),o=_c.map(i,(function(n,i){var o=(0,Ic.nextPossibleTokensAfter)([n],[],null,1);return _c.isEmpty(o)?{message:t.buildEmptyAlternationError({topLevelRule:e,alternation:r,emptyChoiceIdx:i}),type:Tc.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,ruleName:e.name,occurrence:r.idx,alternative:i+1}:null}));return n.concat(_c.compact(o))}),[])}function Fc(e,t,n){var r=new wc;e.accept(r);var i=r.alternations;return i=(0,Cc.reject)(i,(function(e){return!0===e.ignoreAmbiguities})),_c.reduce(i,(function(r,i){var o=i.idx,a=i.maxLookahead||t,s=(0,Rc.getLookaheadPathsForOr)(o,e,a,i),u=function(e,t,n,r){var i=[],o=(0,Cc.reduce)(e,(function(n,r,o){return!0===t.definition[o].ignoreAmbiguities||(0,Cc.forEach)(r,(function(r){var a=[o];(0,Cc.forEach)(e,(function(e,n){o!==n&&(0,Rc.containsPath)(e,r)&&!0!==t.definition[n].ignoreAmbiguities&&a.push(n)})),a.length>1&&!(0,Rc.containsPath)(i,r)&&(i.push(r),n.push({alts:a,path:r}))})),n}),[]);return _c.map(o,(function(e){var i=(0,Cc.map)(e.alts,(function(e){return e+1}));return{message:r.buildAlternationAmbiguityError({topLevelRule:n,alternation:t,ambiguityIndices:i,prefixPath:e.path}),type:Tc.ParserDefinitionErrorType.AMBIGUOUS_ALTS,ruleName:n.name,occurrence:t.idx,alternatives:[e.alts]}}))}(s,i,e,n),c=qc(s,i,e,n);return r.concat(u,c)}),[])}rc.validateEmptyOrAlternative=Lc,rc.validateAmbiguousAlternationAlternatives=Fc;var Mc=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.allProductions=[],t}return Ec(t,e),t.prototype.visitRepetitionWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetition=function(e){this.allProductions.push(e)},t}(xc.GAstVisitor);function $c(e,t){var n=new wc;e.accept(n);var r=n.alternations;return _c.reduce(r,(function(n,r){return r.definition.length>255&&n.push({message:t.buildTooManyAlternativesError({topLevelRule:e,alternation:r}),type:Tc.ParserDefinitionErrorType.TOO_MANY_ALTS,ruleName:e.name,occurrence:r.idx}),n}),[])}function Bc(e,t,n){var r=[];return(0,Cc.forEach)(e,(function(e){var i=new Mc;e.accept(i);var o=i.allProductions;(0,Cc.forEach)(o,(function(i){var o=(0,Rc.getProdType)(i),a=i.maxLookahead||t,s=i.idx,u=(0,Rc.getLookaheadPathsForOptionalProd)(s,e,o,a)[0];if((0,Cc.isEmpty)((0,Cc.flatten)(u))){var c=n.buildEmptyRepetitionError({topLevelRule:e,repetition:i});r.push({message:c,type:Tc.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,ruleName:e.name})}}))})),r}function qc(e,t,n,r){var i=[],o=(0,Cc.reduce)(e,(function(e,t,n){var r=(0,Cc.map)(t,(function(e){return{idx:n,path:e}}));return e.concat(r)}),[]);return(0,Cc.forEach)(o,(function(e){if(!0!==t.definition[e.idx].ignoreAmbiguities){var a=e.idx,s=e.path,u=(0,Cc.findAll)(o,(function(e){return!0!==t.definition[e.idx].ignoreAmbiguities&&e.idx<a&&(0,Rc.isStrictPrefixOfPath)(e.path,s)})),c=(0,Cc.map)(u,(function(e){var i=[e.idx+1,a+1],o=0===t.idx?"":t.idx;return{message:r.buildAlternationPrefixAmbiguityError({topLevelRule:n,alternation:t,ambiguityIndices:i,prefixPath:e.path}),type:Tc.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,ruleName:n.name,occurrence:o,alternatives:i}}));i=i.concat(c)}})),i}rc.RepetionCollector=Mc,rc.validateTooManyAlts=$c,rc.validateSomeNonEmptyLookaheadPath=Bc,rc.checkPrefixAlternativesAmbiguities=qc,Object.defineProperty(Xu,"__esModule",{value:!0}),Xu.validateGrammar=Xu.resolveGrammar=void 0;var jc=xs,Uc=Ju,Wc=rc,Kc=Yu;Xu.resolveGrammar=function(e){e=(0,jc.defaults)(e,{errMsgProvider:Kc.defaultGrammarResolverErrorProvider});var t={};return(0,jc.forEach)(e.rules,(function(e){t[e.name]=e})),(0,Uc.resolveGrammar)(t,e.errMsgProvider)},Xu.validateGrammar=function(e){return e=(0,jc.defaults)(e,{errMsgProvider:Kc.defaultGrammarValidatorErrorProvider}),(0,Wc.validateGrammar)(e.rules,e.maxLookahead,e.tokenTypes,e.errMsgProvider,e.grammarName)};var Gc={},Vc={},Hc=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Vc,"__esModule",{value:!0}),Vc.EarlyExitException=Vc.NotAllInputParsedException=Vc.NoViableAltException=Vc.MismatchedTokenException=Vc.isRecognitionException=void 0;var zc=xs,Yc="MismatchedTokenException",Xc="NoViableAltException",Jc="EarlyExitException",Qc="NotAllInputParsedException",Zc=[Yc,Xc,Jc,Qc];Object.freeze(Zc),Vc.isRecognitionException=function(e){return(0,zc.contains)(Zc,e.name)};var el=function(e){function t(t,n){var r=this.constructor,i=e.call(this,t)||this;return i.token=n,i.resyncedTokens=[],Object.setPrototypeOf(i,r.prototype),Error.captureStackTrace&&Error.captureStackTrace(i,i.constructor),i}return Hc(t,e),t}(Error),tl=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=Yc,i}return Hc(t,e),t}(el);Vc.MismatchedTokenException=tl;var nl=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=Xc,i}return Hc(t,e),t}(el);Vc.NoViableAltException=nl;var rl=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.name=Qc,r}return Hc(t,e),t}(el);Vc.NotAllInputParsedException=rl;var il=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=Jc,i}return Hc(t,e),t}(el);Vc.EarlyExitException=il,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.attemptInRepetitionRecovery=e.Recoverable=e.InRuleRecoveryException=e.IN_RULE_RECOVERY_EXCEPTION=e.EOF_FOLLOW_KEY=void 0;var t=Hs,n=xs,r=Vc,i=ju,o=Ds;function a(t){this.name=e.IN_RULE_RECOVERY_EXCEPTION,this.message=t}e.EOF_FOLLOW_KEY={},e.IN_RULE_RECOVERY_EXCEPTION="InRuleRecoveryException",e.InRuleRecoveryException=a,a.prototype=Error.prototype;var s=function(){function s(){}return s.prototype.initRecoverable=function(e){this.firstAfterRepMap={},this.resyncFollows={},this.recoveryEnabled=(0,n.has)(e,"recoveryEnabled")?e.recoveryEnabled:o.DEFAULT_PARSER_CONFIG.recoveryEnabled,this.recoveryEnabled&&(this.attemptInRepetitionRecovery=u)},s.prototype.getTokenToInsert=function(e){var n=(0,t.createTokenInstance)(e,"",NaN,NaN,NaN,NaN,NaN,NaN);return n.isInsertedInRecovery=!0,n},s.prototype.canTokenTypeBeInsertedInRecovery=function(e){return!0},s.prototype.tryInRepetitionRecovery=function(e,t,i,o){for(var a=this,s=this.findReSyncTokenType(),u=this.exportLexerState(),c=[],l=!1,p=this.LA(1),f=this.LA(1),d=function(){var e=a.LA(0),t=a.errorMessageProvider.buildMismatchTokenMessage({expected:o,actual:p,previous:e,ruleName:a.getCurrRuleFullName()}),i=new r.MismatchedTokenException(t,p,a.LA(0));i.resyncedTokens=(0,n.dropRight)(c),a.SAVE_ERROR(i)};!l;){if(this.tokenMatcher(f,o))return void d();if(i.call(this))return d(),void e.apply(this,t);this.tokenMatcher(f,s)?l=!0:(f=this.SKIP_TOKEN(),this.addToResyncTokens(f,c))}this.importLexerState(u)},s.prototype.shouldInRepetitionRecoveryBeTried=function(e,t,n){return!1!==n&&(void 0!==e&&void 0!==t&&(!this.tokenMatcher(this.LA(1),e)&&(!this.isBackTracking()&&!this.canPerformInRuleRecovery(e,this.getFollowsForInRuleRecovery(e,t)))))},s.prototype.getFollowsForInRuleRecovery=function(e,t){var n=this.getCurrentGrammarPath(e,t);return this.getNextPossibleTokenTypes(n)},s.prototype.tryInRuleRecovery=function(e,t){if(this.canRecoverWithSingleTokenInsertion(e,t))return this.getTokenToInsert(e);if(this.canRecoverWithSingleTokenDeletion(e)){var n=this.SKIP_TOKEN();return this.consumeToken(),n}throw new a("sad sad panda")},s.prototype.canPerformInRuleRecovery=function(e,t){return this.canRecoverWithSingleTokenInsertion(e,t)||this.canRecoverWithSingleTokenDeletion(e)},s.prototype.canRecoverWithSingleTokenInsertion=function(e,t){var r=this;if(!this.canTokenTypeBeInsertedInRecovery(e))return!1;if((0,n.isEmpty)(t))return!1;var i=this.LA(1);return void 0!==(0,n.find)(t,(function(e){return r.tokenMatcher(i,e)}))},s.prototype.canRecoverWithSingleTokenDeletion=function(e){return this.tokenMatcher(this.LA(2),e)},s.prototype.isInCurrentRuleReSyncSet=function(e){var t=this.getCurrFollowKey(),r=this.getFollowSetFromFollowKey(t);return(0,n.contains)(r,e)},s.prototype.findReSyncTokenType=function(){for(var e=this.flattenFollowSet(),t=this.LA(1),r=2;;){var i=t.tokenType;if((0,n.contains)(e,i))return i;t=this.LA(r),r++}},s.prototype.getCurrFollowKey=function(){if(1===this.RULE_STACK.length)return e.EOF_FOLLOW_KEY;var t=this.getLastExplicitRuleShortName(),n=this.getLastExplicitRuleOccurrenceIndex(),r=this.getPreviousExplicitRuleShortName();return{ruleName:this.shortRuleNameToFullName(t),idxInCallingRule:n,inRule:this.shortRuleNameToFullName(r)}},s.prototype.buildFullFollowKeyStack=function(){var t=this,r=this.RULE_STACK,i=this.RULE_OCCURRENCE_STACK;return(0,n.map)(r,(function(n,o){return 0===o?e.EOF_FOLLOW_KEY:{ruleName:t.shortRuleNameToFullName(n),idxInCallingRule:i[o],inRule:t.shortRuleNameToFullName(r[o-1])}}))},s.prototype.flattenFollowSet=function(){var e=this,t=(0,n.map)(this.buildFullFollowKeyStack(),(function(t){return e.getFollowSetFromFollowKey(t)}));return(0,n.flatten)(t)},s.prototype.getFollowSetFromFollowKey=function(n){if(n===e.EOF_FOLLOW_KEY)return[t.EOF];var r=n.ruleName+n.idxInCallingRule+i.IN+n.inRule;return this.resyncFollows[r]},s.prototype.addToResyncTokens=function(e,n){return this.tokenMatcher(e,t.EOF)||n.push(e),n},s.prototype.reSyncTo=function(e){for(var t=[],r=this.LA(1);!1===this.tokenMatcher(r,e);)r=this.SKIP_TOKEN(),this.addToResyncTokens(r,t);return(0,n.dropRight)(t)},s.prototype.attemptInRepetitionRecovery=function(e,t,n,r,i,o,a){},s.prototype.getCurrentGrammarPath=function(e,t){return{ruleStack:this.getHumanReadableRuleStack(),occurrenceStack:(0,n.cloneArr)(this.RULE_OCCURRENCE_STACK),lastTok:e,lastTokOccurrence:t}},s.prototype.getHumanReadableRuleStack=function(){var e=this;return(0,n.map)(this.RULE_STACK,(function(t){return e.shortRuleNameToFullName(t)}))},s}();function u(e,n,r,i,o,a,s){var u=this.getKeyForAutomaticLookahead(i,o),c=this.firstAfterRepMap[u];if(void 0===c){var l=this.getCurrRuleFullName();c=new a(this.getGAstProductions()[l],o).startWalking(),this.firstAfterRepMap[u]=c}var p=c.token,f=c.occurrence,d=c.isEndOfRule;1===this.RULE_STACK.length&&d&&void 0===p&&(p=t.EOF,f=1),this.shouldInRepetitionRecoveryBeTried(p,f,s)&&this.tryInRepetitionRecovery(e,n,r,p)}e.Recoverable=s,e.attemptInRepetitionRecovery=u}(Gc);var ol={},al={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.getKeyForAutomaticLookahead=e.AT_LEAST_ONE_SEP_IDX=e.MANY_SEP_IDX=e.AT_LEAST_ONE_IDX=e.MANY_IDX=e.OPTION_IDX=e.OR_IDX=e.BITS_FOR_ALT_IDX=e.BITS_FOR_RULE_IDX=e.BITS_FOR_OCCURRENCE_IDX=e.BITS_FOR_METHOD_TYPE=void 0,e.BITS_FOR_METHOD_TYPE=4,e.BITS_FOR_OCCURRENCE_IDX=8,e.BITS_FOR_RULE_IDX=12,e.BITS_FOR_ALT_IDX=8,e.OR_IDX=1<<e.BITS_FOR_OCCURRENCE_IDX,e.OPTION_IDX=2<<e.BITS_FOR_OCCURRENCE_IDX,e.MANY_IDX=3<<e.BITS_FOR_OCCURRENCE_IDX,e.AT_LEAST_ONE_IDX=4<<e.BITS_FOR_OCCURRENCE_IDX,e.MANY_SEP_IDX=5<<e.BITS_FOR_OCCURRENCE_IDX,e.AT_LEAST_ONE_SEP_IDX=6<<e.BITS_FOR_OCCURRENCE_IDX,e.getKeyForAutomaticLookahead=function(e,t,n){return n|t|e},e.BITS_FOR_ALT_IDX}(al),Object.defineProperty(ol,"__esModule",{value:!0}),ol.LooksAhead=void 0;var sl=ic,ul=xs,cl=Ds,ll=al,pl=Ru,fl=function(){function e(){}return e.prototype.initLooksAhead=function(e){this.dynamicTokensEnabled=(0,ul.has)(e,"dynamicTokensEnabled")?e.dynamicTokensEnabled:cl.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled,this.maxLookahead=(0,ul.has)(e,"maxLookahead")?e.maxLookahead:cl.DEFAULT_PARSER_CONFIG.maxLookahead,this.lookAheadFuncsCache=(0,ul.isES2015MapSupported)()?new Map:[],(0,ul.isES2015MapSupported)()?(this.getLaFuncFromCache=this.getLaFuncFromMap,this.setLaFuncCache=this.setLaFuncCacheUsingMap):(this.getLaFuncFromCache=this.getLaFuncFromObj,this.setLaFuncCache=this.setLaFuncUsingObj)},e.prototype.preComputeLookaheadFunctions=function(e){var t=this;(0,ul.forEach)(e,(function(e){t.TRACE_INIT(e.name+" Rule Lookahead",(function(){var n=(0,pl.collectMethods)(e),r=n.alternation,i=n.repetition,o=n.option,a=n.repetitionMandatory,s=n.repetitionMandatoryWithSeparator,u=n.repetitionWithSeparator;(0,ul.forEach)(r,(function(n){var r=0===n.idx?"":n.idx;t.TRACE_INIT(""+(0,pl.getProductionDslName)(n)+r,(function(){var r=(0,sl.buildLookaheadFuncForOr)(n.idx,e,n.maxLookahead||t.maxLookahead,n.hasPredicates,t.dynamicTokensEnabled,t.lookAheadBuilderForAlternatives),i=(0,ll.getKeyForAutomaticLookahead)(t.fullRuleNameToShort[e.name],ll.OR_IDX,n.idx);t.setLaFuncCache(i,r)}))})),(0,ul.forEach)(i,(function(n){t.computeLookaheadFunc(e,n.idx,ll.MANY_IDX,sl.PROD_TYPE.REPETITION,n.maxLookahead,(0,pl.getProductionDslName)(n))})),(0,ul.forEach)(o,(function(n){t.computeLookaheadFunc(e,n.idx,ll.OPTION_IDX,sl.PROD_TYPE.OPTION,n.maxLookahead,(0,pl.getProductionDslName)(n))})),(0,ul.forEach)(a,(function(n){t.computeLookaheadFunc(e,n.idx,ll.AT_LEAST_ONE_IDX,sl.PROD_TYPE.REPETITION_MANDATORY,n.maxLookahead,(0,pl.getProductionDslName)(n))})),(0,ul.forEach)(s,(function(n){t.computeLookaheadFunc(e,n.idx,ll.AT_LEAST_ONE_SEP_IDX,sl.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,n.maxLookahead,(0,pl.getProductionDslName)(n))})),(0,ul.forEach)(u,(function(n){t.computeLookaheadFunc(e,n.idx,ll.MANY_SEP_IDX,sl.PROD_TYPE.REPETITION_WITH_SEPARATOR,n.maxLookahead,(0,pl.getProductionDslName)(n))}))}))}))},e.prototype.computeLookaheadFunc=function(e,t,n,r,i,o){var a=this;this.TRACE_INIT(""+o+(0===t?"":t),(function(){var o=(0,sl.buildLookaheadFuncForOptionalProd)(t,e,i||a.maxLookahead,a.dynamicTokensEnabled,r,a.lookAheadBuilderForOptional),s=(0,ll.getKeyForAutomaticLookahead)(a.fullRuleNameToShort[e.name],n,t);a.setLaFuncCache(s,o)}))},e.prototype.lookAheadBuilderForOptional=function(e,t,n){return(0,sl.buildSingleAlternativeLookaheadFunction)(e,t,n)},e.prototype.lookAheadBuilderForAlternatives=function(e,t,n,r){return(0,sl.buildAlternativesLookAheadFunc)(e,t,n,r)},e.prototype.getKeyForAutomaticLookahead=function(e,t){var n=this.getLastExplicitRuleShortName();return(0,ll.getKeyForAutomaticLookahead)(n,e,t)},e.prototype.getLaFuncFromCache=function(e){},e.prototype.getLaFuncFromMap=function(e){return this.lookAheadFuncsCache.get(e)},e.prototype.getLaFuncFromObj=function(e){return this.lookAheadFuncsCache[e]},e.prototype.setLaFuncCache=function(e,t){},e.prototype.setLaFuncCacheUsingMap=function(e,t){this.lookAheadFuncsCache.set(e,t)},e.prototype.setLaFuncUsingObj=function(e,t){this.lookAheadFuncsCache[e]=t},e}();ol.LooksAhead=fl;var dl={},hl={};Object.defineProperty(hl,"__esModule",{value:!0}),hl.addNoneTerminalToCst=hl.addTerminalToCst=hl.setNodeLocationFull=hl.setNodeLocationOnlyOffset=void 0,hl.setNodeLocationOnlyOffset=function(e,t){!0===isNaN(e.startOffset)?(e.startOffset=t.startOffset,e.endOffset=t.endOffset):e.endOffset<t.endOffset==!0&&(e.endOffset=t.endOffset)},hl.setNodeLocationFull=function(e,t){!0===isNaN(e.startOffset)?(e.startOffset=t.startOffset,e.startColumn=t.startColumn,e.startLine=t.startLine,e.endOffset=t.endOffset,e.endColumn=t.endColumn,e.endLine=t.endLine):e.endOffset<t.endOffset==!0&&(e.endOffset=t.endOffset,e.endColumn=t.endColumn,e.endLine=t.endLine)},hl.addTerminalToCst=function(e,t,n){void 0===e.children[n]?e.children[n]=[t]:e.children[n].push(t)},hl.addNoneTerminalToCst=function(e,t,n){void 0===e.children[t]?e.children[t]=[n]:e.children[t].push(n)};var ml={},gl={};Object.defineProperty(gl,"__esModule",{value:!0}),gl.defineNameProp=gl.functionName=gl.classNameFromInstance=void 0;var vl=xs;gl.classNameFromInstance=function(e){return El(e.constructor)};var yl="name";function El(e){var t=e.name;return t||"anonymous"}gl.functionName=El,gl.defineNameProp=function(e,t){var n=Object.getOwnPropertyDescriptor(e,yl);return!(!(0,vl.isUndefined)(n)&&!n.configurable)&&(Object.defineProperty(e,yl,{enumerable:!1,configurable:!0,writable:!1,value:t}),!0)},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.validateRedundantMethods=e.validateMissingCstMethods=e.validateVisitor=e.CstVisitorDefinitionError=e.createBaseVisitorConstructorWithDefaults=e.createBaseSemanticVisitorConstructor=e.defaultVisit=void 0;var t,n,r=xs,i=gl;function o(e,t){for(var n=(0,r.keys)(e),i=n.length,o=0;o<i;o++)for(var a=e[n[o]],s=a.length,u=0;u<s;u++){var c=a[u];void 0===c.tokenTypeIdx&&this[c.name](c.children,t)}}function a(e,t){var n=s(e,t),r=c(e,t);return n.concat(r)}function s(e,n){var o=(0,r.map)(n,(function(n){if(!(0,r.isFunction)(e[n]))return{msg:"Missing visitor method: <"+n+"> on "+(0,i.functionName)(e.constructor)+" CST Visitor.",type:t.MISSING_METHOD,methodName:n}}));return(0,r.compact)(o)}e.defaultVisit=o,e.createBaseSemanticVisitorConstructor=function(e,t){var n=function(){};return(0,i.defineNameProp)(n,e+"BaseSemantics"),(n.prototype={visit:function(e,t){if((0,r.isArray)(e)&&(e=e[0]),!(0,r.isUndefined)(e))return this[e.name](e.children,t)},validateVisitor:function(){var e=a(this,t);if(!(0,r.isEmpty)(e)){var n=(0,r.map)(e,(function(e){return e.msg}));throw Error("Errors Detected in CST Visitor <"+(0,i.functionName)(this.constructor)+">:\n\t"+n.join("\n\n").replace(/\n/g,"\n\t"))}}}).constructor=n,n._RULE_NAMES=t,n},e.createBaseVisitorConstructorWithDefaults=function(e,t,n){var a=function(){};(0,i.defineNameProp)(a,e+"BaseSemanticsWithDefaults");var s=Object.create(n.prototype);return(0,r.forEach)(t,(function(e){s[e]=o})),(a.prototype=s).constructor=a,a},(n=t=e.CstVisitorDefinitionError||(e.CstVisitorDefinitionError={}))[n.REDUNDANT_METHOD=0]="REDUNDANT_METHOD",n[n.MISSING_METHOD=1]="MISSING_METHOD",e.validateVisitor=a,e.validateMissingCstMethods=s;var u=["constructor","visit","validateVisitor"];function c(e,n){var o=[];for(var a in e)!(0,r.isFunction)(e[a])||(0,r.contains)(u,a)||(0,r.contains)(n,a)||o.push({msg:"Redundant visitor method: <"+a+"> on "+(0,i.functionName)(e.constructor)+" CST Visitor\nThere is no Grammar Rule corresponding to this method's name.\n",type:t.REDUNDANT_METHOD,methodName:a});return o}e.validateRedundantMethods=c}(ml),Object.defineProperty(dl,"__esModule",{value:!0}),dl.TreeBuilder=void 0;var _l=hl,Cl=xs,Tl=ml,Al=Ds,Rl=function(){function e(){}return e.prototype.initTreeBuilder=function(e){if(this.CST_STACK=[],this.outputCst=e.outputCst,this.nodeLocationTracking=(0,Cl.has)(e,"nodeLocationTracking")?e.nodeLocationTracking:Al.DEFAULT_PARSER_CONFIG.nodeLocationTracking,this.outputCst)if(/full/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=_l.setNodeLocationFull,this.setNodeLocationFromNode=_l.setNodeLocationFull,this.cstPostRule=Cl.NOOP,this.setInitialNodeLocation=this.setInitialNodeLocationFullRecovery):(this.setNodeLocationFromToken=Cl.NOOP,this.setNodeLocationFromNode=Cl.NOOP,this.cstPostRule=this.cstPostRuleFull,this.setInitialNodeLocation=this.setInitialNodeLocationFullRegular);else if(/onlyOffset/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=_l.setNodeLocationOnlyOffset,this.setNodeLocationFromNode=_l.setNodeLocationOnlyOffset,this.cstPostRule=Cl.NOOP,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRecovery):(this.setNodeLocationFromToken=Cl.NOOP,this.setNodeLocationFromNode=Cl.NOOP,this.cstPostRule=this.cstPostRuleOnlyOffset,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRegular);else{if(!/none/i.test(this.nodeLocationTracking))throw Error('Invalid <nodeLocationTracking> config option: "'+e.nodeLocationTracking+'"');this.setNodeLocationFromToken=Cl.NOOP,this.setNodeLocationFromNode=Cl.NOOP,this.cstPostRule=Cl.NOOP,this.setInitialNodeLocation=Cl.NOOP}else this.cstInvocationStateUpdate=Cl.NOOP,this.cstFinallyStateUpdate=Cl.NOOP,this.cstPostTerminal=Cl.NOOP,this.cstPostNonTerminal=Cl.NOOP,this.cstPostRule=Cl.NOOP},e.prototype.setInitialNodeLocationOnlyOffsetRecovery=function(e){e.location={startOffset:NaN,endOffset:NaN}},e.prototype.setInitialNodeLocationOnlyOffsetRegular=function(e){e.location={startOffset:this.LA(1).startOffset,endOffset:NaN}},e.prototype.setInitialNodeLocationFullRecovery=function(e){e.location={startOffset:NaN,startLine:NaN,startColumn:NaN,endOffset:NaN,endLine:NaN,endColumn:NaN}},e.prototype.setInitialNodeLocationFullRegular=function(e){var t=this.LA(1);e.location={startOffset:t.startOffset,startLine:t.startLine,startColumn:t.startColumn,endOffset:NaN,endLine:NaN,endColumn:NaN}},e.prototype.cstInvocationStateUpdate=function(e,t){var n={name:e,children:{}};this.setInitialNodeLocation(n),this.CST_STACK.push(n)},e.prototype.cstFinallyStateUpdate=function(){this.CST_STACK.pop()},e.prototype.cstPostRuleFull=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset==!0?(n.endOffset=t.endOffset,n.endLine=t.endLine,n.endColumn=t.endColumn):(n.startOffset=NaN,n.startLine=NaN,n.startColumn=NaN)},e.prototype.cstPostRuleOnlyOffset=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset==!0?n.endOffset=t.endOffset:n.startOffset=NaN},e.prototype.cstPostTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,_l.addTerminalToCst)(n,t,e),this.setNodeLocationFromToken(n.location,t)},e.prototype.cstPostNonTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,_l.addNoneTerminalToCst)(n,t,e),this.setNodeLocationFromNode(n.location,e.location)},e.prototype.getBaseCstVisitorConstructor=function(){if((0,Cl.isUndefined)(this.baseCstVisitorConstructor)){var e=(0,Tl.createBaseSemanticVisitorConstructor)(this.className,(0,Cl.keys)(this.gastProductionsCache));return this.baseCstVisitorConstructor=e,e}return this.baseCstVisitorConstructor},e.prototype.getBaseCstVisitorConstructorWithDefaults=function(){if((0,Cl.isUndefined)(this.baseCstVisitorWithDefaultsConstructor)){var e=(0,Tl.createBaseVisitorConstructorWithDefaults)(this.className,(0,Cl.keys)(this.gastProductionsCache),this.getBaseCstVisitorConstructor());return this.baseCstVisitorWithDefaultsConstructor=e,e}return this.baseCstVisitorWithDefaultsConstructor},e.prototype.getLastExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-1]},e.prototype.getPreviousExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-2]},e.prototype.getLastExplicitRuleOccurrenceIndex=function(){var e=this.RULE_OCCURRENCE_STACK;return e[e.length-1]},e}();dl.TreeBuilder=Rl;var Il={};Object.defineProperty(Il,"__esModule",{value:!0}),Il.LexerAdapter=void 0;var Dl=Ds,xl=function(){function e(){}return e.prototype.initLexerAdapter=function(){this.tokVector=[],this.tokVectorLength=0,this.currIdx=-1},Object.defineProperty(e.prototype,"input",{get:function(){return this.tokVector},set:function(e){if(!0!==this.selfAnalysisDone)throw Error("Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.");this.reset(),this.tokVector=e,this.tokVectorLength=e.length},enumerable:!1,configurable:!0}),e.prototype.SKIP_TOKEN=function(){return this.currIdx<=this.tokVector.length-2?(this.consumeToken(),this.LA(1)):Dl.END_OF_FILE},e.prototype.LA=function(e){var t=this.currIdx+e;return t<0||this.tokVectorLength<=t?Dl.END_OF_FILE:this.tokVector[t]},e.prototype.consumeToken=function(){this.currIdx++},e.prototype.exportLexerState=function(){return this.currIdx},e.prototype.importLexerState=function(e){this.currIdx=e},e.prototype.resetLexerState=function(){this.currIdx=-1},e.prototype.moveToTerminatedState=function(){this.currIdx=this.tokVector.length-1},e.prototype.getLexerPosition=function(){return this.exportLexerState()},e}();Il.LexerAdapter=xl;var bl={};Object.defineProperty(bl,"__esModule",{value:!0}),bl.RecognizerApi=void 0;var Sl=xs,kl=Vc,Ol=Ds,Nl=Yu,Pl=rc,wl=Vs,Ll=function(){function e(){}return e.prototype.ACTION=function(e){return e.call(this)},e.prototype.consume=function(e,t,n){return this.consumeInternal(t,e,n)},e.prototype.subrule=function(e,t,n){return this.subruleInternal(t,e,n)},e.prototype.option=function(e,t){return this.optionInternal(t,e)},e.prototype.or=function(e,t){return this.orInternal(t,e)},e.prototype.many=function(e,t){return this.manyInternal(e,t)},e.prototype.atLeastOne=function(e,t){return this.atLeastOneInternal(e,t)},e.prototype.CONSUME=function(e,t){return this.consumeInternal(e,0,t)},e.prototype.CONSUME1=function(e,t){return this.consumeInternal(e,1,t)},e.prototype.CONSUME2=function(e,t){return this.consumeInternal(e,2,t)},e.prototype.CONSUME3=function(e,t){return this.consumeInternal(e,3,t)},e.prototype.CONSUME4=function(e,t){return this.consumeInternal(e,4,t)},e.prototype.CONSUME5=function(e,t){return this.consumeInternal(e,5,t)},e.prototype.CONSUME6=function(e,t){return this.consumeInternal(e,6,t)},e.prototype.CONSUME7=function(e,t){return this.consumeInternal(e,7,t)},e.prototype.CONSUME8=function(e,t){return this.consumeInternal(e,8,t)},e.prototype.CONSUME9=function(e,t){return this.consumeInternal(e,9,t)},e.prototype.SUBRULE=function(e,t){return this.subruleInternal(e,0,t)},e.prototype.SUBRULE1=function(e,t){return this.subruleInternal(e,1,t)},e.prototype.SUBRULE2=function(e,t){return this.subruleInternal(e,2,t)},e.prototype.SUBRULE3=function(e,t){return this.subruleInternal(e,3,t)},e.prototype.SUBRULE4=function(e,t){return this.subruleInternal(e,4,t)},e.prototype.SUBRULE5=function(e,t){return this.subruleInternal(e,5,t)},e.prototype.SUBRULE6=function(e,t){return this.subruleInternal(e,6,t)},e.prototype.SUBRULE7=function(e,t){return this.subruleInternal(e,7,t)},e.prototype.SUBRULE8=function(e,t){return this.subruleInternal(e,8,t)},e.prototype.SUBRULE9=function(e,t){return this.subruleInternal(e,9,t)},e.prototype.OPTION=function(e){return this.optionInternal(e,0)},e.prototype.OPTION1=function(e){return this.optionInternal(e,1)},e.prototype.OPTION2=function(e){return this.optionInternal(e,2)},e.prototype.OPTION3=function(e){return this.optionInternal(e,3)},e.prototype.OPTION4=function(e){return this.optionInternal(e,4)},e.prototype.OPTION5=function(e){return this.optionInternal(e,5)},e.prototype.OPTION6=function(e){return this.optionInternal(e,6)},e.prototype.OPTION7=function(e){return this.optionInternal(e,7)},e.prototype.OPTION8=function(e){return this.optionInternal(e,8)},e.prototype.OPTION9=function(e){return this.optionInternal(e,9)},e.prototype.OR=function(e){return this.orInternal(e,0)},e.prototype.OR1=function(e){return this.orInternal(e,1)},e.prototype.OR2=function(e){return this.orInternal(e,2)},e.prototype.OR3=function(e){return this.orInternal(e,3)},e.prototype.OR4=function(e){return this.orInternal(e,4)},e.prototype.OR5=function(e){return this.orInternal(e,5)},e.prototype.OR6=function(e){return this.orInternal(e,6)},e.prototype.OR7=function(e){return this.orInternal(e,7)},e.prototype.OR8=function(e){return this.orInternal(e,8)},e.prototype.OR9=function(e){return this.orInternal(e,9)},e.prototype.MANY=function(e){this.manyInternal(0,e)},e.prototype.MANY1=function(e){this.manyInternal(1,e)},e.prototype.MANY2=function(e){this.manyInternal(2,e)},e.prototype.MANY3=function(e){this.manyInternal(3,e)},e.prototype.MANY4=function(e){this.manyInternal(4,e)},e.prototype.MANY5=function(e){this.manyInternal(5,e)},e.prototype.MANY6=function(e){this.manyInternal(6,e)},e.prototype.MANY7=function(e){this.manyInternal(7,e)},e.prototype.MANY8=function(e){this.manyInternal(8,e)},e.prototype.MANY9=function(e){this.manyInternal(9,e)},e.prototype.MANY_SEP=function(e){this.manySepFirstInternal(0,e)},e.prototype.MANY_SEP1=function(e){this.manySepFirstInternal(1,e)},e.prototype.MANY_SEP2=function(e){this.manySepFirstInternal(2,e)},e.prototype.MANY_SEP3=function(e){this.manySepFirstInternal(3,e)},e.prototype.MANY_SEP4=function(e){this.manySepFirstInternal(4,e)},e.prototype.MANY_SEP5=function(e){this.manySepFirstInternal(5,e)},e.prototype.MANY_SEP6=function(e){this.manySepFirstInternal(6,e)},e.prototype.MANY_SEP7=function(e){this.manySepFirstInternal(7,e)},e.prototype.MANY_SEP8=function(e){this.manySepFirstInternal(8,e)},e.prototype.MANY_SEP9=function(e){this.manySepFirstInternal(9,e)},e.prototype.AT_LEAST_ONE=function(e){this.atLeastOneInternal(0,e)},e.prototype.AT_LEAST_ONE1=function(e){return this.atLeastOneInternal(1,e)},e.prototype.AT_LEAST_ONE2=function(e){this.atLeastOneInternal(2,e)},e.prototype.AT_LEAST_ONE3=function(e){this.atLeastOneInternal(3,e)},e.prototype.AT_LEAST_ONE4=function(e){this.atLeastOneInternal(4,e)},e.prototype.AT_LEAST_ONE5=function(e){this.atLeastOneInternal(5,e)},e.prototype.AT_LEAST_ONE6=function(e){this.atLeastOneInternal(6,e)},e.prototype.AT_LEAST_ONE7=function(e){this.atLeastOneInternal(7,e)},e.prototype.AT_LEAST_ONE8=function(e){this.atLeastOneInternal(8,e)},e.prototype.AT_LEAST_ONE9=function(e){this.atLeastOneInternal(9,e)},e.prototype.AT_LEAST_ONE_SEP=function(e){this.atLeastOneSepFirstInternal(0,e)},e.prototype.AT_LEAST_ONE_SEP1=function(e){this.atLeastOneSepFirstInternal(1,e)},e.prototype.AT_LEAST_ONE_SEP2=function(e){this.atLeastOneSepFirstInternal(2,e)},e.prototype.AT_LEAST_ONE_SEP3=function(e){this.atLeastOneSepFirstInternal(3,e)},e.prototype.AT_LEAST_ONE_SEP4=function(e){this.atLeastOneSepFirstInternal(4,e)},e.prototype.AT_LEAST_ONE_SEP5=function(e){this.atLeastOneSepFirstInternal(5,e)},e.prototype.AT_LEAST_ONE_SEP6=function(e){this.atLeastOneSepFirstInternal(6,e)},e.prototype.AT_LEAST_ONE_SEP7=function(e){this.atLeastOneSepFirstInternal(7,e)},e.prototype.AT_LEAST_ONE_SEP8=function(e){this.atLeastOneSepFirstInternal(8,e)},e.prototype.AT_LEAST_ONE_SEP9=function(e){this.atLeastOneSepFirstInternal(9,e)},e.prototype.RULE=function(e,t,n){if(void 0===n&&(n=Ol.DEFAULT_RULE_CONFIG),(0,Sl.contains)(this.definedRulesNames,e)){var r={message:Nl.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({topLevelRule:e,grammarName:this.className}),type:Ol.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:e};this.definitionErrors.push(r)}this.definedRulesNames.push(e);var i=this.defineRule(e,t,n);return this[e]=i,i},e.prototype.OVERRIDE_RULE=function(e,t,n){void 0===n&&(n=Ol.DEFAULT_RULE_CONFIG);var r=[];r=r.concat((0,Pl.validateRuleIsOverridden)(e,this.definedRulesNames,this.className)),this.definitionErrors=this.definitionErrors.concat(r);var i=this.defineRule(e,t,n);return this[e]=i,i},e.prototype.BACKTRACK=function(e,t){return function(){this.isBackTrackingStack.push(1);var n=this.saveRecogState();try{return e.apply(this,t),!0}catch(PI){if((0,kl.isRecognitionException)(PI))return!1;throw PI}finally{this.reloadRecogState(n),this.isBackTrackingStack.pop()}}},e.prototype.getGAstProductions=function(){return this.gastProductionsCache},e.prototype.getSerializedGastProductions=function(){return(0,wl.serializeGrammar)((0,Sl.values)(this.gastProductionsCache))},e}();bl.RecognizerApi=Ll;var Fl={};Object.defineProperty(Fl,"__esModule",{value:!0}),Fl.RecognizerEngine=void 0;var Ml=xs,$l=al,Bl=Vc,ql=ic,jl=oc,Ul=Ds,Wl=Gc,Kl=Hs,Gl=tu,Vl=gl,Hl=function(){function e(){}return e.prototype.initRecognizerEngine=function(e,t){if(this.className=(0,Vl.classNameFromInstance)(this),this.shortRuleNameToFull={},this.fullRuleNameToShort={},this.ruleShortNameIdx=256,this.tokenMatcher=Gl.tokenStructuredMatcherNoCategories,this.definedRulesNames=[],this.tokensMap={},this.isBackTrackingStack=[],this.RULE_STACK=[],this.RULE_OCCURRENCE_STACK=[],this.gastProductionsCache={},(0,Ml.has)(t,"serializedGrammar"))throw Error("The Parser's configuration can no longer contain a <serializedGrammar> property.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\n\tFor Further details.");if((0,Ml.isArray)(e)){if((0,Ml.isEmpty)(e))throw Error("A Token Vocabulary cannot be empty.\n\tNote that the first argument for the parser constructor\n\tis no longer a Token vector (since v4.0).");if("number"==typeof e[0].startOffset)throw Error("The Parser constructor no longer accepts a token vector as the first argument.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\n\tFor Further details.")}if((0,Ml.isArray)(e))this.tokensMap=(0,Ml.reduce)(e,(function(e,t){return e[t.name]=t,e}),{});else if((0,Ml.has)(e,"modes")&&(0,Ml.every)((0,Ml.flatten)((0,Ml.values)(e.modes)),Gl.isTokenType)){var n=(0,Ml.flatten)((0,Ml.values)(e.modes)),r=(0,Ml.uniq)(n);this.tokensMap=(0,Ml.reduce)(r,(function(e,t){return e[t.name]=t,e}),{})}else{if(!(0,Ml.isObject)(e))throw new Error("<tokensDictionary> argument must be An Array of Token constructors, A dictionary of Token constructors or an IMultiModeLexerDefinition");this.tokensMap=(0,Ml.cloneObj)(e)}this.tokensMap.EOF=Kl.EOF;var i=(0,Ml.every)((0,Ml.values)(e),(function(e){return(0,Ml.isEmpty)(e.categoryMatches)}));this.tokenMatcher=i?Gl.tokenStructuredMatcherNoCategories:Gl.tokenStructuredMatcher,(0,Gl.augmentTokenTypes)((0,Ml.values)(this.tokensMap))},e.prototype.defineRule=function(e,t,n){if(this.selfAnalysisDone)throw Error("Grammar rule <"+e+"> may not be defined after the 'performSelfAnalysis' method has been called'\nMake sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.");var r=(0,Ml.has)(n,"resyncEnabled")?n.resyncEnabled:Ul.DEFAULT_RULE_CONFIG.resyncEnabled,i=(0,Ml.has)(n,"recoveryValueFunc")?n.recoveryValueFunc:Ul.DEFAULT_RULE_CONFIG.recoveryValueFunc,o=this.ruleShortNameIdx<<$l.BITS_FOR_METHOD_TYPE+$l.BITS_FOR_OCCURRENCE_IDX;function a(e){try{if(!0===this.outputCst){t.apply(this,e);var n=this.CST_STACK[this.CST_STACK.length-1];return this.cstPostRule(n),n}return t.apply(this,e)}catch(PI){return this.invokeRuleCatch(PI,r,i)}finally{this.ruleFinallyStateUpdate()}}this.ruleShortNameIdx++,this.shortRuleNameToFull[o]=e,this.fullRuleNameToShort[e]=o;var s=function(t,n){return void 0===t&&(t=0),this.ruleInvocationStateUpdate(o,e,t),a.call(this,n)};return s.ruleName=e,s.originalGrammarAction=t,s},e.prototype.invokeRuleCatch=function(e,t,n){var r=1===this.RULE_STACK.length,i=t&&!this.isBackTracking()&&this.recoveryEnabled;if((0,Bl.isRecognitionException)(e)){var o=e;if(i){var a,s=this.findReSyncTokenType();if(this.isInCurrentRuleReSyncSet(s))return o.resyncedTokens=this.reSyncTo(s),this.outputCst?((a=this.CST_STACK[this.CST_STACK.length-1]).recoveredNode=!0,a):n();throw this.outputCst&&((a=this.CST_STACK[this.CST_STACK.length-1]).recoveredNode=!0,o.partialCstResult=a),o}if(r)return this.moveToTerminatedState(),n();throw o}throw e},e.prototype.optionInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.OPTION_IDX,t);return this.optionInternalLogic(e,t,n)},e.prototype.optionInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==e.DEF){if(r=e.DEF,void 0!==(i=e.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=e;if(!0===a.call(this))return r.call(this)},e.prototype.atLeastOneInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.AT_LEAST_ONE_IDX,e);return this.atLeastOneInternalLogic(e,t,n)},e.prototype.atLeastOneInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==t.DEF){if(r=t.DEF,void 0!==(i=t.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=t;if(!0!==a.call(this))throw this.raiseEarlyExitException(e,ql.PROD_TYPE.REPETITION_MANDATORY,t.ERR_MSG);for(var u=this.doSingleRepetition(r);!0===a.call(this)&&!0===u;)u=this.doSingleRepetition(r);this.attemptInRepetitionRecovery(this.atLeastOneInternal,[e,t],a,$l.AT_LEAST_ONE_IDX,e,jl.NextTerminalAfterAtLeastOneWalker)},e.prototype.atLeastOneSepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.AT_LEAST_ONE_SEP_IDX,e);this.atLeastOneSepFirstInternalLogic(e,t,n)},e.prototype.atLeastOneSepFirstInternalLogic=function(e,t,n){var r=this,i=t.DEF,o=t.SEP;if(!0!==this.getLaFuncFromCache(n).call(this))throw this.raiseEarlyExitException(e,ql.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,t.ERR_MSG);i.call(this);for(var a=function(){return r.tokenMatcher(r.LA(1),o)};!0===this.tokenMatcher(this.LA(1),o);)this.CONSUME(o),i.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,o,a,i,jl.NextTerminalAfterAtLeastOneSepWalker],a,$l.AT_LEAST_ONE_SEP_IDX,e,jl.NextTerminalAfterAtLeastOneSepWalker)},e.prototype.manyInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.MANY_IDX,e);return this.manyInternalLogic(e,t,n)},e.prototype.manyInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==t.DEF){if(r=t.DEF,void 0!==(i=t.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=t;for(var u=!0;!0===a.call(this)&&!0===u;)u=this.doSingleRepetition(r);this.attemptInRepetitionRecovery(this.manyInternal,[e,t],a,$l.MANY_IDX,e,jl.NextTerminalAfterManyWalker,u)},e.prototype.manySepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.MANY_SEP_IDX,e);this.manySepFirstInternalLogic(e,t,n)},e.prototype.manySepFirstInternalLogic=function(e,t,n){var r=this,i=t.DEF,o=t.SEP;if(!0===this.getLaFuncFromCache(n).call(this)){i.call(this);for(var a=function(){return r.tokenMatcher(r.LA(1),o)};!0===this.tokenMatcher(this.LA(1),o);)this.CONSUME(o),i.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,o,a,i,jl.NextTerminalAfterManySepWalker],a,$l.MANY_SEP_IDX,e,jl.NextTerminalAfterManySepWalker)}},e.prototype.repetitionSepSecondInternal=function(e,t,n,r,i){for(;n();)this.CONSUME(t),r.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,t,n,r,i],n,$l.AT_LEAST_ONE_SEP_IDX,e,i)},e.prototype.doSingleRepetition=function(e){var t=this.getLexerPosition();return e.call(this),this.getLexerPosition()>t},e.prototype.orInternal=function(e,t){var n=this.getKeyForAutomaticLookahead($l.OR_IDX,t),r=(0,Ml.isArray)(e)?e:e.DEF,i=this.getLaFuncFromCache(n).call(this,r);if(void 0!==i)return r[i].ALT.call(this);this.raiseNoAltException(t,e.ERR_MSG)},e.prototype.ruleFinallyStateUpdate=function(){if(this.RULE_STACK.pop(),this.RULE_OCCURRENCE_STACK.pop(),this.cstFinallyStateUpdate(),0===this.RULE_STACK.length&&!1===this.isAtEndOfInput()){var e=this.LA(1),t=this.errorMessageProvider.buildNotAllInputParsedMessage({firstRedundant:e,ruleName:this.getCurrRuleFullName()});this.SAVE_ERROR(new Bl.NotAllInputParsedException(t,e))}},e.prototype.subruleInternal=function(e,t,n){var r;try{var i=void 0!==n?n.ARGS:void 0;return r=e.call(this,t,i),this.cstPostNonTerminal(r,void 0!==n&&void 0!==n.LABEL?n.LABEL:e.ruleName),r}catch(PI){this.subruleInternalError(PI,n,e.ruleName)}},e.prototype.subruleInternalError=function(e,t,n){throw(0,Bl.isRecognitionException)(e)&&void 0!==e.partialCstResult&&(this.cstPostNonTerminal(e.partialCstResult,void 0!==t&&void 0!==t.LABEL?t.LABEL:n),delete e.partialCstResult),e},e.prototype.consumeInternal=function(e,t,n){var r;try{var i=this.LA(1);!0===this.tokenMatcher(i,e)?(this.consumeToken(),r=i):this.consumeInternalError(e,i,n)}catch(o){r=this.consumeInternalRecovery(e,t,o)}return this.cstPostTerminal(void 0!==n&&void 0!==n.LABEL?n.LABEL:e.name,r),r},e.prototype.consumeInternalError=function(e,t,n){var r,i=this.LA(0);throw r=void 0!==n&&n.ERR_MSG?n.ERR_MSG:this.errorMessageProvider.buildMismatchTokenMessage({expected:e,actual:t,previous:i,ruleName:this.getCurrRuleFullName()}),this.SAVE_ERROR(new Bl.MismatchedTokenException(r,t,i))},e.prototype.consumeInternalRecovery=function(e,t,n){if(!this.recoveryEnabled||"MismatchedTokenException"!==n.name||this.isBackTracking())throw n;var r=this.getFollowsForInRuleRecovery(e,t);try{return this.tryInRuleRecovery(e,r)}catch(i){throw i.name===Wl.IN_RULE_RECOVERY_EXCEPTION?n:i}},e.prototype.saveRecogState=function(){var e=this.errors,t=(0,Ml.cloneArr)(this.RULE_STACK);return{errors:e,lexerState:this.exportLexerState(),RULE_STACK:t,CST_STACK:this.CST_STACK}},e.prototype.reloadRecogState=function(e){this.errors=e.errors,this.importLexerState(e.lexerState),this.RULE_STACK=e.RULE_STACK},e.prototype.ruleInvocationStateUpdate=function(e,t,n){this.RULE_OCCURRENCE_STACK.push(n),this.RULE_STACK.push(e),this.cstInvocationStateUpdate(t,e)},e.prototype.isBackTracking=function(){return 0!==this.isBackTrackingStack.length},e.prototype.getCurrRuleFullName=function(){var e=this.getLastExplicitRuleShortName();return this.shortRuleNameToFull[e]},e.prototype.shortRuleNameToFullName=function(e){return this.shortRuleNameToFull[e]},e.prototype.isAtEndOfInput=function(){return this.tokenMatcher(this.LA(1),Kl.EOF)},e.prototype.reset=function(){this.resetLexerState(),this.isBackTrackingStack=[],this.errors=[],this.RULE_STACK=[],this.CST_STACK=[],this.RULE_OCCURRENCE_STACK=[]},e}();Fl.RecognizerEngine=Hl;var zl={};Object.defineProperty(zl,"__esModule",{value:!0}),zl.ErrorHandler=void 0;var Yl=Vc,Xl=xs,Jl=ic,Ql=Ds,Zl=function(){function e(){}return e.prototype.initErrorHandler=function(e){this._errors=[],this.errorMessageProvider=(0,Xl.has)(e,"errorMessageProvider")?e.errorMessageProvider:Ql.DEFAULT_PARSER_CONFIG.errorMessageProvider},e.prototype.SAVE_ERROR=function(e){if((0,Yl.isRecognitionException)(e))return e.context={ruleStack:this.getHumanReadableRuleStack(),ruleOccurrenceStack:(0,Xl.cloneArr)(this.RULE_OCCURRENCE_STACK)},this._errors.push(e),e;throw Error("Trying to save an Error which is not a RecognitionException")},Object.defineProperty(e.prototype,"errors",{get:function(){return(0,Xl.cloneArr)(this._errors)},set:function(e){this._errors=e},enumerable:!1,configurable:!0}),e.prototype.raiseEarlyExitException=function(e,t,n){for(var r=this.getCurrRuleFullName(),i=this.getGAstProductions()[r],o=(0,Jl.getLookaheadPathsForOptionalProd)(e,i,t,this.maxLookahead)[0],a=[],s=1;s<=this.maxLookahead;s++)a.push(this.LA(s));var u=this.errorMessageProvider.buildEarlyExitMessage({expectedIterationPaths:o,actual:a,previous:this.LA(0),customUserDescription:n,ruleName:r});throw this.SAVE_ERROR(new Yl.EarlyExitException(u,this.LA(1),this.LA(0)))},e.prototype.raiseNoAltException=function(e,t){for(var n=this.getCurrRuleFullName(),r=this.getGAstProductions()[n],i=(0,Jl.getLookaheadPathsForOr)(e,r,this.maxLookahead),o=[],a=1;a<=this.maxLookahead;a++)o.push(this.LA(a));var s=this.LA(0),u=this.errorMessageProvider.buildNoViableAltMessage({expectedPathsPerAlt:i,actual:o,previous:s,customUserDescription:t,ruleName:this.getCurrRuleFullName()});throw this.SAVE_ERROR(new Yl.NoViableAltException(u,this.LA(1),s))},e}();zl.ErrorHandler=Zl;var ep={};Object.defineProperty(ep,"__esModule",{value:!0}),ep.ContentAssist=void 0;var tp=oc,np=xs,rp=function(){function e(){}return e.prototype.initContentAssist=function(){},e.prototype.computeContentAssist=function(e,t){var n=this.gastProductionsCache[e];if((0,np.isUndefined)(n))throw Error("Rule ->"+e+"<- does not exist in this grammar.");return(0,tp.nextPossibleTokensAfter)([n],t,this.tokenMatcher,this.maxLookahead)},e.prototype.getNextPossibleTokenTypes=function(e){var t=(0,np.first)(e.ruleStack),n=this.getGAstProductions()[t];return new tp.NextAfterTokenWalker(n,e).startWalking()},e}();ep.ContentAssist=rp;var ip={};Object.defineProperty(ip,"__esModule",{value:!0}),ip.GastRecorder=void 0;var op=xs,ap=Vs,sp=zs,up=tu,cp=Hs,lp=Ds,pp=al,fp={description:"This Object indicates the Parser is during Recording Phase"};Object.freeze(fp);var dp=Math.pow(2,pp.BITS_FOR_OCCURRENCE_IDX)-1,hp=(0,cp.createToken)({name:"RECORDING_PHASE_TOKEN",pattern:sp.Lexer.NA});(0,up.augmentTokenTypes)([hp]);var mp=(0,cp.createTokenInstance)(hp,"This IToken indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",-1,-1,-1,-1,-1,-1);Object.freeze(mp);var gp={name:"This CSTNode indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",children:{}},vp=function(){function e(){}return e.prototype.initGastRecorder=function(e){this.recordingProdStack=[],this.RECORDING_PHASE=!1},e.prototype.enableRecording=function(){var e=this;this.RECORDING_PHASE=!0,this.TRACE_INIT("Enable Recording",(function(){for(var t=function(t){var n=t>0?t:"";e["CONSUME"+n]=function(e,n){return this.consumeInternalRecord(e,t,n)},e["SUBRULE"+n]=function(e,n){return this.subruleInternalRecord(e,t,n)},e["OPTION"+n]=function(e){return this.optionInternalRecord(e,t)},e["OR"+n]=function(e){return this.orInternalRecord(e,t)},e["MANY"+n]=function(e){this.manyInternalRecord(t,e)},e["MANY_SEP"+n]=function(e){this.manySepFirstInternalRecord(t,e)},e["AT_LEAST_ONE"+n]=function(e){this.atLeastOneInternalRecord(t,e)},e["AT_LEAST_ONE_SEP"+n]=function(e){this.atLeastOneSepFirstInternalRecord(t,e)}},n=0;n<10;n++)t(n);e.consume=function(e,t,n){return this.consumeInternalRecord(t,e,n)},e.subrule=function(e,t,n){return this.subruleInternalRecord(t,e,n)},e.option=function(e,t){return this.optionInternalRecord(t,e)},e.or=function(e,t){return this.orInternalRecord(t,e)},e.many=function(e,t){this.manyInternalRecord(e,t)},e.atLeastOne=function(e,t){this.atLeastOneInternalRecord(e,t)},e.ACTION=e.ACTION_RECORD,e.BACKTRACK=e.BACKTRACK_RECORD,e.LA=e.LA_RECORD}))},e.prototype.disableRecording=function(){var e=this;this.RECORDING_PHASE=!1,this.TRACE_INIT("Deleting Recording methods",(function(){for(var t=0;t<10;t++){var n=t>0?t:"";delete e["CONSUME"+n],delete e["SUBRULE"+n],delete e["OPTION"+n],delete e["OR"+n],delete e["MANY"+n],delete e["MANY_SEP"+n],delete e["AT_LEAST_ONE"+n],delete e["AT_LEAST_ONE_SEP"+n]}delete e.consume,delete e.subrule,delete e.option,delete e.or,delete e.many,delete e.atLeastOne,delete e.ACTION,delete e.BACKTRACK,delete e.LA}))},e.prototype.ACTION_RECORD=function(e){},e.prototype.BACKTRACK_RECORD=function(e,t){return function(){return!0}},e.prototype.LA_RECORD=function(e){return lp.END_OF_FILE},e.prototype.topLevelRuleRecord=function(e,t){try{var n=new ap.Rule({definition:[],name:e});return n.name=e,this.recordingProdStack.push(n),t.call(this),this.recordingProdStack.pop(),n}catch(r){if(!0!==r.KNOWN_RECORDER_ERROR)try{r.message=r.message+'\n\t This error was thrown during the "grammar recording phase" For more info see:\n\thttps://chevrotain.io/docs/guide/internals.html#grammar-recording'}catch(i){throw r}throw r}},e.prototype.optionInternalRecord=function(e,t){return yp.call(this,ap.Option,e,t)},e.prototype.atLeastOneInternalRecord=function(e,t){yp.call(this,ap.RepetitionMandatory,t,e)},e.prototype.atLeastOneSepFirstInternalRecord=function(e,t){yp.call(this,ap.RepetitionMandatoryWithSeparator,t,e,true)},e.prototype.manyInternalRecord=function(e,t){yp.call(this,ap.Repetition,t,e)},e.prototype.manySepFirstInternalRecord=function(e,t){yp.call(this,ap.RepetitionWithSeparator,t,e,true)},e.prototype.orInternalRecord=function(e,t){return Ep.call(this,e,t)},e.prototype.subruleInternalRecord=function(e,t,n){if(Cp(t),!e||!1===(0,op.has)(e,"ruleName")){var r=new Error("<SUBRULE"+_p(t)+"> argument is invalid expecting a Parser method reference but got: <"+JSON.stringify(e)+">\n inside top level rule: <"+this.recordingProdStack[0].name+">");throw r.KNOWN_RECORDER_ERROR=!0,r}var i=(0,op.peek)(this.recordingProdStack),o=e.ruleName,a=new ap.NonTerminal({idx:t,nonTerminalName:o,label:null==n?void 0:n.LABEL,referencedRule:void 0});return i.definition.push(a),this.outputCst?gp:fp},e.prototype.consumeInternalRecord=function(e,t,n){if(Cp(t),!(0,up.hasShortKeyProperty)(e)){var r=new Error("<CONSUME"+_p(t)+"> argument is invalid expecting a TokenType reference but got: <"+JSON.stringify(e)+">\n inside top level rule: <"+this.recordingProdStack[0].name+">");throw r.KNOWN_RECORDER_ERROR=!0,r}var i=(0,op.peek)(this.recordingProdStack),o=new ap.Terminal({idx:t,terminalType:e,label:null==n?void 0:n.LABEL});return i.definition.push(o),mp},e}();function yp(e,t,n,r){void 0===r&&(r=!1),Cp(n);var i=(0,op.peek)(this.recordingProdStack),o=(0,op.isFunction)(t)?t:t.DEF,a=new e({definition:[],idx:n});return r&&(a.separator=t.SEP),(0,op.has)(t,"MAX_LOOKAHEAD")&&(a.maxLookahead=t.MAX_LOOKAHEAD),this.recordingProdStack.push(a),o.call(this),i.definition.push(a),this.recordingProdStack.pop(),fp}function Ep(e,t){var n=this;Cp(t);var r=(0,op.peek)(this.recordingProdStack),i=!1===(0,op.isArray)(e),o=!1===i?e:e.DEF,a=new ap.Alternation({definition:[],idx:t,ignoreAmbiguities:i&&!0===e.IGNORE_AMBIGUITIES});(0,op.has)(e,"MAX_LOOKAHEAD")&&(a.maxLookahead=e.MAX_LOOKAHEAD);var s=(0,op.some)(o,(function(e){return(0,op.isFunction)(e.GATE)}));return a.hasPredicates=s,r.definition.push(a),(0,op.forEach)(o,(function(e){var t=new ap.Alternative({definition:[]});a.definition.push(t),(0,op.has)(e,"IGNORE_AMBIGUITIES")?t.ignoreAmbiguities=e.IGNORE_AMBIGUITIES:(0,op.has)(e,"GATE")&&(t.ignoreAmbiguities=!0),n.recordingProdStack.push(t),e.ALT.call(n),n.recordingProdStack.pop()})),fp}function _p(e){return 0===e?"":""+e}function Cp(e){if(e<0||e>dp){var t=new Error("Invalid DSL Method idx value: <"+e+">\n\tIdx value must be a none negative value smaller than "+(dp+1));throw t.KNOWN_RECORDER_ERROR=!0,t}}ip.GastRecorder=vp;var Tp={};Object.defineProperty(Tp,"__esModule",{value:!0}),Tp.PerformanceTracer=void 0;var Ap=xs,Rp=Ds,Ip=function(){function e(){}return e.prototype.initPerformanceTracer=function(e){if((0,Ap.has)(e,"traceInitPerf")){var t=e.traceInitPerf,n="number"==typeof t;this.traceInitMaxIdent=n?t:1/0,this.traceInitPerf=n?t>0:t}else this.traceInitMaxIdent=0,this.traceInitPerf=Rp.DEFAULT_PARSER_CONFIG.traceInitPerf;this.traceInitIndent=-1},e.prototype.TRACE_INIT=function(e,t){if(!0===this.traceInitPerf){this.traceInitIndent++;var n=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(n+"--\x3e <"+e+">");var r=(0,Ap.timer)(t),i=r.time,o=r.value,a=i>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&a(n+"<-- <"+e+"> time: "+i+"ms"),this.traceInitIndent--,o}return t()},e}();Tp.PerformanceTracer=Ip;var Dp={};Object.defineProperty(Dp,"__esModule",{value:!0}),Dp.applyMixins=void 0,Dp.applyMixins=function(e,t){t.forEach((function(t){var n=t.prototype;Object.getOwnPropertyNames(n).forEach((function(r){if("constructor"!==r){var i=Object.getOwnPropertyDescriptor(n,r);i&&(i.get||i.set)?Object.defineProperty(e.prototype,r,i):e.prototype[r]=t.prototype[r]}}))}))},function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddedActionsParser=e.CstParser=e.Parser=e.EMPTY_ALT=e.ParserDefinitionErrorType=e.DEFAULT_RULE_CONFIG=e.DEFAULT_PARSER_CONFIG=e.END_OF_FILE=void 0;var n,r=xs,i=Ks,o=Hs,a=Yu,s=Xu,u=Gc,c=ol,l=dl,p=Il,f=bl,d=Fl,h=zl,m=ep,g=ip,v=Tp,y=Dp;e.END_OF_FILE=(0,o.createTokenInstance)(o.EOF,"",NaN,NaN,NaN,NaN,NaN,NaN),Object.freeze(e.END_OF_FILE),e.DEFAULT_PARSER_CONFIG=Object.freeze({recoveryEnabled:!1,maxLookahead:3,dynamicTokensEnabled:!1,outputCst:!0,errorMessageProvider:a.defaultParserErrorProvider,nodeLocationTracking:"none",traceInitPerf:!1,skipValidations:!1}),e.DEFAULT_RULE_CONFIG=Object.freeze({recoveryValueFunc:function(){},resyncEnabled:!0}),(n=e.ParserDefinitionErrorType||(e.ParserDefinitionErrorType={}))[n.INVALID_RULE_NAME=0]="INVALID_RULE_NAME",n[n.DUPLICATE_RULE_NAME=1]="DUPLICATE_RULE_NAME",n[n.INVALID_RULE_OVERRIDE=2]="INVALID_RULE_OVERRIDE",n[n.DUPLICATE_PRODUCTIONS=3]="DUPLICATE_PRODUCTIONS",n[n.UNRESOLVED_SUBRULE_REF=4]="UNRESOLVED_SUBRULE_REF",n[n.LEFT_RECURSION=5]="LEFT_RECURSION",n[n.NONE_LAST_EMPTY_ALT=6]="NONE_LAST_EMPTY_ALT",n[n.AMBIGUOUS_ALTS=7]="AMBIGUOUS_ALTS",n[n.CONFLICT_TOKENS_RULES_NAMESPACE=8]="CONFLICT_TOKENS_RULES_NAMESPACE",n[n.INVALID_TOKEN_NAME=9]="INVALID_TOKEN_NAME",n[n.NO_NON_EMPTY_LOOKAHEAD=10]="NO_NON_EMPTY_LOOKAHEAD",n[n.AMBIGUOUS_PREFIX_ALTS=11]="AMBIGUOUS_PREFIX_ALTS",n[n.TOO_MANY_ALTS=12]="TOO_MANY_ALTS",e.EMPTY_ALT=function(e){return void 0===e&&(e=void 0),function(){return e}};var E=function(){function t(t,n){this.definitionErrors=[],this.selfAnalysisDone=!1;var i=this;if(i.initErrorHandler(n),i.initLexerAdapter(),i.initLooksAhead(n),i.initRecognizerEngine(t,n),i.initRecoverable(n),i.initTreeBuilder(n),i.initContentAssist(),i.initGastRecorder(n),i.initPerformanceTracer(n),(0,r.has)(n,"ignoredIssues"))throw new Error("The <ignoredIssues> IParserConfig property has been deprecated.\n\tPlease use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\n\tSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\n\tFor further details.");this.skipValidations=(0,r.has)(n,"skipValidations")?n.skipValidations:e.DEFAULT_PARSER_CONFIG.skipValidations}return t.performSelfAnalysis=function(e){throw Error("The **static** `performSelfAnalysis` method has been deprecated.\t\nUse the **instance** method with the same name instead.")},t.prototype.performSelfAnalysis=function(){var e=this;this.TRACE_INIT("performSelfAnalysis",(function(){var n;e.selfAnalysisDone=!0;var o=e.className;e.TRACE_INIT("toFastProps",(function(){(0,r.toFastProperties)(e)})),e.TRACE_INIT("Grammar Recording",(function(){try{e.enableRecording(),(0,r.forEach)(e.definedRulesNames,(function(t){var n=e[t].originalGrammarAction,r=void 0;e.TRACE_INIT(t+" Rule",(function(){r=e.topLevelRuleRecord(t,n)})),e.gastProductionsCache[t]=r}))}finally{e.disableRecording()}}));var u=[];if(e.TRACE_INIT("Grammar Resolving",(function(){u=(0,s.resolveGrammar)({rules:(0,r.values)(e.gastProductionsCache)}),e.definitionErrors=e.definitionErrors.concat(u)})),e.TRACE_INIT("Grammar Validations",(function(){if((0,r.isEmpty)(u)&&!1===e.skipValidations){var t=(0,s.validateGrammar)({rules:(0,r.values)(e.gastProductionsCache),maxLookahead:e.maxLookahead,tokenTypes:(0,r.values)(e.tokensMap),errMsgProvider:a.defaultGrammarValidatorErrorProvider,grammarName:o});e.definitionErrors=e.definitionErrors.concat(t)}})),(0,r.isEmpty)(e.definitionErrors)&&(e.recoveryEnabled&&e.TRACE_INIT("computeAllProdsFollows",(function(){var t=(0,i.computeAllProdsFollows)((0,r.values)(e.gastProductionsCache));e.resyncFollows=t})),e.TRACE_INIT("ComputeLookaheadFunctions",(function(){e.preComputeLookaheadFunctions((0,r.values)(e.gastProductionsCache))}))),!t.DEFER_DEFINITION_ERRORS_HANDLING&&!(0,r.isEmpty)(e.definitionErrors))throw n=(0,r.map)(e.definitionErrors,(function(e){return e.message})),new Error("Parser Definition Errors detected:\n "+n.join("\n-------------------------------\n"))}))},t.DEFER_DEFINITION_ERRORS_HANDLING=!1,t}();e.Parser=E,(0,y.applyMixins)(E,[u.Recoverable,c.LooksAhead,l.TreeBuilder,p.LexerAdapter,d.RecognizerEngine,f.RecognizerApi,h.ErrorHandler,m.ContentAssist,g.GastRecorder,v.PerformanceTracer]);var _=function(n){function i(t,i){void 0===i&&(i=e.DEFAULT_PARSER_CONFIG);var o=(0,r.cloneObj)(i);return o.outputCst=!0,n.call(this,t,o)||this}return t(i,n),i}(E);e.CstParser=_;var C=function(n){function i(t,i){void 0===i&&(i=e.DEFAULT_PARSER_CONFIG);var o=(0,r.cloneObj)(i);return o.outputCst=!1,n.call(this,t,o)||this}return t(i,n),i}(E);e.EmbeddedActionsParser=C}(Ds);var xp={};Object.defineProperty(xp,"__esModule",{value:!0}),xp.createSyntaxDiagramsCode=void 0;var bp=Is;xp.createSyntaxDiagramsCode=function(e,t){var n=void 0===t?{}:t,r=n.resourceBase,i=void 0===r?"https://unpkg.com/chevrotain@"+bp.VERSION+"/diagrams/":r,o=n.css;return'\n\x3c!-- This is a generated file --\x3e\n<!DOCTYPE html>\n<meta charset="utf-8">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n'+("\n<link rel='stylesheet' href='"+(void 0===o?"https://unpkg.com/chevrotain@"+bp.VERSION+"/diagrams/diagrams.css":o)+"'>\n")+("\n<script src='"+i+"vendor/railroad-diagrams.js'><\/script>\n<script src='"+i+"src/diagrams_builder.js'><\/script>\n<script src='"+i+"src/diagrams_behavior.js'><\/script>\n<script src='"+i+"src/main.js'><\/script>\n")+'\n<div id="diagrams" align="center"></div>    \n'+("\n<script>\n    window.serializedGrammar = "+JSON.stringify(e,null,"  ")+";\n<\/script>\n")+'\n<script>\n    var diagramsDiv = document.getElementById("diagrams");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n<\/script>\n'},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Parser=e.createSyntaxDiagramsCode=e.clearCache=e.GAstVisitor=e.serializeProduction=e.serializeGrammar=e.Terminal=e.Rule=e.RepetitionWithSeparator=e.RepetitionMandatoryWithSeparator=e.RepetitionMandatory=e.Repetition=e.Option=e.NonTerminal=e.Alternative=e.Alternation=e.defaultLexerErrorProvider=e.NoViableAltException=e.NotAllInputParsedException=e.MismatchedTokenException=e.isRecognitionException=e.EarlyExitException=e.defaultParserErrorProvider=e.tokenName=e.tokenMatcher=e.tokenLabel=e.EOF=e.createTokenInstance=e.createToken=e.LexerDefinitionErrorType=e.Lexer=e.EMPTY_ALT=e.ParserDefinitionErrorType=e.EmbeddedActionsParser=e.CstParser=e.VERSION=void 0;var t=Is;Object.defineProperty(e,"VERSION",{enumerable:!0,get:function(){return t.VERSION}});var n=Ds;Object.defineProperty(e,"CstParser",{enumerable:!0,get:function(){return n.CstParser}}),Object.defineProperty(e,"EmbeddedActionsParser",{enumerable:!0,get:function(){return n.EmbeddedActionsParser}}),Object.defineProperty(e,"ParserDefinitionErrorType",{enumerable:!0,get:function(){return n.ParserDefinitionErrorType}}),Object.defineProperty(e,"EMPTY_ALT",{enumerable:!0,get:function(){return n.EMPTY_ALT}});var r=zs;Object.defineProperty(e,"Lexer",{enumerable:!0,get:function(){return r.Lexer}}),Object.defineProperty(e,"LexerDefinitionErrorType",{enumerable:!0,get:function(){return r.LexerDefinitionErrorType}});var i=Hs;Object.defineProperty(e,"createToken",{enumerable:!0,get:function(){return i.createToken}}),Object.defineProperty(e,"createTokenInstance",{enumerable:!0,get:function(){return i.createTokenInstance}}),Object.defineProperty(e,"EOF",{enumerable:!0,get:function(){return i.EOF}}),Object.defineProperty(e,"tokenLabel",{enumerable:!0,get:function(){return i.tokenLabel}}),Object.defineProperty(e,"tokenMatcher",{enumerable:!0,get:function(){return i.tokenMatcher}}),Object.defineProperty(e,"tokenName",{enumerable:!0,get:function(){return i.tokenName}});var o=Yu;Object.defineProperty(e,"defaultParserErrorProvider",{enumerable:!0,get:function(){return o.defaultParserErrorProvider}});var a=Vc;Object.defineProperty(e,"EarlyExitException",{enumerable:!0,get:function(){return a.EarlyExitException}}),Object.defineProperty(e,"isRecognitionException",{enumerable:!0,get:function(){return a.isRecognitionException}}),Object.defineProperty(e,"MismatchedTokenException",{enumerable:!0,get:function(){return a.MismatchedTokenException}}),Object.defineProperty(e,"NotAllInputParsedException",{enumerable:!0,get:function(){return a.NotAllInputParsedException}}),Object.defineProperty(e,"NoViableAltException",{enumerable:!0,get:function(){return a.NoViableAltException}});var s=nu;Object.defineProperty(e,"defaultLexerErrorProvider",{enumerable:!0,get:function(){return s.defaultLexerErrorProvider}});var u=Vs;Object.defineProperty(e,"Alternation",{enumerable:!0,get:function(){return u.Alternation}}),Object.defineProperty(e,"Alternative",{enumerable:!0,get:function(){return u.Alternative}}),Object.defineProperty(e,"NonTerminal",{enumerable:!0,get:function(){return u.NonTerminal}}),Object.defineProperty(e,"Option",{enumerable:!0,get:function(){return u.Option}}),Object.defineProperty(e,"Repetition",{enumerable:!0,get:function(){return u.Repetition}}),Object.defineProperty(e,"RepetitionMandatory",{enumerable:!0,get:function(){return u.RepetitionMandatory}}),Object.defineProperty(e,"RepetitionMandatoryWithSeparator",{enumerable:!0,get:function(){return u.RepetitionMandatoryWithSeparator}}),Object.defineProperty(e,"RepetitionWithSeparator",{enumerable:!0,get:function(){return u.RepetitionWithSeparator}}),Object.defineProperty(e,"Rule",{enumerable:!0,get:function(){return u.Rule}}),Object.defineProperty(e,"Terminal",{enumerable:!0,get:function(){return u.Terminal}});var c=Vs;Object.defineProperty(e,"serializeGrammar",{enumerable:!0,get:function(){return c.serializeGrammar}}),Object.defineProperty(e,"serializeProduction",{enumerable:!0,get:function(){return c.serializeProduction}});var l=Iu;Object.defineProperty(e,"GAstVisitor",{enumerable:!0,get:function(){return l.GAstVisitor}}),e.clearCache=function(){console.warn("The clearCache function was 'soft' removed from the Chevrotain API.\n\t It performs no action other than printing this message.\n\t Please avoid using it as it will be completely removed in the future")};var p=xp;Object.defineProperty(e,"createSyntaxDiagramsCode",{enumerable:!0,get:function(){return p.createSyntaxDiagramsCode}});var f=function(){throw new Error("The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\t\nSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0")};e.Parser=f}(Rs);var Sp=ir(Rs);Sp.Alternation,Sp.Alternative,Sp.CstParser,Sp.EMPTY_ALT,Sp.EOF,Sp.EarlyExitException;const kp=Sp.EmbeddedActionsParser;Sp.GAstVisitor;const Op=Sp.Lexer;Sp.LexerDefinitionErrorType,Sp.MismatchedTokenException,Sp.NoViableAltException,Sp.NonTerminal,Sp.NotAllInputParsedException,Sp.Option,Sp.Parser,Sp.ParserDefinitionErrorType,Sp.Repetition,Sp.RepetitionMandatory,Sp.RepetitionMandatoryWithSeparator,Sp.RepetitionWithSeparator,Sp.Rule,Sp.Terminal,Sp.VERSION,Sp.clearCache,Sp.createSyntaxDiagramsCode,Sp.createToken,Sp.createTokenInstance,Sp.defaultLexerErrorProvider,Sp.defaultParserErrorProvider,Sp.isRecognitionException,Sp.serializeGrammar,Sp.serializeProduction,Sp.tokenLabel,Sp.tokenMatcher,Sp.tokenName;const Np=Symbol("Datatype");class Pp{constructor(e,t){this.nodeBuilder=new qp,this.stack=[],this.assignmentMap=new Map,this.wrapper=new Lp(t,e.parser.ParserConfig),this.linker=e.references.Linker,this.converter=e.parser.ValueConverter,this.lexer=new Op(t)}get current(){return this.stack[this.stack.length-1]}MAIN_RULE(e,t,n){return this.mainRule=this.DEFINE_RULE(e,t,n)}DEFINE_RULE(e,t,n){return this.wrapper.DEFINE_RULE(e,this.startImplementation(t,n).bind(this))}parse(e){const t="string"==typeof e?e:e.textDocument.getText();this.nodeBuilder.buildRootNode(t);const n=this.lexer.tokenize(t);this.wrapper.input=n.tokens;const r=this.mainRule.call(this.wrapper);return this.addHiddenTokens(r.$cstNode,n.groups.hidden),"string"!=typeof e&&(r.$document=e),{value:r,lexerErrors:n.errors,parserErrors:this.wrapper.errors}}addHiddenTokens(e,t){for(const n of t){const t=new Up(n.startOffset,n.image.length,Mp(n),n.tokenType,!0);t.root=e,this.addHiddenToken(e,t)}}addHiddenToken(e,t){const{offset:n,end:r}=e,{offset:i,end:o}=t;if(n>=o)e.children.unshift(t);else if(r<=i)e.children.push(t);else for(let a=0;a<e.children.length;a++){const n=e.children[a],r=n.end;if(n instanceof Wp&&o<r)return void this.addHiddenToken(n,t);if(o<=n.offset)return void e.children.splice(a,0,t)}}startImplementation(e,t){return()=>{let n;this.wrapper.IS_RECORDING||this.stack.push({$type:e});try{n=t()}catch(r){console.log("Parser exception thrown!",r),n=void 0}return this.wrapper.IS_RECORDING||void 0!==n||(n=this.construct()),n}}alternatives(e,t){this.wrapper.wrapOr(e,t)}optional(e,t){this.wrapper.wrapOption(e,t)}many(e,t){this.wrapper.wrapMany(e,t)}atLeastOne(e,t){this.wrapper.wrapAtLeastOne(e,t)}consume(e,t,n){const r=this.wrapper.wrapConsume(e,t);if(!this.wrapper.IS_RECORDING){const e=this.nodeBuilder.buildLeafNode(r,n),{assignment:t,crossRef:i}=this.getAssignment(n);if(t){let n;i&&(n=`${this.current.$type}:${t.feature}`),this.assign(t,r.image,e,n)}}}unassignedSubrule(e,t,n){const r=this.subrule(e,t,n);if(!this.wrapper.IS_RECORDING){const e=r.$type,t=this.assignWithoutOverride(r,this.current);e&&(t.$type=e);const n=t;this.stack.pop(),this.stack.push(n)}}subrule(e,t,n){let r;this.wrapper.IS_RECORDING||(r=this.nodeBuilder.buildCompositeNode(n));const i=this.wrapper.wrapSubrule(e,t);if(!this.wrapper.IS_RECORDING){const{assignment:e,crossRef:t}=this.getAssignment(n);if(e&&r){let n;t&&(n=`${this.current.$type}:${e.feature}`),this.assign(e,i,r,n)}}return i}action(e,t){if(!this.wrapper.IS_RECORDING){let n=this.current;if(!n.$cstNode&&t.feature&&t.operator){n=this.construct(!1);const e=n.$cstNode.feature;this.nodeBuilder.buildCompositeNode(e)}const r={$type:e};this.stack.pop(),this.stack.push(r),t.feature&&t.operator&&this.assign(t,n,n.$cstNode)}}initializeElement(e){if(!this.wrapper.IS_RECORDING){const t=this.current;for(const n of e)t[n]=[]}}construct(e=!0){if(this.wrapper.IS_RECORDING)return;const t=this.current;for(const[n,r]of Object.entries(t))if(!n.startsWith("$"))if(Array.isArray(r))for(const e of r)null!==e&&"object"==typeof e&&(e.$container=t);else null!==t&&"object"==typeof r&&(r.$container=t);if(this.nodeBuilder.construct(t),e&&this.stack.pop(),t.$type===Np){return t.$cstNode.text}return t}getAssignment(e){if(!this.assignmentMap.has(e)){const t=Yp(e,df);this.assignmentMap.set(e,{assignment:t,crossRef:!!t&&vf(t.terminal)})}return this.assignmentMap.get(e)}assign(e,t,n,r){const i=this.current,o=e.feature.replace(/\^/g,"");let a;switch(a=r&&"string"==typeof t?this.linker.buildReference(i,n,r,t):n&&"string"==typeof t?this.converter.convert(t,n):t,e.operator){case"=":i[o]=a;break;case"?=":i[o]=!0;break;case"+=":Array.isArray(i[o])||(i[o]=[]),i[o].push(a)}}assignWithoutOverride(e,t){for(const[n,r]of Object.entries(t))void 0===e[n]&&(e[n]=r);return e}finalize(){this.wrapper.wrapSelfAnalysis()}}const wp={recoveryEnabled:!0,nodeLocationTracking:"full",skipValidations:!0};class Lp extends kp{constructor(e,t){super(e,{...wp,...t})}get IS_RECORDING(){return this.RECORDING_PHASE}DEFINE_RULE(e,t){return this.RULE(e,t)}wrapSelfAnalysis(){this.performSelfAnalysis()}wrapConsume(e,t){return this.consume(e,t)}wrapSubrule(e,t){return this.subrule(e,t)}wrapOr(e,t){this.or(e,t.map((e=>({ALT:e}))))}wrapOption(e,t){this.option(e,t)}wrapMany(e,t){this.many(e,t)}wrapAtLeastOne(e,t){this.atLeastOne(e,t)}}function Fp(e){return e instanceof Up?[e]:e instanceof Wp?e.children.flatMap((e=>Fp(e))):[]}function Mp(e){return{start:{character:e.startColumn-1,line:e.startLine-1},end:{character:e.endColumn,line:e.endLine-1}}}function $p(e){const{offset:t,end:n,range:r}=e;return{range:r,offset:t,end:n,length:n-t}}function Bp(e){let t=e;do{const e=t.element;if(e.$type!==Np)return e;t=t.parent}while(t)}class qp{constructor(){this.nodeStack=[]}get current(){return this.nodeStack[this.nodeStack.length-1]}buildRootNode(e){this.rootNode=new Gp(e),this.nodeStack=[this.rootNode]}buildCompositeNode(e){const t=new Wp;return t.feature=e,t.root=this.rootNode,this.current.children.push(t),this.nodeStack.push(t),t}buildLeafNode(e,t){const n=new Up(e.startOffset,e.image.length,Mp(e),e.tokenType,!1);return n.feature=t,n.root=this.rootNode,this.current.children.push(n),n}construct(e){const t=this.current;"string"==typeof e.$type&&(this.current.element=e),e.$cstNode=t,this.nodeStack.pop()}}class jp{get hidden(){return!1}get element(){var e,t;return null!=(t=this._element)?t:null==(e=this.parent)?void 0:e.element}set element(e){this._element=e}get text(){return this.root.text.substring(this.offset,this.end)}}class Up extends jp{get offset(){return this._offset}get length(){return this._length}get end(){return this._offset+this._length}get hidden(){return this._hidden}get tokenType(){return this._tokenType}get range(){return this._range}constructor(e,t,n,r,i=!1){super(),this._hidden=i,this._offset=e,this._tokenType=r,this._length=t,this._range=n}}class Wp extends jp{constructor(){super(...arguments),this.children=new Kp(this)}get offset(){return this.children.length>0?this.firstNonHiddenNode.offset:0}get length(){return this.end-this.offset}get end(){return this.children.length>0?this.lastNonHiddenNode.end:0}get range(){if(this.children.length>0){const{range:e}=this.firstNonHiddenNode,{range:t}=this.lastNonHiddenNode;return{start:e.start,end:t.end.line<e.start.line?e.start:t.end}}return{start:Gr.create(0,0),end:Gr.create(0,0)}}get firstNonHiddenNode(){for(const e of this.children)if(!e.hidden)return e;throw new Error("Composite node contains only hidden nodes")}get lastNonHiddenNode(){for(let e=this.children.length-1;e>=0;e--){const t=this.children[e];if(!t.hidden)return t}throw new Error("Composite node contains only hidden nodes")}}class Kp extends Array{constructor(e){super(),this.parent=e,Object.setPrototypeOf(this,Kp.prototype)}push(...e){return this.addParents(e),super.push(...e)}unshift(...e){return this.addParents(e),super.unshift(...e)}splice(e,t,...n){return this.addParents(n),super.splice(e,t,...n)}addParents(e){for(const t of e)t.parent=this.parent}}class Gp extends Wp{constructor(e){super(),this._text="",this._text=null!=e?e:""}set text(e){this._text=e}get text(){return this._text}get offset(){return 0}get length(){return this.text.length}}function Vp(e){return"object"==typeof e&&null!==e&&"string"==typeof e.$type}function Hp(e){return"object"==typeof e&&null!==e&&"string"==typeof e.$refText}function zp(e){return"object"==typeof e&&null!==e&&Vp(e.container)&&Hp(e.reference)&&"string"==typeof e.message}function Yp(e,t){let n=e;for(;n;){if(t(n))return n;n=n.$container}}function Xp(e,t){let n=e;for(;n;){if(t(n))return!0;n=n.$container}return!1}function Jp(e){let t=e;for(;!t.$document&&t.$container;)t=t.$container;if(!t.$document)throw new Error("AST node has no document.");return t.$document}function Qp(e){return new Ja((()=>({keys:Object.keys(e),keyIndex:0,arrayIndex:0})),(t=>{for(;t.keyIndex<t.keys.length;){const n=t.keys[t.keyIndex];if(!n.startsWith("$")){const r=e[n];if(Vp(r))return t.keyIndex++,{done:!1,value:{node:r,property:n}};if(Array.isArray(r)){for(;t.arrayIndex<r.length;){const e=t.arrayIndex++,i=r[e];if(Vp(i))return{done:!1,value:{node:i,property:n,index:e}}}t.arrayIndex=0}}t.keyIndex++}return ts}))}function Zp(e){return new rs({node:e},(e=>Qp(e.node)))}function ef(e){return new Ja((()=>({keys:Object.keys(e),keyIndex:0,arrayIndex:0})),(t=>{for(;t.keyIndex<t.keys.length;){const n=t.keys[t.keyIndex];if(!n.startsWith("$")){const r=e[n];if(Hp(r))return t.keyIndex++,{done:!1,value:{reference:r,container:e,property:n}};if(Array.isArray(r)){for(;t.arrayIndex<r.length;){const i=t.arrayIndex++,o=r[i];if(Hp(o))return{done:!1,value:{reference:o,container:e,property:n,index:i}}}t.arrayIndex=0}}t.keyIndex++}return ts}))}function tf(e,t){if(e instanceof Up)return e;if(e instanceof Wp){const n=e.children.filter((e=>e.offset<=t)).reverse();for(const e of n){const n=tf(e,t);if(n)return n}}}const nf="AbstractElement";function rf(e){return $f.isInstance(e,nf)}const of="AbstractRule",af="Grammar";const sf="Parameter",uf="Action";function cf(e){return $f.isInstance(e,uf)}const lf="Alternatives";function pf(e){return $f.isInstance(e,lf)}const ff="Assignment";function df(e){return $f.isInstance(e,ff)}const hf="CharacterRange";function mf(e){return $f.isInstance(e,hf)}const gf="CrossReference";function vf(e){return $f.isInstance(e,gf)}const yf="Group";function Ef(e){return $f.isInstance(e,yf)}const _f="Keyword";function Cf(e){return $f.isInstance(e,_f)}const Tf="NegatedToken";const Af="RegexToken";const Rf="RuleCall";function If(e){return $f.isInstance(e,Rf)}const Df="TerminalAlternatives";const xf="TerminalGroup";const bf="TerminalRuleCall";const Sf="UnorderedGroup";function kf(e){return $f.isInstance(e,Sf)}const Of="UntilToken";const Nf="Wildcard";const Pf="ParserRule";function wf(e){return $f.isInstance(e,Pf)}const Lf="TerminalRule";function Ff(e){return $f.isInstance(e,Lf)}class Mf{getAllTypes(){return["AbstractElement","AbstractMetamodelDeclaration","AbstractRule","Annotation","Condition","Grammar","NamedArgument","Parameter","Action","Alternatives","Assignment","CharacterRange","CrossReference","Group","Keyword","NegatedToken","RegexToken","RuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","UnorderedGroup","UntilToken","Wildcard","GeneratedMetamodel","ReferencedMetamodel","ParserRule","TerminalRule","Conjunction","Disjunction","LiteralCondition","Negation","ParameterReference"]}isInstance(e,t){return Vp(e)&&this.isSubtype(e.$type,t)}isSubtype(e,t){if(e===t)return!0;switch(e){case uf:case lf:case ff:case hf:case gf:case yf:case _f:case Tf:case Af:case Rf:case Df:case xf:case bf:case Sf:case Of:case Nf:return this.isSubtype(nf,t);case"GeneratedMetamodel":case"ReferencedMetamodel":return this.isSubtype("AbstractMetamodelDeclaration",t);case Pf:case Lf:return this.isSubtype(of,t);case"Conjunction":case"Disjunction":case"LiteralCondition":case"Negation":case"ParameterReference":return this.isSubtype("Condition",t);default:return!1}}getReferenceType(e){switch(e){case"Grammar:hiddenTokens":return of;case"Grammar:usedGrammars":return af;case"NamedArgument:parameter":return sf;case"CrossReference:type":return Pf;case"RuleCall:rule":return of;case"TerminalRuleCall:rule":return Lf;case"ParserRule:hiddenTokens":return of;case"ParameterReference:parameter":return sf;default:throw new Error(`${e} is not a valid reference id.`)}}}const $f=new Mf;function Bf(e,t,n){return qf([e,t,n].reduce(Wf,{}))}function qf(e,t){const n=new Proxy({},{deleteProperty:()=>!1,get:(r,i)=>Uf(r,i,e,t||n),getOwnPropertyDescriptor:(r,i)=>(Uf(r,i,e,t||n),Object.getOwnPropertyDescriptor(r,i)),has:(t,n)=>n in e,ownKeys:()=>Reflect.ownKeys(e)});return n}const jf=Symbol();function Uf(e,t,n,r){if(t in e){if(e[t]===jf)throw new Error('Cycle detected. Please make "'+String(t)+'" lazy. See https://langium.org/docs/di/cyclic-dependencies');return e[t]}if(t in n){const i=n[t];return e[t]=jf,e[t]="function"==typeof i?i(r):qf(i,r),e[t]}}function Wf(e,t){if(t)for(const[n,r]of Object.entries(t))if(void 0!==r){const t=e[n];e[n]=null!==t&&null!==r&&"object"==typeof t&&"object"==typeof r?Wf(t,r):r}return e}class Kf{constructor(e){this.validationChecks=new Map,this.reflection=e.AstReflection}register(e,t=this){for(const[n,r]of Object.entries(e))if(Array.isArray(r))for(const e of r)this.doRegister(n,this.wrapValidationException(e,t));else r&&this.doRegister(n,this.wrapValidationException(r,t))}wrapValidationException(e,t){return(n,r,i)=>{try{e.call(t,n,r,i)}catch(PI){console.error("An exception occured executing a validation.",PI)}}}doRegister(e,t){for(const n of this.reflection.getAllTypes())if(this.reflection.isSubtype(n,e)){let e=this.validationChecks.get(n);e||(e=[],this.validationChecks.set(n,e)),e.push(t)}}getChecks(e){var t;return null!=(t=this.validationChecks.get(e))?t:[]}}class Gf extends Kf{constructor(e){super(e);const t=e.validation.LangiumGrammarValidator,n={AbstractRule:t.checkRuleName,ParserRule:[t.checkParserRuleDataType],TerminalRule:[t.checkTerminalRuleReturnType,t.checkHiddenTerminalRule,t.checkEmptyTerminalRule],Keyword:t.checkKeyword,UnorderedGroup:t.checkUnorderedGroup,Grammar:[t.checkGrammarName,t.checkEntryGrammarRule,t.checkUniqueRuleName,t.checkGrammarHiddenTokens,t.checkGrammarForUnusedRules],CharacterRange:t.checkInvalidCharacterRange,RuleCall:t.checkUsedHiddenTerminalRule,TerminalRuleCall:t.checkUsedHiddenTerminalRule,CrossReference:t.checkCrossReferenceSyntax};this.register(n,t)}}var Vf,Hf;(Hf=Vf||(Vf={})).GrammarNameUppercase="grammar-name-uppercase",Hf.RuleNameUppercase="rule-name-uppercase",Hf.HiddenGrammarTokens="hidden-grammar-tokens",Hf.UseRegexTokens="use-regex-tokens",Hf.EntryRuleTokenSyntax="entry-rule-token-syntax",Hf.CrossRefTokenSyntax="cross-ref-token-syntax";class zf{constructor(e){this.references=e.references.References}checkGrammarName(e,t){if(e.name){const n=e.name.substring(0,1);n.toUpperCase()!==n&&t("warning","Grammar name should start with an upper case letter.",{node:e,property:"name",code:Vf.GrammarNameUppercase})}}checkEntryGrammarRule(e,t){const n=e.rules.filter((e=>wf(e)&&e.entry));if(0===n.length){const n=e.rules.find((e=>wf(e)&&!ud(e)));n?t("error","The grammar is missing an entry parser rule. This rule can be an entry one.",{node:n,property:"name",code:Vf.EntryRuleTokenSyntax}):t("error","This grammar is missing an entry parser rule.",{node:e,property:"name"})}else n.length>1?n.forEach((e=>t("error","The entry rule has to be unique.",{node:e,property:"name"}))):ud(n[0])&&t("error","The entry rule cannot be a data type rule.",{node:n[0],property:"name"})}checkUniqueRuleName(e,t){const n=new Map;for(const r of e.rules){const e=r.name.toLowerCase(),t=n.get(e);t?t.push(r):n.set(e,[r])}for(const r of n.values())r.length>1&&r.forEach((e=>{t("error","A rule's name has to be unique.",{node:e,property:"name"})}))}checkGrammarHiddenTokens(e,t){e.definesHiddenTokens&&t("error","Hidden terminals are declared at the terminal definition.",{node:e,property:"definesHiddenTokens",code:Vf.HiddenGrammarTokens})}checkHiddenTerminalRule(e,t){e.hidden&&e.fragment&&t("error","Cannot use terminal fragments as hidden tokens.",{node:e,property:"hidden"})}checkEmptyTerminalRule(e,t){try{const n=md(e);new RegExp(n).test("")&&t("error","This terminal could match an empty string.",{node:e,property:"name"})}catch{}}checkUsedHiddenTerminalRule(e,t){const n=Yp(e,(e=>Ff(e)||wf(e)));if(n){if("hidden"in n&&(null==n?void 0:n.hidden))return;const r=e.rule.ref;Ff(r)&&r.hidden&&t("error","Cannot use hidden terminal in non-hidden rule",{node:e,property:"rule"})}}checkCrossReferenceSyntax(e,t){e.deprecatedSyntax&&t("error","'|' is deprecated. Please, use ':' instead.",{node:e,property:"deprecatedSyntax",code:Vf.CrossRefTokenSyntax})}checkInvalidCharacterRange(e,t){if(e.right){const n="Character ranges cannot use more than one character";let r=!1;e.left.value.length>1&&(r=!0,t("error",n,{node:e.left,property:"value"})),e.right.value.length>1&&(r=!0,t("error",n,{node:e.right,property:"value"})),r||t("hint","Consider using regex instead of character ranges",{node:e,code:Vf.UseRegexTokens})}}checkGrammarForUnusedRules(e,t){const n=new Set,r=function(e){return e.rules.find((e=>wf(e)&&e.entry))}(e);r&&(this.ruleDfs(r,n),n.add(r.name));for(const i of e.rules)Ff(i)&&i.hidden||n.has(i.name)||t("hint","This rule is declared but never referenced.",{node:i,property:"name",tags:[di.Unnecessary]})}ruleDfs(e,t){Zp(e).forEach((e=>{if(If(e.node)){const n=e.node.rule.ref;n&&!t.has(n.name)&&(t.add(n.name),wf(n)&&this.ruleDfs(n,t))}}))}checkRuleName(e,t){if(e.name){const n=e.name.substring(0,1);n.toUpperCase()!==n&&t("warning","Rule name should start with an upper case letter.",{node:e,property:"name",code:Vf.RuleNameUppercase})}}checkKeyword(e,t){0===e.value.length?t("error","Keywords cannot be empty.",{node:e}):0===e.value.trim().length?t("error","Keywords cannot only consist of whitespace characters.",{node:e}):/\s/g.test(e.value)&&t("warning","Keywords should not contain whitespace characters.",{node:e})}checkUnorderedGroup(e,t){t("error","Unordered groups are currently not supported",{node:e})}checkParserRuleDataType(e,t){const n=e.type&&Xf(e.type),r=ud(e);!n&&r?t("error","This parser rule does not create an object. Add a primitive return type or an action to the start of the rule to force object instantiation.",{node:e,property:"name"}):n&&!r&&t("error","Normal parser rules are not allowed to return a primitive value. Use a datatype rule for that.",{node:e,property:"type"})}checkTerminalRuleReturnType(e,t){e.type&&!Xf(e.type)&&t("error","Terminal rules can only return primitive types like 'string', 'boolean', 'number' or 'date'.",{node:e,property:"type"})}}const Yf=["string","number","boolean","Date"];function Xf(e){return Yf.includes(e)}let Jf;const Qf={languageId:"langium",fileExtensions:[".langium"]},Zf={Grammar:()=>Jf||(Jf=Cd('{\n  "$type": "Grammar",\n  "usedGrammars": [],\n  "hiddenTokens": [],\n  "metamodelDeclarations": [],\n  "rules": [\n    {\n      "$type": "TerminalRule",\n      "hidden": true,\n      "name": "WS",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\s+",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "ID",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\^?[_a-zA-Z][\\\\w_]*",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "INT",\n      "type": "number",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "[0-9]+",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\"[^\\"]*\\"|\'[^\']*\'",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "hidden": true,\n      "name": "ML_COMMENT",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "hidden": true,\n      "name": "SL_COMMENT",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Grammar",\n      "hiddenTokens": [],\n      "entry": true,\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "grammar",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "with",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "usedGrammars",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "CrossReference",\n                  "type": {\n                    "$refText": "Grammar"\n                  },\n                  "terminal": {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "ID"\n                    }\n                  }\n                }\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": ",",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "usedGrammars",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "CrossReference",\n                      "type": {\n                        "$refText": "Grammar"\n                      },\n                      "terminal": {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "ID"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "*"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "definesHiddenTokens",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "hidden"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "("\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "hiddenTokens",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "CrossReference",\n                      "type": {\n                        "$refText": "AbstractRule"\n                      },\n                      "terminal": {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "ID"\n                        }\n                      }\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "Keyword",\n                        "value": ",",\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "hiddenTokens",\n                        "operator": "+=",\n                        "terminal": {\n                          "$type": "CrossReference",\n                          "type": {\n                            "$refText": "AbstractRule"\n                          },\n                          "terminal": {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "ID"\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "cardinality": "*"\n                  }\n                ],\n                "cardinality": "?"\n              },\n              {\n                "$type": "Keyword",\n                "value": ")"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "metamodelDeclarations",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "AbstractMetamodelDeclaration"\n              }\n            },\n            "cardinality": "*"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "rules",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "AbstractRule"\n              }\n            },\n            "elements": [],\n            "cardinality": "+"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AbstractRule",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParserRule"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalRule"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AbstractMetamodelDeclaration",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "GeneratedMetamodel"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ReferencedMetamodel"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "GeneratedMetamodel",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "generate",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          },\n          {\n            "$type": "Assignment",\n            "feature": "ePackage",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "string"\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "as",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "alias",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "ID"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ReferencedMetamodel",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "import",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "ePackage",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "string"\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "as",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "alias",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "ID"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Annotation",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "@",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParserRule",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Alternatives",\n                    "elements": [\n                      {\n                        "$type": "Assignment",\n                        "feature": "entry",\n                        "operator": "?=",\n                        "terminal": {\n                          "$type": "Keyword",\n                          "value": "entry"\n                        },\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "fragment",\n                        "operator": "?=",\n                        "terminal": {\n                          "$type": "Keyword",\n                          "value": "fragment"\n                        },\n                        "elements": []\n                      }\n                    ]\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "RuleNameAndParams"\n                    }\n                  },\n                  {\n                    "$type": "Alternatives",\n                    "elements": [\n                      {\n                        "$type": "Assignment",\n                        "feature": "wildcard",\n                        "operator": "?=",\n                        "terminal": {\n                          "$type": "Keyword",\n                          "value": "*"\n                        },\n                        "elements": []\n                      },\n                      {\n                        "$type": "Group",\n                        "elements": [\n                          {\n                            "$type": "Keyword",\n                            "value": "returns",\n                            "elements": []\n                          },\n                          {\n                            "$type": "Assignment",\n                            "feature": "type",\n                            "operator": "=",\n                            "terminal": {\n                              "$type": "RuleCall",\n                              "arguments": [],\n                              "rule": {\n                                "$refText": "ID"\n                              }\n                            }\n                          }\n                        ],\n                        "cardinality": "?"\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "RuleNameAndParams"\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "Keyword",\n                        "value": "returns",\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "type",\n                        "operator": "=",\n                        "terminal": {\n                          "$type": "RuleCall",\n                          "arguments": [],\n                          "rule": {\n                            "$refText": "ID"\n                          }\n                        }\n                      }\n                    ],\n                    "cardinality": "?"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "definesHiddenTokens",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "hidden"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "("\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "hiddenTokens",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "CrossReference",\n                      "type": {\n                        "$refText": "AbstractRule"\n                      },\n                      "terminal": {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "ID"\n                        }\n                      }\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "Keyword",\n                        "value": ",",\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "hiddenTokens",\n                        "operator": "+=",\n                        "terminal": {\n                          "$type": "CrossReference",\n                          "type": {\n                            "$refText": "AbstractRule"\n                          },\n                          "terminal": {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "ID"\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "cardinality": "*"\n                  }\n                ],\n                "cardinality": "?"\n              },\n              {\n                "$type": "Keyword",\n                "value": ")"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Keyword",\n            "value": ":"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "alternatives",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Alternatives"\n              }\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ";"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "RuleNameAndParams",\n      "hiddenTokens": [],\n      "fragment": true,\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "<",\n                "elements": []\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "parameters",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Parameter"\n                      }\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "Keyword",\n                        "value": ",",\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "parameters",\n                        "operator": "+=",\n                        "terminal": {\n                          "$type": "RuleCall",\n                          "arguments": [],\n                          "rule": {\n                            "$refText": "Parameter"\n                          }\n                        }\n                      }\n                    ],\n                    "cardinality": "*"\n                  }\n                ],\n                "cardinality": "?"\n              },\n              {\n                "$type": "Keyword",\n                "value": ">"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Parameter",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "name",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "ID"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Alternatives",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "UnorderedGroup"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Alternatives",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": "|",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "elements",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "UnorderedGroup"\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "UnorderedGroup",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Group"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "UnorderedGroup",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": "&",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "elements",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Group"\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Group",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "AbstractToken"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Group",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "AbstractToken"\n                  }\n                },\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AbstractToken",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "AbstractTokenWithCardinality"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Action"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AbstractTokenWithCardinality",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Assignment"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "AbstractTerminal"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Assignment",\n            "feature": "cardinality",\n            "operator": "=",\n            "terminal": {\n              "$type": "Alternatives",\n              "elements": [\n                {\n                  "$type": "Keyword",\n                  "value": "?",\n                  "elements": []\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "*"\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "+"\n                }\n              ]\n            },\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Action",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "Action",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "{"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "type",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": ".",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "feature",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "ID"\n                  }\n                }\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "Alternatives",\n                  "elements": [\n                    {\n                      "$type": "Keyword",\n                      "value": "=",\n                      "elements": []\n                    },\n                    {\n                      "$type": "Keyword",\n                      "value": "+="\n                    }\n                  ]\n                }\n              },\n              {\n                "$type": "Keyword",\n                "value": "current"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Keyword",\n            "value": "}"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AbstractTerminal",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Keyword"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RuleCall"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParenthesizedElement"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "PredicatedKeyword"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "PredicatedRuleCall"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "PredicatedGroup"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Keyword",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "string"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "RuleCall",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "rule",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "AbstractRule"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "<",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "arguments",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "NamedArgument"\n                  }\n                }\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": ",",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "arguments",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "NamedArgument"\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "*"\n              },\n              {\n                "$type": "Keyword",\n                "value": ">"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "NamedArgument",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "parameter",\n                "operator": "=",\n                "terminal": {\n                  "$type": "CrossReference",\n                  "type": {\n                    "$refText": "Parameter"\n                  },\n                  "terminal": {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "ID"\n                    }\n                  }\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "calledByName",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "="\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "value",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Disjunction"\n              }\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "LiteralCondition",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "true",\n            "operator": "?=",\n            "terminal": {\n              "$type": "Keyword",\n              "value": "true"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "false",\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Disjunction",\n      "hiddenTokens": [],\n      "type": "Condition",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Conjunction"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Disjunction",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "|"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Conjunction"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Conjunction",\n      "hiddenTokens": [],\n      "type": "Condition",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Negation"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Conjunction",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "&"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Negation"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Negation",\n      "hiddenTokens": [],\n      "type": "Condition",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Atom"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Negation",\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "!"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "value",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Negation"\n                  }\n                }\n              }\n            ]\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Atom",\n      "hiddenTokens": [],\n      "type": "Condition",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParameterReference"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParenthesizedCondition"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "LiteralCondition"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParenthesizedCondition",\n      "hiddenTokens": [],\n      "type": "Condition",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "(",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Disjunction"\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ")"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParameterReference",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "parameter",\n        "operator": "=",\n        "terminal": {\n          "$type": "CrossReference",\n          "type": {\n            "$refText": "Parameter"\n          },\n          "terminal": {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ID"\n            }\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PredicatedKeyword",\n      "hiddenTokens": [],\n      "type": "Keyword",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "predicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "=>"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "firstSetPredicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "->"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Assignment",\n            "feature": "value",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "string"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PredicatedRuleCall",\n      "hiddenTokens": [],\n      "type": "RuleCall",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "predicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "=>"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "firstSetPredicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "->"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Assignment",\n            "feature": "rule",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "AbstractRule"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "<",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "arguments",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "NamedArgument"\n                  }\n                }\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": ",",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "arguments",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "NamedArgument"\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "*"\n              },\n              {\n                "$type": "Keyword",\n                "value": ">"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Assignment",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "Assignment",\n            "elements": []\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "predicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "=>"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "firstSetPredicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "->"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "feature",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          },\n          {\n            "$type": "Assignment",\n            "feature": "operator",\n            "operator": "=",\n            "terminal": {\n              "$type": "Alternatives",\n              "elements": [\n                {\n                  "$type": "Keyword",\n                  "value": "+=",\n                  "elements": []\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "="\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "?="\n                }\n              ]\n            }\n          },\n          {\n            "$type": "Assignment",\n            "feature": "terminal",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "AssignableTerminal"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AssignableTerminal",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Keyword"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RuleCall"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParenthesizedAssignableElement"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "CrossReference"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParenthesizedAssignableElement",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "(",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "AssignableAlternatives"\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ")"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "AssignableAlternatives",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "AssignableTerminal"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Alternatives",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Keyword",\n                    "value": "|",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "elements",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "AssignableTerminal"\n                      }\n                    }\n                  }\n                ],\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CrossReference",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "CrossReference",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "["\n          },\n          {\n            "$type": "Assignment",\n            "feature": "type",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "ParserRule"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Alternatives",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "deprecatedSyntax",\n                    "operator": "?=",\n                    "terminal": {\n                      "$type": "Keyword",\n                      "value": "|"\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Keyword",\n                    "value": ":",\n                    "elements": []\n                  }\n                ]\n              },\n              {\n                "$type": "Assignment",\n                "feature": "terminal",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "CrossReferenceableTerminal"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Keyword",\n            "value": "]"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CrossReferenceableTerminal",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Keyword"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RuleCall"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParenthesizedElement",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "(",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Alternatives"\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ")"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PredicatedGroup",\n      "hiddenTokens": [],\n      "type": "Group",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "predicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "=>"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "firstSetPredicated",\n                "operator": "?=",\n                "terminal": {\n                  "$type": "Keyword",\n                  "value": "->"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Keyword",\n            "value": "("\n          },\n          {\n            "$type": "Assignment",\n            "feature": "elements",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Alternatives"\n              }\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ")"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalRule",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "hidden",\n            "operator": "?=",\n            "terminal": {\n              "$type": "Keyword",\n              "value": "hidden"\n            },\n            "cardinality": "?",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "terminal"\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "fragment",\n                    "operator": "?=",\n                    "terminal": {\n                      "$type": "Keyword",\n                      "value": "fragment"\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "name",\n                    "operator": "=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "ID"\n                      }\n                    }\n                  }\n                ]\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Assignment",\n                    "feature": "name",\n                    "operator": "=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "ID"\n                      }\n                    },\n                    "elements": []\n                  },\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "Keyword",\n                        "value": "returns",\n                        "elements": []\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "type",\n                        "operator": "=",\n                        "terminal": {\n                          "$type": "RuleCall",\n                          "arguments": [],\n                          "rule": {\n                            "$refText": "ID"\n                          }\n                        }\n                      }\n                    ],\n                    "cardinality": "?"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            "$type": "Keyword",\n            "value": ":"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "terminal",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "TerminalAlternatives"\n              }\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ";"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "RegexLiteral",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\/(?![*+?])(?:[^\\\\r\\\\n\\\\[/\\\\\\\\]|\\\\\\\\.|\\\\[(?:[^\\\\r\\\\n\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalAlternatives",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalGroup"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "TerminalAlternatives",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Keyword",\n                "value": "|"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "TerminalGroup"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalGroup",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalToken"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "TerminalGroup",\n                "feature": "elements",\n                "operator": "+=",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "TerminalToken"\n                  }\n                },\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalToken",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalTokenElement"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "cardinality",\n            "operator": "=",\n            "terminal": {\n              "$type": "Alternatives",\n              "elements": [\n                {\n                  "$type": "Keyword",\n                  "value": "?",\n                  "elements": []\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "*"\n                },\n                {\n                  "$type": "Keyword",\n                  "value": "+"\n                }\n              ]\n            },\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalTokenElement",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "CharacterRange"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalRuleCall"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ParenthesizedTerminalElement"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "NegatedToken"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "UntilToken"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RegexToken"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Wildcard"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ParenthesizedTerminalElement",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "(",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TerminalAlternatives"\n            }\n          },\n          {\n            "$type": "Keyword",\n            "value": ")"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TerminalRuleCall",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "TerminalRuleCall",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "rule",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "TerminalRule"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "NegatedToken",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "NegatedToken",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "!"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "terminal",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "TerminalTokenElement"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "UntilToken",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "UntilToken",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "->"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "terminal",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "TerminalTokenElement"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "RegexToken",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "RegexToken",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "regex",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "RegexLiteral"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Wildcard",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "Wildcard",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "."\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CharacterRange",\n      "hiddenTokens": [],\n      "type": "AbstractElement",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "CharacterRange",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "left",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Keyword"\n              }\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Keyword",\n                "value": "..",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Keyword"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    }\n  ],\n  "name": "LangiumGrammar"\n}')),AstReflection:()=>new Mf,LanguageMetaData:()=>Qf,parser:{}};class ed{constructor(e){this.commentNames=e.parser.GrammarConfig.multilineCommentRules}getFoldingRanges(e){const t=[];return this.collectFolding(e,(e=>t.push(e))),t}collectFolding(e,t){var n;const r=null==(n=e.parseResult)?void 0:n.value;if(r){if(this.shouldProcessContent(r)){const n=Zp(r).iterator();let i;do{if(i=n.next(),!i.done){const r=i.value.node;this.shouldProcess(r)&&this.collectObjectFolding(e,r,t),this.shouldProcessContent(r)||n.prune()}}while(!i.done)}this.collectCommentFolding(e,r,t)}}shouldProcess(e){return!0}shouldProcessContent(e){return!0}collectObjectFolding(e,t,n){const r=t.$cstNode;if(r){const t=this.toFoldingRange(e,r);t&&n(t)}}collectCommentFolding(e,t,n){const r=t.$cstNode;if(r)for(const i of function(e){return new rs(e,(e=>e instanceof Wp?e.children:[]))}(r))if(i instanceof Up&&this.commentNames.includes(i.tokenType.name)){const t=this.toFoldingRange(e,i,ar.FoldingRangeKind.Comment);t&&n(t)}}toFoldingRange(e,t,n){const r=t.range,i=r.start;let o=r.end;if(!(o.line-i.line<2))return this.includeLastFoldingLine(t,n)||(o=e.textDocument.positionAt(e.textDocument.offsetAt({line:o.line,character:0})-1)),ar.FoldingRange.create(i.line,o.line,i.character,o.character,n)}includeLastFoldingLine(e,t){if(t===ar.FoldingRangeKind.Comment)return!1;const n=e.text,r=n.charAt(n.length-1);return"}"!==r&&")"!==r&&"]"!==r}}class td extends ed{shouldProcessContent(e){return!wf(e)}}class nd{getCodeActions(e,t){const n=[];for(const r of t.context.diagnostics){const t=this.createCodeAction(r,e);t&&n.push(t)}return n}createCodeAction(e,t){switch(e.code){case Vf.GrammarNameUppercase:case Vf.RuleNameUppercase:return this.makeUpperCase(e,t);case Vf.HiddenGrammarTokens:return this.fixHiddenTerminals(e,t);case Vf.UseRegexTokens:return this.fixRegexTokens(e,t);case Vf.EntryRuleTokenSyntax:return this.addEntryKeyword(e,t);case Vf.CrossRefTokenSyntax:return this.fixCrossRefSyntax(e,t);default:return}}makeUpperCase(e,t){const n={start:e.range.start,end:{line:e.range.start.line,character:e.range.start.character+1}};return{title:"First letter to upper case",kind:ar.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:n,newText:t.textDocument.getText(n).toUpperCase()}]}}}}addEntryKeyword(e,t){return{title:"Add entry keyword",kind:ar.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:{start:e.range.start,end:e.range.start},newText:"entry "}]}}}}fixRegexTokens(e,t){const n=t.textDocument.offsetAt(e.range.start),r=t.parseResult.value.$cstNode;if(r){const i=tf(r,n),o=null==i?void 0:i.element,a=mf(o)?o:Yp(o,mf);if(a&&a.right&&a.$cstNode){const n=a.left.value,r=a.right.value;return{title:"Refactor into regular expression",kind:ar.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:a.$cstNode.range,newText:`/[${Ts(n)}-${Ts(r)}]/`}]}}}}}}fixCrossRefSyntax(e,t){return{title:"Replace '|' with ':'",kind:ar.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:e.range,newText:":"}]}}}}fixHiddenTerminals(e,t){const n=t.parseResult.value,r=n.hiddenTokens,i=[],o=ld(n.$cstNode,"definesHiddenTokens");if(o){const e=o.range.start,r=o.offset,a=n.$cstNode.text.indexOf(")",r)+1;i.push({newText:"",range:{start:e,end:t.textDocument.positionAt(a)}})}for(const a of r){const e=a.ref;if(e&&Ff(e)&&!e.hidden&&e.$cstNode){const t=e.$cstNode.range.start;i.push({newText:"hidden ",range:{start:t,end:t}})}}return{title:"Fix hidden terminals",kind:ar.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:i}}}}}const rd={validation:{ValidationRegistry:e=>new Gf(e),LangiumGrammarValidator:e=>new zf(e)},lsp:{FoldingRangeProvider:e=>new td(e),CodeActionProvider:()=>new nd}};function id(e){return Bf(function(e={}){return{parser:{GrammarConfig:e=>Td(e),LangiumParser:e=>Vd(e),ValueConverter:()=>new Qd,TokenBuilder:()=>new Jd},documents:{LangiumDocuments:e=>new cs(e),LangiumDocumentFactory:e=>new us(e),DocumentBuilder:e=>new ds(e),TextDocuments:()=>new ar.TextDocuments(Yn),TextDocumentFactory:e=>new ss(e)},lsp:{completion:{CompletionProvider:e=>new Md(e),RuleInterpreter:()=>new $d},Connection:()=>e.connection,DocumentSymbolProvider:e=>new qd(e),HoverProvider:e=>new Wd(e),FoldingRangeProvider:e=>new ed(e),ReferenceFinder:e=>new Kd(e),GoToResolver:e=>new jd(e),DocumentHighlighter:e=>new Bd(e),RenameHandler:e=>new Gd(e)},index:{IndexManager:e=>new Sd(e),AstNodeLocator:()=>new bd,AstNodeDescriptionProvider:e=>new Dd(e),ReferenceDescriptionProvider:e=>new xd(e)},references:{Linker:e=>new Id(e),NameProvider:()=>new Od,ScopeProvider:e=>new nh(e),ScopeComputation:e=>new rh(e),References:e=>new eh(e)},serializer:{JsonSerializer:e=>new ih(e)},validation:{DocumentValidator:e=>new oh(e),ValidationRegistry:e=>new Kf(e)}}}(e),Zf,rd)}function od(e){return"?"===e||"*"===e}function ad(e){return"*"===e||"+"===e}function sd(e){return"+="===e}function ud(e){const t=Array.from(function(e){const t=new Map,n=new Map;cd(e.alternatives,void 0,t,n);const r=new Map;for(const[o,a]of t.entries())r.set(o.replace(/\^/g,""),a);const i=new Map;for(const[o,a]of n.entries())i.set(o,a.replace(/\^/g,""));return{byName:r,byFeature:i}}(e).byFeature.keys());if(t.every((e=>If(e)||Cf(e)||Ef(e)||pf(e)||kf(e)))){return 0===t.filter((e=>If(e)&&wf(e.rule.ref)&&!ud(e.rule.ref))).length}return!1}function cd(e,t,n,r){var i,o,a;if(df(e)){const i=(null!=t?t:"")+e.feature;n.set(i,{feature:e,kind:"Assignment"}),r.set(e,i),cd(e.terminal,i,n,r)}else if(If(e)){const o=(null!=t?t:"")+(null==(i=e.rule.ref)?void 0:i.name)+"RuleCall";n.set(o,{feature:e,kind:"RuleCall"}),r.set(e,o)}else if(vf(e)){const i=(null!=t?t:"")+(null==(o=e.type.ref)?void 0:o.name)+"CrossReference";n.set(i,{feature:e,kind:"CrossReference"}),r.set(e,i)}else if(Cf(e)){const t=function(e){let t=e;return t=t.replace(/\s+/g,"Whitespace"),t=t.replace(/:/g,"Colon"),t=t.replace(/\./g,"Dot"),t=t.replace(/\//g,"Slash"),t=t.replace(/\\/g,"Backslash"),t=t.replace(/,/g,"Comma"),t=t.replace(/\(/g,"ParenthesisOpen"),t=t.replace(/\)/g,"ParenthesisClose"),t=t.replace(/\[/g,"BracketOpen"),t=t.replace(/\]/g,"BracketClose"),t=t.replace(/\{/g,"CurlyOpen"),t=t.replace(/\}/g,"CurlyClose"),t=t.replace(/\+/g,"Plus"),t=t.replace(/\*/g,"Asterisk"),t=t.replace(/\?/g,"QuestionMark"),t=t.replace(/!/g,"ExclamationMark"),t=t.replace(/\^/g,"Caret"),t=t.replace(/</g,"LessThan"),t=t.replace(/>/g,"MoreThan"),t=t.replace(/&/g,"Ampersand"),t=t.replace(/\|/g,"Pipe"),t=t.replace(/=/g,"Equals"),t=t.replace(/-/g,"Dash"),t=t.replace(/_/g,"Underscore"),t=t.replace(/;/g,"Semicolon"),t=t.replace(/@/g,"At"),t=t.replace(/%/g,"Percent"),t=t.replace(/\$/g,"Currency"),t=t.replace(/"/g,"DoubleQuote"),t=t.replace(/'/g,"SingleQuote"),t=t.replace(/#/g,"Hash"),t=t.replace(/ß/g,"Eszett"),t=t[0].toUpperCase()+t.substring(1),t=function(e){let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);t+=r<65||r>90&&r<97||r>122?`u${r}`:e.charAt(n)}return t}(t),t}(e.value)+"Keyword";n.set(t,{feature:e,kind:"Keyword"}),r.set(e,t)}else if(cf(e)){const i=(null!=t?t:"")+e.type+(null!=(a=e.feature)?a:"")+"Action";n.set(i,{feature:e,kind:"Action"}),r.set(e,i)}else if(pf(e)||kf(e)||Ef(e))for(const s of e.elements)cd(s,t,n,r)}function ld(e,t,n){const r=function(e,t){return pd(e,t,null==e?void 0:e.element,!0)}(e,t);if(0!==r.length)return r[n=void 0!==n?Math.max(0,Math.min(n,r.length-1)):0]}function pd(e,t,n,r){if(!e||!t||e.element!==n)return[];const i=Yp(e.feature,df);return!r&&i&&i.feature===t?[e]:e instanceof Wp?e.children.flatMap((e=>pd(e,t,n,!1))):[]}function fd(e){let t=e;do{const e=Yp(t.feature,df);if(e)return e;t=t.parent}while(t)}function dd(e,t){var n;const r=hd(t);return null!=(n=null==r?void 0:r.type)?n:_d(e)}function hd(e){const t=e.$container;if(Ef(t)){const n=t.elements;for(let t=n.indexOf(e)-1;t>=0;t--){const e=n[t];if(cf(e))return e;{let e;if(Zp(n[t]).forEach((t=>{cf(t.node)&&(e=t.node)})),e)return e}}}return rf(t)?hd(t):void 0}function md(e){return vd(e.terminal)}const gd=/[\s\S]/.source;function vd(e){if(o=e,$f.isInstance(o,Df))return Ed(`(${(i=e).elements.map(vd).join("|")})`,i.cardinality);if(function(e){return $f.isInstance(e,xf)}(e))return Ed((r=e).elements.map(vd).join(""),r.cardinality);if(mf(e))return function(e){if(e.right)return Ed(`[${yd(e.left)}-${yd(e.right)}]`,e.cardinality);return Ed(yd(e.left),e.cardinality,!0)}(e);if(function(e){return $f.isInstance(e,bf)}(e)){const t=e.rule.ref;if(!t)throw new Error("Missing rule reference.");return Ed(md(t),e.cardinality,!0)}if(function(e){return $f.isInstance(e,Tf)}(e))return Ed(`(?!${vd((n=e).terminal)})${gd}*?`,n.cardinality,!0);if(function(e){return $f.isInstance(e,Of)}(e))return Ed(`${gd}*?${vd((t=e).terminal)}`,t.cardinality);if(function(e){return $f.isInstance(e,Af)}(e))return Ed(e.regex,e.cardinality,!0);if(function(e){return $f.isInstance(e,Nf)}(e))return Ed(gd,e.cardinality);throw new Error("Invalid terminal element.");var t,n,r,i,o}function yd(e){return Ts(e.value)}function Ed(e,t,n=!1){return t?(n&&(e=`(${e})`),`${e}${t}`):e}function _d(e){var t;if(e)return null!=(t=e.type)?t:e.name;throw new Error("Unknown rule type")}function Cd(e){const t=id(),n=t.serializer.JsonSerializer.deserialize(e);if(r=n,!$f.isInstance(r,af))throw new Error("Could not load grammar from specified json input.");var r;const i=n,o=as(Yn.create("memory://grammar.langium","langium",0,""),{lexerErrors:[],parserErrors:[],value:i});return i.$document=o,o.precomputedScopes=function(e,t){var n;const r=e.references.NameProvider,i=e.index.AstNodeDescriptionProvider,o=Jp(t),a=new Map;for(const s of Zp(t)){const{node:e}=s,t=e.$container;if(t){const s=r.getName(e);if(s){const r=i.createDescription(e,s,o);a.has(t)?null==(n=a.get(t))||n.push(r):a.set(t,[r])}}}return a}(t,i),i}function Td(e){const t=[],n=e.Grammar;for(const i of n.rules)Ff(i)&&((r=i).hidden&&!" ".match(md(r)))&&Cs(md(i))&&t.push(i.name);var r;return{multilineCommentRules:t}}function Ad(e,t){return`${e}:${t}`}function Rd(e){return e.substring(e.indexOf(":")+1)}class Id{constructor(e){this.langiumDocuments=()=>e.documents.LangiumDocuments,this.scopeProvider=e.references.ScopeProvider,this.astNodeLocator=e.index.AstNodeLocator}async link(e,t=ar.CancellationToken.None){const n=t=>{ef(t).forEach((t=>this.doLink(t,e)))},r=e.parseResult.value;n(r);for(const i of Zp(r))await fs(t),n(i.node)}doLink(e,t){const n=e.reference;if(void 0===n._ref)try{const t=Ad(e.container.$type,e.property),r=this.getCandidate(e.container,t,n);if(!zp(r)&&this.langiumDocuments().hasDocument(r.documentUri)){const t=this.loadAstNode(r);n._ref=null!=t?t:this.createLinkingError(e,r)}else n._ref=r}catch(r){n._ref={...e,message:`An error occurred while resolving reference to '${n.$refText}': ${r}`}}t.references.push(n)}unlink(e){for(const t of e.references)delete t._ref;e.references=[]}getCandidate(e,t,n){const r=this.scopeProvider.getScope(e,t).getElement(n.$refText);return null!=r?r:this.createLinkingError({container:e,property:Rd(t),reference:n})}buildReference(e,t,n,r){const i=this,o={$refNode:t,$refText:r,get ref(){if(Vp(this._ref))return this._ref;if(void 0===this._ref)this._ref=i.getLinkedNode(e,n,o);else if("object"==typeof(t=this._ref)&&null!==t&&"string"==typeof t.name&&"string"==typeof t.type&&"string"==typeof t.path){const t=i.loadAstNode(this._ref);this._ref=null!=t?t:i.createLinkingError({container:e,property:Rd(n),reference:o},this._ref)}var t;return Vp(this._ref)?this._ref:void 0},get error(){return zp(this._ref)?this._ref:void 0}};return o}getLinkedNode(e,t,n){try{const r=this.getCandidate(e,t,n);if(zp(r))return r;{const i=this.loadAstNode(r);return null!=i?i:this.createLinkingError({container:e,property:Rd(t),reference:n},r)}}catch(r){return{container:e,property:Rd(t),reference:n,message:`An error occurred while resolving reference to '${n.$refText}': ${r}`}}}loadAstNode(e){if(e.node)return e.node;const t=this.langiumDocuments().getOrCreateDocument(e.documentUri);return this.astNodeLocator.getAstNode(t,e.path)}createLinkingError(e,t){return{...e,message:`Could not resolve reference to '${e.reference.$refText}'.`,targetDescription:t}}}class Dd{constructor(e){this.astNodeLocator=e.index.AstNodeLocator,this.nameProvider=e.references.NameProvider}createDescription(e,t,n){return{node:e,name:t,type:e.$type,documentUri:n.uri,path:this.astNodeLocator.getAstNodePath(e)}}async createDescriptions(e,t=ar.CancellationToken.None){const n=[],r=e.parseResult.value,i=this.nameProvider.getName(r);i&&n.push(this.createDescription(r,i,e));for(const o of Qp(r)){await fs(t);const r=this.nameProvider.getName(o.node);r&&n.push(this.createDescription(o.node,r,e))}return n}}class xd{constructor(e){this.linker=e.references.Linker,this.nodeLocator=e.index.AstNodeLocator}async createDescriptions(e,t=ar.CancellationToken.None){const n=[],r=e.parseResult.value,i=e=>{const t=this.linker.getCandidate(e.container,Ad(e.container.$type,e.property),e.reference);if(zp(t))return;const n=Jp(e.container).uri,r=e.reference.$refNode;return{sourceUri:n,sourcePath:this.nodeLocator.getAstNodePath(e.container),targetUri:t.documentUri,targetPath:t.path,segment:$p(r),local:t.documentUri.toString()===n.toString()}};for(const o of Zp(r)){await fs(t);ef(o.node).forEach((e=>{const t=i(e);t&&n.push(t)}))}return n}}class bd{constructor(){this.segmentSeparator="/"}getAstNodePath(e){let t=e.$container;const n=[];for(;t;)n.push(this.pathSegment(e,t)),e=t,t=t.$container;return this.segmentSeparator+n.reverse().join(this.segmentSeparator)}getAstNode(e,t){return t.split(this.segmentSeparator).reduce(((e,t)=>{if(!e||0===t.length)return e;const n=t.split("@"),r=e[n[0]];return 2===n.length?r[n[1]]:r}),e.parseResult.value)}pathSegment(e,t){if(e.$cstNode){const n=fd(e.$cstNode);if(console.log("findAssignment(node.$cstNode)",n,e),n){if(ad(n.cardinality)){const r=t[n.feature].indexOf(e);return n.feature+"@"+r}return n.feature}}return"<missing>"}}class Sd{constructor(e){this.simpleIndex=new Map,this.referenceIndex=new Map,this.globalScopeCache=new Map,this.astReflection=e.AstReflection,this.languageMetaData=e.LanguageMetaData,this.langiumDocuments=()=>e.documents.LangiumDocuments,this.astNodeDescriptionProvider=()=>e.index.AstNodeDescriptionProvider,this.referenceDescriptionProvider=()=>e.index.ReferenceDescriptionProvider}findAllReferences(e,t){const n=Jp(e).uri,r=[];return this.referenceIndex.forEach((e=>{e.forEach((e=>{e.targetUri.toString()===n.toString()&&e.targetPath===t&&r.push(e)}))})),ns(r)}allElements(e){e=null!=e?e:"",this.globalScopeCache.has("")||this.globalScopeCache.set("",Array.from(this.simpleIndex.values()).flat());const t=this.globalScopeCache.get(e);if(t)return ns(t);{const t=this.globalScopeCache.get("").filter((t=>!e||this.astReflection.isSubtype(t.type,e)));return this.globalScopeCache.set(e,t),ns(t)}}remove(e){for(const t of e){const e=t.toString();this.simpleIndex.delete(e),this.referenceIndex.delete(e)}}update(e,t=ar.CancellationToken.None){return this.processDocuments(e,t)}getAffectedDocuments(e){return this.langiumDocuments().all.filter((t=>{if(e.some((e=>t.uri.toString()===e.toString())))return!1;for(const n of e)if(this.isAffected(t,n))return!0;return!1}))}isAffected(e,t){const n=t.toString(),r=e.uri.toString();if(e.references.some((e=>e.error)))return!0;const i=this.referenceIndex.get(r);return!!i&&i.filter((e=>!e.local)).some((e=>e.targetUri.toString()===n))}async initializeWorkspace(e){const t=[],n=e=>{t.push(e)};await Promise.all(e.map((async e=>this.traverseFolder(Ya.parse(e.uri),this.languageMetaData.fileExtensions,n)))),await this.processDocuments(t)}async traverseFolder(e,t,n){const r=e.fsPath;if(!za.existsSync(r))return void console.error(`File ${e} doesn't exist.`);if(this.skip(e))return;const i=await za.promises.readdir(r,{withFileTypes:!0});for(const o of i){const e=Ya.file(za.resolve(r,o.name));if(o.isDirectory())await this.traverseFolder(e,t,n);else if(t.includes(za.extname(e.path))){n(this.langiumDocuments().getOrCreateDocument(e))}}}skip(e){const t=Xa.basename(e);return t.startsWith(".")||["node_modules","out"].includes(t)}async processDocuments(e,t=ar.CancellationToken.None){this.globalScopeCache.clear();for(const n of e){const e=await this.astNodeDescriptionProvider().createDescriptions(n,t);for(const t of e)t.node=void 0;this.simpleIndex.set(n.textDocument.uri,e),await fs(t)}for(const n of e)this.referenceIndex.set(n.textDocument.uri,await this.referenceDescriptionProvider().createDescriptions(n,t)),await fs(t),n.state=is.Indexed}}function kd(e){return void 0!==e.name}class Od{getName(e){if(kd(e))return e.name}getNameNode(e){return ld(e.$cstNode,"name")}}function Nd(e){return Pd(e,new Map)}function Pd(e,t){var n;if(0===e.length)return[];const r=[];let i,o=e[0];for(;o.$container;){if(Ef(o.$container)){i=o.$container;break}if(!rf(o.$container))break;o=o.$container}if(ad(null!=(n=o.cardinality)?n:t.get(o))&&r.push(...wd(o,t)),i){const n=i.elements.indexOf(o);void 0!==n&&n<i.elements.length-1&&r.push(...Fd(i,n+1,t)),r.every((e=>{var n;return od(null!=(n=e.cardinality)?n:t.get(e))}))&&r.push(...Pd([i],t)),r.every((e=>{var n;return od(null!=(n=e.cardinality)?n:t.get(e))}))&&(e.shift(),r.push(...Pd(e,t)))}else e.shift(),r.push(...Pd(e,t));return r}function wd(e,t){const n=null!=t?t:new Map;return void 0===e?[]:Ef(e)?Fd(e,0,n).map((t=>Ld(t,e.cardinality,n))):pf(e)?e.elements.flatMap((e=>wd(e,n))).map((t=>Ld(t,e.cardinality,n))):kf(e)?[]:df(e)?wd(e.terminal,n).map((t=>Ld(t,e.cardinality,n))):cf(e)?Pd([e],n).map((t=>Ld(t,e.cardinality,n))):If(e)&&wf(e.rule.ref)?wd(e.rule.ref.alternatives,n).map((t=>Ld(t,e.cardinality,n))):[e]}function Ld(e,t,n){return od(t)&&(ad(e.cardinality)?n.set(e,"*"):n.set(e,"?")),e}function Fd(e,t,n){var r;const i=[];let o;do{if(o=e.elements[t++],i.push(...wd(o,n)),!od(null!=(r=null==o?void 0:o.cardinality)?r:n.get(o)))break}while(o);return i}class Md{constructor(e){this.scopeProvider=e.references.ScopeProvider,this.ruleInterpreter=e.lsp.completion.RuleInterpreter,this.grammar=e.Grammar}getCompletion(e,t){const n=e.parseResult.value.$cstNode,r=[],i=e.textDocument.offsetAt(t.position),o=(t,n)=>{const o=this.fillCompletionItem(e.textDocument,i,t,n);o&&r.push(o)};if(n){const e=tf(n,i);if(e){const t=Nd(this.buildFeatureStack(e)),n=this.findCommonSuperRule(e);if(n){const e=Fp(n.node).filter((e=>e.offset<i)),r=this.ruleInterpreter.interpretRule(n.rule,[...e],i),o=r.filter((t=>{const n=this.ruleInterpreter.featureMatches(t,e[e.length-1],i);return"partial"===n||"both"===n})),a=r.filter((e=>!o.includes(e)));t.push(...o),t.push(...a.flatMap((e=>Nd([e]))))}e.end>i&&t.push(e.feature),ns(t).distinct((e=>Cf(e)?e.value:e)).forEach((t=>this.completionFor(Bp(e),t,o)))}else{const e=this.grammar.rules.find((e=>wf(e)));this.completionForRule(void 0,e,o)}}return ar.CompletionList.create(r,!0)}buildFeatureStack(e){const t=[];for(;e;)e.feature&&t.push(e.feature),e=e.parent;return t}completionForRule(e,t,n){if(wf(t)){wd(t.alternatives).flatMap((t=>this.completionFor(e,t,n)))}}completionFor(e,t,n){if(Cf(t))this.completionForKeyword(t,e,n);else{if(If(t)&&t.rule.ref)return this.completionForRule(e,t.rule.ref,n);vf(t)&&e&&this.completionForCrossReference(t,e,n)}}completionForCrossReference(e,t,n){const r=Yp(e,df),i=Yp(e,wf);if(r&&i){const e=this.scopeProvider.getScope(t,`${dd(i,r)}:${r.feature}`),o=new Set;e.getAllElements().forEach((e=>{o.has(e.name)||(n(e,{kind:ar.CompletionItemKind.Reference,detail:e.type,sortText:"0"}),o.add(e.name))}))}}completionForKeyword(e,t,n){n(e.value,{kind:ar.CompletionItemKind.Keyword,detail:"Keyword",sortText:/\w/.test(e.value)?"1":"2"})}findCommonSuperRule(e){for(;"string"!=typeof e.element.$type;)e=e.parent;let t=e.parent;for(;t;){if(t.element!==e.element){const t=e.feature;if(If(t)&&t.rule.ref){return{rule:t.rule.ref,node:e}}throw new Error}t=(e=t).parent}}fillCompletionItem(e,t,n,r){let i;if("string"==typeof n)i=n;else if(Vp(n)&&kd(n))i=n.name;else{if(Vp(n))return;i=n.name}const o=this.buildCompletionTextEdit(e,t,i);if(!o)return;const a={label:i,textEdit:o};return r&&Object.assign(a,r),a}buildCompletionTextEdit(e,t,n){let r=0;const i=e.getText(),o=i.toLowerCase(),a=n.toLowerCase();for(let s=a.length;s>0;s--){const e=o.substring(t-s,t);if(a.startsWith(e)&&(0===s||!this.isWordCharacterAt(o,t-s-1))){r=s;break}}if(r>0||0===t||!this.isWordCharacterAt(n,0)||!this.isWordCharacterAt(i,t-1)){return{newText:n,range:{start:e.positionAt(t-r),end:e.positionAt(t)}}}}isWordCharacterAt(e,t){return/\w/.test(e.charAt(t))}}class $d{interpretRule(e,t,n){let r=[],i=wd(e.alternatives),o=t.shift();for(;o&&i.length>0;){const e=o,a=[];r=[],i.forEach((i=>{const o=this.featureMatches(i,e,n);0===t.length&&"none"!==o&&a.push(i),"full"!==o&&"both"!==o||r.push(i)})),i=r.flatMap((e=>Nd([e]))),r.push(...a),o=t.shift()}return r}featureMatches(e,t,n){if(Cf(e)){const r=e.value,i=t.end,o=i>n?t.text.substring(0,i-n):t.text;return r===o?"full":r.startsWith(o)?"partial":"none"}return If(e)?this.ruleMatches(e.rule.ref,t,n):vf(e)?this.featureMatches(e.terminal,t,n):"none"}ruleMatches(e,t,n){if(wf(e)){const r=wd(e.alternatives),i=ud(e)?"both":"full";return r.some((e=>this.featureMatches(e,t,n)))?i:"none"}return Ff(e)&&null!==t.text.match(md(e))?"both":"none"}}class Bd{constructor(e){this.references=e.references.References,this.nameProvider=e.references.NameProvider}findHighlights(e,t){var n;const r=e.parseResult.value.$cstNode;if(!r)return;const i=tf(r,e.textDocument.offsetAt(t.position));if(!i)return;const o=null==(n=this.references.findDeclaration(i))?void 0:n.element;if(o){const t=[];if(Jp(o).uri.toString()===e.uri.toString()){const e=this.findNameNode(o);e&&t.push([e,this.getHighlightKind(e)])}return function(e,t=Jp(e).parseResult.value){const n=[],r=t=>{ef(t).forEach((t=>{t.reference.ref===e&&n.push(t.reference)}))};return r(t),Zp(t).forEach((e=>r(e.node))),ns(n)}(o,r.element).forEach((e=>{t.push([e.$refNode,this.getHighlightKind(e.$refNode,e)])})),t.map((([e,t])=>ar.DocumentHighlight.create(e.range,t)))}}findNameNode(e){const t=this.nameProvider.getNameNode(e);return t||e.$cstNode}getHighlightKind(e,t){return t?ar.DocumentHighlightKind.Read:ar.DocumentHighlightKind.Text}}class qd{constructor(e){this.nameProvider=e.references.NameProvider}getSymbols(e){return this.getSymbol(e,e.parseResult.value)}getSymbol(e,t){const n=t.$cstNode,r=this.nameProvider.getNameNode(t);if(r&&n){const i=this.nameProvider.getName(t);return[{kind:this.getSymbolKind(t.$type),name:null!=i?i:r.text,range:n.range,selectionRange:r.range,children:this.getChildSymbols(e,t)}]}return this.getChildSymbols(e,t)||[]}getChildSymbols(e,t){const n=[];for(const r of Qp(t)){const t=this.getSymbol(e,r.node);n.push(...t)}if(n.length>0)return n}getSymbolKind(e){return ar.SymbolKind.Field}}class jd{constructor(e){this.nameProvider=e.references.NameProvider,this.references=e.references.References}goToDefinition(e,t){const n=e.parseResult.value,r=[];if(n.$cstNode){const i=tf(n.$cstNode,e.textDocument.offsetAt(t.position));if(i){const e=this.references.findDeclaration(i);if(null==e?void 0:e.element){const t=Jp(null==e?void 0:e.element);e&&t&&r.push({source:i,target:e,targetDocument:t})}}}return r.map((e=>{var t;return ar.LocationLink.create(e.targetDocument.textDocument.uri,(null!=(t=this.findActualNodeFor(e.target))?t:e.target).range,e.target.range,e.source.range)}))}findActualNodeFor(e){var t;let n=e;for(;!(null==(t=null==n?void 0:n.element)?void 0:t.$cstNode);){if(!n)return;n=n.parent}return n.element.$cstNode}}class Ud{constructor(e){this.references=e.references.References}getHoverContent(e,t){var n,r;const i=null==(r=null==(n=e.parseResult)?void 0:n.value)?void 0:r.$cstNode;if(i){const n=e.textDocument.offsetAt(t.position),r=tf(i,n);if(r&&r.offset+r.length>n){const e=this.references.findDeclaration(r);if(e)return this.getAstNodeHoverContent(e.element)}}}}class Wd extends Ud{constructor(e){super(e),this.commentContentRegex=/\/\*([\s\S]*?)\*\//,this.grammarConfig=e.parser.GrammarConfig}getAstNodeHoverContent(e){const t=function(e,t){let n;if(e instanceof Wp)for(const r of e.children){if(!r.hidden)break;r instanceof Up&&t.includes(r.tokenType.name)&&(n=r)}return n}(e.$cstNode,this.grammarConfig.multilineCommentRules);let n;if(t){const e=this.commentContentRegex.exec(t.text);e&&e[1]&&(n=this.getCommentContent(e[1]))}if(n)return{contents:{kind:"markdown",value:n}}}getCommentContent(e){return e.split("\n").map((e=>((e=e.trim()).startsWith("*")&&(e=e.substring(1).trim()),e))).join(" ").trim()}}class Kd{constructor(e){this.nameProvider=e.references.NameProvider,this.references=e.references.References}findReferences(e,t){var n;const r=e.parseResult.value.$cstNode;if(!r)return[];const i=[],o=tf(r,e.textDocument.offsetAt(t.position));if(!o)return[];const a=null==(n=this.references.findDeclaration(o))?void 0:n.element;if(a){if(t.context.includeDeclaration){const e=Jp(a),t=this.findNameNode(a,o.text);t&&i.push({docUri:e.uri,range:t.range})}this.references.findReferences(a).forEach((t=>{if(Hp(t))i.push({docUri:e.uri,range:t.$refNode.range});else{const e=t.segment.range;i.push({docUri:t.sourceUri,range:e})}}))}return i.map((e=>ar.Location.create(e.docUri.toString(),e.range)))}findNameNode(e,t){const n=this.nameProvider.getNameNode(e);if(n)return n;if(e.$cstNode){const n=Fp(e.$cstNode).find((e=>e.text===t));if(n)return n}return e.$cstNode}}class Gd{constructor(e){this.referenceFinder=e.lsp.ReferenceFinder,this.references=e.references.References,this.nameProvider=e.references.NameProvider}async renameElement(e,t){const n={},r=await this.referenceFinder.findReferences(e,{...t,context:{includeDeclaration:!0}});if(Array.isArray(r))return r.forEach((e=>{const r=ar.TextEdit.replace(e.range,t.newName);n[e.uri]?n[e.uri].push(r):n[e.uri]=[r]})),{changes:n}}prepareRename(e,t){return this.renameNodeRange(e,t.position)}renameNodeRange(e,t){const n=e.parseResult.value.$cstNode,r=e.textDocument.offsetAt(t);if(n&&r){const e=tf(n,r);if(!e)return;if(this.references.findDeclaration(e)||this.isNameNode(e))return e.range}}isNameNode(e){return(null==e?void 0:e.element)&&kd(e.element)&&e===this.nameProvider.getNameNode(e.element)}}function Vd(e){const t=e.Grammar,n=new Map,r=e.parser.TokenBuilder.buildTokens(t);r.forEach((e=>{n.set(e.name,e)}));const i=new Map,o=new Pp(e,r);return function(e,t){for(const n of ns(t.rules).filter(wf)){const t={...e,consume:1,optional:1,subrule:1,many:1,or:1},r=(n.entry?t.parser.MAIN_RULE:t.parser.DEFINE_RULE).bind(t.parser),i=n.fragment?void 0:ud(n)?Np:_d(n);t.rules.set(n.name,r(n.name,i,Yd(t,n)))}}({parser:o,tokens:n,rules:i},t),o.finalize(),o}function Hd(e,t){const n=e.rules.get(t);if(!n)throw new Error;return n}function zd(e,t){const n=e.tokens.get(t);if(!n)throw new Error;return n}function Yd(e,t){const n=Xd(e,t.alternatives),r=[];return Zp(t.alternatives).forEach((e=>{const t=e.node;df(t)&&sd(t.operator)&&r.push(t.feature)})),()=>(e.parser.initializeElement(r),n(),e.parser.construct())}function Xd(e,t){let n;if(Cf(t))n=function(e,t){const n=e.consume++,r=e.tokens.get(t.value);if(!r)throw new Error;return()=>e.parser.consume(n,r,t)}(e,t);else if(cf(t))n=function(e,t){return()=>e.parser.action(t.type,t)}(e,t);else if(df(t))n=Xd(e,t.terminal);else if(vf(t))n=function(e,t){const n=t.terminal;if(n){if(If(n)&&wf(n.rule.ref)){const r=e.subrule++,i=n.rule.ref.name;return()=>e.parser.subrule(r,Hd(e,i),t)}if(If(n)&&Ff(n.rule.ref)){const r=e.consume++,i=zd(e,n.rule.ref.name);return()=>e.parser.consume(r,i,t)}throw new Error}{const n=e.consume++,r=zd(e,"ID");return()=>e.parser.consume(n,r,t)}}(e,t);else if(If(t))n=function(e,t){const n=t.rule.ref;if(wf(n)){const r=e.subrule++;return Xp(t,df)||ud(n)?()=>e.parser.subrule(r,Hd(e,n.name),t):()=>e.parser.unassignedSubrule(r,Hd(e,n.name),t)}if(Ff(n)){const r=e.consume++,i=zd(e,n.name);return()=>e.parser.consume(r,i,t)}throw new Error}(e,t);else if(pf(t))n=function(e,t){if(1===t.elements.length)return Xd(e,t.elements[0]);{const n=[];for(const i of t.elements)n.push(Xd(e,i));const r=e.or++;return()=>e.parser.alternatives(r,n)}}(e,t);else if(kf(t))n=function(e,t){throw new Error("Unordered groups are not supported (yet)")}();else{if(!Ef(t))throw new Error;n=function(e,t){const n=[];for(const r of t.elements)n.push(Xd(e,r));return()=>n.forEach((e=>e()))}(e,t)}return function(e,t,n){if(n){if("*"===n){const n=e.many++;return()=>e.parser.many(n,t)}if("+"===n){const n=e.many++;return()=>e.parser.atLeastOne(n,t)}if("?"===n){const n=e.optional++;return()=>e.parser.optional(n,t)}throw new Error}return t}(e,n,t.cardinality)}class Jd{constructor(){this.KEYWORD_SUFFIX="_KEYWORD",this.TERMINAL_SUFFIX="_TERMINAL"}buildTokens(e){const t=new Map,n=[],r=Array.from(ns(e.rules).filter(Ff));for(const a of r){const e=this.buildTerminalToken(a);n.push(e),t.set(a.name+this.TERMINAL_SUFFIX,e)}const i=[],o=Zp(e).map((e=>e.node)).filter(Cf).distinct((e=>e.value)).toArray().sort(((e,t)=>t.value.length-e.value.length));for(const a of o){const e=this.buildKeywordToken(a,o,r,t);i.push(e),t.set(a.value+this.KEYWORD_SUFFIX,e)}for(const a of n){const e=a.PATTERN;"object"==typeof e&&e&&"test"in e&&e.test(" ")?i.unshift(a):i.push(a)}return i}buildTerminalToken(e){let t;const n=md(e);e.hidden&&(t=new RegExp(n).test(" ")?Op.SKIPPED:"hidden");const r={name:e.name,GROUP:t,PATTERN:new RegExp(n)};return t||delete r.GROUP,r}buildKeywordToken(e,t,n,r){const i=this.findLongerAlt(e,t,n,r);return{name:e.value,PATTERN:this.buildKeywordPattern(e),LONGER_ALT:i}}buildKeywordPattern(e){return e.value}findLongerAlt(e,t,n,r){const i=[];for(const o of t){const t=r.get(o.value+this.KEYWORD_SUFFIX);t&&o.value.length>e.value.length&&o.value.startsWith(e.value)&&i.push(t)}for(const o of n){const t=r.get(o.name+this.TERMINAL_SUFFIX);t&&As("^"+md(o)+"$",e.value)&&i.push(t)}return i}}class Qd{convert(e,t){if(If(t.feature)){const n=t.feature.rule.ref;if(!n)throw new Error("This cst node was not parsed by a rule.");return this.runConverter(n,e,t)}return e}runConverter(e,t,n){switch(e.name.toUpperCase()){case"INT":return function(e){return parseInt(e)}(t);case"STRING":return Zd(t);case"ID":return function(e){return"^"===e.charAt(0)?e.substring(1):e}(t);case"REGEXLITERAL":return Zd(t)}switch(e.type.toLowerCase()){case"number":return function(e){return Number(e)}(t);case"boolean":return function(e){return"true"===e.toLowerCase()}(t);default:return t}}}function Zd(e){return e.substring(1,e.length-1)}class eh{constructor(e){this.nameProvider=e.references.NameProvider,this.index=e.index.IndexManager,this.nodeLocator=e.index.AstNodeLocator}findDeclaration(e){if(e){const t=fd(e),n=Bp(e);if(t&&n){const r=n[t.feature];if(Hp(r))return this.processReference(r);if(Array.isArray(r)){for(const t of r)if(Hp(t)){const n=this.processReference(t);if(n&&n.text===e.text)return n}}else{const t=this.nameProvider.getNameNode(n);if(t===e||t&&t.offset<=e.offset&&t.offset+t.length>e.offset)return t}}}}findReferences(e){return this.index.findAllReferences(e,this.nodeLocator.getAstNodePath(e))}processReference(e){const t=e.ref;if(t&&t.$cstNode){const e=this.nameProvider.getNameNode(t);return e||t.$cstNode}}}class th{constructor(e,t){this.elements=e,this.outerScope=t}getAllElements(){return this.outerScope?this.elements.concat(this.outerScope.getAllElements()):this.elements}getElement(e){const t=this.elements.find((t=>t.name===e));return t||(this.outerScope?this.outerScope.getElement(e):void 0)}}class nh{constructor(e){this.reflection=e.AstReflection,this.globalScope=e.index.IndexManager}getScope(e,t){const n=[],r=this.reflection.getReferenceType(t),i=Jp(e).precomputedScopes;if(i){let t=e;do{const e=i.get(t);e&&n.push(ns(e).filter((e=>this.reflection.isSubtype(e.type,r)))),t=t.$container}while(t)}let o=this.getGlobalScope(r);for(let a=n.length-1;a>=0;a--)o=new th(n[a],o);return o}getGlobalScope(e){return new th(this.globalScope.allElements(e))}}class rh{constructor(e){this.nameProvider=e.references.NameProvider,this.descriptions=e.index.AstNodeDescriptionProvider}async computeScope(e,t=lr.CancellationToken.None){const n=e.parseResult.value,r=new Map;for(const i of Zp(n)){fs(t);const{node:n}=i,o=n.$container;if(o){const t=this.nameProvider.getName(n);if(t){const i=this.descriptions.createDescription(n,t,e);this.addToContainer(i,o,r)}}}return r}addToContainer(e,t,n){var r;n.has(t)?null==(r=n.get(t))||r.push(e):n.set(t,[e])}}class ih{constructor(e){this.linker=e.references.Linker}serialize(e,t){return JSON.stringify(this.decycle(e,"$container","$document","$cstNode"),void 0,t)}deserialize(e){return this.revive(JSON.parse(e))}decycle(e,...t){const n=new Set,r=e=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Cycle in ast detected.");if(n.add(e),Hp(e))return{$refText:e.$refText};let i;if(Array.isArray(e)){i=[];for(let t=0;t<e.length;t++)i[t]=r(e[t])}else{i={};for(const[n,o]of Object.entries(e))t.includes(n)||(i[n]=r(o))}return i}return e};return r(e)}revive(e){const t=(e,n,r)=>{if(e&&"object"==typeof e&&null!==e)if(Array.isArray(e))for(let i=0;i<e.length;i++){const o=e[i];if(Hp(o)&&Vp(n)){const t=Ad(n.$type,r),a=this.linker.buildReference(n,o.$refNode,t,o.$refText);e[i]=a}else"object"==typeof o&&null!==o&&(t(o,o),o.$container=n)}else for(const[i,o]of Object.entries(e))if("object"==typeof o&&null!==o)if(Hp(o)){const t=Ad(e.$type,i),n=this.linker.buildReference(e,o.$refNode,t,o.$refText);e[i]=n}else Array.isArray(o)?t(o,e,i):(t(o),o.$container=e)};return t(e),e}}class oh{constructor(e){this.validationRegistry=e.validation.ValidationRegistry}async validateDocument(e,t=ar.CancellationToken.None){const n=e.parseResult,r=[];await fs(t);for(const o of n.lexerErrors){const e={severity:ar.DiagnosticSeverity.Error,range:{start:{line:o.line-1,character:o.column-1},end:{line:o.line-1,character:o.column+o.length-1}},message:o.message};r.push(e)}for(const o of n.parserErrors){const e=o.token,t={severity:ar.DiagnosticSeverity.Error,range:Mp(e),message:o.message};r.push(t)}for(const o of e.references){const e=o.error;if(e){const t={node:e.container,property:e.property,index:e.index};r.push(this.toDiagnostic("error",e.message,t))}}try{r.push(...await this.validateAst(n.value,e,t))}catch(i){console.error("An error occurred during validation:",i)}return await fs(t),r}async validateAst(e,t,n=ar.CancellationToken.None){const r=[],i=(e,t,n)=>{r.push(this.toDiagnostic(e,t,n))},o=async e=>{const t=this.validationRegistry.getChecks(e.$type);for(const r of t)await r(e,i,n)};return await o(e),await Promise.all(Zp(e).map((async e=>{await fs(n),await o(e.node)}))),r}toDiagnostic(e,t,n){return{message:t,range:ah(n),severity:sh(e),code:n.code,codeDescription:n.codeDescription,tags:n.tags,relatedInformation:n.relatedInformation,data:n.data}}}function ah(e){var t;if(e.range)return e.range;if(void 0!==e.property&&"string"!=typeof e.property)throw new Error("Invalid property: "+e.property);const n=null!=(t=ld(e.node.$cstNode,e.property,e.index))?t:e.node.$cstNode;return n?n.range:{start:{line:0,character:0},end:{line:0,character:0}}}function sh(e){switch(e){case"error":return ar.DiagnosticSeverity.Error;case"warning":return ar.DiagnosticSeverity.Warning;case"info":return ar.DiagnosticSeverity.Information;case"hint":return ar.DiagnosticSeverity.Hint;default:throw new Error("Invalid diagnostic severity: "+e)}}var uh={exports:{}};
/**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */!function(e,t){(function(){var n,r="Expected a function",i="__lodash_hash_undefined__",o="__lodash_placeholder__",a=16,s=32,u=64,c=128,l=256,p=1/0,f=9007199254740991,d=NaN,h=4294967295,m=[["ary",c],["bind",1],["bindKey",2],["curry",8],["curryRight",a],["flip",512],["partial",s],["partialRight",u],["rearg",l]],g="[object Arguments]",v="[object Array]",y="[object Boolean]",E="[object Date]",_="[object Error]",C="[object Function]",T="[object GeneratorFunction]",A="[object Map]",R="[object Number]",I="[object Object]",D="[object Promise]",x="[object RegExp]",b="[object Set]",S="[object String]",k="[object Symbol]",O="[object WeakMap]",N="[object ArrayBuffer]",P="[object DataView]",w="[object Float32Array]",L="[object Float64Array]",F="[object Int8Array]",M="[object Int16Array]",$="[object Int32Array]",B="[object Uint8Array]",q="[object Uint8ClampedArray]",j="[object Uint16Array]",U="[object Uint32Array]",W=/\b__p \+= '';/g,K=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,z=RegExp(V.source),Y=RegExp(H.source),X=/<%-([\s\S]+?)%>/g,J=/<%([\s\S]+?)%>/g,Q=/<%=([\s\S]+?)%>/g,Z=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ee=/^\w*$/,te=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ne=/[\\^$.*+?()[\]{}|]/g,re=RegExp(ne.source),ie=/^\s+/,oe=/\s/,ae=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,se=/\{\n\/\* \[wrapped with (.+)\] \*/,ue=/,? & /,ce=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,le=/[()=,{}\[\]\/\s]/,pe=/\\(\\)?/g,fe=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,de=/\w*$/,he=/^[-+]0x[0-9a-f]+$/i,me=/^0b[01]+$/i,ge=/^\[object .+?Constructor\]$/,ve=/^0o[0-7]+$/i,ye=/^(?:0|[1-9]\d*)$/,Ee=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,_e=/($^)/,Ce=/['\n\r\u2028\u2029\\]/g,Te="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Ae="\\u2700-\\u27bf",Re="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",De="\\ufe0e\\ufe0f",xe="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",be="['’]",Se="[\\ud800-\\udfff]",ke="["+xe+"]",Oe="["+Te+"]",Ne="\\d+",Pe="[\\u2700-\\u27bf]",we="["+Re+"]",Le="[^\\ud800-\\udfff"+xe+Ne+Ae+Re+Ie+"]",Fe="\\ud83c[\\udffb-\\udfff]",Me="[^\\ud800-\\udfff]",$e="(?:\\ud83c[\\udde6-\\uddff]){2}",Be="[\\ud800-\\udbff][\\udc00-\\udfff]",qe="["+Ie+"]",je="(?:"+we+"|"+Le+")",Ue="(?:"+qe+"|"+Le+")",We="(?:['’](?:d|ll|m|re|s|t|ve))?",Ke="(?:['’](?:D|LL|M|RE|S|T|VE))?",Ge="(?:"+Oe+"|"+Fe+")"+"?",Ve="[\\ufe0e\\ufe0f]?",He=Ve+Ge+("(?:\\u200d(?:"+[Me,$e,Be].join("|")+")"+Ve+Ge+")*"),ze="(?:"+[Pe,$e,Be].join("|")+")"+He,Ye="(?:"+[Me+Oe+"?",Oe,$e,Be,Se].join("|")+")",Xe=RegExp(be,"g"),Je=RegExp(Oe,"g"),Qe=RegExp(Fe+"(?="+Fe+")|"+Ye+He,"g"),Ze=RegExp([qe+"?"+we+"+"+We+"(?="+[ke,qe,"$"].join("|")+")",Ue+"+"+Ke+"(?="+[ke,qe+je,"$"].join("|")+")",qe+"?"+je+"+"+We,qe+"+"+Ke,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ne,ze].join("|"),"g"),et=RegExp("[\\u200d\\ud800-\\udfff"+Te+De+"]"),tt=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,nt=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],rt=-1,it={};it[w]=it[L]=it[F]=it[M]=it[$]=it[B]=it[q]=it[j]=it[U]=!0,it[g]=it[v]=it[N]=it[y]=it[P]=it[E]=it[_]=it[C]=it[A]=it[R]=it[I]=it[x]=it[b]=it[S]=it[O]=!1;var ot={};ot[g]=ot[v]=ot[N]=ot[P]=ot[y]=ot[E]=ot[w]=ot[L]=ot[F]=ot[M]=ot[$]=ot[A]=ot[R]=ot[I]=ot[x]=ot[b]=ot[S]=ot[k]=ot[B]=ot[q]=ot[j]=ot[U]=!0,ot[_]=ot[C]=ot[O]=!1;var at={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},st=parseFloat,ut=parseInt,ct="object"==typeof rr&&rr&&rr.Object===Object&&rr,lt="object"==typeof self&&self&&self.Object===Object&&self,pt=ct||lt||Function("return this")(),ft=t&&!t.nodeType&&t,dt=ft&&e&&!e.nodeType&&e,ht=dt&&dt.exports===ft,mt=ht&&ct.process,gt=function(){try{var e=dt&&dt.require&&dt.require("util").types;return e||mt&&mt.binding&&mt.binding("util")}catch(PI){}}(),vt=gt&&gt.isArrayBuffer,yt=gt&&gt.isDate,Et=gt&&gt.isMap,_t=gt&&gt.isRegExp,Ct=gt&&gt.isSet,Tt=gt&&gt.isTypedArray;function At(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function Rt(e,t,n,r){for(var i=-1,o=null==e?0:e.length;++i<o;){var a=e[i];t(r,a,n(a),e)}return r}function It(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function Dt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function xt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function bt(e,t){for(var n=-1,r=null==e?0:e.length,i=0,o=[];++n<r;){var a=e[n];t(a,n,e)&&(o[i++]=a)}return o}function St(e,t){return!!(null==e?0:e.length)&&Bt(e,t,0)>-1}function kt(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1}function Ot(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}function Nt(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function Pt(e,t,n,r){var i=-1,o=null==e?0:e.length;for(r&&o&&(n=e[++i]);++i<o;)n=t(n,e[i],i,e);return n}function wt(e,t,n,r){var i=null==e?0:e.length;for(r&&i&&(n=e[--i]);i--;)n=t(n,e[i],i,e);return n}function Lt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var Ft=Wt("length");function Mt(e,t,n){var r;return n(e,(function(e,n,i){if(t(e,n,i))return r=n,!1})),r}function $t(e,t,n,r){for(var i=e.length,o=n+(r?1:-1);r?o--:++o<i;)if(t(e[o],o,e))return o;return-1}function Bt(e,t,n){return t==t?function(e,t,n){var r=n-1,i=e.length;for(;++r<i;)if(e[r]===t)return r;return-1}(e,t,n):$t(e,jt,n)}function qt(e,t,n,r){for(var i=n-1,o=e.length;++i<o;)if(r(e[i],t))return i;return-1}function jt(e){return e!=e}function Ut(e,t){var n=null==e?0:e.length;return n?Vt(e,t)/n:d}function Wt(e){return function(t){return null==t?n:t[e]}}function Kt(e){return function(t){return null==e?n:e[t]}}function Gt(e,t,n,r,i){return i(e,(function(e,i,o){n=r?(r=!1,e):t(n,e,i,o)})),n}function Vt(e,t){for(var r,i=-1,o=e.length;++i<o;){var a=t(e[i]);a!==n&&(r=r===n?a:r+a)}return r}function Ht(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function zt(e){return e?e.slice(0,fn(e)+1).replace(ie,""):e}function Yt(e){return function(t){return e(t)}}function Xt(e,t){return Ot(t,(function(t){return e[t]}))}function Jt(e,t){return e.has(t)}function Qt(e,t){for(var n=-1,r=e.length;++n<r&&Bt(t,e[n],0)>-1;);return n}function Zt(e,t){for(var n=e.length;n--&&Bt(t,e[n],0)>-1;);return n}function en(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var tn=Kt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),nn=Kt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function rn(e){return"\\"+at[e]}function on(e){return et.test(e)}function an(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function sn(e,t){return function(n){return e(t(n))}}function un(e,t){for(var n=-1,r=e.length,i=0,a=[];++n<r;){var s=e[n];s!==t&&s!==o||(e[n]=o,a[i++]=n)}return a}function cn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function ln(e){return on(e)?function(e){var t=Qe.lastIndex=0;for(;Qe.test(e);)++t;return t}(e):Ft(e)}function pn(e){return on(e)?function(e){return e.match(Qe)||[]}(e):function(e){return e.split("")}(e)}function fn(e){for(var t=e.length;t--&&oe.test(e.charAt(t)););return t}var dn=Kt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var hn=function e(t){var oe,Te=(t=null==t?pt:hn.defaults(pt.Object(),t,hn.pick(pt,nt))).Array,Ae=t.Date,Re=t.Error,Ie=t.Function,De=t.Math,xe=t.Object,be=t.RegExp,Se=t.String,ke=t.TypeError,Oe=Te.prototype,Ne=Ie.prototype,Pe=xe.prototype,we=t["__core-js_shared__"],Le=Ne.toString,Fe=Pe.hasOwnProperty,Me=0,$e=(oe=/[^.]+$/.exec(we&&we.keys&&we.keys.IE_PROTO||""))?"Symbol(src)_1."+oe:"",Be=Pe.toString,qe=Le.call(xe),je=pt._,Ue=be("^"+Le.call(Fe).replace(ne,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),We=ht?t.Buffer:n,Ke=t.Symbol,Ge=t.Uint8Array,Ve=We?We.allocUnsafe:n,He=sn(xe.getPrototypeOf,xe),ze=xe.create,Ye=Pe.propertyIsEnumerable,Qe=Oe.splice,et=Ke?Ke.isConcatSpreadable:n,at=Ke?Ke.iterator:n,ct=Ke?Ke.toStringTag:n,lt=function(){try{var e=fo(xe,"defineProperty");return e({},"",{}),e}catch(PI){}}(),ft=t.clearTimeout!==pt.clearTimeout&&t.clearTimeout,dt=Ae&&Ae.now!==pt.Date.now&&Ae.now,mt=t.setTimeout!==pt.setTimeout&&t.setTimeout,gt=De.ceil,Ft=De.floor,Kt=xe.getOwnPropertySymbols,mn=We?We.isBuffer:n,gn=t.isFinite,vn=Oe.join,yn=sn(xe.keys,xe),En=De.max,_n=De.min,Cn=Ae.now,Tn=t.parseInt,An=De.random,Rn=Oe.reverse,In=fo(t,"DataView"),Dn=fo(t,"Map"),xn=fo(t,"Promise"),bn=fo(t,"Set"),Sn=fo(t,"WeakMap"),kn=fo(xe,"create"),On=Sn&&new Sn,Nn={},Pn=Wo(In),wn=Wo(Dn),Ln=Wo(xn),Fn=Wo(bn),Mn=Wo(Sn),$n=Ke?Ke.prototype:n,Bn=$n?$n.valueOf:n,qn=$n?$n.toString:n;function jn(e){if(as(e)&&!Ya(e)&&!(e instanceof Gn)){if(e instanceof Kn)return e;if(Fe.call(e,"__wrapped__"))return Ko(e)}return new Kn(e)}var Un=function(){function e(){}return function(t){if(!os(t))return{};if(ze)return ze(t);e.prototype=t;var r=new e;return e.prototype=n,r}}();function Wn(){}function Kn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=n}function Gn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=h,this.__views__=[]}function Vn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Hn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function zn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Yn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new zn;++t<n;)this.add(e[t])}function Xn(e){var t=this.__data__=new Hn(e);this.size=t.size}function Jn(e,t){var n=Ya(e),r=!n&&za(e),i=!n&&!r&&Za(e),o=!n&&!r&&!i&&hs(e),a=n||r||i||o,s=a?Ht(e.length,Se):[],u=s.length;for(var c in e)!t&&!Fe.call(e,c)||a&&("length"==c||i&&("offset"==c||"parent"==c)||o&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||_o(c,u))||s.push(c);return s}function Qn(e){var t=e.length;return t?e[Yr(0,t-1)]:n}function Zn(e,t){return Mo(ki(e),ur(t,0,e.length))}function er(e){return Mo(ki(e))}function tr(e,t,r){(r!==n&&!Ga(e[t],r)||r===n&&!(t in e))&&ar(e,t,r)}function nr(e,t,r){var i=e[t];Fe.call(e,t)&&Ga(i,r)&&(r!==n||t in e)||ar(e,t,r)}function rr(e,t){for(var n=e.length;n--;)if(Ga(e[n][0],t))return n;return-1}function ir(e,t,n,r){return dr(e,(function(e,i,o){t(r,e,n(e),o)})),r}function or(e,t){return e&&Oi(t,Fs(t),e)}function ar(e,t,n){"__proto__"==t&&lt?lt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function sr(e,t){for(var r=-1,i=t.length,o=Te(i),a=null==e;++r<i;)o[r]=a?n:Os(e,t[r]);return o}function ur(e,t,r){return e==e&&(r!==n&&(e=e<=r?e:r),t!==n&&(e=e>=t?e:t)),e}function cr(e,t,r,i,o,a){var s,u=1&t,c=2&t,l=4&t;if(r&&(s=o?r(e,i,o,a):r(e)),s!==n)return s;if(!os(e))return e;var p=Ya(e);if(p){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&"string"==typeof e[0]&&Fe.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!u)return ki(e,s)}else{var f=go(e),d=f==C||f==T;if(Za(e))return Ri(e,u);if(f==I||f==g||d&&!o){if(s=c||d?{}:yo(e),!u)return c?function(e,t){return Oi(e,mo(e),t)}(e,function(e,t){return e&&Oi(t,Ms(t),e)}(s,e)):function(e,t){return Oi(e,ho(e),t)}(e,or(s,e))}else{if(!ot[f])return o?e:{};s=function(e,t,n){var r=e.constructor;switch(t){case N:return Ii(e);case y:case E:return new r(+e);case P:return function(e,t){var n=t?Ii(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case w:case L:case F:case M:case $:case B:case q:case j:case U:return Di(e,n);case A:return new r;case R:case S:return new r(e);case x:return function(e){var t=new e.constructor(e.source,de.exec(e));return t.lastIndex=e.lastIndex,t}(e);case b:return new r;case k:return i=e,Bn?xe(Bn.call(i)):{}}var i}(e,f,u)}}a||(a=new Xn);var h=a.get(e);if(h)return h;a.set(e,s),ps(e)?e.forEach((function(n){s.add(cr(n,t,r,n,e,a))})):ss(e)&&e.forEach((function(n,i){s.set(i,cr(n,t,r,i,e,a))}));var m=p?n:(l?c?oo:io:c?Ms:Fs)(e);return It(m||e,(function(n,i){m&&(n=e[i=n]),nr(s,i,cr(n,t,r,i,e,a))})),s}function lr(e,t,r){var i=r.length;if(null==e)return!i;for(e=xe(e);i--;){var o=r[i],a=t[o],s=e[o];if(s===n&&!(o in e)||!a(s))return!1}return!0}function pr(e,t,i){if("function"!=typeof e)throw new ke(r);return Po((function(){e.apply(n,i)}),t)}function fr(e,t,n,r){var i=-1,o=St,a=!0,s=e.length,u=[],c=t.length;if(!s)return u;n&&(t=Ot(t,Yt(n))),r?(o=kt,a=!1):t.length>=200&&(o=Jt,a=!1,t=new Yn(t));e:for(;++i<s;){var l=e[i],p=null==n?l:n(l);if(l=r||0!==l?l:0,a&&p==p){for(var f=c;f--;)if(t[f]===p)continue e;u.push(l)}else o(t,p,r)||u.push(l)}return u}jn.templateSettings={escape:X,evaluate:J,interpolate:Q,variable:"",imports:{_:jn}},jn.prototype=Wn.prototype,jn.prototype.constructor=jn,Kn.prototype=Un(Wn.prototype),Kn.prototype.constructor=Kn,Gn.prototype=Un(Wn.prototype),Gn.prototype.constructor=Gn,Vn.prototype.clear=function(){this.__data__=kn?kn(null):{},this.size=0},Vn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Vn.prototype.get=function(e){var t=this.__data__;if(kn){var r=t[e];return r===i?n:r}return Fe.call(t,e)?t[e]:n},Vn.prototype.has=function(e){var t=this.__data__;return kn?t[e]!==n:Fe.call(t,e)},Vn.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=kn&&t===n?i:t,this},Hn.prototype.clear=function(){this.__data__=[],this.size=0},Hn.prototype.delete=function(e){var t=this.__data__,n=rr(t,e);return!(n<0)&&(n==t.length-1?t.pop():Qe.call(t,n,1),--this.size,!0)},Hn.prototype.get=function(e){var t=this.__data__,r=rr(t,e);return r<0?n:t[r][1]},Hn.prototype.has=function(e){return rr(this.__data__,e)>-1},Hn.prototype.set=function(e,t){var n=this.__data__,r=rr(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},zn.prototype.clear=function(){this.size=0,this.__data__={hash:new Vn,map:new(Dn||Hn),string:new Vn}},zn.prototype.delete=function(e){var t=lo(this,e).delete(e);return this.size-=t?1:0,t},zn.prototype.get=function(e){return lo(this,e).get(e)},zn.prototype.has=function(e){return lo(this,e).has(e)},zn.prototype.set=function(e,t){var n=lo(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Yn.prototype.add=Yn.prototype.push=function(e){return this.__data__.set(e,i),this},Yn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.clear=function(){this.__data__=new Hn,this.size=0},Xn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Xn.prototype.get=function(e){return this.__data__.get(e)},Xn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Hn){var r=n.__data__;if(!Dn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new zn(r)}return n.set(e,t),this.size=n.size,this};var dr=wi(Cr),hr=wi(Tr,!0);function mr(e,t){var n=!0;return dr(e,(function(e,r,i){return n=!!t(e,r,i)})),n}function gr(e,t,r){for(var i=-1,o=e.length;++i<o;){var a=e[i],s=t(a);if(null!=s&&(u===n?s==s&&!ds(s):r(s,u)))var u=s,c=a}return c}function vr(e,t){var n=[];return dr(e,(function(e,r,i){t(e,r,i)&&n.push(e)})),n}function yr(e,t,n,r,i){var o=-1,a=e.length;for(n||(n=Eo),i||(i=[]);++o<a;){var s=e[o];t>0&&n(s)?t>1?yr(s,t-1,n,r,i):Nt(i,s):r||(i[i.length]=s)}return i}var Er=Li(),_r=Li(!0);function Cr(e,t){return e&&Er(e,t,Fs)}function Tr(e,t){return e&&_r(e,t,Fs)}function Ar(e,t){return bt(t,(function(t){return ns(e[t])}))}function Rr(e,t){for(var r=0,i=(t=_i(t,e)).length;null!=e&&r<i;)e=e[Uo(t[r++])];return r&&r==i?e:n}function Ir(e,t,n){var r=t(e);return Ya(e)?r:Nt(r,n(e))}function Dr(e){return null==e?e===n?"[object Undefined]":"[object Null]":ct&&ct in xe(e)?function(e){var t=Fe.call(e,ct),r=e[ct];try{e[ct]=n;var i=!0}catch(PI){}var o=Be.call(e);i&&(t?e[ct]=r:delete e[ct]);return o}(e):function(e){return Be.call(e)}(e)}function xr(e,t){return e>t}function br(e,t){return null!=e&&Fe.call(e,t)}function Sr(e,t){return null!=e&&t in xe(e)}function kr(e,t,r){for(var i=r?kt:St,o=e[0].length,a=e.length,s=a,u=Te(a),c=1/0,l=[];s--;){var p=e[s];s&&t&&(p=Ot(p,Yt(t))),c=_n(p.length,c),u[s]=!r&&(t||o>=120&&p.length>=120)?new Yn(s&&p):n}p=e[0];var f=-1,d=u[0];e:for(;++f<o&&l.length<c;){var h=p[f],m=t?t(h):h;if(h=r||0!==h?h:0,!(d?Jt(d,m):i(l,m,r))){for(s=a;--s;){var g=u[s];if(!(g?Jt(g,m):i(e[s],m,r)))continue e}d&&d.push(m),l.push(h)}}return l}function Or(e,t,r){var i=null==(e=So(e,t=_i(t,e)))?e:e[Uo(ta(t))];return null==i?n:At(i,e,r)}function Nr(e){return as(e)&&Dr(e)==g}function Pr(e,t,r,i,o){return e===t||(null==e||null==t||!as(e)&&!as(t)?e!=e&&t!=t:function(e,t,r,i,o,a){var s=Ya(e),u=Ya(t),c=s?v:go(e),l=u?v:go(t),p=(c=c==g?I:c)==I,f=(l=l==g?I:l)==I,d=c==l;if(d&&Za(e)){if(!Za(t))return!1;s=!0,p=!1}if(d&&!p)return a||(a=new Xn),s||hs(e)?no(e,t,r,i,o,a):function(e,t,n,r,i,o,a){switch(n){case P:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case N:return!(e.byteLength!=t.byteLength||!o(new Ge(e),new Ge(t)));case y:case E:case R:return Ga(+e,+t);case _:return e.name==t.name&&e.message==t.message;case x:case S:return e==t+"";case A:var s=an;case b:var u=1&r;if(s||(s=cn),e.size!=t.size&&!u)return!1;var c=a.get(e);if(c)return c==t;r|=2,a.set(e,t);var l=no(s(e),s(t),r,i,o,a);return a.delete(e),l;case k:if(Bn)return Bn.call(e)==Bn.call(t)}return!1}(e,t,c,r,i,o,a);if(!(1&r)){var h=p&&Fe.call(e,"__wrapped__"),m=f&&Fe.call(t,"__wrapped__");if(h||m){var C=h?e.value():e,T=m?t.value():t;return a||(a=new Xn),o(C,T,r,i,a)}}if(!d)return!1;return a||(a=new Xn),function(e,t,r,i,o,a){var s=1&r,u=io(e),c=u.length,l=io(t).length;if(c!=l&&!s)return!1;var p=c;for(;p--;){var f=u[p];if(!(s?f in t:Fe.call(t,f)))return!1}var d=a.get(e),h=a.get(t);if(d&&h)return d==t&&h==e;var m=!0;a.set(e,t),a.set(t,e);var g=s;for(;++p<c;){var v=e[f=u[p]],y=t[f];if(i)var E=s?i(y,v,f,t,e,a):i(v,y,f,e,t,a);if(!(E===n?v===y||o(v,y,r,i,a):E)){m=!1;break}g||(g="constructor"==f)}if(m&&!g){var _=e.constructor,C=t.constructor;_==C||!("constructor"in e)||!("constructor"in t)||"function"==typeof _&&_ instanceof _&&"function"==typeof C&&C instanceof C||(m=!1)}return a.delete(e),a.delete(t),m}(e,t,r,i,o,a)}(e,t,r,i,Pr,o))}function wr(e,t,r,i){var o=r.length,a=o,s=!i;if(null==e)return!a;for(e=xe(e);o--;){var u=r[o];if(s&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++o<a;){var c=(u=r[o])[0],l=e[c],p=u[1];if(s&&u[2]){if(l===n&&!(c in e))return!1}else{var f=new Xn;if(i)var d=i(l,p,c,e,t,f);if(!(d===n?Pr(p,l,3,i,f):d))return!1}}return!0}function Lr(e){return!(!os(e)||(t=e,$e&&$e in t))&&(ns(e)?Ue:ge).test(Wo(e));var t}function Fr(e){return"function"==typeof e?e:null==e?uu:"object"==typeof e?Ya(e)?Ur(e[0],e[1]):jr(e):vu(e)}function Mr(e){if(!Io(e))return yn(e);var t=[];for(var n in xe(e))Fe.call(e,n)&&"constructor"!=n&&t.push(n);return t}function $r(e){if(!os(e))return function(e){var t=[];if(null!=e)for(var n in xe(e))t.push(n);return t}(e);var t=Io(e),n=[];for(var r in e)("constructor"!=r||!t&&Fe.call(e,r))&&n.push(r);return n}function Br(e,t){return e<t}function qr(e,t){var n=-1,r=Ja(e)?Te(e.length):[];return dr(e,(function(e,i,o){r[++n]=t(e,i,o)})),r}function jr(e){var t=po(e);return 1==t.length&&t[0][2]?xo(t[0][0],t[0][1]):function(n){return n===e||wr(n,e,t)}}function Ur(e,t){return To(e)&&Do(t)?xo(Uo(e),t):function(r){var i=Os(r,e);return i===n&&i===t?Ns(r,e):Pr(t,i,3)}}function Wr(e,t,r,i,o){e!==t&&Er(t,(function(a,s){if(o||(o=new Xn),os(a))!function(e,t,r,i,o,a,s){var u=Oo(e,r),c=Oo(t,r),l=s.get(c);if(l)return void tr(e,r,l);var p=a?a(u,c,r+"",e,t,s):n,f=p===n;if(f){var d=Ya(c),h=!d&&Za(c),m=!d&&!h&&hs(c);p=c,d||h||m?Ya(u)?p=u:Qa(u)?p=ki(u):h?(f=!1,p=Ri(c,!0)):m?(f=!1,p=Di(c,!0)):p=[]:cs(c)||za(c)?(p=u,za(u)?p=Ts(u):os(u)&&!ns(u)||(p=yo(c))):f=!1}f&&(s.set(c,p),o(p,c,i,a,s),s.delete(c));tr(e,r,p)}(e,t,s,r,Wr,i,o);else{var u=i?i(Oo(e,s),a,s+"",e,t,o):n;u===n&&(u=a),tr(e,s,u)}}),Ms)}function Kr(e,t){var r=e.length;if(r)return _o(t+=t<0?r:0,r)?e[t]:n}function Gr(e,t,n){t=t.length?Ot(t,(function(e){return Ya(e)?function(t){return Rr(t,1===e.length?e[0]:e)}:e})):[uu];var r=-1;return t=Ot(t,Yt(co())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(qr(e,(function(e,n,i){return{criteria:Ot(t,(function(t){return t(e)})),index:++r,value:e}})),(function(e,t){return function(e,t,n){var r=-1,i=e.criteria,o=t.criteria,a=i.length,s=n.length;for(;++r<a;){var u=xi(i[r],o[r]);if(u)return r>=s?u:u*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}))}function Vr(e,t,n){for(var r=-1,i=t.length,o={};++r<i;){var a=t[r],s=Rr(e,a);n(s,a)&&ei(o,_i(a,e),s)}return o}function Hr(e,t,n,r){var i=r?qt:Bt,o=-1,a=t.length,s=e;for(e===t&&(t=ki(t)),n&&(s=Ot(e,Yt(n)));++o<a;)for(var u=0,c=t[o],l=n?n(c):c;(u=i(s,l,u,r))>-1;)s!==e&&Qe.call(s,u,1),Qe.call(e,u,1);return e}function zr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var i=t[n];if(n==r||i!==o){var o=i;_o(i)?Qe.call(e,i,1):fi(e,i)}}return e}function Yr(e,t){return e+Ft(An()*(t-e+1))}function Xr(e,t){var n="";if(!e||t<1||t>f)return n;do{t%2&&(n+=e),(t=Ft(t/2))&&(e+=e)}while(t);return n}function Jr(e,t){return wo(bo(e,t,uu),e+"")}function Qr(e){return Qn(Gs(e))}function Zr(e,t){var n=Gs(e);return Mo(n,ur(t,0,n.length))}function ei(e,t,r,i){if(!os(e))return e;for(var o=-1,a=(t=_i(t,e)).length,s=a-1,u=e;null!=u&&++o<a;){var c=Uo(t[o]),l=r;if("__proto__"===c||"constructor"===c||"prototype"===c)return e;if(o!=s){var p=u[c];(l=i?i(p,c,u):n)===n&&(l=os(p)?p:_o(t[o+1])?[]:{})}nr(u,c,l),u=u[c]}return e}var ti=On?function(e,t){return On.set(e,t),e}:uu,ni=lt?function(e,t){return lt(e,"toString",{configurable:!0,enumerable:!1,value:ou(t),writable:!0})}:uu;function ri(e){return Mo(Gs(e))}function ii(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var o=Te(i);++r<i;)o[r]=e[r+t];return o}function oi(e,t){var n;return dr(e,(function(e,r,i){return!(n=t(e,r,i))})),!!n}function ai(e,t,n){var r=0,i=null==e?r:e.length;if("number"==typeof t&&t==t&&i<=2147483647){for(;r<i;){var o=r+i>>>1,a=e[o];null!==a&&!ds(a)&&(n?a<=t:a<t)?r=o+1:i=o}return i}return si(e,t,uu,n)}function si(e,t,r,i){var o=0,a=null==e?0:e.length;if(0===a)return 0;for(var s=(t=r(t))!=t,u=null===t,c=ds(t),l=t===n;o<a;){var p=Ft((o+a)/2),f=r(e[p]),d=f!==n,h=null===f,m=f==f,g=ds(f);if(s)var v=i||m;else v=l?m&&(i||d):u?m&&d&&(i||!h):c?m&&d&&!h&&(i||!g):!h&&!g&&(i?f<=t:f<t);v?o=p+1:a=p}return _n(a,4294967294)}function ui(e,t){for(var n=-1,r=e.length,i=0,o=[];++n<r;){var a=e[n],s=t?t(a):a;if(!n||!Ga(s,u)){var u=s;o[i++]=0===a?0:a}}return o}function ci(e){return"number"==typeof e?e:ds(e)?d:+e}function li(e){if("string"==typeof e)return e;if(Ya(e))return Ot(e,li)+"";if(ds(e))return qn?qn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function pi(e,t,n){var r=-1,i=St,o=e.length,a=!0,s=[],u=s;if(n)a=!1,i=kt;else if(o>=200){var c=t?null:Xi(e);if(c)return cn(c);a=!1,i=Jt,u=new Yn}else u=t?[]:s;e:for(;++r<o;){var l=e[r],p=t?t(l):l;if(l=n||0!==l?l:0,a&&p==p){for(var f=u.length;f--;)if(u[f]===p)continue e;t&&u.push(p),s.push(l)}else i(u,p,n)||(u!==s&&u.push(p),s.push(l))}return s}function fi(e,t){return null==(e=So(e,t=_i(t,e)))||delete e[Uo(ta(t))]}function di(e,t,n,r){return ei(e,t,n(Rr(e,t)),r)}function hi(e,t,n,r){for(var i=e.length,o=r?i:-1;(r?o--:++o<i)&&t(e[o],o,e););return n?ii(e,r?0:o,r?o+1:i):ii(e,r?o+1:0,r?i:o)}function mi(e,t){var n=e;return n instanceof Gn&&(n=n.value()),Pt(t,(function(e,t){return t.func.apply(t.thisArg,Nt([e],t.args))}),n)}function gi(e,t,n){var r=e.length;if(r<2)return r?pi(e[0]):[];for(var i=-1,o=Te(r);++i<r;)for(var a=e[i],s=-1;++s<r;)s!=i&&(o[i]=fr(o[i]||a,e[s],t,n));return pi(yr(o,1),t,n)}function vi(e,t,r){for(var i=-1,o=e.length,a=t.length,s={};++i<o;){var u=i<a?t[i]:n;r(s,e[i],u)}return s}function yi(e){return Qa(e)?e:[]}function Ei(e){return"function"==typeof e?e:uu}function _i(e,t){return Ya(e)?e:To(e,t)?[e]:jo(As(e))}var Ci=Jr;function Ti(e,t,r){var i=e.length;return r=r===n?i:r,!t&&r>=i?e:ii(e,t,r)}var Ai=ft||function(e){return pt.clearTimeout(e)};function Ri(e,t){if(t)return e.slice();var n=e.length,r=Ve?Ve(n):new e.constructor(n);return e.copy(r),r}function Ii(e){var t=new e.constructor(e.byteLength);return new Ge(t).set(new Ge(e)),t}function Di(e,t){var n=t?Ii(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function xi(e,t){if(e!==t){var r=e!==n,i=null===e,o=e==e,a=ds(e),s=t!==n,u=null===t,c=t==t,l=ds(t);if(!u&&!l&&!a&&e>t||a&&s&&c&&!u&&!l||i&&s&&c||!r&&c||!o)return 1;if(!i&&!a&&!l&&e<t||l&&r&&o&&!i&&!a||u&&r&&o||!s&&o||!c)return-1}return 0}function bi(e,t,n,r){for(var i=-1,o=e.length,a=n.length,s=-1,u=t.length,c=En(o-a,0),l=Te(u+c),p=!r;++s<u;)l[s]=t[s];for(;++i<a;)(p||i<o)&&(l[n[i]]=e[i]);for(;c--;)l[s++]=e[i++];return l}function Si(e,t,n,r){for(var i=-1,o=e.length,a=-1,s=n.length,u=-1,c=t.length,l=En(o-s,0),p=Te(l+c),f=!r;++i<l;)p[i]=e[i];for(var d=i;++u<c;)p[d+u]=t[u];for(;++a<s;)(f||i<o)&&(p[d+n[a]]=e[i++]);return p}function ki(e,t){var n=-1,r=e.length;for(t||(t=Te(r));++n<r;)t[n]=e[n];return t}function Oi(e,t,r,i){var o=!r;r||(r={});for(var a=-1,s=t.length;++a<s;){var u=t[a],c=i?i(r[u],e[u],u,r,e):n;c===n&&(c=e[u]),o?ar(r,u,c):nr(r,u,c)}return r}function Ni(e,t){return function(n,r){var i=Ya(n)?Rt:ir,o=t?t():{};return i(n,e,co(r,2),o)}}function Pi(e){return Jr((function(t,r){var i=-1,o=r.length,a=o>1?r[o-1]:n,s=o>2?r[2]:n;for(a=e.length>3&&"function"==typeof a?(o--,a):n,s&&Co(r[0],r[1],s)&&(a=o<3?n:a,o=1),t=xe(t);++i<o;){var u=r[i];u&&e(t,u,i,a)}return t}))}function wi(e,t){return function(n,r){if(null==n)return n;if(!Ja(n))return e(n,r);for(var i=n.length,o=t?i:-1,a=xe(n);(t?o--:++o<i)&&!1!==r(a[o],o,a););return n}}function Li(e){return function(t,n,r){for(var i=-1,o=xe(t),a=r(t),s=a.length;s--;){var u=a[e?s:++i];if(!1===n(o[u],u,o))break}return t}}function Fi(e){return function(t){var r=on(t=As(t))?pn(t):n,i=r?r[0]:t.charAt(0),o=r?Ti(r,1).join(""):t.slice(1);return i[e]()+o}}function Mi(e){return function(t){return Pt(nu(zs(t).replace(Xe,"")),e,"")}}function $i(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Un(e.prototype),r=e.apply(n,t);return os(r)?r:n}}function Bi(e){return function(t,r,i){var o=xe(t);if(!Ja(t)){var a=co(r,3);t=Fs(t),r=function(e){return a(o[e],e,o)}}var s=e(t,r,i);return s>-1?o[a?t[s]:s]:n}}function qi(e){return ro((function(t){var i=t.length,o=i,a=Kn.prototype.thru;for(e&&t.reverse();o--;){var s=t[o];if("function"!=typeof s)throw new ke(r);if(a&&!u&&"wrapper"==so(s))var u=new Kn([],!0)}for(o=u?o:i;++o<i;){var c=so(s=t[o]),l="wrapper"==c?ao(s):n;u=l&&Ao(l[0])&&424==l[1]&&!l[4].length&&1==l[9]?u[so(l[0])].apply(u,l[3]):1==s.length&&Ao(s)?u[c]():u.thru(s)}return function(){var e=arguments,n=e[0];if(u&&1==e.length&&Ya(n))return u.plant(n).value();for(var r=0,o=i?t[r].apply(this,e):n;++r<i;)o=t[r].call(this,o);return o}}))}function ji(e,t,r,i,o,a,s,u,l,p){var f=t&c,d=1&t,h=2&t,m=24&t,g=512&t,v=h?n:$i(e);return function n(){for(var c=arguments.length,y=Te(c),E=c;E--;)y[E]=arguments[E];if(m)var _=uo(n),C=en(y,_);if(i&&(y=bi(y,i,o,m)),a&&(y=Si(y,a,s,m)),c-=C,m&&c<p){var T=un(y,_);return zi(e,t,ji,n.placeholder,r,y,T,u,l,p-c)}var A=d?r:this,R=h?A[e]:e;return c=y.length,u?y=ko(y,u):g&&c>1&&y.reverse(),f&&l<c&&(y.length=l),this&&this!==pt&&this instanceof n&&(R=v||$i(R)),R.apply(A,y)}}function Ui(e,t){return function(n,r){return function(e,t,n,r){return Cr(e,(function(e,i,o){t(r,n(e),i,o)})),r}(n,e,t(r),{})}}function Wi(e,t){return function(r,i){var o;if(r===n&&i===n)return t;if(r!==n&&(o=r),i!==n){if(o===n)return i;"string"==typeof r||"string"==typeof i?(r=li(r),i=li(i)):(r=ci(r),i=ci(i)),o=e(r,i)}return o}}function Ki(e){return ro((function(t){return t=Ot(t,Yt(co())),Jr((function(n){var r=this;return e(t,(function(e){return At(e,r,n)}))}))}))}function Gi(e,t){var r=(t=t===n?" ":li(t)).length;if(r<2)return r?Xr(t,e):t;var i=Xr(t,gt(e/ln(t)));return on(t)?Ti(pn(i),0,e).join(""):i.slice(0,e)}function Vi(e){return function(t,r,i){return i&&"number"!=typeof i&&Co(t,r,i)&&(r=i=n),t=ys(t),r===n?(r=t,t=0):r=ys(r),function(e,t,n,r){for(var i=-1,o=En(gt((t-e)/(n||1)),0),a=Te(o);o--;)a[r?o:++i]=e,e+=n;return a}(t,r,i=i===n?t<r?1:-1:ys(i),e)}}function Hi(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=Cs(t),n=Cs(n)),e(t,n)}}function zi(e,t,r,i,o,a,c,l,p,f){var d=8&t;t|=d?s:u,4&(t&=~(d?u:s))||(t&=-4);var h=[e,t,o,d?a:n,d?c:n,d?n:a,d?n:c,l,p,f],m=r.apply(n,h);return Ao(e)&&No(m,h),m.placeholder=i,Lo(m,e,t)}function Yi(e){var t=De[e];return function(e,n){if(e=Cs(e),(n=null==n?0:_n(Es(n),292))&&gn(e)){var r=(As(e)+"e").split("e");return+((r=(As(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var Xi=bn&&1/cn(new bn([,-0]))[1]==p?function(e){return new bn(e)}:du;function Ji(e){return function(t){var n=go(t);return n==A?an(t):n==b?function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}(t):function(e,t){return Ot(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Qi(e,t,i,p,f,d,h,m){var g=2&t;if(!g&&"function"!=typeof e)throw new ke(r);var v=p?p.length:0;if(v||(t&=-97,p=f=n),h=h===n?h:En(Es(h),0),m=m===n?m:Es(m),v-=f?f.length:0,t&u){var y=p,E=f;p=f=n}var _=g?n:ao(e),C=[e,t,i,p,f,y,E,d,h,m];if(_&&function(e,t){var n=e[1],r=t[1],i=n|r,a=i<131,s=r==c&&8==n||r==c&&n==l&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!a&&!s)return e;1&r&&(e[2]=t[2],i|=1&n?0:4);var u=t[3];if(u){var p=e[3];e[3]=p?bi(p,u,t[4]):u,e[4]=p?un(e[3],o):t[4]}(u=t[5])&&(p=e[5],e[5]=p?Si(p,u,t[6]):u,e[6]=p?un(e[5],o):t[6]);(u=t[7])&&(e[7]=u);r&c&&(e[8]=null==e[8]?t[8]:_n(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=i}(C,_),e=C[0],t=C[1],i=C[2],p=C[3],f=C[4],!(m=C[9]=C[9]===n?g?0:e.length:En(C[9]-v,0))&&24&t&&(t&=-25),t&&1!=t)T=8==t||t==a?function(e,t,r){var i=$i(e);return function o(){for(var a=arguments.length,s=Te(a),u=a,c=uo(o);u--;)s[u]=arguments[u];var l=a<3&&s[0]!==c&&s[a-1]!==c?[]:un(s,c);return(a-=l.length)<r?zi(e,t,ji,o.placeholder,n,s,l,n,n,r-a):At(this&&this!==pt&&this instanceof o?i:e,this,s)}}(e,t,m):t!=s&&33!=t||f.length?ji.apply(n,C):function(e,t,n,r){var i=1&t,o=$i(e);return function t(){for(var a=-1,s=arguments.length,u=-1,c=r.length,l=Te(c+s),p=this&&this!==pt&&this instanceof t?o:e;++u<c;)l[u]=r[u];for(;s--;)l[u++]=arguments[++a];return At(p,i?n:this,l)}}(e,t,i,p);else var T=function(e,t,n){var r=1&t,i=$i(e);return function t(){return(this&&this!==pt&&this instanceof t?i:e).apply(r?n:this,arguments)}}(e,t,i);return Lo((_?ti:No)(T,C),e,t)}function Zi(e,t,r,i){return e===n||Ga(e,Pe[r])&&!Fe.call(i,r)?t:e}function eo(e,t,r,i,o,a){return os(e)&&os(t)&&(a.set(t,e),Wr(e,t,n,eo,a),a.delete(t)),e}function to(e){return cs(e)?n:e}function no(e,t,r,i,o,a){var s=1&r,u=e.length,c=t.length;if(u!=c&&!(s&&c>u))return!1;var l=a.get(e),p=a.get(t);if(l&&p)return l==t&&p==e;var f=-1,d=!0,h=2&r?new Yn:n;for(a.set(e,t),a.set(t,e);++f<u;){var m=e[f],g=t[f];if(i)var v=s?i(g,m,f,t,e,a):i(m,g,f,e,t,a);if(v!==n){if(v)continue;d=!1;break}if(h){if(!Lt(t,(function(e,t){if(!Jt(h,t)&&(m===e||o(m,e,r,i,a)))return h.push(t)}))){d=!1;break}}else if(m!==g&&!o(m,g,r,i,a)){d=!1;break}}return a.delete(e),a.delete(t),d}function ro(e){return wo(bo(e,n,Xo),e+"")}function io(e){return Ir(e,Fs,ho)}function oo(e){return Ir(e,Ms,mo)}var ao=On?function(e){return On.get(e)}:du;function so(e){for(var t=e.name+"",n=Nn[t],r=Fe.call(Nn,t)?n.length:0;r--;){var i=n[r],o=i.func;if(null==o||o==e)return i.name}return t}function uo(e){return(Fe.call(jn,"placeholder")?jn:e).placeholder}function co(){var e=jn.iteratee||cu;return e=e===cu?Fr:e,arguments.length?e(arguments[0],arguments[1]):e}function lo(e,t){var n,r,i=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?i["string"==typeof t?"string":"hash"]:i.map}function po(e){for(var t=Fs(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,Do(i)]}return t}function fo(e,t){var r=function(e,t){return null==e?n:e[t]}(e,t);return Lr(r)?r:n}var ho=Kt?function(e){return null==e?[]:(e=xe(e),bt(Kt(e),(function(t){return Ye.call(e,t)})))}:_u,mo=Kt?function(e){for(var t=[];e;)Nt(t,ho(e)),e=He(e);return t}:_u,go=Dr;function vo(e,t,n){for(var r=-1,i=(t=_i(t,e)).length,o=!1;++r<i;){var a=Uo(t[r]);if(!(o=null!=e&&n(e,a)))break;e=e[a]}return o||++r!=i?o:!!(i=null==e?0:e.length)&&is(i)&&_o(a,i)&&(Ya(e)||za(e))}function yo(e){return"function"!=typeof e.constructor||Io(e)?{}:Un(He(e))}function Eo(e){return Ya(e)||za(e)||!!(et&&e&&e[et])}function _o(e,t){var n=typeof e;return!!(t=null==t?f:t)&&("number"==n||"symbol"!=n&&ye.test(e))&&e>-1&&e%1==0&&e<t}function Co(e,t,n){if(!os(n))return!1;var r=typeof t;return!!("number"==r?Ja(n)&&_o(t,n.length):"string"==r&&t in n)&&Ga(n[t],e)}function To(e,t){if(Ya(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ds(e))||(ee.test(e)||!Z.test(e)||null!=t&&e in xe(t))}function Ao(e){var t=so(e),n=jn[t];if("function"!=typeof n||!(t in Gn.prototype))return!1;if(e===n)return!0;var r=ao(n);return!!r&&e===r[0]}(In&&go(new In(new ArrayBuffer(1)))!=P||Dn&&go(new Dn)!=A||xn&&go(xn.resolve())!=D||bn&&go(new bn)!=b||Sn&&go(new Sn)!=O)&&(go=function(e){var t=Dr(e),r=t==I?e.constructor:n,i=r?Wo(r):"";if(i)switch(i){case Pn:return P;case wn:return A;case Ln:return D;case Fn:return b;case Mn:return O}return t});var Ro=we?ns:Cu;function Io(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Pe)}function Do(e){return e==e&&!os(e)}function xo(e,t){return function(r){return null!=r&&(r[e]===t&&(t!==n||e in xe(r)))}}function bo(e,t,r){return t=En(t===n?e.length-1:t,0),function(){for(var n=arguments,i=-1,o=En(n.length-t,0),a=Te(o);++i<o;)a[i]=n[t+i];i=-1;for(var s=Te(t+1);++i<t;)s[i]=n[i];return s[t]=r(a),At(e,this,s)}}function So(e,t){return t.length<2?e:Rr(e,ii(t,0,-1))}function ko(e,t){for(var r=e.length,i=_n(t.length,r),o=ki(e);i--;){var a=t[i];e[i]=_o(a,r)?o[a]:n}return e}function Oo(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var No=Fo(ti),Po=mt||function(e,t){return pt.setTimeout(e,t)},wo=Fo(ni);function Lo(e,t,n){var r=t+"";return wo(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(ae,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return It(m,(function(n){var r="_."+n[0];t&n[1]&&!St(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(se);return t?t[1].split(ue):[]}(r),n)))}function Fo(e){var t=0,r=0;return function(){var i=Cn(),o=16-(i-r);if(r=i,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(n,arguments)}}function Mo(e,t){var r=-1,i=e.length,o=i-1;for(t=t===n?i:t;++r<t;){var a=Yr(r,o),s=e[a];e[a]=e[r],e[r]=s}return e.length=t,e}var $o,Bo,qo,jo=($o=function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(te,(function(e,n,r,i){t.push(r?i.replace(pe,"$1"):n||e)})),t},Bo=Ba($o,(function(e){return 500===qo.size&&qo.clear(),e})),qo=Bo.cache,Bo);function Uo(e){if("string"==typeof e||ds(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Wo(e){if(null!=e){try{return Le.call(e)}catch(PI){}try{return e+""}catch(PI){}}return""}function Ko(e){if(e instanceof Gn)return e.clone();var t=new Kn(e.__wrapped__,e.__chain__);return t.__actions__=ki(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Go=Jr((function(e,t){return Qa(e)?fr(e,yr(t,1,Qa,!0)):[]})),Vo=Jr((function(e,t){var r=ta(t);return Qa(r)&&(r=n),Qa(e)?fr(e,yr(t,1,Qa,!0),co(r,2)):[]})),Ho=Jr((function(e,t){var r=ta(t);return Qa(r)&&(r=n),Qa(e)?fr(e,yr(t,1,Qa,!0),n,r):[]}));function zo(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:Es(n);return i<0&&(i=En(r+i,0)),$t(e,co(t,3),i)}function Yo(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var o=i-1;return r!==n&&(o=Es(r),o=r<0?En(i+o,0):_n(o,i-1)),$t(e,co(t,3),o,!0)}function Xo(e){return(null==e?0:e.length)?yr(e,1):[]}function Jo(e){return e&&e.length?e[0]:n}var Qo=Jr((function(e){var t=Ot(e,yi);return t.length&&t[0]===e[0]?kr(t):[]})),Zo=Jr((function(e){var t=ta(e),r=Ot(e,yi);return t===ta(r)?t=n:r.pop(),r.length&&r[0]===e[0]?kr(r,co(t,2)):[]})),ea=Jr((function(e){var t=ta(e),r=Ot(e,yi);return(t="function"==typeof t?t:n)&&r.pop(),r.length&&r[0]===e[0]?kr(r,n,t):[]}));function ta(e){var t=null==e?0:e.length;return t?e[t-1]:n}var na=Jr(ra);function ra(e,t){return e&&e.length&&t&&t.length?Hr(e,t):e}var ia=ro((function(e,t){var n=null==e?0:e.length,r=sr(e,t);return zr(e,Ot(t,(function(e){return _o(e,n)?+e:e})).sort(xi)),r}));function oa(e){return null==e?e:Rn.call(e)}var aa=Jr((function(e){return pi(yr(e,1,Qa,!0))})),sa=Jr((function(e){var t=ta(e);return Qa(t)&&(t=n),pi(yr(e,1,Qa,!0),co(t,2))})),ua=Jr((function(e){var t=ta(e);return t="function"==typeof t?t:n,pi(yr(e,1,Qa,!0),n,t)}));function ca(e){if(!e||!e.length)return[];var t=0;return e=bt(e,(function(e){if(Qa(e))return t=En(e.length,t),!0})),Ht(t,(function(t){return Ot(e,Wt(t))}))}function la(e,t){if(!e||!e.length)return[];var r=ca(e);return null==t?r:Ot(r,(function(e){return At(t,n,e)}))}var pa=Jr((function(e,t){return Qa(e)?fr(e,t):[]})),fa=Jr((function(e){return gi(bt(e,Qa))})),da=Jr((function(e){var t=ta(e);return Qa(t)&&(t=n),gi(bt(e,Qa),co(t,2))})),ha=Jr((function(e){var t=ta(e);return t="function"==typeof t?t:n,gi(bt(e,Qa),n,t)})),ma=Jr(ca);var ga=Jr((function(e){var t=e.length,r=t>1?e[t-1]:n;return r="function"==typeof r?(e.pop(),r):n,la(e,r)}));function va(e){var t=jn(e);return t.__chain__=!0,t}function ya(e,t){return t(e)}var Ea=ro((function(e){var t=e.length,r=t?e[0]:0,i=this.__wrapped__,o=function(t){return sr(t,e)};return!(t>1||this.__actions__.length)&&i instanceof Gn&&_o(r)?((i=i.slice(r,+r+(t?1:0))).__actions__.push({func:ya,args:[o],thisArg:n}),new Kn(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(n),e}))):this.thru(o)}));var _a=Ni((function(e,t,n){Fe.call(e,n)?++e[n]:ar(e,n,1)}));var Ca=Bi(zo),Ta=Bi(Yo);function Aa(e,t){return(Ya(e)?It:dr)(e,co(t,3))}function Ra(e,t){return(Ya(e)?Dt:hr)(e,co(t,3))}var Ia=Ni((function(e,t,n){Fe.call(e,n)?e[n].push(t):ar(e,n,[t])}));var Da=Jr((function(e,t,n){var r=-1,i="function"==typeof t,o=Ja(e)?Te(e.length):[];return dr(e,(function(e){o[++r]=i?At(t,e,n):Or(e,t,n)})),o})),xa=Ni((function(e,t,n){ar(e,n,t)}));function ba(e,t){return(Ya(e)?Ot:qr)(e,co(t,3))}var Sa=Ni((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var ka=Jr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&Co(e,t[0],t[1])?t=[]:n>2&&Co(t[0],t[1],t[2])&&(t=[t[0]]),Gr(e,yr(t,1),[])})),Oa=dt||function(){return pt.Date.now()};function Na(e,t,r){return t=r?n:t,t=e&&null==t?e.length:t,Qi(e,c,n,n,n,n,t)}function Pa(e,t){var i;if("function"!=typeof t)throw new ke(r);return e=Es(e),function(){return--e>0&&(i=t.apply(this,arguments)),e<=1&&(t=n),i}}var wa=Jr((function(e,t,n){var r=1;if(n.length){var i=un(n,uo(wa));r|=s}return Qi(e,r,t,n,i)})),La=Jr((function(e,t,n){var r=3;if(n.length){var i=un(n,uo(La));r|=s}return Qi(t,r,e,n,i)}));function Fa(e,t,i){var o,a,s,u,c,l,p=0,f=!1,d=!1,h=!0;if("function"!=typeof e)throw new ke(r);function m(t){var r=o,i=a;return o=a=n,p=t,u=e.apply(i,r)}function g(e){return p=e,c=Po(y,t),f?m(e):u}function v(e){var r=e-l;return l===n||r>=t||r<0||d&&e-p>=s}function y(){var e=Oa();if(v(e))return E(e);c=Po(y,function(e){var n=t-(e-l);return d?_n(n,s-(e-p)):n}(e))}function E(e){return c=n,h&&o?m(e):(o=a=n,u)}function _(){var e=Oa(),r=v(e);if(o=arguments,a=this,l=e,r){if(c===n)return g(l);if(d)return Ai(c),c=Po(y,t),m(l)}return c===n&&(c=Po(y,t)),u}return t=Cs(t)||0,os(i)&&(f=!!i.leading,s=(d="maxWait"in i)?En(Cs(i.maxWait)||0,t):s,h="trailing"in i?!!i.trailing:h),_.cancel=function(){c!==n&&Ai(c),p=0,o=l=a=c=n},_.flush=function(){return c===n?u:E(Oa())},_}var Ma=Jr((function(e,t){return pr(e,1,t)})),$a=Jr((function(e,t,n){return pr(e,Cs(t)||0,n)}));function Ba(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new ke(r);var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],o=n.cache;if(o.has(i))return o.get(i);var a=e.apply(this,r);return n.cache=o.set(i,a)||o,a};return n.cache=new(Ba.Cache||zn),n}function qa(e){if("function"!=typeof e)throw new ke(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Ba.Cache=zn;var ja=Ci((function(e,t){var n=(t=1==t.length&&Ya(t[0])?Ot(t[0],Yt(co())):Ot(yr(t,1),Yt(co()))).length;return Jr((function(r){for(var i=-1,o=_n(r.length,n);++i<o;)r[i]=t[i].call(this,r[i]);return At(e,this,r)}))})),Ua=Jr((function(e,t){var r=un(t,uo(Ua));return Qi(e,s,n,t,r)})),Wa=Jr((function(e,t){var r=un(t,uo(Wa));return Qi(e,u,n,t,r)})),Ka=ro((function(e,t){return Qi(e,l,n,n,n,t)}));function Ga(e,t){return e===t||e!=e&&t!=t}var Va=Hi(xr),Ha=Hi((function(e,t){return e>=t})),za=Nr(function(){return arguments}())?Nr:function(e){return as(e)&&Fe.call(e,"callee")&&!Ye.call(e,"callee")},Ya=Te.isArray,Xa=vt?Yt(vt):function(e){return as(e)&&Dr(e)==N};function Ja(e){return null!=e&&is(e.length)&&!ns(e)}function Qa(e){return as(e)&&Ja(e)}var Za=mn||Cu,es=yt?Yt(yt):function(e){return as(e)&&Dr(e)==E};function ts(e){if(!as(e))return!1;var t=Dr(e);return t==_||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!cs(e)}function ns(e){if(!os(e))return!1;var t=Dr(e);return t==C||t==T||"[object AsyncFunction]"==t||"[object Proxy]"==t}function rs(e){return"number"==typeof e&&e==Es(e)}function is(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=f}function os(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function as(e){return null!=e&&"object"==typeof e}var ss=Et?Yt(Et):function(e){return as(e)&&go(e)==A};function us(e){return"number"==typeof e||as(e)&&Dr(e)==R}function cs(e){if(!as(e)||Dr(e)!=I)return!1;var t=He(e);if(null===t)return!0;var n=Fe.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Le.call(n)==qe}var ls=_t?Yt(_t):function(e){return as(e)&&Dr(e)==x};var ps=Ct?Yt(Ct):function(e){return as(e)&&go(e)==b};function fs(e){return"string"==typeof e||!Ya(e)&&as(e)&&Dr(e)==S}function ds(e){return"symbol"==typeof e||as(e)&&Dr(e)==k}var hs=Tt?Yt(Tt):function(e){return as(e)&&is(e.length)&&!!it[Dr(e)]};var ms=Hi(Br),gs=Hi((function(e,t){return e<=t}));function vs(e){if(!e)return[];if(Ja(e))return fs(e)?pn(e):ki(e);if(at&&e[at])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[at]());var t=go(e);return(t==A?an:t==b?cn:Gs)(e)}function ys(e){return e?(e=Cs(e))===p||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function Es(e){var t=ys(e),n=t%1;return t==t?n?t-n:t:0}function _s(e){return e?ur(Es(e),0,h):0}function Cs(e){if("number"==typeof e)return e;if(ds(e))return d;if(os(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=os(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=zt(e);var n=me.test(e);return n||ve.test(e)?ut(e.slice(2),n?2:8):he.test(e)?d:+e}function Ts(e){return Oi(e,Ms(e))}function As(e){return null==e?"":li(e)}var Rs=Pi((function(e,t){if(Io(t)||Ja(t))Oi(t,Fs(t),e);else for(var n in t)Fe.call(t,n)&&nr(e,n,t[n])})),Is=Pi((function(e,t){Oi(t,Ms(t),e)})),Ds=Pi((function(e,t,n,r){Oi(t,Ms(t),e,r)})),xs=Pi((function(e,t,n,r){Oi(t,Fs(t),e,r)})),bs=ro(sr);var Ss=Jr((function(e,t){e=xe(e);var r=-1,i=t.length,o=i>2?t[2]:n;for(o&&Co(t[0],t[1],o)&&(i=1);++r<i;)for(var a=t[r],s=Ms(a),u=-1,c=s.length;++u<c;){var l=s[u],p=e[l];(p===n||Ga(p,Pe[l])&&!Fe.call(e,l))&&(e[l]=a[l])}return e})),ks=Jr((function(e){return e.push(n,eo),At(Bs,n,e)}));function Os(e,t,r){var i=null==e?n:Rr(e,t);return i===n?r:i}function Ns(e,t){return null!=e&&vo(e,t,Sr)}var Ps=Ui((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Be.call(t)),e[t]=n}),ou(uu)),ws=Ui((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Be.call(t)),Fe.call(e,t)?e[t].push(n):e[t]=[n]}),co),Ls=Jr(Or);function Fs(e){return Ja(e)?Jn(e):Mr(e)}function Ms(e){return Ja(e)?Jn(e,!0):$r(e)}var $s=Pi((function(e,t,n){Wr(e,t,n)})),Bs=Pi((function(e,t,n,r){Wr(e,t,n,r)})),qs=ro((function(e,t){var n={};if(null==e)return n;var r=!1;t=Ot(t,(function(t){return t=_i(t,e),r||(r=t.length>1),t})),Oi(e,oo(e),n),r&&(n=cr(n,7,to));for(var i=t.length;i--;)fi(n,t[i]);return n}));var js=ro((function(e,t){return null==e?{}:function(e,t){return Vr(e,t,(function(t,n){return Ns(e,n)}))}(e,t)}));function Us(e,t){if(null==e)return{};var n=Ot(oo(e),(function(e){return[e]}));return t=co(t),Vr(e,n,(function(e,n){return t(e,n[0])}))}var Ws=Ji(Fs),Ks=Ji(Ms);function Gs(e){return null==e?[]:Xt(e,Fs(e))}var Vs=Mi((function(e,t,n){return t=t.toLowerCase(),e+(n?Hs(t):t)}));function Hs(e){return tu(As(e).toLowerCase())}function zs(e){return(e=As(e))&&e.replace(Ee,tn).replace(Je,"")}var Ys=Mi((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),Xs=Mi((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Js=Fi("toLowerCase");var Qs=Mi((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var Zs=Mi((function(e,t,n){return e+(n?" ":"")+tu(t)}));var eu=Mi((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),tu=Fi("toUpperCase");function nu(e,t,r){return e=As(e),(t=r?n:t)===n?function(e){return tt.test(e)}(e)?function(e){return e.match(Ze)||[]}(e):function(e){return e.match(ce)||[]}(e):e.match(t)||[]}var ru=Jr((function(e,t){try{return At(e,n,t)}catch(PI){return ts(PI)?PI:new Re(PI)}})),iu=ro((function(e,t){return It(t,(function(t){t=Uo(t),ar(e,t,wa(e[t],e))})),e}));function ou(e){return function(){return e}}var au=qi(),su=qi(!0);function uu(e){return e}function cu(e){return Fr("function"==typeof e?e:cr(e,1))}var lu=Jr((function(e,t){return function(n){return Or(n,e,t)}})),pu=Jr((function(e,t){return function(n){return Or(e,n,t)}}));function fu(e,t,n){var r=Fs(t),i=Ar(t,r);null!=n||os(t)&&(i.length||!r.length)||(n=t,t=e,e=this,i=Ar(t,Fs(t)));var o=!(os(n)&&"chain"in n&&!n.chain),a=ns(e);return It(i,(function(n){var r=t[n];e[n]=r,a&&(e.prototype[n]=function(){var t=this.__chain__;if(o||t){var n=e(this.__wrapped__),i=n.__actions__=ki(this.__actions__);return i.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Nt([this.value()],arguments))})})),e}function du(){}var hu=Ki(Ot),mu=Ki(xt),gu=Ki(Lt);function vu(e){return To(e)?Wt(Uo(e)):function(e){return function(t){return Rr(t,e)}}(e)}var yu=Vi(),Eu=Vi(!0);function _u(){return[]}function Cu(){return!1}var Tu=Wi((function(e,t){return e+t}),0),Au=Yi("ceil"),Ru=Wi((function(e,t){return e/t}),1),Iu=Yi("floor");var Du,xu=Wi((function(e,t){return e*t}),1),bu=Yi("round"),Su=Wi((function(e,t){return e-t}),0);return jn.after=function(e,t){if("function"!=typeof t)throw new ke(r);return e=Es(e),function(){if(--e<1)return t.apply(this,arguments)}},jn.ary=Na,jn.assign=Rs,jn.assignIn=Is,jn.assignInWith=Ds,jn.assignWith=xs,jn.at=bs,jn.before=Pa,jn.bind=wa,jn.bindAll=iu,jn.bindKey=La,jn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Ya(e)?e:[e]},jn.chain=va,jn.chunk=function(e,t,r){t=(r?Co(e,t,r):t===n)?1:En(Es(t),0);var i=null==e?0:e.length;if(!i||t<1)return[];for(var o=0,a=0,s=Te(gt(i/t));o<i;)s[a++]=ii(e,o,o+=t);return s},jn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,i=[];++t<n;){var o=e[t];o&&(i[r++]=o)}return i},jn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=Te(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return Nt(Ya(n)?ki(n):[n],yr(t,1))},jn.cond=function(e){var t=null==e?0:e.length,n=co();return e=t?Ot(e,(function(e){if("function"!=typeof e[1])throw new ke(r);return[n(e[0]),e[1]]})):[],Jr((function(n){for(var r=-1;++r<t;){var i=e[r];if(At(i[0],this,n))return At(i[1],this,n)}}))},jn.conforms=function(e){return function(e){var t=Fs(e);return function(n){return lr(n,e,t)}}(cr(e,1))},jn.constant=ou,jn.countBy=_a,jn.create=function(e,t){var n=Un(e);return null==t?n:or(n,t)},jn.curry=function e(t,r,i){var o=Qi(t,8,n,n,n,n,n,r=i?n:r);return o.placeholder=e.placeholder,o},jn.curryRight=function e(t,r,i){var o=Qi(t,a,n,n,n,n,n,r=i?n:r);return o.placeholder=e.placeholder,o},jn.debounce=Fa,jn.defaults=Ss,jn.defaultsDeep=ks,jn.defer=Ma,jn.delay=$a,jn.difference=Go,jn.differenceBy=Vo,jn.differenceWith=Ho,jn.drop=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,(t=r||t===n?1:Es(t))<0?0:t,i):[]},jn.dropRight=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,0,(t=i-(t=r||t===n?1:Es(t)))<0?0:t):[]},jn.dropRightWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!0,!0):[]},jn.dropWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!0):[]},jn.fill=function(e,t,r,i){var o=null==e?0:e.length;return o?(r&&"number"!=typeof r&&Co(e,t,r)&&(r=0,i=o),function(e,t,r,i){var o=e.length;for((r=Es(r))<0&&(r=-r>o?0:o+r),(i=i===n||i>o?o:Es(i))<0&&(i+=o),i=r>i?0:_s(i);r<i;)e[r++]=t;return e}(e,t,r,i)):[]},jn.filter=function(e,t){return(Ya(e)?bt:vr)(e,co(t,3))},jn.flatMap=function(e,t){return yr(ba(e,t),1)},jn.flatMapDeep=function(e,t){return yr(ba(e,t),p)},jn.flatMapDepth=function(e,t,r){return r=r===n?1:Es(r),yr(ba(e,t),r)},jn.flatten=Xo,jn.flattenDeep=function(e){return(null==e?0:e.length)?yr(e,p):[]},jn.flattenDepth=function(e,t){return(null==e?0:e.length)?yr(e,t=t===n?1:Es(t)):[]},jn.flip=function(e){return Qi(e,512)},jn.flow=au,jn.flowRight=su,jn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var i=e[t];r[i[0]]=i[1]}return r},jn.functions=function(e){return null==e?[]:Ar(e,Fs(e))},jn.functionsIn=function(e){return null==e?[]:Ar(e,Ms(e))},jn.groupBy=Ia,jn.initial=function(e){return(null==e?0:e.length)?ii(e,0,-1):[]},jn.intersection=Qo,jn.intersectionBy=Zo,jn.intersectionWith=ea,jn.invert=Ps,jn.invertBy=ws,jn.invokeMap=Da,jn.iteratee=cu,jn.keyBy=xa,jn.keys=Fs,jn.keysIn=Ms,jn.map=ba,jn.mapKeys=function(e,t){var n={};return t=co(t,3),Cr(e,(function(e,r,i){ar(n,t(e,r,i),e)})),n},jn.mapValues=function(e,t){var n={};return t=co(t,3),Cr(e,(function(e,r,i){ar(n,r,t(e,r,i))})),n},jn.matches=function(e){return jr(cr(e,1))},jn.matchesProperty=function(e,t){return Ur(e,cr(t,1))},jn.memoize=Ba,jn.merge=$s,jn.mergeWith=Bs,jn.method=lu,jn.methodOf=pu,jn.mixin=fu,jn.negate=qa,jn.nthArg=function(e){return e=Es(e),Jr((function(t){return Kr(t,e)}))},jn.omit=qs,jn.omitBy=function(e,t){return Us(e,qa(co(t)))},jn.once=function(e){return Pa(2,e)},jn.orderBy=function(e,t,r,i){return null==e?[]:(Ya(t)||(t=null==t?[]:[t]),Ya(r=i?n:r)||(r=null==r?[]:[r]),Gr(e,t,r))},jn.over=hu,jn.overArgs=ja,jn.overEvery=mu,jn.overSome=gu,jn.partial=Ua,jn.partialRight=Wa,jn.partition=Sa,jn.pick=js,jn.pickBy=Us,jn.property=vu,jn.propertyOf=function(e){return function(t){return null==e?n:Rr(e,t)}},jn.pull=na,jn.pullAll=ra,jn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Hr(e,t,co(n,2)):e},jn.pullAllWith=function(e,t,r){return e&&e.length&&t&&t.length?Hr(e,t,n,r):e},jn.pullAt=ia,jn.range=yu,jn.rangeRight=Eu,jn.rearg=Ka,jn.reject=function(e,t){return(Ya(e)?bt:vr)(e,qa(co(t,3)))},jn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,i=[],o=e.length;for(t=co(t,3);++r<o;){var a=e[r];t(a,r,e)&&(n.push(a),i.push(r))}return zr(e,i),n},jn.rest=function(e,t){if("function"!=typeof e)throw new ke(r);return Jr(e,t=t===n?t:Es(t))},jn.reverse=oa,jn.sampleSize=function(e,t,r){return t=(r?Co(e,t,r):t===n)?1:Es(t),(Ya(e)?Zn:Zr)(e,t)},jn.set=function(e,t,n){return null==e?e:ei(e,t,n)},jn.setWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:ei(e,t,r,i)},jn.shuffle=function(e){return(Ya(e)?er:ri)(e)},jn.slice=function(e,t,r){var i=null==e?0:e.length;return i?(r&&"number"!=typeof r&&Co(e,t,r)?(t=0,r=i):(t=null==t?0:Es(t),r=r===n?i:Es(r)),ii(e,t,r)):[]},jn.sortBy=ka,jn.sortedUniq=function(e){return e&&e.length?ui(e):[]},jn.sortedUniqBy=function(e,t){return e&&e.length?ui(e,co(t,2)):[]},jn.split=function(e,t,r){return r&&"number"!=typeof r&&Co(e,t,r)&&(t=r=n),(r=r===n?h:r>>>0)?(e=As(e))&&("string"==typeof t||null!=t&&!ls(t))&&!(t=li(t))&&on(e)?Ti(pn(e),0,r):e.split(t,r):[]},jn.spread=function(e,t){if("function"!=typeof e)throw new ke(r);return t=null==t?0:En(Es(t),0),Jr((function(n){var r=n[t],i=Ti(n,0,t);return r&&Nt(i,r),At(e,this,i)}))},jn.tail=function(e){var t=null==e?0:e.length;return t?ii(e,1,t):[]},jn.take=function(e,t,r){return e&&e.length?ii(e,0,(t=r||t===n?1:Es(t))<0?0:t):[]},jn.takeRight=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,(t=i-(t=r||t===n?1:Es(t)))<0?0:t,i):[]},jn.takeRightWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!1,!0):[]},jn.takeWhile=function(e,t){return e&&e.length?hi(e,co(t,3)):[]},jn.tap=function(e,t){return t(e),e},jn.throttle=function(e,t,n){var i=!0,o=!0;if("function"!=typeof e)throw new ke(r);return os(n)&&(i="leading"in n?!!n.leading:i,o="trailing"in n?!!n.trailing:o),Fa(e,t,{leading:i,maxWait:t,trailing:o})},jn.thru=ya,jn.toArray=vs,jn.toPairs=Ws,jn.toPairsIn=Ks,jn.toPath=function(e){return Ya(e)?Ot(e,Uo):ds(e)?[e]:ki(jo(As(e)))},jn.toPlainObject=Ts,jn.transform=function(e,t,n){var r=Ya(e),i=r||Za(e)||hs(e);if(t=co(t,4),null==n){var o=e&&e.constructor;n=i?r?new o:[]:os(e)&&ns(o)?Un(He(e)):{}}return(i?It:Cr)(e,(function(e,r,i){return t(n,e,r,i)})),n},jn.unary=function(e){return Na(e,1)},jn.union=aa,jn.unionBy=sa,jn.unionWith=ua,jn.uniq=function(e){return e&&e.length?pi(e):[]},jn.uniqBy=function(e,t){return e&&e.length?pi(e,co(t,2)):[]},jn.uniqWith=function(e,t){return t="function"==typeof t?t:n,e&&e.length?pi(e,n,t):[]},jn.unset=function(e,t){return null==e||fi(e,t)},jn.unzip=ca,jn.unzipWith=la,jn.update=function(e,t,n){return null==e?e:di(e,t,Ei(n))},jn.updateWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:di(e,t,Ei(r),i)},jn.values=Gs,jn.valuesIn=function(e){return null==e?[]:Xt(e,Ms(e))},jn.without=pa,jn.words=nu,jn.wrap=function(e,t){return Ua(Ei(t),e)},jn.xor=fa,jn.xorBy=da,jn.xorWith=ha,jn.zip=ma,jn.zipObject=function(e,t){return vi(e||[],t||[],nr)},jn.zipObjectDeep=function(e,t){return vi(e||[],t||[],ei)},jn.zipWith=ga,jn.entries=Ws,jn.entriesIn=Ks,jn.extend=Is,jn.extendWith=Ds,fu(jn,jn),jn.add=Tu,jn.attempt=ru,jn.camelCase=Vs,jn.capitalize=Hs,jn.ceil=Au,jn.clamp=function(e,t,r){return r===n&&(r=t,t=n),r!==n&&(r=(r=Cs(r))==r?r:0),t!==n&&(t=(t=Cs(t))==t?t:0),ur(Cs(e),t,r)},jn.clone=function(e){return cr(e,4)},jn.cloneDeep=function(e){return cr(e,5)},jn.cloneDeepWith=function(e,t){return cr(e,5,t="function"==typeof t?t:n)},jn.cloneWith=function(e,t){return cr(e,4,t="function"==typeof t?t:n)},jn.conformsTo=function(e,t){return null==t||lr(e,t,Fs(t))},jn.deburr=zs,jn.defaultTo=function(e,t){return null==e||e!=e?t:e},jn.divide=Ru,jn.endsWith=function(e,t,r){e=As(e),t=li(t);var i=e.length,o=r=r===n?i:ur(Es(r),0,i);return(r-=t.length)>=0&&e.slice(r,o)==t},jn.eq=Ga,jn.escape=function(e){return(e=As(e))&&Y.test(e)?e.replace(H,nn):e},jn.escapeRegExp=function(e){return(e=As(e))&&re.test(e)?e.replace(ne,"\\$&"):e},jn.every=function(e,t,r){var i=Ya(e)?xt:mr;return r&&Co(e,t,r)&&(t=n),i(e,co(t,3))},jn.find=Ca,jn.findIndex=zo,jn.findKey=function(e,t){return Mt(e,co(t,3),Cr)},jn.findLast=Ta,jn.findLastIndex=Yo,jn.findLastKey=function(e,t){return Mt(e,co(t,3),Tr)},jn.floor=Iu,jn.forEach=Aa,jn.forEachRight=Ra,jn.forIn=function(e,t){return null==e?e:Er(e,co(t,3),Ms)},jn.forInRight=function(e,t){return null==e?e:_r(e,co(t,3),Ms)},jn.forOwn=function(e,t){return e&&Cr(e,co(t,3))},jn.forOwnRight=function(e,t){return e&&Tr(e,co(t,3))},jn.get=Os,jn.gt=Va,jn.gte=Ha,jn.has=function(e,t){return null!=e&&vo(e,t,br)},jn.hasIn=Ns,jn.head=Jo,jn.identity=uu,jn.includes=function(e,t,n,r){e=Ja(e)?e:Gs(e),n=n&&!r?Es(n):0;var i=e.length;return n<0&&(n=En(i+n,0)),fs(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&Bt(e,t,n)>-1},jn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:Es(n);return i<0&&(i=En(r+i,0)),Bt(e,t,i)},jn.inRange=function(e,t,r){return t=ys(t),r===n?(r=t,t=0):r=ys(r),function(e,t,n){return e>=_n(t,n)&&e<En(t,n)}(e=Cs(e),t,r)},jn.invoke=Ls,jn.isArguments=za,jn.isArray=Ya,jn.isArrayBuffer=Xa,jn.isArrayLike=Ja,jn.isArrayLikeObject=Qa,jn.isBoolean=function(e){return!0===e||!1===e||as(e)&&Dr(e)==y},jn.isBuffer=Za,jn.isDate=es,jn.isElement=function(e){return as(e)&&1===e.nodeType&&!cs(e)},jn.isEmpty=function(e){if(null==e)return!0;if(Ja(e)&&(Ya(e)||"string"==typeof e||"function"==typeof e.splice||Za(e)||hs(e)||za(e)))return!e.length;var t=go(e);if(t==A||t==b)return!e.size;if(Io(e))return!Mr(e).length;for(var n in e)if(Fe.call(e,n))return!1;return!0},jn.isEqual=function(e,t){return Pr(e,t)},jn.isEqualWith=function(e,t,r){var i=(r="function"==typeof r?r:n)?r(e,t):n;return i===n?Pr(e,t,n,r):!!i},jn.isError=ts,jn.isFinite=function(e){return"number"==typeof e&&gn(e)},jn.isFunction=ns,jn.isInteger=rs,jn.isLength=is,jn.isMap=ss,jn.isMatch=function(e,t){return e===t||wr(e,t,po(t))},jn.isMatchWith=function(e,t,r){return r="function"==typeof r?r:n,wr(e,t,po(t),r)},jn.isNaN=function(e){return us(e)&&e!=+e},jn.isNative=function(e){if(Ro(e))throw new Re("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Lr(e)},jn.isNil=function(e){return null==e},jn.isNull=function(e){return null===e},jn.isNumber=us,jn.isObject=os,jn.isObjectLike=as,jn.isPlainObject=cs,jn.isRegExp=ls,jn.isSafeInteger=function(e){return rs(e)&&e>=-9007199254740991&&e<=f},jn.isSet=ps,jn.isString=fs,jn.isSymbol=ds,jn.isTypedArray=hs,jn.isUndefined=function(e){return e===n},jn.isWeakMap=function(e){return as(e)&&go(e)==O},jn.isWeakSet=function(e){return as(e)&&"[object WeakSet]"==Dr(e)},jn.join=function(e,t){return null==e?"":vn.call(e,t)},jn.kebabCase=Ys,jn.last=ta,jn.lastIndexOf=function(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var o=i;return r!==n&&(o=(o=Es(r))<0?En(i+o,0):_n(o,i-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,o):$t(e,jt,o,!0)},jn.lowerCase=Xs,jn.lowerFirst=Js,jn.lt=ms,jn.lte=gs,jn.max=function(e){return e&&e.length?gr(e,uu,xr):n},jn.maxBy=function(e,t){return e&&e.length?gr(e,co(t,2),xr):n},jn.mean=function(e){return Ut(e,uu)},jn.meanBy=function(e,t){return Ut(e,co(t,2))},jn.min=function(e){return e&&e.length?gr(e,uu,Br):n},jn.minBy=function(e,t){return e&&e.length?gr(e,co(t,2),Br):n},jn.stubArray=_u,jn.stubFalse=Cu,jn.stubObject=function(){return{}},jn.stubString=function(){return""},jn.stubTrue=function(){return!0},jn.multiply=xu,jn.nth=function(e,t){return e&&e.length?Kr(e,Es(t)):n},jn.noConflict=function(){return pt._===this&&(pt._=je),this},jn.noop=du,jn.now=Oa,jn.pad=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;if(!t||r>=t)return e;var i=(t-r)/2;return Gi(Ft(i),n)+e+Gi(gt(i),n)},jn.padEnd=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;return t&&r<t?e+Gi(t-r,n):e},jn.padStart=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;return t&&r<t?Gi(t-r,n)+e:e},jn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),Tn(As(e).replace(ie,""),t||0)},jn.random=function(e,t,r){if(r&&"boolean"!=typeof r&&Co(e,t,r)&&(t=r=n),r===n&&("boolean"==typeof t?(r=t,t=n):"boolean"==typeof e&&(r=e,e=n)),e===n&&t===n?(e=0,t=1):(e=ys(e),t===n?(t=e,e=0):t=ys(t)),e>t){var i=e;e=t,t=i}if(r||e%1||t%1){var o=An();return _n(e+o*(t-e+st("1e-"+((o+"").length-1))),t)}return Yr(e,t)},jn.reduce=function(e,t,n){var r=Ya(e)?Pt:Gt,i=arguments.length<3;return r(e,co(t,4),n,i,dr)},jn.reduceRight=function(e,t,n){var r=Ya(e)?wt:Gt,i=arguments.length<3;return r(e,co(t,4),n,i,hr)},jn.repeat=function(e,t,r){return t=(r?Co(e,t,r):t===n)?1:Es(t),Xr(As(e),t)},jn.replace=function(){var e=arguments,t=As(e[0]);return e.length<3?t:t.replace(e[1],e[2])},jn.result=function(e,t,r){var i=-1,o=(t=_i(t,e)).length;for(o||(o=1,e=n);++i<o;){var a=null==e?n:e[Uo(t[i])];a===n&&(i=o,a=r),e=ns(a)?a.call(e):a}return e},jn.round=bu,jn.runInContext=e,jn.sample=function(e){return(Ya(e)?Qn:Qr)(e)},jn.size=function(e){if(null==e)return 0;if(Ja(e))return fs(e)?ln(e):e.length;var t=go(e);return t==A||t==b?e.size:Mr(e).length},jn.snakeCase=Qs,jn.some=function(e,t,r){var i=Ya(e)?Lt:oi;return r&&Co(e,t,r)&&(t=n),i(e,co(t,3))},jn.sortedIndex=function(e,t){return ai(e,t)},jn.sortedIndexBy=function(e,t,n){return si(e,t,co(n,2))},jn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=ai(e,t);if(r<n&&Ga(e[r],t))return r}return-1},jn.sortedLastIndex=function(e,t){return ai(e,t,!0)},jn.sortedLastIndexBy=function(e,t,n){return si(e,t,co(n,2),!0)},jn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=ai(e,t,!0)-1;if(Ga(e[n],t))return n}return-1},jn.startCase=Zs,jn.startsWith=function(e,t,n){return e=As(e),n=null==n?0:ur(Es(n),0,e.length),t=li(t),e.slice(n,n+t.length)==t},jn.subtract=Su,jn.sum=function(e){return e&&e.length?Vt(e,uu):0},jn.sumBy=function(e,t){return e&&e.length?Vt(e,co(t,2)):0},jn.template=function(e,t,r){var i=jn.templateSettings;r&&Co(e,t,r)&&(t=n),e=As(e),t=Ds({},t,i,Zi);var o,a,s=Ds({},t.imports,i.imports,Zi),u=Fs(s),c=Xt(s,u),l=0,p=t.interpolate||_e,f="__p += '",d=be((t.escape||_e).source+"|"+p.source+"|"+(p===Q?fe:_e).source+"|"+(t.evaluate||_e).source+"|$","g"),h="//# sourceURL="+(Fe.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++rt+"]")+"\n";e.replace(d,(function(t,n,r,i,s,u){return r||(r=i),f+=e.slice(l,u).replace(Ce,rn),n&&(o=!0,f+="' +\n__e("+n+") +\n'"),s&&(a=!0,f+="';\n"+s+";\n__p += '"),r&&(f+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),l=u+t.length,t})),f+="';\n";var m=Fe.call(t,"variable")&&t.variable;if(m){if(le.test(m))throw new Re("Invalid `variable` option passed into `_.template`")}else f="with (obj) {\n"+f+"\n}\n";f=(a?f.replace(W,""):f).replace(K,"$1").replace(G,"$1;"),f="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(o?", __e = _.escape":"")+(a?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var g=ru((function(){return Ie(u,h+"return "+f).apply(n,c)}));if(g.source=f,ts(g))throw g;return g},jn.times=function(e,t){if((e=Es(e))<1||e>f)return[];var n=h,r=_n(e,h);t=co(t),e-=h;for(var i=Ht(r,t);++n<e;)t(n);return i},jn.toFinite=ys,jn.toInteger=Es,jn.toLength=_s,jn.toLower=function(e){return As(e).toLowerCase()},jn.toNumber=Cs,jn.toSafeInteger=function(e){return e?ur(Es(e),-9007199254740991,f):0===e?e:0},jn.toString=As,jn.toUpper=function(e){return As(e).toUpperCase()},jn.trim=function(e,t,r){if((e=As(e))&&(r||t===n))return zt(e);if(!e||!(t=li(t)))return e;var i=pn(e),o=pn(t);return Ti(i,Qt(i,o),Zt(i,o)+1).join("")},jn.trimEnd=function(e,t,r){if((e=As(e))&&(r||t===n))return e.slice(0,fn(e)+1);if(!e||!(t=li(t)))return e;var i=pn(e);return Ti(i,0,Zt(i,pn(t))+1).join("")},jn.trimStart=function(e,t,r){if((e=As(e))&&(r||t===n))return e.replace(ie,"");if(!e||!(t=li(t)))return e;var i=pn(e);return Ti(i,Qt(i,pn(t))).join("")},jn.truncate=function(e,t){var r=30,i="...";if(os(t)){var o="separator"in t?t.separator:o;r="length"in t?Es(t.length):r,i="omission"in t?li(t.omission):i}var a=(e=As(e)).length;if(on(e)){var s=pn(e);a=s.length}if(r>=a)return e;var u=r-ln(i);if(u<1)return i;var c=s?Ti(s,0,u).join(""):e.slice(0,u);if(o===n)return c+i;if(s&&(u+=c.length-u),ls(o)){if(e.slice(u).search(o)){var l,p=c;for(o.global||(o=be(o.source,As(de.exec(o))+"g")),o.lastIndex=0;l=o.exec(p);)var f=l.index;c=c.slice(0,f===n?u:f)}}else if(e.indexOf(li(o),u)!=u){var d=c.lastIndexOf(o);d>-1&&(c=c.slice(0,d))}return c+i},jn.unescape=function(e){return(e=As(e))&&z.test(e)?e.replace(V,dn):e},jn.uniqueId=function(e){var t=++Me;return As(e)+t},jn.upperCase=eu,jn.upperFirst=tu,jn.each=Aa,jn.eachRight=Ra,jn.first=Jo,fu(jn,(Du={},Cr(jn,(function(e,t){Fe.call(jn.prototype,t)||(Du[t]=e)})),Du),{chain:!1}),jn.VERSION="4.17.21",It(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){jn[e].placeholder=jn})),It(["drop","take"],(function(e,t){Gn.prototype[e]=function(r){r=r===n?1:En(Es(r),0);var i=this.__filtered__&&!t?new Gn(this):this.clone();return i.__filtered__?i.__takeCount__=_n(r,i.__takeCount__):i.__views__.push({size:_n(r,h),type:e+(i.__dir__<0?"Right":"")}),i},Gn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),It(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Gn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:co(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),It(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Gn.prototype[e]=function(){return this[n](1).value()[0]}})),It(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Gn.prototype[e]=function(){return this.__filtered__?new Gn(this):this[n](1)}})),Gn.prototype.compact=function(){return this.filter(uu)},Gn.prototype.find=function(e){return this.filter(e).head()},Gn.prototype.findLast=function(e){return this.reverse().find(e)},Gn.prototype.invokeMap=Jr((function(e,t){return"function"==typeof e?new Gn(this):this.map((function(n){return Or(n,e,t)}))})),Gn.prototype.reject=function(e){return this.filter(qa(co(e)))},Gn.prototype.slice=function(e,t){e=Es(e);var r=this;return r.__filtered__&&(e>0||t<0)?new Gn(r):(e<0?r=r.takeRight(-e):e&&(r=r.drop(e)),t!==n&&(r=(t=Es(t))<0?r.dropRight(-t):r.take(t-e)),r)},Gn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Gn.prototype.toArray=function(){return this.take(h)},Cr(Gn.prototype,(function(e,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),o=jn[i?"take"+("last"==t?"Right":""):t],a=i||/^find/.test(t);o&&(jn.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,u=t instanceof Gn,c=s[0],l=u||Ya(t),p=function(e){var t=o.apply(jn,Nt([e],s));return i&&f?t[0]:t};l&&r&&"function"==typeof c&&1!=c.length&&(u=l=!1);var f=this.__chain__,d=!!this.__actions__.length,h=a&&!f,m=u&&!d;if(!a&&l){t=m?t:new Gn(this);var g=e.apply(t,s);return g.__actions__.push({func:ya,args:[p],thisArg:n}),new Kn(g,f)}return h&&m?e.apply(this,s):(g=this.thru(p),h?i?g.value()[0]:g.value():g)})})),It(["pop","push","shift","sort","splice","unshift"],(function(e){var t=Oe[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);jn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var i=this.value();return t.apply(Ya(i)?i:[],e)}return this[n]((function(n){return t.apply(Ya(n)?n:[],e)}))}})),Cr(Gn.prototype,(function(e,t){var n=jn[t];if(n){var r=n.name+"";Fe.call(Nn,r)||(Nn[r]=[]),Nn[r].push({name:t,func:n})}})),Nn[ji(n,2).name]=[{name:"wrapper",func:n}],Gn.prototype.clone=function(){var e=new Gn(this.__wrapped__);return e.__actions__=ki(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=ki(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=ki(this.__views__),e},Gn.prototype.reverse=function(){if(this.__filtered__){var e=new Gn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Gn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Ya(e),r=t<0,i=n?e.length:0,o=function(e,t,n){var r=-1,i=n.length;for(;++r<i;){var o=n[r],a=o.size;switch(o.type){case"drop":e+=a;break;case"dropRight":t-=a;break;case"take":t=_n(t,e+a);break;case"takeRight":e=En(e,t-a)}}return{start:e,end:t}}(0,i,this.__views__),a=o.start,s=o.end,u=s-a,c=r?s:a-1,l=this.__iteratees__,p=l.length,f=0,d=_n(u,this.__takeCount__);if(!n||!r&&i==u&&d==u)return mi(e,this.__actions__);var h=[];e:for(;u--&&f<d;){for(var m=-1,g=e[c+=t];++m<p;){var v=l[m],y=v.iteratee,E=v.type,_=y(g);if(2==E)g=_;else if(!_){if(1==E)continue e;break e}}h[f++]=g}return h},jn.prototype.at=Ea,jn.prototype.chain=function(){return va(this)},jn.prototype.commit=function(){return new Kn(this.value(),this.__chain__)},jn.prototype.next=function(){this.__values__===n&&(this.__values__=vs(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?n:this.__values__[this.__index__++]}},jn.prototype.plant=function(e){for(var t,r=this;r instanceof Wn;){var i=Ko(r);i.__index__=0,i.__values__=n,t?o.__wrapped__=i:t=i;var o=i;r=r.__wrapped__}return o.__wrapped__=e,t},jn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Gn){var t=e;return this.__actions__.length&&(t=new Gn(this)),(t=t.reverse()).__actions__.push({func:ya,args:[oa],thisArg:n}),new Kn(t,this.__chain__)}return this.thru(oa)},jn.prototype.toJSON=jn.prototype.valueOf=jn.prototype.value=function(){return mi(this.__wrapped__,this.__actions__)},jn.prototype.first=jn.prototype.head,at&&(jn.prototype[at]=function(){return this}),jn}();dt?((dt.exports=hn)._=hn,ft._=hn):pt._=hn}).call(rr)}(uh,uh.exports);var ch={},lh={},ph={},fh={};let dh;function hh(){if(void 0===dh)throw new Error("No runtime abstraction layer installed");return dh}Object.defineProperty(fh,"__esModule",{value:!0}),function(e){e.install=function(e){if(void 0===e)throw new Error("No runtime abstraction layer provided");dh=e}}(hh||(hh={})),fh.default=hh;var mh={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Disposable=void 0,(e.Disposable||(e.Disposable={})).create=function(e){return{dispose:e}}}(mh);var gh={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Emitter=e.Event=void 0;const t=fh;!function(e){const t={dispose(){}};e.None=function(){return t}}(e.Event||(e.Event={}));class n{add(e,t=null,n){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(t),Array.isArray(n)&&n.push({dispose:()=>this.remove(e,t)})}remove(e,t=null){if(!this._callbacks)return;let n=!1;for(let r=0,i=this._callbacks.length;r<i;r++)if(this._callbacks[r]===e){if(this._contexts[r]===t)return this._callbacks.splice(r,1),void this._contexts.splice(r,1);n=!0}if(n)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...e){if(!this._callbacks)return[];const n=[],r=this._callbacks.slice(0),i=this._contexts.slice(0);for(let o=0,a=r.length;o<a;o++)try{n.push(r[o].apply(i[o],e))}catch(PI){t.default().console.error(PI)}return n}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class r{constructor(e){this._options=e}get event(){return this._event||(this._event=(e,t,i)=>{this._callbacks||(this._callbacks=new n),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,t);const o={dispose:()=>{this._callbacks&&(this._callbacks.remove(e,t),o.dispose=r._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(i)&&i.push(o),o}),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}e.Emitter=r,r._noop=function(){}}(gh);var vh={};Object.defineProperty(vh,"__esModule",{value:!0}),vh.AbstractMessageBuffer=void 0;vh.AbstractMessageBuffer=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encoding(){return this._encoding}append(e){const t="string"==typeof e?this.fromString(e,this._encoding):e;this._chunks.push(t),this._totalLength+=t.byteLength}tryReadHeaders(){if(0===this._chunks.length)return;let e=0,t=0,n=0,r=0;e:for(;t<this._chunks.length;){const i=this._chunks[t];for(n=0;n<i.length;){switch(i[n]){case 13:switch(e){case 0:e=1;break;case 2:e=3;break;default:e=0}break;case 10:switch(e){case 1:e=2;break;case 3:e=4,n++;break e;default:e=0}break;default:e=0}n++}r+=i.byteLength,t++}if(4!==e)return;const i=this._read(r+n),o=new Map,a=this.toString(i,"ascii").split("\r\n");if(a.length<2)return o;for(let s=0;s<a.length-2;s++){const e=a[s],t=e.indexOf(":");if(-1===t)throw new Error("Message header must separate key and value using :");const n=e.substr(0,t),r=e.substr(t+1).trim();o.set(n,r)}return o}tryReadBody(e){if(!(this._totalLength<e))return this._read(e)}get numberOfBytes(){return this._totalLength}_read(e){if(0===e)return this.emptyBuffer();if(e>this._totalLength)throw new Error("Cannot read so many bytes!");if(this._chunks[0].byteLength===e){const t=this._chunks[0];return this._chunks.shift(),this._totalLength-=e,this.asNative(t)}if(this._chunks[0].byteLength>e){const t=this._chunks[0],n=this.asNative(t,e);return this._chunks[0]=t.slice(e),this._totalLength-=e,n}const t=this.allocNative(e);let n=0;for(;e>0;){const r=this._chunks[0];if(r.byteLength>e){const i=r.slice(0,e);t.set(i,n),n+=e,this._chunks[0]=r.slice(e),this._totalLength-=e,e-=e}else t.set(r,n),n+=r.byteLength,this._chunks.shift(),this._totalLength-=r.byteLength,e-=r.byteLength}return t}},Object.defineProperty(ph,"__esModule",{value:!0});const yh=fh,Eh=mh,_h=gh,Ch=vh;class Th extends Ch.AbstractMessageBuffer{constructor(e="utf-8"){super(e),this.asciiDecoder=new TextDecoder("ascii")}emptyBuffer(){return Th.emptyBuffer}fromString(e,t){return(new TextEncoder).encode(e)}toString(e,t){return"ascii"===t?this.asciiDecoder.decode(e):new TextDecoder(t).decode(e)}asNative(e,t){return void 0===t?e:e.slice(0,t)}allocNative(e){return new Uint8Array(e)}}Th.emptyBuffer=new Uint8Array(0);class Ah{constructor(e){this.socket=e,this._onData=new _h.Emitter,this._messageListener=e=>{e.data.arrayBuffer().then((e=>{this._onData.fire(new Uint8Array(e))}))},this.socket.addEventListener("message",this._messageListener)}onClose(e){return this.socket.addEventListener("close",e),Eh.Disposable.create((()=>this.socket.removeEventListener("close",e)))}onError(e){return this.socket.addEventListener("error",e),Eh.Disposable.create((()=>this.socket.removeEventListener("error",e)))}onEnd(e){return this.socket.addEventListener("end",e),Eh.Disposable.create((()=>this.socket.removeEventListener("end",e)))}onData(e){return this._onData.event(e)}}class Rh{constructor(e){this.socket=e}onClose(e){return this.socket.addEventListener("close",e),Eh.Disposable.create((()=>this.socket.removeEventListener("close",e)))}onError(e){return this.socket.addEventListener("error",e),Eh.Disposable.create((()=>this.socket.removeEventListener("error",e)))}onEnd(e){return this.socket.addEventListener("end",e),Eh.Disposable.create((()=>this.socket.removeEventListener("end",e)))}write(e,t){if("string"==typeof e){if(void 0!==t&&"utf-8"!==t)throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${t}`);this.socket.send(e)}else this.socket.send(e);return Promise.resolve()}end(){this.socket.close()}}const Ih=new TextEncoder,Dh=Object.freeze({messageBuffer:Object.freeze({create:e=>new Th(e)}),applicationJson:Object.freeze({encoder:Object.freeze({name:"application/json",encode:(e,t)=>{if("utf-8"!==t.charset)throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${t.charset}`);return Promise.resolve(Ih.encode(JSON.stringify(e,void 0,0)))}}),decoder:Object.freeze({name:"application/json",decode:(e,t)=>{if(!(e instanceof Uint8Array))throw new Error("In a Browser environments only Uint8Arrays are supported.");return Promise.resolve(JSON.parse(new TextDecoder(t.charset).decode(e)))}})}),stream:Object.freeze({asReadableStream:e=>new Ah(e),asWritableStream:e=>new Rh(e)}),console:console,timer:Object.freeze({setTimeout:(e,t,...n)=>setTimeout(e,t,...n),clearTimeout(e){clearTimeout(e)},setImmediate:(e,...t)=>setTimeout(e,0,...t),clearImmediate(e){clearTimeout(e)}})});function xh(){return Dh}!function(e){e.install=function(){yh.default.install(Dh)}}(xh||(xh={})),ph.default=xh;var bh={},Sh={},kh={};function Oh(e){return"string"==typeof e||e instanceof String}function Nh(e){return Array.isArray(e)}Object.defineProperty(kh,"__esModule",{value:!0}),kh.stringArray=kh.array=kh.func=kh.error=kh.number=kh.string=kh.boolean=void 0,kh.boolean=function(e){return!0===e||!1===e},kh.string=Oh,kh.number=function(e){return"number"==typeof e||e instanceof Number},kh.error=function(e){return e instanceof Error},kh.func=function(e){return"function"==typeof e},kh.array=Nh,kh.stringArray=function(e){return Nh(e)&&e.every((e=>Oh(e)))},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isResponseMessage=e.isNotificationMessage=e.isRequestMessage=e.NotificationType9=e.NotificationType8=e.NotificationType7=e.NotificationType6=e.NotificationType5=e.NotificationType4=e.NotificationType3=e.NotificationType2=e.NotificationType1=e.NotificationType0=e.NotificationType=e.RequestType9=e.RequestType8=e.RequestType7=e.RequestType6=e.RequestType5=e.RequestType4=e.RequestType3=e.RequestType2=e.RequestType1=e.RequestType=e.RequestType0=e.AbstractMessageSignature=e.ParameterStructures=e.ResponseError=e.ErrorCodes=void 0;const t=kh;var n,r;(r=n=e.ErrorCodes||(e.ErrorCodes={})).ParseError=-32700,r.InvalidRequest=-32600,r.MethodNotFound=-32601,r.InvalidParams=-32602,r.InternalError=-32603,r.jsonrpcReservedErrorRangeStart=-32099,r.serverErrorStart=r.jsonrpcReservedErrorRangeStart,r.MessageWriteError=-32099,r.MessageReadError=-32098,r.ServerNotInitialized=-32002,r.UnknownErrorCode=-32001,r.jsonrpcReservedErrorRangeEnd=-32e3,r.serverErrorEnd=r.jsonrpcReservedErrorRangeEnd;class i extends Error{constructor(e,r,o){super(r),this.code=t.number(e)?e:n.UnknownErrorCode,this.data=o,Object.setPrototypeOf(this,i.prototype)}toJson(){return{code:this.code,message:this.message,data:this.data}}}e.ResponseError=i;class o{constructor(e){this.kind=e}static is(e){return e===o.auto||e===o.byName||e===o.byPosition}toString(){return this.kind}}e.ParameterStructures=o,o.auto=new o("auto"),o.byPosition=new o("byPosition"),o.byName=new o("byName");class a{constructor(e,t){this.method=e,this.numberOfParams=t}get parameterStructures(){return o.auto}}e.AbstractMessageSignature=a;e.RequestType0=class extends a{constructor(e){super(e,0)}};e.RequestType=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.RequestType1=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.RequestType2=class extends a{constructor(e){super(e,2)}};e.RequestType3=class extends a{constructor(e){super(e,3)}};e.RequestType4=class extends a{constructor(e){super(e,4)}};e.RequestType5=class extends a{constructor(e){super(e,5)}};e.RequestType6=class extends a{constructor(e){super(e,6)}};e.RequestType7=class extends a{constructor(e){super(e,7)}};e.RequestType8=class extends a{constructor(e){super(e,8)}};e.RequestType9=class extends a{constructor(e){super(e,9)}};e.NotificationType=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.NotificationType0=class extends a{constructor(e){super(e,0)}};e.NotificationType1=class extends a{constructor(e,t=o.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};e.NotificationType2=class extends a{constructor(e){super(e,2)}};e.NotificationType3=class extends a{constructor(e){super(e,3)}};e.NotificationType4=class extends a{constructor(e){super(e,4)}};e.NotificationType5=class extends a{constructor(e){super(e,5)}};e.NotificationType6=class extends a{constructor(e){super(e,6)}};e.NotificationType7=class extends a{constructor(e){super(e,7)}};e.NotificationType8=class extends a{constructor(e){super(e,8)}};e.NotificationType9=class extends a{constructor(e){super(e,9)}},e.isRequestMessage=function(e){const n=e;return n&&t.string(n.method)&&(t.string(n.id)||t.number(n.id))},e.isNotificationMessage=function(e){const n=e;return n&&t.string(n.method)&&void 0===e.id},e.isResponseMessage=function(e){const n=e;return n&&(void 0!==n.result||!!n.error)&&(t.string(n.id)||t.number(n.id)||null===n.id)}}(Sh);var Ph={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CancellationTokenSource=e.CancellationToken=void 0;const t=fh,n=kh,r=gh;var i,o;(o=i=e.CancellationToken||(e.CancellationToken={})).None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:r.Event.None}),o.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:r.Event.None}),o.is=function(e){const t=e;return t&&(t===o.None||t===o.Cancelled||n.boolean(t.isCancellationRequested)&&!!t.onCancellationRequested)};const a=Object.freeze((function(e,n){const r=t.default().timer.setTimeout(e.bind(n),0);return{dispose(){t.default().timer.clearTimeout(r)}}}));class s{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?a:(this._emitter||(this._emitter=new r.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}e.CancellationTokenSource=class{get token(){return this._token||(this._token=new s),this._token}cancel(){this._token?this._token.cancel():this._token=i.Cancelled}dispose(){this._token?this._token instanceof s&&this._token.dispose():this._token=i.None}}}(Ph);var wh={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ReadableStreamMessageReader=e.AbstractMessageReader=e.MessageReader=void 0;const t=fh,n=kh,r=gh;var i;(e.MessageReader||(e.MessageReader={})).is=function(e){let t=e;return t&&n.func(t.listen)&&n.func(t.dispose)&&n.func(t.onError)&&n.func(t.onClose)&&n.func(t.onPartialMessage)};class o{constructor(){this.errorEmitter=new r.Emitter,this.closeEmitter=new r.Emitter,this.partialMessageEmitter=new r.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}e.AbstractMessageReader=o,(i||(i={})).fromOptions=function(e){var n;let r,i;const o=new Map;let a;const s=new Map;if(void 0===e||"string"==typeof e)r=null!=e?e:"utf-8";else{if(r=null!==(n=e.charset)&&void 0!==n?n:"utf-8",void 0!==e.contentDecoder&&(i=e.contentDecoder,o.set(i.name,i)),void 0!==e.contentDecoders)for(const t of e.contentDecoders)o.set(t.name,t);if(void 0!==e.contentTypeDecoder&&(a=e.contentTypeDecoder,s.set(a.name,a)),void 0!==e.contentTypeDecoders)for(const t of e.contentTypeDecoders)s.set(t.name,t)}return void 0===a&&(a=t.default().applicationJson.decoder,s.set(a.name,a)),{charset:r,contentDecoder:i,contentDecoders:o,contentTypeDecoder:a,contentTypeDecoders:s}};e.ReadableStreamMessageReader=class extends o{constructor(e,n){super(),this.readable=e,this.options=i.fromOptions(n),this.buffer=t.default().messageBuffer.create(this.options.charset),this._partialMessageTimeout=1e4,this.nextMessageLength=-1,this.messageToken=0}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e;const t=this.readable.onData((e=>{this.onData(e)}));return this.readable.onError((e=>this.fireError(e))),this.readable.onClose((()=>this.fireClose())),t}onData(e){for(this.buffer.append(e);;){if(-1===this.nextMessageLength){const e=this.buffer.tryReadHeaders();if(!e)return;const t=e.get("Content-Length");if(!t)throw new Error("Header must provide a Content-Length property.");const n=parseInt(t);if(isNaN(n))throw new Error("Content-Length value must be a number.");this.nextMessageLength=n}const e=this.buffer.tryReadBody(this.nextMessageLength);if(void 0===e)return void this.setPartialMessageTimer();let t;this.clearPartialMessageTimer(),this.nextMessageLength=-1,t=void 0!==this.options.contentDecoder?this.options.contentDecoder.decode(e):Promise.resolve(e),t.then((e=>{this.options.contentTypeDecoder.decode(e,this.options).then((e=>{this.callback(e)}),(e=>{this.fireError(e)}))}),(e=>{this.fireError(e)}))}}clearPartialMessageTimer(){this.partialMessageTimer&&(t.default().timer.clearTimeout(this.partialMessageTimer),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),this._partialMessageTimeout<=0||(this.partialMessageTimer=t.default().timer.setTimeout(((e,t)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:t}),this.setPartialMessageTimer())}),this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}}(wh);var Lh={},Fh={};Object.defineProperty(Fh,"__esModule",{value:!0}),Fh.Semaphore=void 0;const Mh=fh;Fh.Semaphore=class{constructor(e=1){if(e<=0)throw new Error("Capacity must be greater than 0");this._capacity=e,this._active=0,this._waiting=[]}lock(e){return new Promise(((t,n)=>{this._waiting.push({thunk:e,resolve:t,reject:n}),this.runNext()}))}get active(){return this._active}runNext(){0!==this._waiting.length&&this._active!==this._capacity&&Mh.default().timer.setImmediate((()=>this.doRunNext()))}doRunNext(){if(0===this._waiting.length||this._active===this._capacity)return;const e=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{const t=e.thunk();t instanceof Promise?t.then((t=>{this._active--,e.resolve(t),this.runNext()}),(t=>{this._active--,e.reject(t),this.runNext()})):(this._active--,e.resolve(t),this.runNext())}catch(t){this._active--,e.reject(t),this.runNext()}}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WriteableStreamMessageWriter=e.AbstractMessageWriter=e.MessageWriter=void 0;const t=fh,n=kh,r=Fh,i=gh;var o;(e.MessageWriter||(e.MessageWriter={})).is=function(e){let t=e;return t&&n.func(t.dispose)&&n.func(t.onClose)&&n.func(t.onError)&&n.func(t.write)};class a{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,t,n){this.errorEmitter.fire([this.asError(e),t,n])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}e.AbstractMessageWriter=a,(o||(o={})).fromOptions=function(e){var n,r;return void 0===e||"string"==typeof e?{charset:null!=e?e:"utf-8",contentTypeEncoder:t.default().applicationJson.encoder}:{charset:null!==(n=e.charset)&&void 0!==n?n:"utf-8",contentEncoder:e.contentEncoder,contentTypeEncoder:null!==(r=e.contentTypeEncoder)&&void 0!==r?r:t.default().applicationJson.encoder}};e.WriteableStreamMessageWriter=class extends a{constructor(e,t){super(),this.writable=e,this.options=o.fromOptions(t),this.errorCount=0,this.writeSemaphore=new r.Semaphore(1),this.writable.onError((e=>this.fireError(e))),this.writable.onClose((()=>this.fireClose()))}async write(e){return this.writeSemaphore.lock((async()=>this.options.contentTypeEncoder.encode(e,this.options).then((e=>void 0!==this.options.contentEncoder?this.options.contentEncoder.encode(e):e)).then((t=>{const n=[];return n.push("Content-Length: ",t.byteLength.toString(),"\r\n"),n.push("\r\n"),this.doWrite(e,n,t)}),(e=>{throw this.fireError(e),e}))))}async doWrite(e,t,n){try{return await this.writable.write(t.join(""),"ascii"),this.writable.write(n)}catch(r){return this.handleError(r,e),Promise.reject(r)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){this.writable.end()}}}(Lh);var $h={},Bh={};!function(e){var t,n;Object.defineProperty(e,"__esModule",{value:!0}),e.LRUCache=e.LinkedMap=e.Touch=void 0,(n=t=e.Touch||(e.Touch={})).None=0,n.First=1,n.AsOld=n.First,n.Last=2,n.AsNew=n.Last;class r{constructor(){this[Symbol.toStringTag]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){var e;return null===(e=this._head)||void 0===e?void 0:e.value}get last(){var e;return null===(e=this._tail)||void 0===e?void 0:e.value}has(e){return this._map.has(e)}get(e,n=t.None){const r=this._map.get(e);if(r)return n!==t.None&&this.touch(r,n),r.value}set(e,n,r=t.None){let i=this._map.get(e);if(i)i.value=n,r!==t.None&&this.touch(i,r);else{switch(i={key:e,value:n,next:void 0,previous:void 0},r){case t.None:this.addItemLast(i);break;case t.First:this.addItemFirst(i);break;case t.Last:default:this.addItemLast(i)}this._map.set(e,i),this._size++}return this}delete(e){return!!this.remove(e)}remove(e){const t=this._map.get(e);if(t)return this._map.delete(e),this.removeItem(t),this._size--,t.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){const n=this._state;let r=this._head;for(;r;){if(t?e.bind(t)(r.value,r.key,this):e(r.value,r.key,this),this._state!==n)throw new Error("LinkedMap got modified during iteration.");r=r.next}}keys(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.key,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}values(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.value,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}entries(){const e=this,t=this._state;let n=this._head;const r={[Symbol.iterator]:()=>r,next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:[n.key,n.value],done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return r}[Symbol.iterator](){return this.entries()}trimOld(e){if(e>=this.size)return;if(0===e)return void this.clear();let t=this._head,n=this.size;for(;t&&n>e;)this._map.delete(t.key),t=t.next,n--;this._head=t,this._size=n,t&&(t.previous=void 0),this._state++}addItemFirst(e){if(this._head||this._tail){if(!this._head)throw new Error("Invalid list");e.next=this._head,this._head.previous=e}else this._tail=e;this._head=e,this._state++}addItemLast(e){if(this._head||this._tail){if(!this._tail)throw new Error("Invalid list");e.previous=this._tail,this._tail.next=e}else this._head=e;this._tail=e,this._state++}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head){if(!e.next)throw new Error("Invalid list");e.next.previous=void 0,this._head=e.next}else if(e===this._tail){if(!e.previous)throw new Error("Invalid list");e.previous.next=void 0,this._tail=e.previous}else{const t=e.next,n=e.previous;if(!t||!n)throw new Error("Invalid list");t.previous=n,n.next=t}e.next=void 0,e.previous=void 0,this._state++}touch(e,n){if(!this._head||!this._tail)throw new Error("Invalid list");if(n===t.First||n===t.Last)if(n===t.First){if(e===this._head)return;const t=e.next,n=e.previous;e===this._tail?(n.next=void 0,this._tail=n):(t.previous=n,n.next=t),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e,this._state++}else if(n===t.Last){if(e===this._tail)return;const t=e.next,n=e.previous;e===this._head?(t.previous=void 0,this._head=t):(t.previous=n,n.next=t),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e,this._state++}}toJSON(){const e=[];return this.forEach(((t,n)=>{e.push([n,t])})),e}fromJSON(e){this.clear();for(const[t,n]of e)this.set(t,n)}}e.LinkedMap=r;e.LRUCache=class extends r{constructor(e,t=1){super(),this._limit=e,this._ratio=Math.min(Math.max(0,t),1)}get limit(){return this._limit}set limit(e){this._limit=e,this.checkTrim()}get ratio(){return this._ratio}set ratio(e){this._ratio=Math.min(Math.max(0,e),1),this.checkTrim()}get(e,n=t.AsNew){return super.get(e,n)}peek(e){return super.get(e,t.None)}set(e,n){return super.set(e,n,t.Last),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}}}(Bh),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.createMessageConnection=e.ConnectionOptions=e.CancellationStrategy=e.CancellationSenderStrategy=e.CancellationReceiverStrategy=e.ConnectionStrategy=e.ConnectionError=e.ConnectionErrors=e.LogTraceNotification=e.SetTraceNotification=e.TraceFormat=e.Trace=e.NullLogger=e.ProgressType=void 0;const t=fh,n=kh,r=Sh,i=Bh,o=gh,a=Ph;var s,u,c,l,p,f,d,h,m,g,v,y,E,_,C,T,A,R,I,D;(s||(s={})).type=new r.NotificationType("$/cancelRequest"),(u||(u={})).type=new r.NotificationType("$/progress");e.ProgressType=class{constructor(){}},(c||(c={})).is=function(e){return n.func(e)},e.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),(p=l=e.Trace||(e.Trace={}))[p.Off=0]="Off",p[p.Messages=1]="Messages",p[p.Verbose=2]="Verbose",function(e){e.fromString=function(t){if(!n.string(t))return e.Off;switch(t=t.toLowerCase()){case"off":return e.Off;case"messages":return e.Messages;case"verbose":return e.Verbose;default:return e.Off}},e.toString=function(t){switch(t){case e.Off:return"off";case e.Messages:return"messages";case e.Verbose:return"verbose";default:return"off"}}}(l=e.Trace||(e.Trace={})),(d=e.TraceFormat||(e.TraceFormat={})).Text="text",d.JSON="json",function(e){e.fromString=function(t){return"json"===(t=t.toLowerCase())?e.JSON:e.Text}}(f=e.TraceFormat||(e.TraceFormat={})),(h=e.SetTraceNotification||(e.SetTraceNotification={})).type=new r.NotificationType("$/setTrace"),(m=e.LogTraceNotification||(e.LogTraceNotification={})).type=new r.NotificationType("$/logTrace"),(v=g=e.ConnectionErrors||(e.ConnectionErrors={}))[v.Closed=1]="Closed",v[v.Disposed=2]="Disposed",v[v.AlreadyListening=3]="AlreadyListening";class x extends Error{constructor(e,t){super(t),this.code=e,Object.setPrototypeOf(this,x.prototype)}}e.ConnectionError=x,(y=e.ConnectionStrategy||(e.ConnectionStrategy={})).is=function(e){const t=e;return t&&n.func(t.cancelUndispatched)},(_=E=e.CancellationReceiverStrategy||(e.CancellationReceiverStrategy={})).Message=Object.freeze({createCancellationTokenSource:e=>new a.CancellationTokenSource}),_.is=function(e){const t=e;return t&&n.func(t.createCancellationTokenSource)},(T=C=e.CancellationSenderStrategy||(e.CancellationSenderStrategy={})).Message=Object.freeze({sendCancellation(e,t){e.sendNotification(s.type,{id:t})},cleanup(e){}}),T.is=function(e){const t=e;return t&&n.func(t.sendCancellation)&&n.func(t.cleanup)},(R=A=e.CancellationStrategy||(e.CancellationStrategy={})).Message=Object.freeze({receiver:E.Message,sender:C.Message}),R.is=function(e){const t=e;return t&&E.is(t.receiver)&&C.is(t.sender)},(e.ConnectionOptions||(e.ConnectionOptions={})).is=function(e){const t=e;return t&&(A.is(t.cancellationStrategy)||y.is(t.connectionStrategy))},(D=I||(I={}))[D.New=1]="New",D[D.Listening=2]="Listening",D[D.Closed=3]="Closed",D[D.Disposed=4]="Disposed",e.createMessageConnection=function(p,d,v,y){const E=void 0!==v?v:e.NullLogger;let _=0,C=0,T=0;const R="2.0";let D;const b=Object.create(null);let S;const k=Object.create(null),O=new Map;let N,P,w=new i.LinkedMap,L=Object.create(null),F=Object.create(null),M=l.Off,$=f.Text,B=I.New;const q=new o.Emitter,j=new o.Emitter,U=new o.Emitter,W=new o.Emitter,K=new o.Emitter,G=y&&y.cancellationStrategy?y.cancellationStrategy:A.Message;function V(e){if(null===e)throw new Error("Can't send requests with id null since the response can't be correlated.");return"req-"+e.toString()}function H(e,t){var n;r.isRequestMessage(t)?e.set(V(t.id),t):r.isResponseMessage(t)?e.set(null===(n=t.id)?"res-unknown-"+(++T).toString():"res-"+n.toString(),t):e.set("not-"+(++C).toString(),t)}function z(e){}function Y(){return B===I.Listening}function X(){return B===I.Closed}function J(){return B===I.Disposed}function Q(){B!==I.New&&B!==I.Listening||(B=I.Closed,j.fire(void 0))}function Z(){N||0===w.size||(N=t.default().timer.setImmediate((()=>{N=void 0,function(){if(0===w.size)return;const e=w.shift();try{r.isRequestMessage(e)?function(e){if(J())return;function t(t,n,i){const o={jsonrpc:R,id:e.id};t instanceof r.ResponseError?o.error=t.toJson():o.result=void 0===t?null:t,te(o,n,i),d.write(o)}function i(t,n,r){const i={jsonrpc:R,id:e.id,error:t.toJson()};te(i,n,r),d.write(i)}function o(t,n,r){void 0===t&&(t=null);const i={jsonrpc:R,id:e.id,result:t};te(i,n,r),d.write(i)}!function(e){if(M===l.Off||!P)return;if($===f.Text){let t;M===l.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),P.log(`Received request '${e.method} - (${e.id})'.`,t)}else ne("receive-request",e)}(e);const a=b[e.method];let s,u;a&&(s=a.type,u=a.handler);const c=Date.now();if(u||D){const a=String(e.id),l=G.receiver.createCancellationTokenSource(a);F[a]=l;try{let p;if(u)if(void 0===e.params){if(void 0!==s&&0!==s.numberOfParams)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines ${s.numberOfParams} params but recevied none.`),e.method,c);p=u(l.token)}else if(Array.isArray(e.params)){if(void 0!==s&&s.parameterStructures===r.ParameterStructures.byName)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by name but received parameters by position`),e.method,c);p=u(...e.params,l.token)}else{if(void 0!==s&&s.parameterStructures===r.ParameterStructures.byPosition)return void i(new r.ResponseError(r.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by position but received parameters by name`),e.method,c);p=u(e.params,l.token)}else D&&(p=D(e.method,e.params,l.token));const f=p;p?f.then?f.then((n=>{delete F[a],t(n,e.method,c)}),(t=>{delete F[a],t instanceof r.ResponseError?i(t,e.method,c):t&&n.string(t.message)?i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,c):i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)})):(delete F[a],t(p,e.method,c)):(delete F[a],o(p,e.method,c))}catch(p){delete F[a],p instanceof r.ResponseError?t(p,e.method,c):p&&n.string(p.message)?i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${p.message}`),e.method,c):i(new r.ResponseError(r.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)}}else i(new r.ResponseError(r.ErrorCodes.MethodNotFound,`Unhandled method ${e.method}`),e.method,c)}(e):r.isNotificationMessage(e)?function(e){if(J())return;let t,n;if(e.method===s.type.method)n=e=>{const t=e.id,n=F[String(t)];n&&n.cancel()};else{const r=k[e.method];r&&(n=r.handler,t=r.type)}if(n||S)try{!function(e){if(M===l.Off||!P||e.method===m.type.method)return;if($===f.Text){let t;M===l.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),P.log(`Received notification '${e.method}'.`,t)}else ne("receive-notification",e)}(e),n?void 0===e.params?(void 0!==t&&0!==t.numberOfParams&&t.parameterStructures!==r.ParameterStructures.byName&&E.error(`Notification ${e.method} defines ${t.numberOfParams} params but recevied none.`),n()):Array.isArray(e.params)?(void 0!==t&&(t.parameterStructures===r.ParameterStructures.byName&&E.error(`Notification ${e.method} defines parameters by name but received parameters by position`),t.numberOfParams!==e.params.length&&E.error(`Notification ${e.method} defines ${t.numberOfParams} params but received ${e.params.length} argumennts`)),n(...e.params)):(void 0!==t&&t.parameterStructures===r.ParameterStructures.byPosition&&E.error(`Notification ${e.method} defines parameters by position but received parameters by name`),n(e.params)):S&&S(e.method,e.params)}catch(i){i.message?E.error(`Notification handler '${e.method}' failed with message: ${i.message}`):E.error(`Notification handler '${e.method}' failed unexpectedly.`)}else U.fire(e)}(e):r.isResponseMessage(e)?function(e){if(J())return;if(null===e.id)e.error?E.error(`Received response message without id: Error is: \n${JSON.stringify(e.error,void 0,4)}`):E.error("Received response message without id. No further error information provided.");else{const n=String(e.id),i=L[n];if(function(e,t){if(M===l.Off||!P)return;if($===f.Text){let n;if(M===l.Verbose&&(e.error&&e.error.data?n=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?n=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(n="No result returned.\n\n")),t){const r=e.error?` Request failed: ${e.error.message} (${e.error.code}).`:"";P.log(`Received response '${t.method} - (${e.id})' in ${Date.now()-t.timerStart}ms.${r}`,n)}else P.log(`Received response ${e.id} without active response promise.`,n)}else ne("receive-response",e)}(e,i),i){delete L[n];try{if(e.error){const t=e.error;i.reject(new r.ResponseError(t.code,t.message,t.data))}else{if(void 0===e.result)throw new Error("Should never happen.");i.resolve(e.result)}}catch(t){t.message?E.error(`Response handler '${i.method}' failed with message: ${t.message}`):E.error(`Response handler '${i.method}' failed unexpectedly.`)}}}}(e):function(e){if(!e)return void E.error("Received empty message.");E.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e,null,4)}`);const t=e;if(n.string(t.id)||n.number(t.id)){const e=String(t.id),n=L[e];n&&n.reject(new Error("The received response has neither a result nor an error property."))}}(e)}finally{Z()}}()})))}p.onClose(Q),p.onError((function(e){q.fire([e,void 0,void 0])})),d.onClose(Q),d.onError((function(e){q.fire(e)}));const ee=e=>{try{if(r.isNotificationMessage(e)&&e.method===s.type.method){const t=V(e.params.id),n=w.get(t);if(r.isRequestMessage(n)){const r=null==y?void 0:y.connectionStrategy,i=r&&r.cancelUndispatched?r.cancelUndispatched(n,z):void 0;if(i&&(void 0!==i.error||void 0!==i.result))return w.delete(t),i.id=n.id,te(i,e.method,Date.now()),void d.write(i)}}H(w,e)}finally{Z()}};function te(e,t,n){if(M!==l.Off&&P)if($===f.Text){let r;M===l.Verbose&&(e.error&&e.error.data?r=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?r=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(r="No result returned.\n\n")),P.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now()-n}ms`,r)}else ne("send-response",e)}function ne(e,t){if(!P||M===l.Off)return;const n={isLSPMessage:!0,type:e,message:t,timestamp:Date.now()};P.log(n)}function re(){if(X())throw new x(g.Closed,"Connection is closed.");if(J())throw new x(g.Disposed,"Connection is disposed.")}function ie(e){return void 0===e?null:e}function oe(e){return null===e?void 0:e}function ae(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}function se(e,t){switch(e){case r.ParameterStructures.auto:return ae(t)?oe(t):[ie(t)];case r.ParameterStructures.byName:if(!ae(t))throw new Error("Recevied parameters by name but param is not an object literal.");return oe(t);case r.ParameterStructures.byPosition:return[ie(t)];default:throw new Error(`Unknown parameter structure ${e.toString()}`)}}function ue(e,t){let n;const r=e.numberOfParams;switch(r){case 0:n=void 0;break;case 1:n=se(e.parameterStructures,t[0]);break;default:n=[];for(let e=0;e<t.length&&e<r;e++)n.push(ie(t[e]));if(t.length<r)for(let e=t.length;e<r;e++)n.push(null)}return n}const ce={sendNotification:(e,...t)=>{let i,o;if(re(),n.string(e)){i=e;const n=t[0];let a=0,s=r.ParameterStructures.auto;r.ParameterStructures.is(n)&&(a=1,s=n);let u=t.length;const c=u-a;switch(c){case 0:o=void 0;break;case 1:o=se(s,t[a]);break;default:if(s===r.ParameterStructures.byName)throw new Error(`Recevied ${c} parameters for 'by Name' notification parameter structure.`);o=t.slice(a,u).map((e=>ie(e)))}}else{const n=t;i=e.method,o=ue(e,n)}const a={jsonrpc:R,method:i,params:o};!function(e){if(M!==l.Off&&P)if($===f.Text){let t;M===l.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),P.log(`Sending notification '${e.method}'.`,t)}else ne("send-notification",e)}(a),d.write(a)},onNotification:(e,t)=>{let r;return re(),n.func(e)?S=e:t&&(n.string(e)?(r=e,k[e]={type:void 0,handler:t}):(r=e.method,k[e.method]={type:e,handler:t})),{dispose:()=>{void 0!==r?delete k[r]:S=void 0}}},onProgress:(e,t,n)=>{if(O.has(t))throw new Error(`Progress handler for token ${t} already registered`);return O.set(t,n),{dispose:()=>{O.delete(t)}}},sendProgress:(e,t,n)=>{ce.sendNotification(u.type,{token:t,value:n})},onUnhandledProgress:W.event,sendRequest:(e,...t)=>{let i,o,s;if(re(),function(){if(!Y())throw new Error("Call listen() first.")}(),n.string(e)){i=e;const n=t[0],u=t[t.length-1];let c=0,l=r.ParameterStructures.auto;r.ParameterStructures.is(n)&&(c=1,l=n);let p=t.length;a.CancellationToken.is(u)&&(p-=1,s=u);const f=p-c;switch(f){case 0:o=void 0;break;case 1:o=se(l,t[c]);break;default:if(l===r.ParameterStructures.byName)throw new Error(`Recevied ${f} parameters for 'by Name' request parameter structure.`);o=t.slice(c,p).map((e=>ie(e)))}}else{const n=t;i=e.method,o=ue(e,n);const r=e.numberOfParams;s=a.CancellationToken.is(n[r])?n[r]:void 0}const u=_++;let c;s&&(c=s.onCancellationRequested((()=>{G.sender.sendCancellation(ce,u)})));return new Promise(((e,t)=>{const n={jsonrpc:R,id:u,method:i,params:o};let a={method:i,timerStart:Date.now(),resolve:t=>{e(t),G.sender.cleanup(u),null==c||c.dispose()},reject:e=>{t(e),G.sender.cleanup(u),null==c||c.dispose()}};!function(e){if(M!==l.Off&&P)if($===f.Text){let t;M===l.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),P.log(`Sending request '${e.method} - (${e.id})'.`,t)}else ne("send-request",e)}(n);try{d.write(n)}catch(PI){a.reject(new r.ResponseError(r.ErrorCodes.MessageWriteError,PI.message?PI.message:"Unknown reason")),a=null}a&&(L[String(u)]=a)}))},onRequest:(e,t)=>{re();let r=null;return c.is(e)?(r=void 0,D=e):n.string(e)?(r=null,void 0!==t&&(r=e,b[e]={handler:t,type:void 0})):void 0!==t&&(r=e.method,b[e.method]={type:e,handler:t}),{dispose:()=>{null!==r&&(void 0!==r?delete b[r]:D=void 0)}}},trace:(e,t,r)=>{let i=!1,o=f.Text;void 0!==r&&(n.boolean(r)?i=r:(i=r.sendNotification||!1,o=r.traceFormat||f.Text)),M=e,$=o,P=M===l.Off?void 0:t,!i||X()||J()||ce.sendNotification(h.type,{value:l.toString(e)})},onError:q.event,onClose:j.event,onUnhandledNotification:U.event,onDispose:K.event,end:()=>{d.end()},dispose:()=>{if(J())return;B=I.Disposed,K.fire(void 0);const e=new Error("Connection got disposed.");Object.keys(L).forEach((t=>{L[t].reject(e)})),L=Object.create(null),F=Object.create(null),w=new i.LinkedMap,n.func(d.dispose)&&d.dispose(),n.func(p.dispose)&&p.dispose()},listen:()=>{re(),function(){if(Y())throw new x(g.AlreadyListening,"Connection is already listening")}(),B=I.Listening,p.listen(ee)},inspect:()=>{t.default().console.log("inspect")}};return ce.onNotification(m.type,(e=>{M!==l.Off&&P&&P.log(e.message,M===l.Verbose?e.verbose:void 0)})),ce.onNotification(u.type,(e=>{const t=O.get(e.token);t?t(e.value):W.fire(e)})),ce}}($h),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CancellationSenderStrategy=e.CancellationReceiverStrategy=e.ConnectionError=e.ConnectionErrors=e.LogTraceNotification=e.SetTraceNotification=e.TraceFormat=e.Trace=e.ProgressType=e.createMessageConnection=e.NullLogger=e.ConnectionOptions=e.ConnectionStrategy=e.WriteableStreamMessageWriter=e.AbstractMessageWriter=e.MessageWriter=e.ReadableStreamMessageReader=e.AbstractMessageReader=e.MessageReader=e.CancellationToken=e.CancellationTokenSource=e.Emitter=e.Event=e.Disposable=e.ParameterStructures=e.NotificationType9=e.NotificationType8=e.NotificationType7=e.NotificationType6=e.NotificationType5=e.NotificationType4=e.NotificationType3=e.NotificationType2=e.NotificationType1=e.NotificationType0=e.NotificationType=e.ErrorCodes=e.ResponseError=e.RequestType9=e.RequestType8=e.RequestType7=e.RequestType6=e.RequestType5=e.RequestType4=e.RequestType3=e.RequestType2=e.RequestType1=e.RequestType0=e.RequestType=e.RAL=void 0,e.CancellationStrategy=void 0;const t=Sh;Object.defineProperty(e,"RequestType",{enumerable:!0,get:function(){return t.RequestType}}),Object.defineProperty(e,"RequestType0",{enumerable:!0,get:function(){return t.RequestType0}}),Object.defineProperty(e,"RequestType1",{enumerable:!0,get:function(){return t.RequestType1}}),Object.defineProperty(e,"RequestType2",{enumerable:!0,get:function(){return t.RequestType2}}),Object.defineProperty(e,"RequestType3",{enumerable:!0,get:function(){return t.RequestType3}}),Object.defineProperty(e,"RequestType4",{enumerable:!0,get:function(){return t.RequestType4}}),Object.defineProperty(e,"RequestType5",{enumerable:!0,get:function(){return t.RequestType5}}),Object.defineProperty(e,"RequestType6",{enumerable:!0,get:function(){return t.RequestType6}}),Object.defineProperty(e,"RequestType7",{enumerable:!0,get:function(){return t.RequestType7}}),Object.defineProperty(e,"RequestType8",{enumerable:!0,get:function(){return t.RequestType8}}),Object.defineProperty(e,"RequestType9",{enumerable:!0,get:function(){return t.RequestType9}}),Object.defineProperty(e,"ResponseError",{enumerable:!0,get:function(){return t.ResponseError}}),Object.defineProperty(e,"ErrorCodes",{enumerable:!0,get:function(){return t.ErrorCodes}}),Object.defineProperty(e,"NotificationType",{enumerable:!0,get:function(){return t.NotificationType}}),Object.defineProperty(e,"NotificationType0",{enumerable:!0,get:function(){return t.NotificationType0}}),Object.defineProperty(e,"NotificationType1",{enumerable:!0,get:function(){return t.NotificationType1}}),Object.defineProperty(e,"NotificationType2",{enumerable:!0,get:function(){return t.NotificationType2}}),Object.defineProperty(e,"NotificationType3",{enumerable:!0,get:function(){return t.NotificationType3}}),Object.defineProperty(e,"NotificationType4",{enumerable:!0,get:function(){return t.NotificationType4}}),Object.defineProperty(e,"NotificationType5",{enumerable:!0,get:function(){return t.NotificationType5}}),Object.defineProperty(e,"NotificationType6",{enumerable:!0,get:function(){return t.NotificationType6}}),Object.defineProperty(e,"NotificationType7",{enumerable:!0,get:function(){return t.NotificationType7}}),Object.defineProperty(e,"NotificationType8",{enumerable:!0,get:function(){return t.NotificationType8}}),Object.defineProperty(e,"NotificationType9",{enumerable:!0,get:function(){return t.NotificationType9}}),Object.defineProperty(e,"ParameterStructures",{enumerable:!0,get:function(){return t.ParameterStructures}});const n=mh;Object.defineProperty(e,"Disposable",{enumerable:!0,get:function(){return n.Disposable}});const r=gh;Object.defineProperty(e,"Event",{enumerable:!0,get:function(){return r.Event}}),Object.defineProperty(e,"Emitter",{enumerable:!0,get:function(){return r.Emitter}});const i=Ph;Object.defineProperty(e,"CancellationTokenSource",{enumerable:!0,get:function(){return i.CancellationTokenSource}}),Object.defineProperty(e,"CancellationToken",{enumerable:!0,get:function(){return i.CancellationToken}});const o=wh;Object.defineProperty(e,"MessageReader",{enumerable:!0,get:function(){return o.MessageReader}}),Object.defineProperty(e,"AbstractMessageReader",{enumerable:!0,get:function(){return o.AbstractMessageReader}}),Object.defineProperty(e,"ReadableStreamMessageReader",{enumerable:!0,get:function(){return o.ReadableStreamMessageReader}});const a=Lh;Object.defineProperty(e,"MessageWriter",{enumerable:!0,get:function(){return a.MessageWriter}}),Object.defineProperty(e,"AbstractMessageWriter",{enumerable:!0,get:function(){return a.AbstractMessageWriter}}),Object.defineProperty(e,"WriteableStreamMessageWriter",{enumerable:!0,get:function(){return a.WriteableStreamMessageWriter}});const s=$h;Object.defineProperty(e,"ConnectionStrategy",{enumerable:!0,get:function(){return s.ConnectionStrategy}}),Object.defineProperty(e,"ConnectionOptions",{enumerable:!0,get:function(){return s.ConnectionOptions}}),Object.defineProperty(e,"NullLogger",{enumerable:!0,get:function(){return s.NullLogger}}),Object.defineProperty(e,"createMessageConnection",{enumerable:!0,get:function(){return s.createMessageConnection}}),Object.defineProperty(e,"ProgressType",{enumerable:!0,get:function(){return s.ProgressType}}),Object.defineProperty(e,"Trace",{enumerable:!0,get:function(){return s.Trace}}),Object.defineProperty(e,"TraceFormat",{enumerable:!0,get:function(){return s.TraceFormat}}),Object.defineProperty(e,"SetTraceNotification",{enumerable:!0,get:function(){return s.SetTraceNotification}}),Object.defineProperty(e,"LogTraceNotification",{enumerable:!0,get:function(){return s.LogTraceNotification}}),Object.defineProperty(e,"ConnectionErrors",{enumerable:!0,get:function(){return s.ConnectionErrors}}),Object.defineProperty(e,"ConnectionError",{enumerable:!0,get:function(){return s.ConnectionError}}),Object.defineProperty(e,"CancellationReceiverStrategy",{enumerable:!0,get:function(){return s.CancellationReceiverStrategy}}),Object.defineProperty(e,"CancellationSenderStrategy",{enumerable:!0,get:function(){return s.CancellationSenderStrategy}}),Object.defineProperty(e,"CancellationStrategy",{enumerable:!0,get:function(){return s.CancellationStrategy}});const u=fh;e.RAL=u.default}(bh),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createMessageConnection=e.BrowserMessageWriter=e.BrowserMessageReader=void 0;ph.default.install();const r=bh;n(bh,e);class i extends r.AbstractMessageReader{constructor(e){super(),this._onData=new r.Emitter,this._messageListener=e=>{this._onData.fire(e.data)},e.addEventListener("error",(e=>this.fireError(e))),e.onmessage=this._messageListener}listen(e){return this._onData.event(e)}}e.BrowserMessageReader=i;class o extends r.AbstractMessageWriter{constructor(e){super(),this.context=e,this.errorCount=0,e.addEventListener("error",(e=>this.fireError(e)))}write(e){try{return this.context.postMessage(e),Promise.resolve()}catch(t){return this.handleError(t,e),Promise.reject(t)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){}}e.BrowserMessageWriter=o,e.createMessageConnection=function(e,t,n,i){return void 0===n&&(n=r.NullLogger),r.ConnectionStrategy.is(i)&&(i={connectionStrategy:i}),r.createMessageConnection(e,t,n,i)}}(lh);var qh,jh,Uh,Wh,Kh,Gh,Vh,Hh,zh,Yh,Xh,Jh,Qh,Zh,em,tm,nm,rm,im,om,am,sm,um,cm,lm,pm,fm=lh,dm={};!function(e){e.MIN_VALUE=-2147483648,e.MAX_VALUE=2147483647}(qh||(qh={})),function(e){e.MIN_VALUE=0,e.MAX_VALUE=2147483647}(jh||(jh={})),function(e){e.create=function(e,t){return e===Number.MAX_VALUE&&(e=jh.MAX_VALUE),t===Number.MAX_VALUE&&(t=jh.MAX_VALUE),{line:e,character:t}},e.is=function(e){var t=e;return zm.objectLiteral(t)&&zm.uinteger(t.line)&&zm.uinteger(t.character)}}(Uh||(Uh={})),function(e){e.create=function(e,t,n,r){if(zm.uinteger(e)&&zm.uinteger(t)&&zm.uinteger(n)&&zm.uinteger(r))return{start:Uh.create(e,t),end:Uh.create(n,r)};if(Uh.is(e)&&Uh.is(t))return{start:e,end:t};throw new Error("Range#create called with invalid arguments["+e+", "+t+", "+n+", "+r+"]")},e.is=function(e){var t=e;return zm.objectLiteral(t)&&Uh.is(t.start)&&Uh.is(t.end)}}(Wh||(Wh={})),function(e){e.create=function(e,t){return{uri:e,range:t}},e.is=function(e){var t=e;return zm.defined(t)&&Wh.is(t.range)&&(zm.string(t.uri)||zm.undefined(t.uri))}}(Kh||(Kh={})),function(e){e.create=function(e,t,n,r){return{targetUri:e,targetRange:t,targetSelectionRange:n,originSelectionRange:r}},e.is=function(e){var t=e;return zm.defined(t)&&Wh.is(t.targetRange)&&zm.string(t.targetUri)&&(Wh.is(t.targetSelectionRange)||zm.undefined(t.targetSelectionRange))&&(Wh.is(t.originSelectionRange)||zm.undefined(t.originSelectionRange))}}(Gh||(Gh={})),function(e){e.create=function(e,t,n,r){return{red:e,green:t,blue:n,alpha:r}},e.is=function(e){var t=e;return zm.numberRange(t.red,0,1)&&zm.numberRange(t.green,0,1)&&zm.numberRange(t.blue,0,1)&&zm.numberRange(t.alpha,0,1)}}(Vh||(Vh={})),function(e){e.create=function(e,t){return{range:e,color:t}},e.is=function(e){var t=e;return Wh.is(t.range)&&Vh.is(t.color)}}(Hh||(Hh={})),function(e){e.create=function(e,t,n){return{label:e,textEdit:t,additionalTextEdits:n}},e.is=function(e){var t=e;return zm.string(t.label)&&(zm.undefined(t.textEdit)||rm.is(t))&&(zm.undefined(t.additionalTextEdits)||zm.typedArray(t.additionalTextEdits,rm.is))}}(zh||(zh={})),function(e){e.Comment="comment",e.Imports="imports",e.Region="region"}(Yh||(Yh={})),function(e){e.create=function(e,t,n,r,i){var o={startLine:e,endLine:t};return zm.defined(n)&&(o.startCharacter=n),zm.defined(r)&&(o.endCharacter=r),zm.defined(i)&&(o.kind=i),o},e.is=function(e){var t=e;return zm.uinteger(t.startLine)&&zm.uinteger(t.startLine)&&(zm.undefined(t.startCharacter)||zm.uinteger(t.startCharacter))&&(zm.undefined(t.endCharacter)||zm.uinteger(t.endCharacter))&&(zm.undefined(t.kind)||zm.string(t.kind))}}(Xh||(Xh={})),function(e){e.create=function(e,t){return{location:e,message:t}},e.is=function(e){var t=e;return zm.defined(t)&&Kh.is(t.location)&&zm.string(t.message)}}(Jh||(Jh={})),function(e){e.Error=1,e.Warning=2,e.Information=3,e.Hint=4}(Qh||(Qh={})),function(e){e.Unnecessary=1,e.Deprecated=2}(Zh||(Zh={})),function(e){e.is=function(e){var t=e;return null!=t&&zm.string(t.href)}}(em||(em={})),function(e){e.create=function(e,t,n,r,i,o){var a={range:e,message:t};return zm.defined(n)&&(a.severity=n),zm.defined(r)&&(a.code=r),zm.defined(i)&&(a.source=i),zm.defined(o)&&(a.relatedInformation=o),a},e.is=function(e){var t,n=e;return zm.defined(n)&&Wh.is(n.range)&&zm.string(n.message)&&(zm.number(n.severity)||zm.undefined(n.severity))&&(zm.integer(n.code)||zm.string(n.code)||zm.undefined(n.code))&&(zm.undefined(n.codeDescription)||zm.string(null===(t=n.codeDescription)||void 0===t?void 0:t.href))&&(zm.string(n.source)||zm.undefined(n.source))&&(zm.undefined(n.relatedInformation)||zm.typedArray(n.relatedInformation,Jh.is))}}(tm||(tm={})),function(e){e.create=function(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var i={title:e,command:t};return zm.defined(n)&&n.length>0&&(i.arguments=n),i},e.is=function(e){var t=e;return zm.defined(t)&&zm.string(t.title)&&zm.string(t.command)}}(nm||(nm={})),function(e){e.replace=function(e,t){return{range:e,newText:t}},e.insert=function(e,t){return{range:{start:e,end:e},newText:t}},e.del=function(e){return{range:e,newText:""}},e.is=function(e){var t=e;return zm.objectLiteral(t)&&zm.string(t.newText)&&Wh.is(t.range)}}(rm||(rm={})),function(e){e.create=function(e,t,n){var r={label:e};return void 0!==t&&(r.needsConfirmation=t),void 0!==n&&(r.description=n),r},e.is=function(e){var t=e;return void 0!==t&&zm.objectLiteral(t)&&zm.string(t.label)&&(zm.boolean(t.needsConfirmation)||void 0===t.needsConfirmation)&&(zm.string(t.description)||void 0===t.description)}}(im||(im={})),function(e){e.is=function(e){return"string"==typeof e}}(om||(om={})),function(e){e.replace=function(e,t,n){return{range:e,newText:t,annotationId:n}},e.insert=function(e,t,n){return{range:{start:e,end:e},newText:t,annotationId:n}},e.del=function(e,t){return{range:e,newText:"",annotationId:t}},e.is=function(e){var t=e;return rm.is(t)&&(im.is(t.annotationId)||om.is(t.annotationId))}}(am||(am={})),function(e){e.create=function(e,t){return{textDocument:e,edits:t}},e.is=function(e){var t=e;return zm.defined(t)&&gm.is(t.textDocument)&&Array.isArray(t.edits)}}(sm||(sm={})),function(e){e.create=function(e,t,n){var r={kind:"create",uri:e};return void 0===t||void 0===t.overwrite&&void 0===t.ignoreIfExists||(r.options=t),void 0!==n&&(r.annotationId=n),r},e.is=function(e){var t=e;return t&&"create"===t.kind&&zm.string(t.uri)&&(void 0===t.options||(void 0===t.options.overwrite||zm.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||zm.boolean(t.options.ignoreIfExists)))&&(void 0===t.annotationId||om.is(t.annotationId))}}(um||(um={})),function(e){e.create=function(e,t,n,r){var i={kind:"rename",oldUri:e,newUri:t};return void 0===n||void 0===n.overwrite&&void 0===n.ignoreIfExists||(i.options=n),void 0!==r&&(i.annotationId=r),i},e.is=function(e){var t=e;return t&&"rename"===t.kind&&zm.string(t.oldUri)&&zm.string(t.newUri)&&(void 0===t.options||(void 0===t.options.overwrite||zm.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||zm.boolean(t.options.ignoreIfExists)))&&(void 0===t.annotationId||om.is(t.annotationId))}}(cm||(cm={})),function(e){e.create=function(e,t,n){var r={kind:"delete",uri:e};return void 0===t||void 0===t.recursive&&void 0===t.ignoreIfNotExists||(r.options=t),void 0!==n&&(r.annotationId=n),r},e.is=function(e){var t=e;return t&&"delete"===t.kind&&zm.string(t.uri)&&(void 0===t.options||(void 0===t.options.recursive||zm.boolean(t.options.recursive))&&(void 0===t.options.ignoreIfNotExists||zm.boolean(t.options.ignoreIfNotExists)))&&(void 0===t.annotationId||om.is(t.annotationId))}}(lm||(lm={})),function(e){e.is=function(e){var t=e;return t&&(void 0!==t.changes||void 0!==t.documentChanges)&&(void 0===t.documentChanges||t.documentChanges.every((function(e){return zm.string(e.kind)?um.is(e)||cm.is(e)||lm.is(e):sm.is(e)})))}}(pm||(pm={}));var hm,mm,gm,vm,ym,Em,_m,Cm,Tm,Am,Rm,Im,Dm,xm,bm,Sm,km,Om,Nm,Pm,wm,Lm,Fm,Mm,$m,Bm,qm,jm,Um,Wm,Km=function(){function e(e,t){this.edits=e,this.changeAnnotations=t}return e.prototype.insert=function(e,t,n){var r,i;if(void 0===n?r=rm.insert(e,t):om.is(n)?(i=n,r=am.insert(e,t,n)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(n),r=am.insert(e,t,i)),this.edits.push(r),void 0!==i)return i},e.prototype.replace=function(e,t,n){var r,i;if(void 0===n?r=rm.replace(e,t):om.is(n)?(i=n,r=am.replace(e,t,n)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(n),r=am.replace(e,t,i)),this.edits.push(r),void 0!==i)return i},e.prototype.delete=function(e,t){var n,r;if(void 0===t?n=rm.del(e):om.is(t)?(r=t,n=am.del(e,t)):(this.assertChangeAnnotations(this.changeAnnotations),r=this.changeAnnotations.manage(t),n=am.del(e,r)),this.edits.push(n),void 0!==r)return r},e.prototype.add=function(e){this.edits.push(e)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e.prototype.assertChangeAnnotations=function(e){if(void 0===e)throw new Error("Text edit change is not configured to manage change annotations.")},e}(),Gm=function(){function e(e){this._annotations=void 0===e?Object.create(null):e,this._counter=0,this._size=0}return e.prototype.all=function(){return this._annotations},Object.defineProperty(e.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),e.prototype.manage=function(e,t){var n;if(om.is(e)?n=e:(n=this.nextId(),t=e),void 0!==this._annotations[n])throw new Error("Id "+n+" is already in use.");if(void 0===t)throw new Error("No annotation provided for id "+n);return this._annotations[n]=t,this._size++,n},e.prototype.nextId=function(){return this._counter++,this._counter.toString()},e}(),Vm=function(){function e(e){var t=this;this._textEditChanges=Object.create(null),void 0!==e?(this._workspaceEdit=e,e.documentChanges?(this._changeAnnotations=new Gm(e.changeAnnotations),e.changeAnnotations=this._changeAnnotations.all(),e.documentChanges.forEach((function(e){if(sm.is(e)){var n=new Km(e.edits,t._changeAnnotations);t._textEditChanges[e.textDocument.uri]=n}}))):e.changes&&Object.keys(e.changes).forEach((function(n){var r=new Km(e.changes[n]);t._textEditChanges[n]=r}))):this._workspaceEdit={}}return Object.defineProperty(e.prototype,"edit",{get:function(){return this.initDocumentChanges(),void 0!==this._changeAnnotations&&(0===this._changeAnnotations.size?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit},enumerable:!1,configurable:!0}),e.prototype.getTextEditChange=function(e){if(gm.is(e)){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var t={uri:e.uri,version:e.version};if(!(r=this._textEditChanges[t.uri])){var n={textDocument:t,edits:i=[]};this._workspaceEdit.documentChanges.push(n),r=new Km(i,this._changeAnnotations),this._textEditChanges[t.uri]=r}return r}if(this.initChanges(),void 0===this._workspaceEdit.changes)throw new Error("Workspace edit is not configured for normal text edit changes.");var r;if(!(r=this._textEditChanges[e])){var i=[];this._workspaceEdit.changes[e]=i,r=new Km(i),this._textEditChanges[e]=r}return r},e.prototype.initDocumentChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._changeAnnotations=new Gm,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())},e.prototype.initChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._workspaceEdit.changes=Object.create(null))},e.prototype.createFile=function(e,t,n){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(im.is(t)||om.is(t)?r=t:n=t,void 0===r?i=um.create(e,n):(o=om.is(r)?r:this._changeAnnotations.manage(r),i=um.create(e,n,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e.prototype.renameFile=function(e,t,n,r){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var i,o,a;if(im.is(n)||om.is(n)?i=n:r=n,void 0===i?o=cm.create(e,t,r):(a=om.is(i)?i:this._changeAnnotations.manage(i),o=cm.create(e,t,r,a)),this._workspaceEdit.documentChanges.push(o),void 0!==a)return a},e.prototype.deleteFile=function(e,t,n){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(im.is(t)||om.is(t)?r=t:n=t,void 0===r?i=lm.create(e,n):(o=om.is(r)?r:this._changeAnnotations.manage(r),i=lm.create(e,n,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e}();!function(e){e.create=function(e){return{uri:e}},e.is=function(e){var t=e;return zm.defined(t)&&zm.string(t.uri)}}(hm||(hm={})),function(e){e.create=function(e,t){return{uri:e,version:t}},e.is=function(e){var t=e;return zm.defined(t)&&zm.string(t.uri)&&zm.integer(t.version)}}(mm||(mm={})),function(e){e.create=function(e,t){return{uri:e,version:t}},e.is=function(e){var t=e;return zm.defined(t)&&zm.string(t.uri)&&(null===t.version||zm.integer(t.version))}}(gm||(gm={})),function(e){e.create=function(e,t,n,r){return{uri:e,languageId:t,version:n,text:r}},e.is=function(e){var t=e;return zm.defined(t)&&zm.string(t.uri)&&zm.string(t.languageId)&&zm.integer(t.version)&&zm.string(t.text)}}(vm||(vm={})),function(e){e.PlainText="plaintext",e.Markdown="markdown"}(ym||(ym={})),function(e){e.is=function(t){var n=t;return n===e.PlainText||n===e.Markdown}}(ym||(ym={})),function(e){e.is=function(e){var t=e;return zm.objectLiteral(e)&&ym.is(t.kind)&&zm.string(t.value)}}(Em||(Em={})),function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25}(_m||(_m={})),function(e){e.PlainText=1,e.Snippet=2}(Cm||(Cm={})),function(e){e.Deprecated=1}(Tm||(Tm={})),function(e){e.create=function(e,t,n){return{newText:e,insert:t,replace:n}},e.is=function(e){var t=e;return t&&zm.string(t.newText)&&Wh.is(t.insert)&&Wh.is(t.replace)}}(Am||(Am={})),function(e){e.asIs=1,e.adjustIndentation=2}(Rm||(Rm={})),function(e){e.create=function(e){return{label:e}}}(Im||(Im={})),function(e){e.create=function(e,t){return{items:e||[],isIncomplete:!!t}}}(Dm||(Dm={})),function(e){e.fromPlainText=function(e){return e.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},e.is=function(e){var t=e;return zm.string(t)||zm.objectLiteral(t)&&zm.string(t.language)&&zm.string(t.value)}}(xm||(xm={})),function(e){e.is=function(e){var t=e;return!!t&&zm.objectLiteral(t)&&(Em.is(t.contents)||xm.is(t.contents)||zm.typedArray(t.contents,xm.is))&&(void 0===e.range||Wh.is(e.range))}}(bm||(bm={})),function(e){e.create=function(e,t){return t?{label:e,documentation:t}:{label:e}}}(Sm||(Sm={})),function(e){e.create=function(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var i={label:e};return zm.defined(t)&&(i.documentation=t),zm.defined(n)?i.parameters=n:i.parameters=[],i}}(km||(km={})),function(e){e.Text=1,e.Read=2,e.Write=3}(Om||(Om={})),function(e){e.create=function(e,t){var n={range:e};return zm.number(t)&&(n.kind=t),n}}(Nm||(Nm={})),function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26}(Pm||(Pm={})),function(e){e.Deprecated=1}(wm||(wm={})),function(e){e.create=function(e,t,n,r,i){var o={name:e,kind:t,location:{uri:r,range:n}};return i&&(o.containerName=i),o}}(Lm||(Lm={})),function(e){e.create=function(e,t,n,r,i,o){var a={name:e,detail:t,kind:n,range:r,selectionRange:i};return void 0!==o&&(a.children=o),a},e.is=function(e){var t=e;return t&&zm.string(t.name)&&zm.number(t.kind)&&Wh.is(t.range)&&Wh.is(t.selectionRange)&&(void 0===t.detail||zm.string(t.detail))&&(void 0===t.deprecated||zm.boolean(t.deprecated))&&(void 0===t.children||Array.isArray(t.children))&&(void 0===t.tags||Array.isArray(t.tags))}}(Fm||(Fm={})),function(e){e.Empty="",e.QuickFix="quickfix",e.Refactor="refactor",e.RefactorExtract="refactor.extract",e.RefactorInline="refactor.inline",e.RefactorRewrite="refactor.rewrite",e.Source="source",e.SourceOrganizeImports="source.organizeImports",e.SourceFixAll="source.fixAll"}(Mm||(Mm={})),function(e){e.create=function(e,t){var n={diagnostics:e};return null!=t&&(n.only=t),n},e.is=function(e){var t=e;return zm.defined(t)&&zm.typedArray(t.diagnostics,tm.is)&&(void 0===t.only||zm.typedArray(t.only,zm.string))}}($m||($m={})),function(e){e.create=function(e,t,n){var r={title:e},i=!0;return"string"==typeof t?(i=!1,r.kind=t):nm.is(t)?r.command=t:r.edit=t,i&&void 0!==n&&(r.kind=n),r},e.is=function(e){var t=e;return t&&zm.string(t.title)&&(void 0===t.diagnostics||zm.typedArray(t.diagnostics,tm.is))&&(void 0===t.kind||zm.string(t.kind))&&(void 0!==t.edit||void 0!==t.command)&&(void 0===t.command||nm.is(t.command))&&(void 0===t.isPreferred||zm.boolean(t.isPreferred))&&(void 0===t.edit||pm.is(t.edit))}}(Bm||(Bm={})),function(e){e.create=function(e,t){var n={range:e};return zm.defined(t)&&(n.data=t),n},e.is=function(e){var t=e;return zm.defined(t)&&Wh.is(t.range)&&(zm.undefined(t.command)||nm.is(t.command))}}(qm||(qm={})),function(e){e.create=function(e,t){return{tabSize:e,insertSpaces:t}},e.is=function(e){var t=e;return zm.defined(t)&&zm.uinteger(t.tabSize)&&zm.boolean(t.insertSpaces)}}(jm||(jm={})),function(e){e.create=function(e,t,n){return{range:e,target:t,data:n}},e.is=function(e){var t=e;return zm.defined(t)&&Wh.is(t.range)&&(zm.undefined(t.target)||zm.string(t.target))}}(Um||(Um={})),function(e){e.create=function(e,t){return{range:e,parent:t}},e.is=function(t){var n=t;return void 0!==n&&Wh.is(n.range)&&(void 0===n.parent||e.is(n.parent))}}(Wm||(Wm={}));var Hm;!function(e){function t(e,n){if(e.length<=1)return e;var r=e.length/2|0,i=e.slice(0,r),o=e.slice(r);t(i,n),t(o,n);for(var a=0,s=0,u=0;a<i.length&&s<o.length;){var c=n(i[a],o[s]);e[u++]=c<=0?i[a++]:o[s++]}for(;a<i.length;)e[u++]=i[a++];for(;s<o.length;)e[u++]=o[s++];return e}e.create=function(e,t,n,r){return new Ym(e,t,n,r)},e.is=function(e){var t=e;return!!(zm.defined(t)&&zm.string(t.uri)&&(zm.undefined(t.languageId)||zm.string(t.languageId))&&zm.uinteger(t.lineCount)&&zm.func(t.getText)&&zm.func(t.positionAt)&&zm.func(t.offsetAt))},e.applyEdits=function(e,n){for(var r=e.getText(),i=t(n,(function(e,t){var n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n})),o=r.length,a=i.length-1;a>=0;a--){var s=i[a],u=e.offsetAt(s.range.start),c=e.offsetAt(s.range.end);if(!(c<=o))throw new Error("Overlapping edit");r=r.substring(0,u)+s.newText+r.substring(c,r.length),o=u}return r}}(Hm||(Hm={}));var zm,Ym=function(){function e(e,t,n,r){this._uri=e,this._languageId=t,this._version=n,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content},e.prototype.update=function(e,t){this._content=e.text,this._version=t,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(void 0===this._lineOffsets){for(var e=[],t=this._content,n=!0,r=0;r<t.length;r++){n&&(e.push(r),n=!1);var i=t.charAt(r);n="\r"===i||"\n"===i,"\r"===i&&r+1<t.length&&"\n"===t.charAt(r+1)&&r++}n&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),n=0,r=t.length;if(0===r)return Uh.create(0,e);for(;n<r;){var i=Math.floor((n+r)/2);t[i]>e?r=i:n=i+1}var o=n-1;return Uh.create(o,e-t[o])},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var n=t[e.line],r=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,r),n)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e}();!function(e){var t=Object.prototype.toString;e.defined=function(e){return void 0!==e},e.undefined=function(e){return void 0===e},e.boolean=function(e){return!0===e||!1===e},e.string=function(e){return"[object String]"===t.call(e)},e.number=function(e){return"[object Number]"===t.call(e)},e.numberRange=function(e,n,r){return"[object Number]"===t.call(e)&&n<=e&&e<=r},e.integer=function(e){return"[object Number]"===t.call(e)&&-2147483648<=e&&e<=2147483647},e.uinteger=function(e){return"[object Number]"===t.call(e)&&0<=e&&e<=2147483647},e.func=function(e){return"[object Function]"===t.call(e)},e.objectLiteral=function(e){return null!==e&&"object"==typeof e},e.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)}}(zm||(zm={}));var Xm=or(Object.freeze({__proto__:null,get integer(){return qh},get uinteger(){return jh},get Position(){return Uh},get Range(){return Wh},get Location(){return Kh},get LocationLink(){return Gh},get Color(){return Vh},get ColorInformation(){return Hh},get ColorPresentation(){return zh},get FoldingRangeKind(){return Yh},get FoldingRange(){return Xh},get DiagnosticRelatedInformation(){return Jh},get DiagnosticSeverity(){return Qh},get DiagnosticTag(){return Zh},get CodeDescription(){return em},get Diagnostic(){return tm},get Command(){return nm},get TextEdit(){return rm},get ChangeAnnotation(){return im},get ChangeAnnotationIdentifier(){return om},get AnnotatedTextEdit(){return am},get TextDocumentEdit(){return sm},get CreateFile(){return um},get RenameFile(){return cm},get DeleteFile(){return lm},get WorkspaceEdit(){return pm},WorkspaceChange:Vm,get TextDocumentIdentifier(){return hm},get VersionedTextDocumentIdentifier(){return mm},get OptionalVersionedTextDocumentIdentifier(){return gm},get TextDocumentItem(){return vm},get MarkupKind(){return ym},get MarkupContent(){return Em},get CompletionItemKind(){return _m},get InsertTextFormat(){return Cm},get CompletionItemTag(){return Tm},get InsertReplaceEdit(){return Am},get InsertTextMode(){return Rm},get CompletionItem(){return Im},get CompletionList(){return Dm},get MarkedString(){return xm},get Hover(){return bm},get ParameterInformation(){return Sm},get SignatureInformation(){return km},get DocumentHighlightKind(){return Om},get DocumentHighlight(){return Nm},get SymbolKind(){return Pm},get SymbolTag(){return wm},get SymbolInformation(){return Lm},get DocumentSymbol(){return Fm},get CodeActionKind(){return Mm},get CodeActionContext(){return $m},get CodeAction(){return Bm},get CodeLens(){return qm},get FormattingOptions(){return jm},get DocumentLink(){return Um},get SelectionRange(){return Wm},EOL:["\n","\r\n","\r"],get TextDocument(){return Hm}})),Jm={};Object.defineProperty(Jm,"__esModule",{value:!0}),Jm.ProtocolNotificationType=Jm.ProtocolNotificationType0=Jm.ProtocolRequestType=Jm.ProtocolRequestType0=Jm.RegistrationType=void 0;const Qm=lh;Jm.RegistrationType=class{constructor(e){this.method=e}};Jm.ProtocolRequestType0=class extends Qm.RequestType0{constructor(e){super(e)}};Jm.ProtocolRequestType=class extends Qm.RequestType{constructor(e){super(e,Qm.ParameterStructures.byName)}};Jm.ProtocolNotificationType0=class extends Qm.NotificationType0{constructor(e){super(e)}};Jm.ProtocolNotificationType=class extends Qm.NotificationType{constructor(e){super(e,Qm.ParameterStructures.byName)}};var Zm={},eg={};function tg(e){return"string"==typeof e||e instanceof String}Object.defineProperty(eg,"__esModule",{value:!0}),eg.objectLiteral=eg.typedArray=eg.stringArray=eg.array=eg.func=eg.error=rg=eg.number=ng=eg.string=eg.boolean=void 0,eg.boolean=function(e){return!0===e||!1===e};var ng=eg.string=tg;var rg=eg.number=function(e){return"number"==typeof e||e instanceof Number};function ig(e){return Array.isArray(e)}eg.error=function(e){return e instanceof Error},eg.func=function(e){return"function"==typeof e},eg.array=ig,eg.stringArray=function(e){return ig(e)&&e.every((e=>tg(e)))},eg.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},eg.objectLiteral=function(e){return null!==e&&"object"==typeof e};var og={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ImplementationRequest=void 0;const t=Jm;var n;(n=e.ImplementationRequest||(e.ImplementationRequest={})).method="textDocument/implementation",n.type=new t.ProtocolRequestType(n.method)}(og);var ag={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.TypeDefinitionRequest=void 0;const t=Jm;var n;(n=e.TypeDefinitionRequest||(e.TypeDefinitionRequest={})).method="textDocument/typeDefinition",n.type=new t.ProtocolRequestType(n.method)}(ag);var sg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DidChangeWorkspaceFoldersNotification=e.WorkspaceFoldersRequest=void 0;const t=Jm;(e.WorkspaceFoldersRequest||(e.WorkspaceFoldersRequest={})).type=new t.ProtocolRequestType0("workspace/workspaceFolders"),(e.DidChangeWorkspaceFoldersNotification||(e.DidChangeWorkspaceFoldersNotification={})).type=new t.ProtocolNotificationType("workspace/didChangeWorkspaceFolders")}(sg);var ug={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ConfigurationRequest=void 0;const t=Jm;(e.ConfigurationRequest||(e.ConfigurationRequest={})).type=new t.ProtocolRequestType("workspace/configuration")}(ug);var cg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ColorPresentationRequest=e.DocumentColorRequest=void 0;const t=Jm;var n;(n=e.DocumentColorRequest||(e.DocumentColorRequest={})).method="textDocument/documentColor",n.type=new t.ProtocolRequestType(n.method),(e.ColorPresentationRequest||(e.ColorPresentationRequest={})).type=new t.ProtocolRequestType("textDocument/colorPresentation")}(cg);var lg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.FoldingRangeRequest=e.FoldingRangeKind=void 0;const t=Jm;var n;!function(e){e.Comment="comment",e.Imports="imports",e.Region="region"}(e.FoldingRangeKind||(e.FoldingRangeKind={})),(n=e.FoldingRangeRequest||(e.FoldingRangeRequest={})).method="textDocument/foldingRange",n.type=new t.ProtocolRequestType(n.method)}(lg);var pg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DeclarationRequest=void 0;const t=Jm;var n;(n=e.DeclarationRequest||(e.DeclarationRequest={})).method="textDocument/declaration",n.type=new t.ProtocolRequestType(n.method)}(pg);var fg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.SelectionRangeRequest=void 0;const t=Jm;var n;(n=e.SelectionRangeRequest||(e.SelectionRangeRequest={})).method="textDocument/selectionRange",n.type=new t.ProtocolRequestType(n.method)}(fg);var dg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WorkDoneProgressCancelNotification=e.WorkDoneProgressCreateRequest=e.WorkDoneProgress=void 0;const t=lh,n=Jm;var r;(r=e.WorkDoneProgress||(e.WorkDoneProgress={})).type=new t.ProgressType,r.is=function(e){return e===r.type},(e.WorkDoneProgressCreateRequest||(e.WorkDoneProgressCreateRequest={})).type=new n.ProtocolRequestType("window/workDoneProgress/create"),(e.WorkDoneProgressCancelNotification||(e.WorkDoneProgressCancelNotification={})).type=new n.ProtocolNotificationType("window/workDoneProgress/cancel")}(dg);var hg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CallHierarchyOutgoingCallsRequest=e.CallHierarchyIncomingCallsRequest=e.CallHierarchyPrepareRequest=void 0;const t=Jm;var n,r,i;(n=e.CallHierarchyPrepareRequest||(e.CallHierarchyPrepareRequest={})).method="textDocument/prepareCallHierarchy",n.type=new t.ProtocolRequestType(n.method),(r=e.CallHierarchyIncomingCallsRequest||(e.CallHierarchyIncomingCallsRequest={})).method="callHierarchy/incomingCalls",r.type=new t.ProtocolRequestType(r.method),(i=e.CallHierarchyOutgoingCallsRequest||(e.CallHierarchyOutgoingCallsRequest={})).method="callHierarchy/outgoingCalls",i.type=new t.ProtocolRequestType(i.method)}(hg);var mg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.SemanticTokensRefreshRequest=e.SemanticTokensRangeRequest=e.SemanticTokensDeltaRequest=e.SemanticTokensRequest=e.SemanticTokensRegistrationType=e.TokenFormat=e.SemanticTokens=e.SemanticTokenModifiers=e.SemanticTokenTypes=void 0;const t=Jm;var n,r,i,o,a,s,u;(n=e.SemanticTokenTypes||(e.SemanticTokenTypes={})).namespace="namespace",n.type="type",n.class="class",n.enum="enum",n.interface="interface",n.struct="struct",n.typeParameter="typeParameter",n.parameter="parameter",n.variable="variable",n.property="property",n.enumMember="enumMember",n.event="event",n.function="function",n.method="method",n.macro="macro",n.keyword="keyword",n.modifier="modifier",n.comment="comment",n.string="string",n.number="number",n.regexp="regexp",n.operator="operator",(r=e.SemanticTokenModifiers||(e.SemanticTokenModifiers={})).declaration="declaration",r.definition="definition",r.readonly="readonly",r.static="static",r.deprecated="deprecated",r.abstract="abstract",r.async="async",r.modification="modification",r.documentation="documentation",r.defaultLibrary="defaultLibrary",(e.SemanticTokens||(e.SemanticTokens={})).is=function(e){const t=e;return void 0!==t&&(void 0===t.resultId||"string"==typeof t.resultId)&&Array.isArray(t.data)&&(0===t.data.length||"number"==typeof t.data[0])},(e.TokenFormat||(e.TokenFormat={})).Relative="relative",(i=e.SemanticTokensRegistrationType||(e.SemanticTokensRegistrationType={})).method="textDocument/semanticTokens",i.type=new t.RegistrationType(i.method),(o=e.SemanticTokensRequest||(e.SemanticTokensRequest={})).method="textDocument/semanticTokens/full",o.type=new t.ProtocolRequestType(o.method),(a=e.SemanticTokensDeltaRequest||(e.SemanticTokensDeltaRequest={})).method="textDocument/semanticTokens/full/delta",a.type=new t.ProtocolRequestType(a.method),(s=e.SemanticTokensRangeRequest||(e.SemanticTokensRangeRequest={})).method="textDocument/semanticTokens/range",s.type=new t.ProtocolRequestType(s.method),(u=e.SemanticTokensRefreshRequest||(e.SemanticTokensRefreshRequest={})).method="workspace/semanticTokens/refresh",u.type=new t.ProtocolRequestType0(u.method)}(mg);var gg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ShowDocumentRequest=void 0;const t=Jm;var n;(n=e.ShowDocumentRequest||(e.ShowDocumentRequest={})).method="window/showDocument",n.type=new t.ProtocolRequestType(n.method)}(gg);var vg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.LinkedEditingRangeRequest=void 0;const t=Jm;var n;(n=e.LinkedEditingRangeRequest||(e.LinkedEditingRangeRequest={})).method="textDocument/linkedEditingRange",n.type=new t.ProtocolRequestType(n.method)}(vg);var yg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.WillDeleteFilesRequest=e.DidDeleteFilesNotification=e.DidRenameFilesNotification=e.WillRenameFilesRequest=e.DidCreateFilesNotification=e.WillCreateFilesRequest=e.FileOperationPatternKind=void 0;const t=Jm;var n,r,i,o,a,s,u;(n=e.FileOperationPatternKind||(e.FileOperationPatternKind={})).file="file",n.folder="folder",(r=e.WillCreateFilesRequest||(e.WillCreateFilesRequest={})).method="workspace/willCreateFiles",r.type=new t.ProtocolRequestType(r.method),(i=e.DidCreateFilesNotification||(e.DidCreateFilesNotification={})).method="workspace/didCreateFiles",i.type=new t.ProtocolNotificationType(i.method),(o=e.WillRenameFilesRequest||(e.WillRenameFilesRequest={})).method="workspace/willRenameFiles",o.type=new t.ProtocolRequestType(o.method),(a=e.DidRenameFilesNotification||(e.DidRenameFilesNotification={})).method="workspace/didRenameFiles",a.type=new t.ProtocolNotificationType(a.method),(s=e.DidDeleteFilesNotification||(e.DidDeleteFilesNotification={})).method="workspace/didDeleteFiles",s.type=new t.ProtocolNotificationType(s.method),(u=e.WillDeleteFilesRequest||(e.WillDeleteFilesRequest={})).method="workspace/willDeleteFiles",u.type=new t.ProtocolRequestType(u.method)}(yg);var Eg={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.MonikerRequest=e.MonikerKind=e.UniquenessLevel=void 0;const t=Jm;var n,r,i;(n=e.UniquenessLevel||(e.UniquenessLevel={})).document="document",n.project="project",n.group="group",n.scheme="scheme",n.global="global",(r=e.MonikerKind||(e.MonikerKind={})).import="import",r.export="export",r.local="local",(i=e.MonikerRequest||(e.MonikerRequest={})).method="textDocument/moniker",i.type=new t.ProtocolRequestType(i.method)}(Eg),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DocumentLinkRequest=e.CodeLensRefreshRequest=e.CodeLensResolveRequest=e.CodeLensRequest=e.WorkspaceSymbolRequest=e.CodeActionResolveRequest=e.CodeActionRequest=e.DocumentSymbolRequest=e.DocumentHighlightRequest=e.ReferencesRequest=e.DefinitionRequest=e.SignatureHelpRequest=e.SignatureHelpTriggerKind=e.HoverRequest=e.CompletionResolveRequest=e.CompletionRequest=e.CompletionTriggerKind=e.PublishDiagnosticsNotification=e.WatchKind=e.FileChangeType=e.DidChangeWatchedFilesNotification=e.WillSaveTextDocumentWaitUntilRequest=e.WillSaveTextDocumentNotification=e.TextDocumentSaveReason=e.DidSaveTextDocumentNotification=e.DidCloseTextDocumentNotification=e.DidChangeTextDocumentNotification=e.TextDocumentContentChangeEvent=e.DidOpenTextDocumentNotification=e.TextDocumentSyncKind=e.TelemetryEventNotification=e.LogMessageNotification=e.ShowMessageRequest=e.ShowMessageNotification=e.MessageType=e.DidChangeConfigurationNotification=e.ExitNotification=e.ShutdownRequest=e.InitializedNotification=e.InitializeError=e.InitializeRequest=e.WorkDoneProgressOptions=e.TextDocumentRegistrationOptions=e.StaticRegistrationOptions=e.FailureHandlingKind=e.ResourceOperationKind=e.UnregistrationRequest=e.RegistrationRequest=e.DocumentSelector=e.DocumentFilter=void 0,e.MonikerRequest=e.MonikerKind=e.UniquenessLevel=e.WillDeleteFilesRequest=e.DidDeleteFilesNotification=e.WillRenameFilesRequest=e.DidRenameFilesNotification=e.WillCreateFilesRequest=e.DidCreateFilesNotification=e.FileOperationPatternKind=e.LinkedEditingRangeRequest=e.ShowDocumentRequest=e.SemanticTokensRegistrationType=e.SemanticTokensRefreshRequest=e.SemanticTokensRangeRequest=e.SemanticTokensDeltaRequest=e.SemanticTokensRequest=e.TokenFormat=e.SemanticTokens=e.SemanticTokenModifiers=e.SemanticTokenTypes=e.CallHierarchyPrepareRequest=e.CallHierarchyOutgoingCallsRequest=e.CallHierarchyIncomingCallsRequest=e.WorkDoneProgressCancelNotification=e.WorkDoneProgressCreateRequest=e.WorkDoneProgress=e.SelectionRangeRequest=e.DeclarationRequest=e.FoldingRangeRequest=e.ColorPresentationRequest=e.DocumentColorRequest=e.ConfigurationRequest=e.DidChangeWorkspaceFoldersNotification=e.WorkspaceFoldersRequest=e.TypeDefinitionRequest=e.ImplementationRequest=e.ApplyWorkspaceEditRequest=e.ExecuteCommandRequest=e.PrepareRenameRequest=e.RenameRequest=e.PrepareSupportDefaultBehavior=e.DocumentOnTypeFormattingRequest=e.DocumentRangeFormattingRequest=e.DocumentFormattingRequest=e.DocumentLinkResolveRequest=void 0;const t=eg,n=Jm,r=og;Object.defineProperty(e,"ImplementationRequest",{enumerable:!0,get:function(){return r.ImplementationRequest}});const i=ag;Object.defineProperty(e,"TypeDefinitionRequest",{enumerable:!0,get:function(){return i.TypeDefinitionRequest}});const o=sg;Object.defineProperty(e,"WorkspaceFoldersRequest",{enumerable:!0,get:function(){return o.WorkspaceFoldersRequest}}),Object.defineProperty(e,"DidChangeWorkspaceFoldersNotification",{enumerable:!0,get:function(){return o.DidChangeWorkspaceFoldersNotification}});const a=ug;Object.defineProperty(e,"ConfigurationRequest",{enumerable:!0,get:function(){return a.ConfigurationRequest}});const s=cg;Object.defineProperty(e,"DocumentColorRequest",{enumerable:!0,get:function(){return s.DocumentColorRequest}}),Object.defineProperty(e,"ColorPresentationRequest",{enumerable:!0,get:function(){return s.ColorPresentationRequest}});const u=lg;Object.defineProperty(e,"FoldingRangeRequest",{enumerable:!0,get:function(){return u.FoldingRangeRequest}});const c=pg;Object.defineProperty(e,"DeclarationRequest",{enumerable:!0,get:function(){return c.DeclarationRequest}});const l=fg;Object.defineProperty(e,"SelectionRangeRequest",{enumerable:!0,get:function(){return l.SelectionRangeRequest}});const p=dg;Object.defineProperty(e,"WorkDoneProgress",{enumerable:!0,get:function(){return p.WorkDoneProgress}}),Object.defineProperty(e,"WorkDoneProgressCreateRequest",{enumerable:!0,get:function(){return p.WorkDoneProgressCreateRequest}}),Object.defineProperty(e,"WorkDoneProgressCancelNotification",{enumerable:!0,get:function(){return p.WorkDoneProgressCancelNotification}});const f=hg;Object.defineProperty(e,"CallHierarchyIncomingCallsRequest",{enumerable:!0,get:function(){return f.CallHierarchyIncomingCallsRequest}}),Object.defineProperty(e,"CallHierarchyOutgoingCallsRequest",{enumerable:!0,get:function(){return f.CallHierarchyOutgoingCallsRequest}}),Object.defineProperty(e,"CallHierarchyPrepareRequest",{enumerable:!0,get:function(){return f.CallHierarchyPrepareRequest}});const d=mg;Object.defineProperty(e,"SemanticTokenTypes",{enumerable:!0,get:function(){return d.SemanticTokenTypes}}),Object.defineProperty(e,"SemanticTokenModifiers",{enumerable:!0,get:function(){return d.SemanticTokenModifiers}}),Object.defineProperty(e,"SemanticTokens",{enumerable:!0,get:function(){return d.SemanticTokens}}),Object.defineProperty(e,"TokenFormat",{enumerable:!0,get:function(){return d.TokenFormat}}),Object.defineProperty(e,"SemanticTokensRequest",{enumerable:!0,get:function(){return d.SemanticTokensRequest}}),Object.defineProperty(e,"SemanticTokensDeltaRequest",{enumerable:!0,get:function(){return d.SemanticTokensDeltaRequest}}),Object.defineProperty(e,"SemanticTokensRangeRequest",{enumerable:!0,get:function(){return d.SemanticTokensRangeRequest}}),Object.defineProperty(e,"SemanticTokensRefreshRequest",{enumerable:!0,get:function(){return d.SemanticTokensRefreshRequest}}),Object.defineProperty(e,"SemanticTokensRegistrationType",{enumerable:!0,get:function(){return d.SemanticTokensRegistrationType}});const h=gg;Object.defineProperty(e,"ShowDocumentRequest",{enumerable:!0,get:function(){return h.ShowDocumentRequest}});const m=vg;Object.defineProperty(e,"LinkedEditingRangeRequest",{enumerable:!0,get:function(){return m.LinkedEditingRangeRequest}});const g=yg;Object.defineProperty(e,"FileOperationPatternKind",{enumerable:!0,get:function(){return g.FileOperationPatternKind}}),Object.defineProperty(e,"DidCreateFilesNotification",{enumerable:!0,get:function(){return g.DidCreateFilesNotification}}),Object.defineProperty(e,"WillCreateFilesRequest",{enumerable:!0,get:function(){return g.WillCreateFilesRequest}}),Object.defineProperty(e,"DidRenameFilesNotification",{enumerable:!0,get:function(){return g.DidRenameFilesNotification}}),Object.defineProperty(e,"WillRenameFilesRequest",{enumerable:!0,get:function(){return g.WillRenameFilesRequest}}),Object.defineProperty(e,"DidDeleteFilesNotification",{enumerable:!0,get:function(){return g.DidDeleteFilesNotification}}),Object.defineProperty(e,"WillDeleteFilesRequest",{enumerable:!0,get:function(){return g.WillDeleteFilesRequest}});const v=Eg;var y,E,_,C,T,A,R,I,D,x,b,S,k,O,N,P,w,L,F,M,$,B,q,j,U,W,K,G,V,H,z,Y,X,J,Q,Z,ee,te;Object.defineProperty(e,"UniquenessLevel",{enumerable:!0,get:function(){return v.UniquenessLevel}}),Object.defineProperty(e,"MonikerKind",{enumerable:!0,get:function(){return v.MonikerKind}}),Object.defineProperty(e,"MonikerRequest",{enumerable:!0,get:function(){return v.MonikerRequest}}),(y=e.DocumentFilter||(e.DocumentFilter={})).is=function(e){const n=e;return t.string(n.language)||t.string(n.scheme)||t.string(n.pattern)},(E=e.DocumentSelector||(e.DocumentSelector={})).is=function(e){if(!Array.isArray(e))return!1;for(let n of e)if(!t.string(n)&&!y.is(n))return!1;return!0},(e.RegistrationRequest||(e.RegistrationRequest={})).type=new n.ProtocolRequestType("client/registerCapability"),(e.UnregistrationRequest||(e.UnregistrationRequest={})).type=new n.ProtocolRequestType("client/unregisterCapability"),(_=e.ResourceOperationKind||(e.ResourceOperationKind={})).Create="create",_.Rename="rename",_.Delete="delete",(C=e.FailureHandlingKind||(e.FailureHandlingKind={})).Abort="abort",C.Transactional="transactional",C.TextOnlyTransactional="textOnlyTransactional",C.Undo="undo",(e.StaticRegistrationOptions||(e.StaticRegistrationOptions={})).hasId=function(e){const n=e;return n&&t.string(n.id)&&n.id.length>0},(e.TextDocumentRegistrationOptions||(e.TextDocumentRegistrationOptions={})).is=function(e){const t=e;return t&&(null===t.documentSelector||E.is(t.documentSelector))},(T=e.WorkDoneProgressOptions||(e.WorkDoneProgressOptions={})).is=function(e){const n=e;return t.objectLiteral(n)&&(void 0===n.workDoneProgress||t.boolean(n.workDoneProgress))},T.hasWorkDoneProgress=function(e){const n=e;return n&&t.boolean(n.workDoneProgress)},(e.InitializeRequest||(e.InitializeRequest={})).type=new n.ProtocolRequestType("initialize"),(e.InitializeError||(e.InitializeError={})).unknownProtocolVersion=1,(e.InitializedNotification||(e.InitializedNotification={})).type=new n.ProtocolNotificationType("initialized"),(e.ShutdownRequest||(e.ShutdownRequest={})).type=new n.ProtocolRequestType0("shutdown"),(e.ExitNotification||(e.ExitNotification={})).type=new n.ProtocolNotificationType0("exit"),(e.DidChangeConfigurationNotification||(e.DidChangeConfigurationNotification={})).type=new n.ProtocolNotificationType("workspace/didChangeConfiguration"),(A=e.MessageType||(e.MessageType={})).Error=1,A.Warning=2,A.Info=3,A.Log=4,(e.ShowMessageNotification||(e.ShowMessageNotification={})).type=new n.ProtocolNotificationType("window/showMessage"),(e.ShowMessageRequest||(e.ShowMessageRequest={})).type=new n.ProtocolRequestType("window/showMessageRequest"),(e.LogMessageNotification||(e.LogMessageNotification={})).type=new n.ProtocolNotificationType("window/logMessage"),(e.TelemetryEventNotification||(e.TelemetryEventNotification={})).type=new n.ProtocolNotificationType("telemetry/event"),(R=e.TextDocumentSyncKind||(e.TextDocumentSyncKind={})).None=0,R.Full=1,R.Incremental=2,(I=e.DidOpenTextDocumentNotification||(e.DidOpenTextDocumentNotification={})).method="textDocument/didOpen",I.type=new n.ProtocolNotificationType(I.method),(D=e.TextDocumentContentChangeEvent||(e.TextDocumentContentChangeEvent={})).isIncremental=function(e){let t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)},D.isFull=function(e){let t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength},(x=e.DidChangeTextDocumentNotification||(e.DidChangeTextDocumentNotification={})).method="textDocument/didChange",x.type=new n.ProtocolNotificationType(x.method),(b=e.DidCloseTextDocumentNotification||(e.DidCloseTextDocumentNotification={})).method="textDocument/didClose",b.type=new n.ProtocolNotificationType(b.method),(S=e.DidSaveTextDocumentNotification||(e.DidSaveTextDocumentNotification={})).method="textDocument/didSave",S.type=new n.ProtocolNotificationType(S.method),(k=e.TextDocumentSaveReason||(e.TextDocumentSaveReason={})).Manual=1,k.AfterDelay=2,k.FocusOut=3,(O=e.WillSaveTextDocumentNotification||(e.WillSaveTextDocumentNotification={})).method="textDocument/willSave",O.type=new n.ProtocolNotificationType(O.method),(N=e.WillSaveTextDocumentWaitUntilRequest||(e.WillSaveTextDocumentWaitUntilRequest={})).method="textDocument/willSaveWaitUntil",N.type=new n.ProtocolRequestType(N.method),(e.DidChangeWatchedFilesNotification||(e.DidChangeWatchedFilesNotification={})).type=new n.ProtocolNotificationType("workspace/didChangeWatchedFiles"),(P=e.FileChangeType||(e.FileChangeType={})).Created=1,P.Changed=2,P.Deleted=3,(w=e.WatchKind||(e.WatchKind={})).Create=1,w.Change=2,w.Delete=4,(e.PublishDiagnosticsNotification||(e.PublishDiagnosticsNotification={})).type=new n.ProtocolNotificationType("textDocument/publishDiagnostics"),function(e){e.Invoked=1,e.TriggerCharacter=2,e.TriggerForIncompleteCompletions=3}(e.CompletionTriggerKind||(e.CompletionTriggerKind={})),(L=e.CompletionRequest||(e.CompletionRequest={})).method="textDocument/completion",L.type=new n.ProtocolRequestType(L.method),(F=e.CompletionResolveRequest||(e.CompletionResolveRequest={})).method="completionItem/resolve",F.type=new n.ProtocolRequestType(F.method),(M=e.HoverRequest||(e.HoverRequest={})).method="textDocument/hover",M.type=new n.ProtocolRequestType(M.method),function(e){e.Invoked=1,e.TriggerCharacter=2,e.ContentChange=3}(e.SignatureHelpTriggerKind||(e.SignatureHelpTriggerKind={})),($=e.SignatureHelpRequest||(e.SignatureHelpRequest={})).method="textDocument/signatureHelp",$.type=new n.ProtocolRequestType($.method),(B=e.DefinitionRequest||(e.DefinitionRequest={})).method="textDocument/definition",B.type=new n.ProtocolRequestType(B.method),(q=e.ReferencesRequest||(e.ReferencesRequest={})).method="textDocument/references",q.type=new n.ProtocolRequestType(q.method),(j=e.DocumentHighlightRequest||(e.DocumentHighlightRequest={})).method="textDocument/documentHighlight",j.type=new n.ProtocolRequestType(j.method),(U=e.DocumentSymbolRequest||(e.DocumentSymbolRequest={})).method="textDocument/documentSymbol",U.type=new n.ProtocolRequestType(U.method),(W=e.CodeActionRequest||(e.CodeActionRequest={})).method="textDocument/codeAction",W.type=new n.ProtocolRequestType(W.method),(K=e.CodeActionResolveRequest||(e.CodeActionResolveRequest={})).method="codeAction/resolve",K.type=new n.ProtocolRequestType(K.method),(G=e.WorkspaceSymbolRequest||(e.WorkspaceSymbolRequest={})).method="workspace/symbol",G.type=new n.ProtocolRequestType(G.method),(V=e.CodeLensRequest||(e.CodeLensRequest={})).method="textDocument/codeLens",V.type=new n.ProtocolRequestType(V.method),(H=e.CodeLensResolveRequest||(e.CodeLensResolveRequest={})).method="codeLens/resolve",H.type=new n.ProtocolRequestType(H.method),(z=e.CodeLensRefreshRequest||(e.CodeLensRefreshRequest={})).method="workspace/codeLens/refresh",z.type=new n.ProtocolRequestType0(z.method),(Y=e.DocumentLinkRequest||(e.DocumentLinkRequest={})).method="textDocument/documentLink",Y.type=new n.ProtocolRequestType(Y.method),(X=e.DocumentLinkResolveRequest||(e.DocumentLinkResolveRequest={})).method="documentLink/resolve",X.type=new n.ProtocolRequestType(X.method),(J=e.DocumentFormattingRequest||(e.DocumentFormattingRequest={})).method="textDocument/formatting",J.type=new n.ProtocolRequestType(J.method),(Q=e.DocumentRangeFormattingRequest||(e.DocumentRangeFormattingRequest={})).method="textDocument/rangeFormatting",Q.type=new n.ProtocolRequestType(Q.method),(Z=e.DocumentOnTypeFormattingRequest||(e.DocumentOnTypeFormattingRequest={})).method="textDocument/onTypeFormatting",Z.type=new n.ProtocolRequestType(Z.method),(e.PrepareSupportDefaultBehavior||(e.PrepareSupportDefaultBehavior={})).Identifier=1,(ee=e.RenameRequest||(e.RenameRequest={})).method="textDocument/rename",ee.type=new n.ProtocolRequestType(ee.method),(te=e.PrepareRenameRequest||(e.PrepareRenameRequest={})).method="textDocument/prepareRename",te.type=new n.ProtocolRequestType(te.method),(e.ExecuteCommandRequest||(e.ExecuteCommandRequest={})).type=new n.ProtocolRequestType("workspace/executeCommand"),(e.ApplyWorkspaceEditRequest||(e.ApplyWorkspaceEditRequest={})).type=new n.ProtocolRequestType("workspace/applyEdit")}(Zm);var _g={};Object.defineProperty(_g,"__esModule",{value:!0}),_g.createProtocolConnection=void 0;const Cg=lh;var Tg,Ag,Rg,Ig;_g.createProtocolConnection=function(e,t,n,r){return Cg.ConnectionStrategy.is(r)&&(r={connectionStrategy:r}),Cg.createMessageConnection(e,t,n,r)},function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.LSPErrorCodes=e.createProtocolConnection=void 0,n(lh,e),n(Xm,e),n(Jm,e),n(Zm,e);var r,i=_g;Object.defineProperty(e,"createProtocolConnection",{enumerable:!0,get:function(){return i.createProtocolConnection}}),(r=e.LSPErrorCodes||(e.LSPErrorCodes={})).lspReservedErrorRangeStart=-32899,r.ContentModified=-32801,r.RequestCancelled=-32800,r.lspReservedErrorRangeEnd=-32800}(dm),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createProtocolConnection=void 0;const r=fm;n(fm,e),n(dm,e),e.createProtocolConnection=function(e,t,n,i){return r.createMessageConnection(e,t,n,i)}}(ch),(Tg||(Tg={})).is=function(e){return!!e&&"data"in e},(Ag||(Ag={})).is=function(e){return!!e&&"data"in e},(Rg||(Rg={})).is=function(e){return!!e&&"data"in e},(Ig||(Ig={})).is=function(e){return!!e&&"data"in e};class Dg{constructor(e){this._monaco=e}asPosition(e,t){return{line:null==e?void 0:e-1,character:null==t?void 0:t-1}}asRange(e){if(void 0!==e){if(null===e)return null;if(void 0!==e.insert)return this.asRange(e.insert);return{start:this.asPosition(e.startLineNumber,e.startColumn),end:this.asPosition(e.endLineNumber,e.endColumn)}}}asTextDocumentIdentifier(e){return{uri:e.uri.toString()}}asTextDocumentPositionParams(e,t){return{textDocument:this.asTextDocumentIdentifier(e),position:this.asPosition(t.lineNumber,t.column)}}asCompletionParams(e,t,n){return Object.assign(this.asTextDocumentPositionParams(e,t),{context:this.asCompletionContext(n)})}asCompletionContext(e){return{triggerKind:this.asCompletionTriggerKind(e.triggerKind),triggerCharacter:e.triggerCharacter}}asSignatureHelpContext(e){return{triggerKind:this.asSignatureHelpTriggerKind(e.triggerKind),triggerCharacter:e.triggerCharacter,isRetrigger:e.isRetrigger,activeSignatureHelp:this.asSignatureHelp(e.activeSignatureHelp)}}asSignatureHelp(e){if(void 0!==e)return{signatures:e.signatures.map((e=>this.asSignatureInformation(e))),activeParameter:e.activeParameter,activeSignature:e.activeSignature}}asSignatureInformation(e){return{documentation:this.asMarkupContent(e.documentation),label:e.label,parameters:e.parameters.map((e=>this.asParameterInformation(e))),activeParameter:e.activeParameter}}asParameterInformation(e){return{documentation:this.asMarkupContent(e.documentation),label:e.label}}asMarkupContent(e){if(void 0!==e)return"string"==typeof e?e:{kind:ch.MarkupKind.Markdown,value:e.value}}asSignatureHelpTriggerKind(e){switch(e){case this._monaco.languages.SignatureHelpTriggerKind.ContentChange:return ch.SignatureHelpTriggerKind.ContentChange;case this._monaco.languages.SignatureHelpTriggerKind.TriggerCharacter:return ch.SignatureHelpTriggerKind.TriggerCharacter;default:return ch.SignatureHelpTriggerKind.Invoked}}asCompletionTriggerKind(e){switch(e){case this._monaco.languages.CompletionTriggerKind.TriggerCharacter:return ch.CompletionTriggerKind.TriggerCharacter;case this._monaco.languages.CompletionTriggerKind.TriggerForIncompleteCompletions:return ch.CompletionTriggerKind.TriggerForIncompleteCompletions;default:return ch.CompletionTriggerKind.Invoked}}asCompletionItem(e){var t;const n={label:e.label},r=Rg.is(e)?e:void 0;return e.detail&&(n.detail=e.detail),e.documentation&&("string"==typeof e.documentation?n.documentation=e.documentation:n.documentation=this.asDocumentation(null!=(t=null==r?void 0:r.documentationFormat)?t:ch.MarkupKind.Markdown,e.documentation)),e.filterText&&(n.filterText=e.filterText),this.fillPrimaryInsertText(n,e),rg(e.kind)&&(n.kind=this.asCompletionItemKind(e.kind,null==r?void 0:r.originalItemKind)),e.sortText&&(n.sortText=e.sortText),e.additionalTextEdits&&(n.additionalTextEdits=this.asTextEdits(e.additionalTextEdits)),e.command&&(n.command=this.asCommand(e.command)),e.commitCharacters&&(n.commitCharacters=e.commitCharacters.slice()),e.command&&(n.command=this.asCommand(e.command)),r&&(void 0!==r.data&&(n.data=r.data),!0!==r.deprecated&&!1!==r.deprecated||(n.deprecated=r.deprecated)),n}asCompletionItemKind(e,t){if(void 0!==t)return t;switch(e){case this._monaco.languages.CompletionItemKind.Method:return ch.CompletionItemKind.Method;case this._monaco.languages.CompletionItemKind.Function:return ch.CompletionItemKind.Function;case this._monaco.languages.CompletionItemKind.Constructor:return ch.CompletionItemKind.Constructor;case this._monaco.languages.CompletionItemKind.Field:return ch.CompletionItemKind.Field;case this._monaco.languages.CompletionItemKind.Variable:return ch.CompletionItemKind.Variable;case this._monaco.languages.CompletionItemKind.Class:return ch.CompletionItemKind.Class;case this._monaco.languages.CompletionItemKind.Struct:return ch.CompletionItemKind.Struct;case this._monaco.languages.CompletionItemKind.Interface:return ch.CompletionItemKind.Interface;case this._monaco.languages.CompletionItemKind.Module:return ch.CompletionItemKind.Module;case this._monaco.languages.CompletionItemKind.Property:return ch.CompletionItemKind.Property;case this._monaco.languages.CompletionItemKind.Event:return ch.CompletionItemKind.Event;case this._monaco.languages.CompletionItemKind.Operator:return ch.CompletionItemKind.Operator;case this._monaco.languages.CompletionItemKind.Unit:return ch.CompletionItemKind.Unit;case this._monaco.languages.CompletionItemKind.Value:return ch.CompletionItemKind.Value;case this._monaco.languages.CompletionItemKind.Constant:return ch.CompletionItemKind.Constant;case this._monaco.languages.CompletionItemKind.Enum:return ch.CompletionItemKind.Enum;case this._monaco.languages.CompletionItemKind.EnumMember:return ch.CompletionItemKind.EnumMember;case this._monaco.languages.CompletionItemKind.Keyword:return ch.CompletionItemKind.Keyword;case this._monaco.languages.CompletionItemKind.Text:return ch.CompletionItemKind.Text;case this._monaco.languages.CompletionItemKind.Color:return ch.CompletionItemKind.Color;case this._monaco.languages.CompletionItemKind.File:return ch.CompletionItemKind.File;case this._monaco.languages.CompletionItemKind.Reference:return ch.CompletionItemKind.Reference;case this._monaco.languages.CompletionItemKind.Customcolor:return ch.CompletionItemKind.Color;case this._monaco.languages.CompletionItemKind.Folder:return ch.CompletionItemKind.Folder;case this._monaco.languages.CompletionItemKind.TypeParameter:return ch.CompletionItemKind.TypeParameter;case this._monaco.languages.CompletionItemKind.Snippet:return ch.CompletionItemKind.Snippet;default:return e+1}}asDocumentation(e,t){switch(e){case ch.MarkupKind.PlainText:return{kind:e,value:t};case ch.MarkupKind.Markdown:return{kind:e,value:t.value};default:return`Unsupported Markup content received. Kind is: ${e}`}}fillPrimaryInsertText(e,t){let n,r,i=ch.InsertTextFormat.PlainText;void 0!==t.insertTextRules&&0==(t.insertTextRules&this._monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet)&&(i=ch.InsertTextFormat.Snippet,n=t.insertText),e.insertTextFormat=i,n=t.insertText,t.range&&(r=this.asRange(t.range)),e.insertTextFormat=i,t.fromEdit&&n&&r?e.textEdit={newText:n,range:r}:e.insertText=n,e.insertTextMode=t.insertTextMode}asTextEdit(e){return{range:this.asRange(e.range),newText:e.text||""}}asTextEdits(e){if(e)return e.map((e=>this.asTextEdit(e)))}asReferenceParams(e,t,n){return{textDocument:this.asTextDocumentIdentifier(e),position:this.asPosition(t.lineNumber,t.column),context:{includeDeclaration:n.includeDeclaration}}}asDocumentSymbolParams(e){return{textDocument:this.asTextDocumentIdentifier(e)}}asCodeLensParams(e){return{textDocument:this.asTextDocumentIdentifier(e)}}asDiagnosticSeverity(e){switch(e){case this._monaco.MarkerSeverity.Error:return ch.DiagnosticSeverity.Error;case this._monaco.MarkerSeverity.Warning:return ch.DiagnosticSeverity.Warning;case this._monaco.MarkerSeverity.Info:return ch.DiagnosticSeverity.Information;case this._monaco.MarkerSeverity.Hint:return ch.DiagnosticSeverity.Hint}}asDiagnostic(e){const t=this.asRange(new this._monaco.Range(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn)),n=this.asDiagnosticSeverity(e.severity);return ch.Diagnostic.create(t,e.message,n,e.code,e.source)}asDiagnostics(e){if(e)return e.map((e=>this.asDiagnostic(e)))}asCodeActionContext(e){if(!e)return;const t=this.asDiagnostics(e.markers);return ch.CodeActionContext.create(t,ng(e.only)?[e.only]:void 0)}asCodeActionParams(e,t,n){return{textDocument:this.asTextDocumentIdentifier(e),range:this.asRange(t),context:this.asCodeActionContext(n)}}asCommand(e){if(e){const t=e.arguments||[];return ch.Command.create(e.title,e.id,...t)}}asCodeLens(e){const t=ch.CodeLens.create(this.asRange(e.range));return e.command&&(t.command=this.asCommand(e.command)),Ag.is(e)&&e.data&&(t.data=e.data),t}asFormattingOptions(e){return{tabSize:e.tabSize,insertSpaces:e.insertSpaces}}asDocumentFormattingParams(e,t){return{textDocument:this.asTextDocumentIdentifier(e),options:this.asFormattingOptions(t)}}asDocumentRangeFormattingParams(e,t,n){return{textDocument:this.asTextDocumentIdentifier(e),range:this.asRange(t),options:this.asFormattingOptions(n)}}asDocumentOnTypeFormattingParams(e,t,n,r){return{textDocument:this.asTextDocumentIdentifier(e),position:this.asPosition(t.lineNumber,t.column),ch:n,options:this.asFormattingOptions(r)}}asRenameParams(e,t,n){return{textDocument:this.asTextDocumentIdentifier(e),position:this.asPosition(t.lineNumber,t.column),newName:n}}asDocumentLinkParams(e){return{textDocument:this.asTextDocumentIdentifier(e)}}asDocumentLink(e){const t=ch.DocumentLink.create(this.asRange(e.range));return e.url&&(t.target="string"==typeof e.url?e.url:e.url.toString()),Tg.is(e)&&e.data&&(t.data=e.data),e.tooltip&&(t.tooltip=e.tooltip),t}asCodeAction(e){const t={title:e.title},n=Ig.is(e)?e:void 0;if(rg(e.kind)&&(t.kind=e.kind),e.diagnostics&&(t.diagnostics=this.asDiagnostics(e.diagnostics)),e.edit)throw new Error("VS Code code actions can only be converted to a protocol code action without an edit.");return e.command&&(t.command=this.asCommand(e.command)),void 0!==e.isPreferred&&(t.isPreferred=e.isPreferred),e.disabled&&(t.disabled={reason:e.disabled}),n&&void 0!==n.data&&(t.data=n.data),t}}const xg="Call";const bg="Character";function Sg(e){return _v.isInstance(e,bg)}const kg="DeclareKind";function Og(e){return _v.isInstance(e,kg)}const Ng="Expression";const Pg="Identifier";const wg="LogicStatment";function Lg(e){return _v.isInstance(e,wg)}const Fg="Macro";function Mg(e){return _v.isInstance(e,Fg)}function $g(e){return _v.isInstance(e,"MacroParam")}const Bg="Modifier";function qg(e){return _v.isInstance(e,Bg)}function jg(e){return _v.isInstance(e,"ModifierRef")}const Ug="NameIdentifier";const Wg="Param";function Kg(e){return _v.isInstance(e,Wg)}const Gg="PlainTextExpression";function Vg(e){return _v.isInstance(e,Gg)}function Hg(e){return _v.isInstance(e,"QualifiedName")}const zg="Variable";function Yg(e){return _v.isInstance(e,"VariableIdentifier")}const Xg="AtInline";function Jg(e){return _v.isInstance(e,Xg)}const Qg="CallMacro";function Zg(e){return _v.isInstance(e,Qg)}const ev="Mark",tv="CharactersDeclare";const nv="MacroDeclare";const rv="OtherDeclare";function iv(e){return _v.isInstance(e,rv)}const ov="CharactersDeclareKind",av="KeyedDeclareKind",sv="MacrosDeclareKind",uv="LiteralExpression";function cv(e){return _v.isInstance(e,uv)}const lv="TextExpression";function pv(e){return _v.isInstance(e,lv)}const fv="Action";function dv(e){return _v.isInstance(e,fv)}const hv="Dialog";function mv(e){return _v.isInstance(e,hv)}const gv="BooleanLiteral",vv="NumberLiteral",yv="StringLiteral";class Ev{getAllTypes(){return["Call","Character","CharacterRef","Content","Declare","DeclareKind","Document","DocumentContents","ESCToken","Expression","Identifier","List","LogicStatment","Macro","MacroParam","Modifier","ModifierRef","NameIdentifier","Param","Pipe","Plain","PlainTextExpression","QualifiedName","StoryBlock","Template","TitlePage","Variable","VariableIdentifier","YamlBlock","AtInline","CallMacro","Label","Mark","CharactersDeclare","MacroDeclare","OtherDeclare","CharactersDeclareKind","KeyedDeclareKind","MacrosDeclareKind","Addition","Assign","Comma","LiteralExpression","Logic","Multiplication","RefExpression","Relaction","TextExpression","TopExpression","ElseIfStatement","ElseStatement","EndStatement","IfStatement","VarStatement","MacroPipe","TextPipe","Action","Dialog","BooleanLiteral","NumberLiteral","StringLiteral"]}isInstance(e,t){return Vp(e)&&this.isSubtype(e.$type,t)}isSubtype(e,t){if(e===t)return!0;switch(e){case Xg:case Qg:case ev:return this.isSubtype(xg,t);case"Label":return this.isSubtype(xg,t)||this.isSubtype(ev,t);case tv:case nv:case rv:return this.isSubtype("Declare",t);case ov:case av:case sv:return this.isSubtype(kg,t);case"Addition":case"Assign":case"Comma":case uv:case"Logic":case"Multiplication":case"RefExpression":case"Relaction":case lv:case"TopExpression":return this.isSubtype(Ng,t);case"ElseIfStatement":case"ElseStatement":case"EndStatement":case"IfStatement":case"VarStatement":return this.isSubtype(wg,t);case"MacroPipe":case"TextPipe":return this.isSubtype("Pipe",t);case fv:case hv:return this.isSubtype("StoryBlock",t);case gv:case vv:case yv:return this.isSubtype(uv,t);default:return!1}}getReferenceType(e){switch(e){case"CharacterRef:ref":return bg;case"MacroParam:ref":return Wg;case"ModifierRef:ref":return Bg;case"QualifiedName:name":return Pg;case"AtInline:ref":return bg;case"CallMacro:ref":return Fg;case"RefExpression:ref":return zg;case"MacroPipe:ref":return Fg;case"Dialog:ref":return bg;default:throw new Error(`${e} is not a valid reference id.`)}}}const _v=new Ev;function Cv(e){return t=e,_v.isInstance(t,Ug)||function(e){return _v.isInstance(e,Pg)}(e)||Yg(e)||Og(e);var t}class Tv extends Dd{constructor(e){super(e)}async createDescriptions(e,t=ch.CancellationToken.None){const n=[];for(const r of Zp(e.parseResult.value)){await fs(t);const i=r.node,o=this.nameProvider.getQualifiedName(i.$container,i);if(o){const t=this.createDescription(i,o,e);n.push(t)}}return n}}class Av extends bd{getAstNodePath(e){return super.getAstNodePath(Cv(e)?e.$container:e)}pathSegment(e,t){if(e.$cstNode){const n=fd(e.$cstNode);if(n){if(ad(n.cardinality)||sd(n.operator)){const r=t[n.feature].indexOf(e);return n.feature+"@"+r}return n.feature}}return"<missing>"}}class Rv extends Kf{constructor(e){super(e);const t=e.validation.AdvscriptValidator,n={Character:t.checkNameStartsWithUpper,Param:t.checkNameStartsWithCapital,CharactersDeclare:t.checkUniqueElementName,MacroDeclare:t.checkUniqueElementName,Dialog:t.checkUniqueElementName,Macro:t.checkUniqueElementName,MacroPipe:t.checkUniqueElementName,Call:t.checkUniqueElementName};this.register(n,t)}}var Iv;!function(e){e.identifierNameLowercase="identifier-name-lowercase-first",e.identifierNameUppercase="identifier-name-uppercase-first"}(Iv||(Iv={}));class Dv{constructor(e){this.services=e,this.checkUniqueElementName=(e,t)=>{var n,r;const i=new Map,o=[...null!=(n=e.elements)?n:[],...Mg(e)||mv(e)?e.modifiers:[]];if(!o.length)return;const a=uh.exports.template("A ${$type}'s name has to be unique."),s=[],u=[];for(const c of o){const e=null==(r=this.services.references.NameProvider.getName(c))?void 0:r.toLowerCase();if(e)if(i.has(e)){const e=this.services.references.NameProvider.getNameNode(c).range,t=a(c);u.push({severity:"warning",message:t,info:{node:c,range:e,tags:[ch.DiagnosticTag.Unnecessary]}}),s.push({location:{range:e,uri:Jp(c).uri.toString()},message:t})}else i.set(e,!0)}for(const{severity:c,message:l,info:p}of u)t(c,l,{...p,relatedInformation:s.filter((e=>e.location.range!==p.range))})}}checkNameStartsWithCapital(e,t){if(e.name){const n=e.name.text.substring(0,1);(null==n?void 0:n.toLowerCase())!==n&&t("warning",e.$type+" name should start with [a-z].",{node:e,property:"name",code:Iv.identifierNameLowercase})}}checkNameStartsWithUpper(e,t){if(e.name){const n=e.name.text.substring(0,1);(null==n?void 0:n.toUpperCase())!==n&&t("warning",e.$type+" name should start with [A-Z].",{node:e.name,property:"text",code:Iv.identifierNameUppercase})}}}var xv={},bv={};Object.defineProperty(bv,"__esModule",{value:!0}),bv.VERSION=void 0,bv.VERSION="9.1.0";var Sv={},kv={},Ov=rr&&rr.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))};function Nv(e){return e&&0===e.length}function Pv(e){return null==e?[]:Object.keys(e)}function wv(e){for(var t=[],n=Object.keys(e),r=0;r<n.length;r++)t.push(e[n[r]]);return t}function Lv(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++)t.call(null,e[n],n);else{if(!Kv(e))throw Error("non exhaustive match");var r=Pv(e);for(n=0;n<r.length;n++){var i=r[n],o=e[i];t.call(null,o,i)}}}function Fv(e,t){var n=[];if(Array.isArray(e))for(var r=0;r<e.length;r++){var i=e[r];t.call(null,i)&&n.push(i)}return n}function Mv(e,t){return Fv(e,(function(e){return!t(e)}))}function $v(e,t){return!!Kv(e)&&e.hasOwnProperty(t)}function Bv(e,t){return void 0!==Uv(e,(function(e){return e===t}))}function qv(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n]);return t}function jv(e){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}function Uv(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(t.call(null,r))return r}}function Wv(e,t,n){for(var r=Array.isArray(e),i=r?e:wv(e),o=r?[]:Pv(e),a=n,s=0;s<i.length;s++)a=t.call(null,a,i[s],r?s:o[s]);return a}function Kv(e){return e instanceof Object}function Gv(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0;r<t.length;r++)for(var i=t[r],o=Pv(i),a=0;a<o.length;a++){var s=o[a];$v(e,s)||(e[s]=i[s])}return e}Object.defineProperty(kv,"__esModule",{value:!0}),kv.toFastProperties=kv.timer=kv.peek=kv.isES2015MapSupported=kv.PRINT_WARNING=kv.PRINT_ERROR=kv.packArray=kv.IDENTITY=kv.NOOP=kv.merge=kv.groupBy=kv.defaults=kv.assignNoOverwrite=kv.assign=kv.zipObject=kv.sortBy=kv.indexOf=kv.some=kv.difference=kv.every=kv.isObject=kv.isRegExp=kv.isArray=kv.partial=kv.uniq=kv.compact=kv.reduce=kv.findAll=kv.find=kv.cloneObj=kv.cloneArr=kv.contains=kv.has=kv.pick=kv.reject=kv.filter=kv.dropRight=kv.drop=kv.isFunction=kv.isUndefined=kv.isString=kv.forEach=kv.last=kv.first=kv.flatten=kv.map=kv.mapValues=kv.values=kv.keys=kv.isEmpty=void 0,kv.upperFirst=void 0,kv.isEmpty=Nv,kv.keys=Pv,kv.values=wv,kv.mapValues=function(e,t){for(var n=[],r=Pv(e),i=0;i<r.length;i++){var o=r[i];n.push(t.call(null,e[o],o))}return n},kv.map=function(e,t){for(var n=[],r=0;r<e.length;r++)n.push(t.call(null,e[r],r));return n},kv.flatten=function e(t){for(var n=[],r=0;r<t.length;r++){var i=t[r];Array.isArray(i)?n=n.concat(e(i)):n.push(i)}return n},kv.first=function(e){return Nv(e)?void 0:e[0]},kv.last=function(e){var t=e&&e.length;return t?e[t-1]:void 0},kv.forEach=Lv,kv.isString=function(e){return"string"==typeof e},kv.isUndefined=function(e){return void 0===e},kv.isFunction=function(e){return e instanceof Function},kv.drop=function(e,t){return void 0===t&&(t=1),e.slice(t,e.length)},kv.dropRight=function(e,t){return void 0===t&&(t=1),e.slice(0,e.length-t)},kv.filter=Fv,kv.reject=Mv,kv.pick=function(e,t){for(var n=Object.keys(e),r={},i=0;i<n.length;i++){var o=n[i],a=e[o];t(a)&&(r[o]=a)}return r},kv.has=$v,kv.contains=Bv,kv.cloneArr=qv,kv.cloneObj=jv,kv.find=Uv,kv.findAll=function(e,t){for(var n=[],r=0;r<e.length;r++){var i=e[r];t.call(null,i)&&n.push(i)}return n},kv.reduce=Wv,kv.compact=function(e){return Mv(e,(function(e){return null==e}))},kv.uniq=function(e,t){void 0===t&&(t=function(e){return e});var n=[];return Wv(e,(function(e,r){var i=t(r);return Bv(n,i)?e:(n.push(i),e.concat(r))}),[])},kv.partial=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=[null],i=r.concat(t);return Function.bind.apply(e,i)},kv.isArray=function(e){return Array.isArray(e)},kv.isRegExp=function(e){return e instanceof RegExp},kv.isObject=Kv,kv.every=function(e,t){for(var n=0;n<e.length;n++)if(!t(e[n],n))return!1;return!0},kv.difference=function(e,t){return Mv(e,(function(e){return Bv(t,e)}))},kv.some=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!0;return!1},kv.indexOf=function(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return n;return-1},kv.sortBy=function(e,t){var n=qv(e);return n.sort((function(e,n){return t(e)-t(n)})),n},kv.zipObject=function(e,t){if(e.length!==t.length)throw Error("can't zipObject with different number of keys and values!");for(var n={},r=0;r<e.length;r++)n[e[r]]=t[r];return n},kv.assign=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0;r<t.length;r++)for(var i=t[r],o=Pv(i),a=0;a<o.length;a++){var s=o[a];e[s]=i[s]}return e},kv.assignNoOverwrite=Gv,kv.defaults=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Gv.apply(void 0,Ov([{}],e,!1))},kv.groupBy=function(e,t){var n={};return Lv(e,(function(e){var r=t(e),i=n[r];i?i.push(e):n[r]=[e]})),n},kv.merge=function(e,t){for(var n=jv(e),r=Pv(t),i=0;i<r.length;i++){var o=r[i],a=t[o];n[o]=a}return n},kv.NOOP=function(){},kv.IDENTITY=function(e){return e},kv.packArray=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];t.push(void 0!==r?r:void 0)}return t},kv.PRINT_ERROR=function(e){console&&console.error&&console.error("Error: "+e)},kv.PRINT_WARNING=function(e){console&&console.warn&&console.warn("Warning: "+e)},kv.isES2015MapSupported=function(){return"function"==typeof Map},kv.peek=function(e){return e[e.length-1]},kv.timer=function(e){var t=(new Date).getTime(),n=e();return{time:(new Date).getTime()-t,value:n}},kv.toFastProperties=function(e){function t(){}t.prototype=e;var n=new t;function r(){return typeof n.bar}return r(),r(),e},kv.upperFirst=function(e){if(!e)return e;var t=function(e,t){var n=e.substring(t,t+1);return Vv.test(n)?n:e[t]}(e,0);return t.toUpperCase()+e.substring(t.length)};var Vv=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;var Hv={},zv={},Yv={},Xv={},Jv={},Qv={},Zv={exports:{}};!function(e){!function(t,n){e.exports?e.exports=n():t.regexpToAst=n()}("undefined"!=typeof self?self:rr,(function(){function e(){}e.prototype.saveState=function(){return{idx:this.idx,input:this.input,groupIdx:this.groupIdx}},e.prototype.restoreState=function(e){this.idx=e.idx,this.input=e.input,this.groupIdx=e.groupIdx},e.prototype.pattern=function(e){this.idx=0,this.input=e,this.groupIdx=0,this.consumeChar("/");var t=this.disjunction();this.consumeChar("/");for(var n={type:"Flags",loc:{begin:this.idx,end:e.length},global:!1,ignoreCase:!1,multiLine:!1,unicode:!1,sticky:!1};this.isRegExpFlag();)switch(this.popChar()){case"g":s(n,"global");break;case"i":s(n,"ignoreCase");break;case"m":s(n,"multiLine");break;case"u":s(n,"unicode");break;case"y":s(n,"sticky")}if(this.idx!==this.input.length)throw Error("Redundant input: "+this.input.substring(this.idx));return{type:"Pattern",flags:n,value:t,loc:this.loc(0)}},e.prototype.disjunction=function(){var e=[],t=this.idx;for(e.push(this.alternative());"|"===this.peekChar();)this.consumeChar("|"),e.push(this.alternative());return{type:"Disjunction",value:e,loc:this.loc(t)}},e.prototype.alternative=function(){for(var e=[],t=this.idx;this.isTerm();)e.push(this.term());return{type:"Alternative",value:e,loc:this.loc(t)}},e.prototype.term=function(){return this.isAssertion()?this.assertion():this.atom()},e.prototype.assertion=function(){var e=this.idx;switch(this.popChar()){case"^":return{type:"StartAnchor",loc:this.loc(e)};case"$":return{type:"EndAnchor",loc:this.loc(e)};case"\\":switch(this.popChar()){case"b":return{type:"WordBoundary",loc:this.loc(e)};case"B":return{type:"NonWordBoundary",loc:this.loc(e)}}throw Error("Invalid Assertion Escape");case"(":var t;switch(this.consumeChar("?"),this.popChar()){case"=":t="Lookahead";break;case"!":t="NegativeLookahead"}u(t);var n=this.disjunction();return this.consumeChar(")"),{type:t,value:n,loc:this.loc(e)}}!function(){throw Error("Internal Error - Should never get here!")}()},e.prototype.quantifier=function(e){var t,n=this.idx;switch(this.popChar()){case"*":t={atLeast:0,atMost:1/0};break;case"+":t={atLeast:1,atMost:1/0};break;case"?":t={atLeast:0,atMost:1};break;case"{":var r=this.integerIncludingZero();switch(this.popChar()){case"}":t={atLeast:r,atMost:r};break;case",":t=this.isDigit()?{atLeast:r,atMost:this.integerIncludingZero()}:{atLeast:r,atMost:1/0},this.consumeChar("}")}if(!0===e&&void 0===t)return;u(t)}if(!0!==e||void 0!==t)return u(t),"?"===this.peekChar(0)?(this.consumeChar("?"),t.greedy=!1):t.greedy=!0,t.type="Quantifier",t.loc=this.loc(n),t},e.prototype.atom=function(){var e,t=this.idx;switch(this.peekChar()){case".":e=this.dotAll();break;case"\\":e=this.atomEscape();break;case"[":e=this.characterClass();break;case"(":e=this.group()}return void 0===e&&this.isPatternCharacter()&&(e=this.patternCharacter()),u(e),e.loc=this.loc(t),this.isQuantifier()&&(e.quantifier=this.quantifier()),e},e.prototype.dotAll=function(){return this.consumeChar("."),{type:"Set",complement:!0,value:[o("\n"),o("\r"),o("\u2028"),o("\u2029")]}},e.prototype.atomEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return this.decimalEscapeAtom();case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},e.prototype.decimalEscapeAtom=function(){return{type:"GroupBackReference",value:this.positiveInteger()}},e.prototype.characterClassEscape=function(){var e,t=!1;switch(this.popChar()){case"d":e=c;break;case"D":e=c,t=!0;break;case"s":e=p;break;case"S":e=p,t=!0;break;case"w":e=l;break;case"W":e=l,t=!0}return u(e),{type:"Set",value:e,complement:t}},e.prototype.controlEscapeAtom=function(){var e;switch(this.popChar()){case"f":e=o("\f");break;case"n":e=o("\n");break;case"r":e=o("\r");break;case"t":e=o("\t");break;case"v":e=o("\v")}return u(e),{type:"Character",value:e}},e.prototype.controlLetterEscapeAtom=function(){this.consumeChar("c");var e=this.popChar();if(!1===/[a-zA-Z]/.test(e))throw Error("Invalid ");return{type:"Character",value:e.toUpperCase().charCodeAt(0)-64}},e.prototype.nulCharacterAtom=function(){return this.consumeChar("0"),{type:"Character",value:o("\0")}},e.prototype.hexEscapeSequenceAtom=function(){return this.consumeChar("x"),this.parseHexDigits(2)},e.prototype.regExpUnicodeEscapeSequenceAtom=function(){return this.consumeChar("u"),this.parseHexDigits(4)},e.prototype.identityEscapeAtom=function(){return{type:"Character",value:o(this.popChar())}},e.prototype.classPatternCharacterAtom=function(){switch(this.peekChar()){case"\n":case"\r":case"\u2028":case"\u2029":case"\\":case"]":throw Error("TBD");default:return{type:"Character",value:o(this.popChar())}}},e.prototype.characterClass=function(){var e=[],t=!1;for(this.consumeChar("["),"^"===this.peekChar(0)&&(this.consumeChar("^"),t=!0);this.isClassAtom();){var n=this.classAtom();if("Character"===n.type&&this.isRangeDash()){this.consumeChar("-");var r=this.classAtom();if("Character"===r.type){if(r.value<n.value)throw Error("Range out of order in character class");e.push({from:n.value,to:r.value})}else a(n.value,e),e.push(o("-")),a(r.value,e)}else a(n.value,e)}return this.consumeChar("]"),{type:"Set",complement:t,value:e}},e.prototype.classAtom=function(){switch(this.peekChar()){case"]":case"\n":case"\r":case"\u2028":case"\u2029":throw Error("TBD");case"\\":return this.classEscape();default:return this.classPatternCharacterAtom()}},e.prototype.classEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"b":return this.consumeChar("b"),{type:"Character",value:o("\b")};case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},e.prototype.group=function(){var e=!0;switch(this.consumeChar("("),this.peekChar(0)){case"?":this.consumeChar("?"),this.consumeChar(":"),e=!1;break;default:this.groupIdx++}var t=this.disjunction();this.consumeChar(")");var n={type:"Group",capturing:e,value:t};return e&&(n.idx=this.groupIdx),n},e.prototype.positiveInteger=function(){var e=this.popChar();if(!1===i.test(e))throw Error("Expecting a positive integer");for(;r.test(this.peekChar(0));)e+=this.popChar();return parseInt(e,10)},e.prototype.integerIncludingZero=function(){var e=this.popChar();if(!1===r.test(e))throw Error("Expecting an integer");for(;r.test(this.peekChar(0));)e+=this.popChar();return parseInt(e,10)},e.prototype.patternCharacter=function(){var e=this.popChar();switch(e){case"\n":case"\r":case"\u2028":case"\u2029":case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":throw Error("TBD");default:return{type:"Character",value:o(e)}}},e.prototype.isRegExpFlag=function(){switch(this.peekChar(0)){case"g":case"i":case"m":case"u":case"y":return!0;default:return!1}},e.prototype.isRangeDash=function(){return"-"===this.peekChar()&&this.isClassAtom(1)},e.prototype.isDigit=function(){return r.test(this.peekChar(0))},e.prototype.isClassAtom=function(e){switch(void 0===e&&(e=0),this.peekChar(e)){case"]":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},e.prototype.isTerm=function(){return this.isAtom()||this.isAssertion()},e.prototype.isAtom=function(){if(this.isPatternCharacter())return!0;switch(this.peekChar(0)){case".":case"\\":case"[":case"(":return!0;default:return!1}},e.prototype.isAssertion=function(){switch(this.peekChar(0)){case"^":case"$":return!0;case"\\":switch(this.peekChar(1)){case"b":case"B":return!0;default:return!1}case"(":return"?"===this.peekChar(1)&&("="===this.peekChar(2)||"!"===this.peekChar(2));default:return!1}},e.prototype.isQuantifier=function(){var e=this.saveState();try{return void 0!==this.quantifier(!0)}catch(PI){return!1}finally{this.restoreState(e)}},e.prototype.isPatternCharacter=function(){switch(this.peekChar()){case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":case"/":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},e.prototype.parseHexDigits=function(e){for(var t="",r=0;r<e;r++){var i=this.popChar();if(!1===n.test(i))throw Error("Expecting a HexDecimal digits");t+=i}return{type:"Character",value:parseInt(t,16)}},e.prototype.peekChar=function(e){return void 0===e&&(e=0),this.input[this.idx+e]},e.prototype.popChar=function(){var e=this.peekChar(0);return this.consumeChar(),e},e.prototype.consumeChar=function(e){if(void 0!==e&&this.input[this.idx]!==e)throw Error("Expected: '"+e+"' but found: '"+this.input[this.idx]+"' at offset: "+this.idx);if(this.idx>=this.input.length)throw Error("Unexpected end of input");this.idx++},e.prototype.loc=function(e){return{begin:e,end:this.idx}};var t,n=/[0-9a-fA-F]/,r=/[0-9]/,i=/[1-9]/;function o(e){return e.charCodeAt(0)}function a(e,t){void 0!==e.length?e.forEach((function(e){t.push(e)})):t.push(e)}function s(e,t){if(!0===e[t])throw"duplicate flag "+t;e[t]=!0}function u(e){if(void 0===e)throw Error("Internal Error - Should never get here!")}var c=[];for(t=o("0");t<=o("9");t++)c.push(t);var l=[o("_")].concat(c);for(t=o("a");t<=o("z");t++)l.push(t);for(t=o("A");t<=o("Z");t++)l.push(t);var p=[o(" "),o("\f"),o("\n"),o("\r"),o("\t"),o("\v"),o("\t"),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o(" "),o("\u2028"),o("\u2029"),o(" "),o(" "),o("　"),o("\ufeff")];function f(){}return f.prototype.visitChildren=function(e){for(var t in e){var n=e[t];e.hasOwnProperty(t)&&(void 0!==n.type?this.visit(n):Array.isArray(n)&&n.forEach((function(e){this.visit(e)}),this))}},f.prototype.visit=function(e){switch(e.type){case"Pattern":this.visitPattern(e);break;case"Flags":this.visitFlags(e);break;case"Disjunction":this.visitDisjunction(e);break;case"Alternative":this.visitAlternative(e);break;case"StartAnchor":this.visitStartAnchor(e);break;case"EndAnchor":this.visitEndAnchor(e);break;case"WordBoundary":this.visitWordBoundary(e);break;case"NonWordBoundary":this.visitNonWordBoundary(e);break;case"Lookahead":this.visitLookahead(e);break;case"NegativeLookahead":this.visitNegativeLookahead(e);break;case"Character":this.visitCharacter(e);break;case"Set":this.visitSet(e);break;case"Group":this.visitGroup(e);break;case"GroupBackReference":this.visitGroupBackReference(e);break;case"Quantifier":this.visitQuantifier(e)}this.visitChildren(e)},f.prototype.visitPattern=function(e){},f.prototype.visitFlags=function(e){},f.prototype.visitDisjunction=function(e){},f.prototype.visitAlternative=function(e){},f.prototype.visitStartAnchor=function(e){},f.prototype.visitEndAnchor=function(e){},f.prototype.visitWordBoundary=function(e){},f.prototype.visitNonWordBoundary=function(e){},f.prototype.visitLookahead=function(e){},f.prototype.visitNegativeLookahead=function(e){},f.prototype.visitCharacter=function(e){},f.prototype.visitSet=function(e){},f.prototype.visitGroup=function(e){},f.prototype.visitGroupBackReference=function(e){},f.prototype.visitQuantifier=function(e){},{RegExpParser:e,BaseRegExpVisitor:f,VERSION:"0.5.0"}}))}(Zv);var ey={},ty={};Object.defineProperty(ty,"__esModule",{value:!0}),ty.clearRegExpParserCache=ty.getRegExpAst=void 0;var ny={},ry=new Zv.exports.RegExpParser;ty.getRegExpAst=function(e){var t=e.toString();if(ny.hasOwnProperty(t))return ny[t];var n=ry.pattern(t);return ny[t]=n,n},ty.clearRegExpParserCache=function(){ny={}},function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.canMatchCharCode=e.firstCharOptimizedIndices=e.getOptimizedStartCodesIndices=e.failedOptimizationPrefixMsg=void 0;var n=Zv.exports,r=kv,i=ty,o=Qv,a="Complement Sets are not supported for first char optimization";function s(e,t,n){switch(e.type){case"Disjunction":for(var i=0;i<e.value.length;i++)s(e.value[i],t,n);break;case"Alternative":var c=e.value;for(i=0;i<c.length;i++){var p=c[i];switch(p.type){case"EndAnchor":case"GroupBackReference":case"Lookahead":case"NegativeLookahead":case"StartAnchor":case"WordBoundary":case"NonWordBoundary":continue}var f=p;switch(f.type){case"Character":u(f.value,t,n);break;case"Set":if(!0===f.complement)throw Error(a);(0,r.forEach)(f.value,(function(e){if("number"==typeof e)u(e,t,n);else{var r=e;if(!0===n)for(var i=r.from;i<=r.to;i++)u(i,t,n);else{for(i=r.from;i<=r.to&&i<o.minOptimizationVal;i++)u(i,t,n);if(r.to>=o.minOptimizationVal)for(var a=r.from>=o.minOptimizationVal?r.from:o.minOptimizationVal,s=r.to,c=(0,o.charCodeToOptimizedIndex)(a),l=(0,o.charCodeToOptimizedIndex)(s),p=c;p<=l;p++)t[p]=p}}}));break;case"Group":s(f.value,t,n);break;default:throw Error("Non Exhaustive Match")}var d=void 0!==f.quantifier&&0===f.quantifier.atLeast;if("Group"===f.type&&!1===l(f)||"Group"!==f.type&&!1===d)break}break;default:throw Error("non exhaustive match!")}return(0,r.values)(t)}function u(e,t,n){var r=(0,o.charCodeToOptimizedIndex)(e);t[r]=r,!0===n&&function(e,t){var n=String.fromCharCode(e),r=n.toUpperCase();if(r!==n){t[i=(0,o.charCodeToOptimizedIndex)(r.charCodeAt(0))]=i}else{var i,a=n.toLowerCase();if(a!==n)t[i=(0,o.charCodeToOptimizedIndex)(a.charCodeAt(0))]=i}}(e,t)}function c(e,t){return(0,r.find)(e.value,(function(e){if("number"==typeof e)return(0,r.contains)(t,e);var n=e;return void 0!==(0,r.find)(t,(function(e){return n.from<=e&&e<=n.to}))}))}function l(e){return!(!e.quantifier||0!==e.quantifier.atLeast)||!!e.value&&((0,r.isArray)(e.value)?(0,r.every)(e.value,l):l(e.value))}e.failedOptimizationPrefixMsg='Unable to use "first char" lexer optimizations:\n',e.getOptimizedStartCodesIndices=function(t,o){void 0===o&&(o=!1);try{var u=(0,i.getRegExpAst)(t);return s(u.value,{},u.flags.ignoreCase)}catch(PI){if(PI.message===a)o&&(0,r.PRINT_WARNING)(e.failedOptimizationPrefixMsg+"\tUnable to optimize: < "+t.toString()+" >\n\tComplement Sets cannot be automatically optimized.\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.");else{var c="";o&&(c="\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details."),(0,r.PRINT_ERROR)(e.failedOptimizationPrefixMsg+"\n\tFailed parsing: < "+t.toString()+" >\n\tUsing the regexp-to-ast library version: "+n.VERSION+"\n\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues"+c)}}return[]},e.firstCharOptimizedIndices=s;var p=function(e){function n(t){var n=e.call(this)||this;return n.targetCharCodes=t,n.found=!1,n}return t(n,e),n.prototype.visitChildren=function(t){if(!0!==this.found){switch(t.type){case"Lookahead":return void this.visitLookahead(t);case"NegativeLookahead":return void this.visitNegativeLookahead(t)}e.prototype.visitChildren.call(this,t)}},n.prototype.visitCharacter=function(e){(0,r.contains)(this.targetCharCodes,e.value)&&(this.found=!0)},n.prototype.visitSet=function(e){e.complement?void 0===c(e,this.targetCharCodes)&&(this.found=!0):void 0!==c(e,this.targetCharCodes)&&(this.found=!0)},n}(n.BaseRegExpVisitor);e.canMatchCharCode=function(e,t){if(t instanceof RegExp){var n=(0,i.getRegExpAst)(t),o=new p(e);return o.visit(n),o.found}return void 0!==(0,r.find)(t,(function(t){return(0,r.contains)(e,t.charCodeAt(0))}))}}(ey),function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.charCodeToOptimizedIndex=e.minOptimizationVal=e.buildLineBreakIssueMessage=e.LineTerminatorOptimizedTester=e.isShortPattern=e.isCustomPattern=e.cloneEmptyGroups=e.performWarningRuntimeChecks=e.performRuntimeChecks=e.addStickyFlag=e.addStartOfInput=e.findUnreachablePatterns=e.findModesThatDoNotExist=e.findInvalidGroupType=e.findDuplicatePatterns=e.findUnsupportedFlags=e.findStartOfInputAnchor=e.findEmptyMatchRegExps=e.findEndOfInputAnchor=e.findInvalidPatterns=e.findMissingPatterns=e.validatePatterns=e.analyzeTokenTypes=e.enableSticky=e.disableSticky=e.SUPPORT_STICKY=e.MODES=e.DEFAULT_MODE=void 0;var n=Zv.exports,r=Jv,i=kv,o=ey,a=ty,s="PATTERN";function u(e){var t=(0,i.filter)(e,(function(e){return!(0,i.has)(e,s)}));return{errors:(0,i.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- missing static 'PATTERN' property",type:r.LexerDefinitionErrorType.MISSING_PATTERN,tokenTypes:[e]}})),valid:(0,i.difference)(e,t)}}function c(e){var t=(0,i.filter)(e,(function(e){var t=e.PATTERN;return!((0,i.isRegExp)(t)||(0,i.isFunction)(t)||(0,i.has)(t,"exec")||(0,i.isString)(t))}));return{errors:(0,i.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' can only be a RegExp, a Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",type:r.LexerDefinitionErrorType.INVALID_PATTERN,tokenTypes:[e]}})),valid:(0,i.difference)(e,t)}}e.DEFAULT_MODE="defaultMode",e.MODES="modes",e.SUPPORT_STICKY="boolean"==typeof new RegExp("(?:)").sticky,e.disableSticky=function(){e.SUPPORT_STICKY=!1},e.enableSticky=function(){e.SUPPORT_STICKY=!0},e.analyzeTokenTypes=function(t,n){var a,s=(n=(0,i.defaults)(n,{useSticky:e.SUPPORT_STICKY,debug:!1,safeMode:!1,positionTracking:"full",lineTerminatorCharacters:["\r","\n"],tracer:function(e,t){return t()}})).tracer;s("initCharCodeToOptimizedIndexMap",(function(){!function(){if((0,i.isEmpty)(b)){b=new Array(65536);for(var e=0;e<65536;e++)b[e]=e>255?255+~~(e/255):e}}()})),s("Reject Lexer.NA",(function(){a=(0,i.reject)(t,(function(e){return e.PATTERN===r.Lexer.NA}))}));var u,c,l,p,f,d,h,m,g,v,y,E=!1;s("Transform Patterns",(function(){E=!1,u=(0,i.map)(a,(function(e){var t=e.PATTERN;if((0,i.isRegExp)(t)){var r=t.source;return 1!==r.length||"^"===r||"$"===r||"."===r||t.ignoreCase?2!==r.length||"\\"!==r[0]||(0,i.contains)(["d","D","s","S","t","r","n","t","0","c","b","B","f","v","w","W"],r[1])?n.useSticky?C(t):_(t):r[1]:r}if((0,i.isFunction)(t))return E=!0,{exec:t};if((0,i.has)(t,"exec"))return E=!0,t;if("string"==typeof t){if(1===t.length)return t;var o=t.replace(/[\\^$.*+?()[\]{}|]/g,"\\$&"),a=new RegExp(o);return n.useSticky?C(a):_(a)}throw Error("non exhaustive match")}))})),s("misc mapping",(function(){c=(0,i.map)(a,(function(e){return e.tokenTypeIdx})),l=(0,i.map)(a,(function(e){var t=e.GROUP;if(t!==r.Lexer.SKIPPED){if((0,i.isString)(t))return t;if((0,i.isUndefined)(t))return!1;throw Error("non exhaustive match")}})),p=(0,i.map)(a,(function(e){var t=e.LONGER_ALT;if(t)return(0,i.isArray)(t)?(0,i.map)(t,(function(e){return(0,i.indexOf)(a,e)})):[(0,i.indexOf)(a,t)]})),f=(0,i.map)(a,(function(e){return e.PUSH_MODE})),d=(0,i.map)(a,(function(e){return(0,i.has)(e,"POP_MODE")}))})),s("Line Terminator Handling",(function(){var e=D(n.lineTerminatorCharacters);h=(0,i.map)(a,(function(e){return!1})),"onlyOffset"!==n.positionTracking&&(h=(0,i.map)(a,(function(t){return(0,i.has)(t,"LINE_BREAKS")?t.LINE_BREAKS:!1===R(t,e)?(0,o.canMatchCharCode)(e,t.PATTERN):void 0})))})),s("Misc Mapping #2",(function(){m=(0,i.map)(a,T),g=(0,i.map)(u,A),v=(0,i.reduce)(a,(function(e,t){var n=t.GROUP;return(0,i.isString)(n)&&n!==r.Lexer.SKIPPED&&(e[n]=[]),e}),{}),y=(0,i.map)(u,(function(e,t){return{pattern:u[t],longerAlt:p[t],canLineTerminator:h[t],isCustom:m[t],short:g[t],group:l[t],push:f[t],pop:d[t],tokenTypeIdx:c[t],tokenType:a[t]}}))}));var I=!0,k=[];return n.safeMode||s("First Char Optimization",(function(){k=(0,i.reduce)(a,(function(e,t,r){if("string"==typeof t.PATTERN){var a=S(t.PATTERN.charCodeAt(0));x(e,a,y[r])}else if((0,i.isArray)(t.START_CHARS_HINT)){var s;(0,i.forEach)(t.START_CHARS_HINT,(function(t){var n=S("string"==typeof t?t.charCodeAt(0):t);s!==n&&(s=n,x(e,n,y[r]))}))}else if((0,i.isRegExp)(t.PATTERN))if(t.PATTERN.unicode)I=!1,n.ensureOptimizations&&(0,i.PRINT_ERROR)(o.failedOptimizationPrefixMsg+"\tUnable to analyze < "+t.PATTERN.toString()+" > pattern.\n\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE");else{var u=(0,o.getOptimizedStartCodesIndices)(t.PATTERN,n.ensureOptimizations);(0,i.isEmpty)(u)&&(I=!1),(0,i.forEach)(u,(function(t){x(e,t,y[r])}))}else n.ensureOptimizations&&(0,i.PRINT_ERROR)(o.failedOptimizationPrefixMsg+"\tTokenType: <"+t.name+"> is using a custom token pattern without providing <start_chars_hint> parameter.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE"),I=!1;return e}),[])})),s("ArrayPacking",(function(){k=(0,i.packArray)(k)})),{emptyGroups:v,patternIdxToConfig:y,charCodeToPatternIdxToConfig:k,hasCustom:E,canBeOptimized:I}},e.validatePatterns=function(e,t){var n=[],r=u(e);n=n.concat(r.errors);var o=c(r.valid),a=o.valid;return n=(n=(n=(n=(n=n.concat(o.errors)).concat(function(e){var t=[],n=(0,i.filter)(e,(function(e){return(0,i.isRegExp)(e.PATTERN)}));return t=(t=(t=(t=(t=t.concat(p(n))).concat(h(n))).concat(m(n))).concat(g(n))).concat(f(n))}(a))).concat(v(a))).concat(y(a,t))).concat(E(a))},e.findMissingPatterns=u,e.findInvalidPatterns=c;var l=/[^\\][\$]/;function p(e){var o=function(e){function n(){var t=null!==e&&e.apply(this,arguments)||this;return t.found=!1,t}return t(n,e),n.prototype.visitEndAnchor=function(e){this.found=!0},n}(n.BaseRegExpVisitor),s=(0,i.filter)(e,(function(e){var t=e.PATTERN;try{var n=(0,a.getRegExpAst)(t),r=new o;return r.visit(n),r.found}catch(PI){return l.test(t.source)}}));return(0,i.map)(s,(function(e){return{message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+e.name+"<- static 'PATTERN' cannot contain end of input anchor '$'\n\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:r.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,tokenTypes:[e]}}))}function f(e){var t=(0,i.filter)(e,(function(e){return e.PATTERN.test("")}));return(0,i.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' must not match an empty string",type:r.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,tokenTypes:[e]}}))}e.findEndOfInputAnchor=p,e.findEmptyMatchRegExps=f;var d=/[^\\[][\^]|^\^/;function h(e){var o=function(e){function n(){var t=null!==e&&e.apply(this,arguments)||this;return t.found=!1,t}return t(n,e),n.prototype.visitStartAnchor=function(e){this.found=!0},n}(n.BaseRegExpVisitor),s=(0,i.filter)(e,(function(e){var t=e.PATTERN;try{var n=(0,a.getRegExpAst)(t),r=new o;return r.visit(n),r.found}catch(PI){return d.test(t.source)}}));return(0,i.map)(s,(function(e){return{message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+e.name+"<- static 'PATTERN' cannot contain start of input anchor '^'\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:r.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,tokenTypes:[e]}}))}function m(e){var t=(0,i.filter)(e,(function(e){var t=e.PATTERN;return t instanceof RegExp&&(t.multiline||t.global)}));return(0,i.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PATTERN' may NOT contain global('g') or multiline('m')",type:r.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,tokenTypes:[e]}}))}function g(e){var t=[],n=(0,i.map)(e,(function(n){return(0,i.reduce)(e,(function(e,o){return n.PATTERN.source!==o.PATTERN.source||(0,i.contains)(t,o)||o.PATTERN===r.Lexer.NA||(t.push(o),e.push(o)),e}),[])}));n=(0,i.compact)(n);var o=(0,i.filter)(n,(function(e){return e.length>1}));return(0,i.map)(o,(function(e){var t=(0,i.map)(e,(function(e){return e.name}));return{message:"The same RegExp pattern ->"+(0,i.first)(e).PATTERN+"<-has been used in all of the following Token Types: "+t.join(", ")+" <-",type:r.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,tokenTypes:e}}))}function v(e){var t=(0,i.filter)(e,(function(e){if(!(0,i.has)(e,"GROUP"))return!1;var t=e.GROUP;return t!==r.Lexer.SKIPPED&&t!==r.Lexer.NA&&!(0,i.isString)(t)}));return(0,i.map)(t,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",type:r.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,tokenTypes:[e]}}))}function y(e,t){var n=(0,i.filter)(e,(function(e){return void 0!==e.PUSH_MODE&&!(0,i.contains)(t,e.PUSH_MODE)}));return(0,i.map)(n,(function(e){return{message:"Token Type: ->"+e.name+"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->"+e.PUSH_MODE+"<-which does not exist",type:r.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,tokenTypes:[e]}}))}function E(e){var t=[],n=(0,i.reduce)(e,(function(e,t,n){var o,a,s=t.PATTERN;return s===r.Lexer.NA||((0,i.isString)(s)?e.push({str:s,idx:n,tokenType:t}):(0,i.isRegExp)(s)&&(o=s,a=[".","\\","[","]","|","^","$","(",")","?","*","+","{"],void 0===(0,i.find)(a,(function(e){return-1!==o.source.indexOf(e)})))&&e.push({str:s.source,idx:n,tokenType:t})),e}),[]);return(0,i.forEach)(e,(function(e,o){(0,i.forEach)(n,(function(n){var a=n.str,s=n.idx,u=n.tokenType;if(o<s&&function(e,t){if((0,i.isRegExp)(t)){var n=t.exec(e);return null!==n&&0===n.index}if((0,i.isFunction)(t))return t(e,0,[],{});if((0,i.has)(t,"exec"))return t.exec(e,0,[],{});if("string"==typeof t)return t===e;throw Error("non exhaustive match")}(a,e.PATTERN)){var c="Token: ->"+u.name+"<- can never be matched.\nBecause it appears AFTER the Token Type ->"+e.name+"<-in the lexer's definition.\nSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE";t.push({message:c,type:r.LexerDefinitionErrorType.UNREACHABLE_PATTERN,tokenTypes:[e,u]})}}))})),t}function _(e){var t=e.ignoreCase?"i":"";return new RegExp("^(?:"+e.source+")",t)}function C(e){var t=e.ignoreCase?"iy":"y";return new RegExp(""+e.source,t)}function T(e){var t=e.PATTERN;if((0,i.isRegExp)(t))return!1;if((0,i.isFunction)(t))return!0;if((0,i.has)(t,"exec"))return!0;if((0,i.isString)(t))return!1;throw Error("non exhaustive match")}function A(e){return!(!(0,i.isString)(e)||1!==e.length)&&e.charCodeAt(0)}function R(e,t){if((0,i.has)(e,"LINE_BREAKS"))return!1;if((0,i.isRegExp)(e.PATTERN)){try{(0,o.canMatchCharCode)(t,e.PATTERN)}catch(PI){return{issue:r.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,errMsg:PI.message}}return!1}if((0,i.isString)(e.PATTERN))return!1;if(T(e))return{issue:r.LexerDefinitionErrorType.CUSTOM_LINE_BREAK};throw Error("non exhaustive match")}function I(e,t){if(t.issue===r.LexerDefinitionErrorType.IDENTIFY_TERMINATOR)return"Warning: unable to identify line terminator usage in pattern.\n\tThe problem is in the <"+e.name+"> Token Type\n\t Root cause: "+t.errMsg+".\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR";if(t.issue===r.LexerDefinitionErrorType.CUSTOM_LINE_BREAK)return"Warning: A Custom Token Pattern should specify the <line_breaks> option.\n\tThe problem is in the <"+e.name+"> Token Type\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK";throw Error("non exhaustive match")}function D(e){return(0,i.map)(e,(function(e){return(0,i.isString)(e)&&e.length>0?e.charCodeAt(0):e}))}function x(e,t,n){void 0===e[t]?e[t]=[n]:e[t].push(n)}e.findStartOfInputAnchor=h,e.findUnsupportedFlags=m,e.findDuplicatePatterns=g,e.findInvalidGroupType=v,e.findModesThatDoNotExist=y,e.findUnreachablePatterns=E,e.addStartOfInput=_,e.addStickyFlag=C,e.performRuntimeChecks=function(t,n,o){var a=[];return(0,i.has)(t,e.DEFAULT_MODE)||a.push({message:"A MultiMode Lexer cannot be initialized without a <"+e.DEFAULT_MODE+"> property in its definition\n",type:r.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE}),(0,i.has)(t,e.MODES)||a.push({message:"A MultiMode Lexer cannot be initialized without a <"+e.MODES+"> property in its definition\n",type:r.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY}),(0,i.has)(t,e.MODES)&&(0,i.has)(t,e.DEFAULT_MODE)&&!(0,i.has)(t.modes,t.defaultMode)&&a.push({message:"A MultiMode Lexer cannot be initialized with a "+e.DEFAULT_MODE+": <"+t.defaultMode+">which does not exist\n",type:r.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST}),(0,i.has)(t,e.MODES)&&(0,i.forEach)(t.modes,(function(e,t){(0,i.forEach)(e,(function(e,n){(0,i.isUndefined)(e)&&a.push({message:"A Lexer cannot be initialized using an undefined Token Type. Mode:<"+t+"> at index: <"+n+">\n",type:r.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED})}))})),a},e.performWarningRuntimeChecks=function(e,t,n){var a=[],s=!1,u=(0,i.compact)((0,i.flatten)((0,i.mapValues)(e.modes,(function(e){return e})))),c=(0,i.reject)(u,(function(e){return e.PATTERN===r.Lexer.NA})),l=D(n);return t&&(0,i.forEach)(c,(function(e){var t=R(e,l);if(!1!==t){var n={message:I(e,t),type:t.issue,tokenType:e};a.push(n)}else(0,i.has)(e,"LINE_BREAKS")?!0===e.LINE_BREAKS&&(s=!0):(0,o.canMatchCharCode)(l,e.PATTERN)&&(s=!0)})),t&&!s&&a.push({message:"Warning: No LINE_BREAKS Found.\n\tThis Lexer has been defined to track line and column information,\n\tBut none of the Token Types can be identified as matching a line terminator.\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \n\tfor details.",type:r.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS}),a},e.cloneEmptyGroups=function(e){var t={},n=(0,i.keys)(e);return(0,i.forEach)(n,(function(n){var r=e[n];if(!(0,i.isArray)(r))throw Error("non exhaustive match");t[n]=[]})),t},e.isCustomPattern=T,e.isShortPattern=A,e.LineTerminatorOptimizedTester={test:function(e){for(var t=e.length,n=this.lastIndex;n<t;n++){var r=e.charCodeAt(n);if(10===r)return this.lastIndex=n+1,!0;if(13===r)return 10===e.charCodeAt(n+1)?this.lastIndex=n+2:this.lastIndex=n+1,!0}return!1},lastIndex:0},e.buildLineBreakIssueMessage=I,e.minOptimizationVal=256;var b=[];function S(t){return t<e.minOptimizationVal?t:b[t]}e.charCodeToOptimizedIndex=S}(Qv);var iy={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isTokenType=e.hasExtendingTokensTypesMapProperty=e.hasExtendingTokensTypesProperty=e.hasCategoriesProperty=e.hasShortKeyProperty=e.singleAssignCategoriesToksMap=e.assignCategoriesMapProp=e.assignCategoriesTokensProp=e.assignTokenDefaultProps=e.expandCategories=e.augmentTokenTypes=e.tokenIdxToClass=e.tokenShortNameIdx=e.tokenStructuredMatcherNoCategories=e.tokenStructuredMatcher=void 0;var t=kv;function n(e){for(var n=(0,t.cloneArr)(e),r=e,i=!0;i;){r=(0,t.compact)((0,t.flatten)((0,t.map)(r,(function(e){return e.CATEGORIES}))));var o=(0,t.difference)(r,n);n=n.concat(o),(0,t.isEmpty)(o)?i=!1:r=o}return n}function r(n){(0,t.forEach)(n,(function(n){s(n)||(e.tokenIdxToClass[e.tokenShortNameIdx]=n,n.tokenTypeIdx=e.tokenShortNameIdx++),u(n)&&!(0,t.isArray)(n.CATEGORIES)&&(n.CATEGORIES=[n.CATEGORIES]),u(n)||(n.CATEGORIES=[]),c(n)||(n.categoryMatches=[]),l(n)||(n.categoryMatchesMap={})}))}function i(n){(0,t.forEach)(n,(function(n){n.categoryMatches=[],(0,t.forEach)(n.categoryMatchesMap,(function(t,r){n.categoryMatches.push(e.tokenIdxToClass[r].tokenTypeIdx)}))}))}function o(e){(0,t.forEach)(e,(function(e){a([],e)}))}function a(e,n){(0,t.forEach)(e,(function(e){n.categoryMatchesMap[e.tokenTypeIdx]=!0})),(0,t.forEach)(n.CATEGORIES,(function(r){var i=e.concat(n);(0,t.contains)(i,r)||a(i,r)}))}function s(e){return(0,t.has)(e,"tokenTypeIdx")}function u(e){return(0,t.has)(e,"CATEGORIES")}function c(e){return(0,t.has)(e,"categoryMatches")}function l(e){return(0,t.has)(e,"categoryMatchesMap")}e.tokenStructuredMatcher=function(e,t){var n=e.tokenTypeIdx;return n===t.tokenTypeIdx||!0===t.isParent&&!0===t.categoryMatchesMap[n]},e.tokenStructuredMatcherNoCategories=function(e,t){return e.tokenTypeIdx===t.tokenTypeIdx},e.tokenShortNameIdx=1,e.tokenIdxToClass={},e.augmentTokenTypes=function(e){var a=n(e);r(a),o(a),i(a),(0,t.forEach)(a,(function(e){e.isParent=e.categoryMatches.length>0}))},e.expandCategories=n,e.assignTokenDefaultProps=r,e.assignCategoriesTokensProp=i,e.assignCategoriesMapProp=o,e.singleAssignCategoriesToksMap=a,e.hasShortKeyProperty=s,e.hasCategoriesProperty=u,e.hasExtendingTokensTypesProperty=c,e.hasExtendingTokensTypesMapProperty=l,e.isTokenType=function(e){return(0,t.has)(e,"tokenTypeIdx")}}(iy);var oy={};Object.defineProperty(oy,"__esModule",{value:!0}),oy.defaultLexerErrorProvider=void 0,oy.defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:function(e){return"Unable to pop Lexer Mode after encountering Token ->"+e.image+"<- The Mode Stack is empty"},buildUnexpectedCharactersMessage:function(e,t,n,r,i){return"unexpected character: ->"+e.charAt(t)+"<- at offset: "+t+", skipped "+n+" characters."}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Lexer=e.LexerDefinitionErrorType=void 0;var t,n=Qv,r=kv,i=iy,o=oy,a=ty;(t=e.LexerDefinitionErrorType||(e.LexerDefinitionErrorType={}))[t.MISSING_PATTERN=0]="MISSING_PATTERN",t[t.INVALID_PATTERN=1]="INVALID_PATTERN",t[t.EOI_ANCHOR_FOUND=2]="EOI_ANCHOR_FOUND",t[t.UNSUPPORTED_FLAGS_FOUND=3]="UNSUPPORTED_FLAGS_FOUND",t[t.DUPLICATE_PATTERNS_FOUND=4]="DUPLICATE_PATTERNS_FOUND",t[t.INVALID_GROUP_TYPE_FOUND=5]="INVALID_GROUP_TYPE_FOUND",t[t.PUSH_MODE_DOES_NOT_EXIST=6]="PUSH_MODE_DOES_NOT_EXIST",t[t.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE=7]="MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE",t[t.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY=8]="MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY",t[t.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST=9]="MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST",t[t.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED=10]="LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED",t[t.SOI_ANCHOR_FOUND=11]="SOI_ANCHOR_FOUND",t[t.EMPTY_MATCH_PATTERN=12]="EMPTY_MATCH_PATTERN",t[t.NO_LINE_BREAKS_FLAGS=13]="NO_LINE_BREAKS_FLAGS",t[t.UNREACHABLE_PATTERN=14]="UNREACHABLE_PATTERN",t[t.IDENTIFY_TERMINATOR=15]="IDENTIFY_TERMINATOR",t[t.CUSTOM_LINE_BREAK=16]="CUSTOM_LINE_BREAK";var s={deferDefinitionErrorsHandling:!1,positionTracking:"full",lineTerminatorsPattern:/\n|\r\n?/g,lineTerminatorCharacters:["\n","\r"],ensureOptimizations:!1,safeMode:!1,errorMessageProvider:o.defaultLexerErrorProvider,traceInitPerf:!1,skipValidations:!1};Object.freeze(s);var u=function(){function e(e,t){var o=this;if(void 0===t&&(t=s),this.lexerDefinition=e,this.lexerDefinitionErrors=[],this.lexerDefinitionWarning=[],this.patternIdxToConfig={},this.charCodeToPatternIdxToConfig={},this.modes=[],this.emptyGroups={},this.config=void 0,this.trackStartLines=!0,this.trackEndLines=!0,this.hasCustom=!1,this.canModeBeOptimized={},"boolean"==typeof t)throw Error("The second argument to the Lexer constructor is now an ILexerConfig Object.\na boolean 2nd argument is no longer supported");this.config=(0,r.merge)(s,t);var u=this.config.traceInitPerf;!0===u?(this.traceInitMaxIdent=1/0,this.traceInitPerf=!0):"number"==typeof u&&(this.traceInitMaxIdent=u,this.traceInitPerf=!0),this.traceInitIndent=-1,this.TRACE_INIT("Lexer Constructor",(function(){var u,c=!0;o.TRACE_INIT("Lexer Config handling",(function(){if(o.config.lineTerminatorsPattern===s.lineTerminatorsPattern)o.config.lineTerminatorsPattern=n.LineTerminatorOptimizedTester;else if(o.config.lineTerminatorCharacters===s.lineTerminatorCharacters)throw Error("Error: Missing <lineTerminatorCharacters> property on the Lexer config.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS");if(t.safeMode&&t.ensureOptimizations)throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');o.trackStartLines=/full|onlyStart/i.test(o.config.positionTracking),o.trackEndLines=/full/i.test(o.config.positionTracking),(0,r.isArray)(e)?((u={modes:{}}).modes[n.DEFAULT_MODE]=(0,r.cloneArr)(e),u[n.DEFAULT_MODE]=n.DEFAULT_MODE):(c=!1,u=(0,r.cloneObj)(e))})),!1===o.config.skipValidations&&(o.TRACE_INIT("performRuntimeChecks",(function(){o.lexerDefinitionErrors=o.lexerDefinitionErrors.concat((0,n.performRuntimeChecks)(u,o.trackStartLines,o.config.lineTerminatorCharacters))})),o.TRACE_INIT("performWarningRuntimeChecks",(function(){o.lexerDefinitionWarning=o.lexerDefinitionWarning.concat((0,n.performWarningRuntimeChecks)(u,o.trackStartLines,o.config.lineTerminatorCharacters))}))),u.modes=u.modes?u.modes:{},(0,r.forEach)(u.modes,(function(e,t){u.modes[t]=(0,r.reject)(e,(function(e){return(0,r.isUndefined)(e)}))}));var l=(0,r.keys)(u.modes);if((0,r.forEach)(u.modes,(function(e,a){o.TRACE_INIT("Mode: <"+a+"> processing",(function(){var s;(o.modes.push(a),!1===o.config.skipValidations&&o.TRACE_INIT("validatePatterns",(function(){o.lexerDefinitionErrors=o.lexerDefinitionErrors.concat((0,n.validatePatterns)(e,l))})),(0,r.isEmpty)(o.lexerDefinitionErrors))&&((0,i.augmentTokenTypes)(e),o.TRACE_INIT("analyzeTokenTypes",(function(){s=(0,n.analyzeTokenTypes)(e,{lineTerminatorCharacters:o.config.lineTerminatorCharacters,positionTracking:t.positionTracking,ensureOptimizations:t.ensureOptimizations,safeMode:t.safeMode,tracer:o.TRACE_INIT.bind(o)})})),o.patternIdxToConfig[a]=s.patternIdxToConfig,o.charCodeToPatternIdxToConfig[a]=s.charCodeToPatternIdxToConfig,o.emptyGroups=(0,r.merge)(o.emptyGroups,s.emptyGroups),o.hasCustom=s.hasCustom||o.hasCustom,o.canModeBeOptimized[a]=s.canBeOptimized)}))})),o.defaultMode=u.defaultMode,!(0,r.isEmpty)(o.lexerDefinitionErrors)&&!o.config.deferDefinitionErrorsHandling){var p=(0,r.map)(o.lexerDefinitionErrors,(function(e){return e.message})).join("-----------------------\n");throw new Error("Errors detected in definition of Lexer:\n"+p)}(0,r.forEach)(o.lexerDefinitionWarning,(function(e){(0,r.PRINT_WARNING)(e.message)})),o.TRACE_INIT("Choosing sub-methods implementations",(function(){if(n.SUPPORT_STICKY?(o.chopInput=r.IDENTITY,o.match=o.matchWithTest):(o.updateLastIndex=r.NOOP,o.match=o.matchWithExec),c&&(o.handleModes=r.NOOP),!1===o.trackStartLines&&(o.computeNewColumn=r.IDENTITY),!1===o.trackEndLines&&(o.updateTokenEndLineColumnLocation=r.NOOP),/full/i.test(o.config.positionTracking))o.createTokenInstance=o.createFullToken;else if(/onlyStart/i.test(o.config.positionTracking))o.createTokenInstance=o.createStartOnlyToken;else{if(!/onlyOffset/i.test(o.config.positionTracking))throw Error('Invalid <positionTracking> config option: "'+o.config.positionTracking+'"');o.createTokenInstance=o.createOffsetOnlyToken}o.hasCustom?(o.addToken=o.addTokenUsingPush,o.handlePayload=o.handlePayloadWithCustom):(o.addToken=o.addTokenUsingMemberAccess,o.handlePayload=o.handlePayloadNoCustom)})),o.TRACE_INIT("Failed Optimization Warnings",(function(){var e=(0,r.reduce)(o.canModeBeOptimized,(function(e,t,n){return!1===t&&e.push(n),e}),[]);if(t.ensureOptimizations&&!(0,r.isEmpty)(e))throw Error("Lexer Modes: < "+e.join(", ")+' > cannot be optimized.\n\t Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\n\t Or inspect the console log for details on how to resolve these issues.')})),o.TRACE_INIT("clearRegExpParserCache",(function(){(0,a.clearRegExpParserCache)()})),o.TRACE_INIT("toFastProperties",(function(){(0,r.toFastProperties)(o)}))}))}return e.prototype.tokenize=function(e,t){if(void 0===t&&(t=this.defaultMode),!(0,r.isEmpty)(this.lexerDefinitionErrors)){var n=(0,r.map)(this.lexerDefinitionErrors,(function(e){return e.message})).join("-----------------------\n");throw new Error("Unable to Tokenize because Errors detected in definition of Lexer:\n"+n)}return this.tokenizeInternal(e,t)},e.prototype.tokenizeInternal=function(e,t){var i,o,a,s,u,c,l,p,f,d,h,m,g,v,y,E=this,_=e,C=_.length,T=0,A=0,R=this.hasCustom?0:Math.floor(e.length/10),I=new Array(R),D=[],x=this.trackStartLines?1:void 0,b=this.trackStartLines?1:void 0,S=(0,n.cloneEmptyGroups)(this.emptyGroups),k=this.trackStartLines,O=this.config.lineTerminatorsPattern,N=0,P=[],w=[],L=[],F=[];Object.freeze(F);var M=void 0;function $(){return P}function B(e){var t=(0,n.charCodeToOptimizedIndex)(e),r=w[t];return void 0===r?F:r}var q,j=function(e){if(1===L.length&&void 0===e.tokenType.PUSH_MODE){var t=E.config.errorMessageProvider.buildUnableToPopLexerModeMessage(e);D.push({offset:e.startOffset,line:void 0!==e.startLine?e.startLine:void 0,column:void 0!==e.startColumn?e.startColumn:void 0,length:e.image.length,message:t})}else{L.pop();var n=(0,r.last)(L);P=E.patternIdxToConfig[n],w=E.charCodeToPatternIdxToConfig[n],N=P.length;var i=E.canModeBeOptimized[n]&&!1===E.config.safeMode;M=w&&i?B:$}};function U(e){L.push(e),w=this.charCodeToPatternIdxToConfig[e],P=this.patternIdxToConfig[e],N=P.length,N=P.length;var t=this.canModeBeOptimized[e]&&!1===this.config.safeMode;M=w&&t?B:$}for(U.call(this,t);T<C;){c=null;var W=_.charCodeAt(T),K=M(W),G=K.length;for(i=0;i<G;i++){var V=(q=K[i]).pattern;if(l=null,!1!==(re=q.short)?W===re&&(c=V):!0===q.isCustom?null!==(y=V.exec(_,T,I,S))?(c=y[0],void 0!==y.payload&&(l=y.payload)):c=null:(this.updateLastIndex(V,T),c=this.match(V,e,T)),null!==c){if(void 0!==(u=q.longerAlt)){var H=u.length;for(a=0;a<H;a++){var z=P[u[a]],Y=z.pattern;if(p=null,!0===z.isCustom?null!==(y=Y.exec(_,T,I,S))?(s=y[0],void 0!==y.payload&&(p=y.payload)):s=null:(this.updateLastIndex(Y,T),s=this.match(Y,e,T)),s&&s.length>c.length){c=s,l=p,q=z;break}}}break}}if(null!==c){if(f=c.length,void 0!==(d=q.group)&&(h=q.tokenTypeIdx,m=this.createTokenInstance(c,T,h,q.tokenType,x,b,f),this.handlePayload(m,l),!1===d?A=this.addToken(I,A,m):S[d].push(m)),e=this.chopInput(e,f),T+=f,b=this.computeNewColumn(b,f),!0===k&&!0===q.canLineTerminator){var X=0,J=void 0,Q=void 0;O.lastIndex=0;do{!0===(J=O.test(c))&&(Q=O.lastIndex-1,X++)}while(!0===J);0!==X&&(x+=X,b=f-Q,this.updateTokenEndLineColumnLocation(m,d,Q,X,x,b,f))}this.handleModes(q,j,U,m)}else{for(var Z=T,ee=x,te=b,ne=!1;!ne&&T<C;)for(_.charCodeAt(T),e=this.chopInput(e,1),T++,o=0;o<N;o++){var re,ie=P[o];V=ie.pattern;if(!1!==(re=ie.short)?_.charCodeAt(T)===re&&(ne=!0):!0===ie.isCustom?ne=null!==V.exec(_,T,I,S):(this.updateLastIndex(V,T),ne=null!==V.exec(e)),!0===ne)break}g=T-Z,v=this.config.errorMessageProvider.buildUnexpectedCharactersMessage(_,Z,g,ee,te),D.push({offset:Z,line:ee,column:te,length:g,message:v})}}return this.hasCustom||(I.length=A),{tokens:I,groups:S,errors:D}},e.prototype.handleModes=function(e,t,n,r){if(!0===e.pop){var i=e.push;t(r),void 0!==i&&n.call(this,i)}else void 0!==e.push&&n.call(this,e.push)},e.prototype.chopInput=function(e,t){return e.substring(t)},e.prototype.updateLastIndex=function(e,t){e.lastIndex=t},e.prototype.updateTokenEndLineColumnLocation=function(e,t,n,r,i,o,a){var s,u;void 0!==t&&(u=(s=n===a-1)?-1:0,1===r&&!0===s||(e.endLine=i+u,e.endColumn=o-1-u))},e.prototype.computeNewColumn=function(e,t){return e+t},e.prototype.createTokenInstance=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return null},e.prototype.createOffsetOnlyToken=function(e,t,n,r){return{image:e,startOffset:t,tokenTypeIdx:n,tokenType:r}},e.prototype.createStartOnlyToken=function(e,t,n,r,i,o){return{image:e,startOffset:t,startLine:i,startColumn:o,tokenTypeIdx:n,tokenType:r}},e.prototype.createFullToken=function(e,t,n,r,i,o,a){return{image:e,startOffset:t,endOffset:t+a-1,startLine:i,endLine:i,startColumn:o,endColumn:o+a-1,tokenTypeIdx:n,tokenType:r}},e.prototype.addToken=function(e,t,n){return 666},e.prototype.addTokenUsingPush=function(e,t,n){return e.push(n),t},e.prototype.addTokenUsingMemberAccess=function(e,t,n){return e[t]=n,++t},e.prototype.handlePayload=function(e,t){},e.prototype.handlePayloadNoCustom=function(e,t){},e.prototype.handlePayloadWithCustom=function(e,t){null!==t&&(e.payload=t)},e.prototype.match=function(e,t,n){return null},e.prototype.matchWithTest=function(e,t,n){return!0===e.test(t)?t.substring(n,e.lastIndex):null},e.prototype.matchWithExec=function(e,t){var n=e.exec(t);return null!==n?n[0]:n},e.prototype.TRACE_INIT=function(e,t){if(!0===this.traceInitPerf){this.traceInitIndent++;var n=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(n+"--\x3e <"+e+">");var i=(0,r.timer)(t),o=i.time,a=i.value,s=o>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&s(n+"<-- <"+e+"> time: "+o+"ms"),this.traceInitIndent--,a}return t()},e.SKIPPED="This marks a skipped Token pattern, this means each token identified by it willbe consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.",e.NA=/NOT_APPLICABLE/,e}();e.Lexer=u}(Jv),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.tokenMatcher=e.createTokenInstance=e.EOF=e.createToken=e.hasTokenLabel=e.tokenName=e.tokenLabel=void 0;var t=kv,n=Jv,r=iy;function i(e){return(0,t.isString)(e.LABEL)&&""!==e.LABEL}e.tokenLabel=function(e){return i(e)?e.LABEL:e.name},e.tokenName=function(e){return e.name},e.hasTokenLabel=i;var o="parent",a="categories",s="label",u="group",c="push_mode",l="pop_mode",p="longer_alt",f="line_breaks",d="start_chars_hint";function h(e){return function(e){var n=e.pattern,i={};i.name=e.name,(0,t.isUndefined)(n)||(i.PATTERN=n);if((0,t.has)(e,o))throw"The parent property is no longer supported.\nSee: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.";(0,t.has)(e,a)&&(i.CATEGORIES=e.categories);(0,r.augmentTokenTypes)([i]),(0,t.has)(e,s)&&(i.LABEL=e.label);(0,t.has)(e,u)&&(i.GROUP=e.group);(0,t.has)(e,l)&&(i.POP_MODE=e.pop_mode);(0,t.has)(e,c)&&(i.PUSH_MODE=e.push_mode);(0,t.has)(e,p)&&(i.LONGER_ALT=e.longer_alt);(0,t.has)(e,f)&&(i.LINE_BREAKS=e.line_breaks);(0,t.has)(e,d)&&(i.START_CHARS_HINT=e.start_chars_hint);return i}(e)}e.createToken=h,e.EOF=h({name:"EOF",pattern:n.Lexer.NA}),(0,r.augmentTokenTypes)([e.EOF]),e.createTokenInstance=function(e,t,n,r,i,o,a,s){return{image:t,startOffset:n,endOffset:r,startLine:i,endLine:o,startColumn:a,endColumn:s,tokenTypeIdx:e.tokenTypeIdx,tokenType:e}},e.tokenMatcher=function(e,t){return(0,r.tokenStructuredMatcher)(e,t)}}(Xv);var ay=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Yv,"__esModule",{value:!0}),Yv.serializeProduction=Yv.serializeGrammar=Yv.Terminal=Yv.Alternation=Yv.RepetitionWithSeparator=Yv.Repetition=Yv.RepetitionMandatoryWithSeparator=Yv.RepetitionMandatory=Yv.Option=Yv.Alternative=Yv.Rule=Yv.NonTerminal=Yv.AbstractProduction=void 0;var sy=kv,uy=Xv,cy=function(){function e(e){this._definition=e}return Object.defineProperty(e.prototype,"definition",{get:function(){return this._definition},set:function(e){this._definition=e},enumerable:!1,configurable:!0}),e.prototype.accept=function(e){e.visit(this),(0,sy.forEach)(this.definition,(function(t){t.accept(e)}))},e}();Yv.AbstractProduction=cy;var ly=function(e){function t(t){var n=e.call(this,[])||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),Object.defineProperty(t.prototype,"definition",{get:function(){return void 0!==this.referencedRule?this.referencedRule.definition:[]},set:function(e){},enumerable:!1,configurable:!0}),t.prototype.accept=function(e){e.visit(this)},t}(cy);Yv.NonTerminal=ly;var py=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.orgText="",(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.Rule=py;var fy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.ignoreAmbiguities=!1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.Alternative=fy;var dy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.Option=dy;var hy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.RepetitionMandatory=hy;var my=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.RepetitionMandatoryWithSeparator=my;var gy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.Repetition=gy;var vy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),t}(cy);Yv.RepetitionWithSeparator=vy;var yy=function(e){function t(t){var n=e.call(this,t.definition)||this;return n.idx=1,n.ignoreAmbiguities=!1,n.hasPredicates=!1,(0,sy.assign)(n,(0,sy.pick)(t,(function(e){return void 0!==e}))),n}return ay(t,e),Object.defineProperty(t.prototype,"definition",{get:function(){return this._definition},set:function(e){this._definition=e},enumerable:!1,configurable:!0}),t}(cy);Yv.Alternation=yy;var Ey=function(){function e(e){this.idx=1,(0,sy.assign)(this,(0,sy.pick)(e,(function(e){return void 0!==e})))}return e.prototype.accept=function(e){e.visit(this)},e}();function _y(e){function t(e){return(0,sy.map)(e,_y)}if(e instanceof ly){var n={type:"NonTerminal",name:e.nonTerminalName,idx:e.idx};return(0,sy.isString)(e.label)&&(n.label=e.label),n}if(e instanceof fy)return{type:"Alternative",definition:t(e.definition)};if(e instanceof dy)return{type:"Option",idx:e.idx,definition:t(e.definition)};if(e instanceof hy)return{type:"RepetitionMandatory",idx:e.idx,definition:t(e.definition)};if(e instanceof my)return{type:"RepetitionMandatoryWithSeparator",idx:e.idx,separator:_y(new Ey({terminalType:e.separator})),definition:t(e.definition)};if(e instanceof vy)return{type:"RepetitionWithSeparator",idx:e.idx,separator:_y(new Ey({terminalType:e.separator})),definition:t(e.definition)};if(e instanceof gy)return{type:"Repetition",idx:e.idx,definition:t(e.definition)};if(e instanceof yy)return{type:"Alternation",idx:e.idx,definition:t(e.definition)};if(e instanceof Ey){var r={type:"Terminal",name:e.terminalType.name,label:(0,uy.tokenLabel)(e.terminalType),idx:e.idx};(0,sy.isString)(e.label)&&(r.terminalLabel=e.label);var i=e.terminalType.PATTERN;return e.terminalType.PATTERN&&(r.pattern=(0,sy.isRegExp)(i)?i.source:i),r}if(e instanceof py)return{type:"Rule",name:e.name,orgText:e.orgText,definition:t(e.definition)};throw Error("non exhaustive match")}Yv.Terminal=Ey,Yv.serializeGrammar=function(e){return(0,sy.map)(e,_y)},Yv.serializeProduction=_y,Object.defineProperty(zv,"__esModule",{value:!0}),zv.RestWalker=void 0;var Cy=kv,Ty=Yv,Ay=function(){function e(){}return e.prototype.walk=function(e,t){var n=this;void 0===t&&(t=[]),(0,Cy.forEach)(e.definition,(function(r,i){var o=(0,Cy.drop)(e.definition,i+1);if(r instanceof Ty.NonTerminal)n.walkProdRef(r,o,t);else if(r instanceof Ty.Terminal)n.walkTerminal(r,o,t);else if(r instanceof Ty.Alternative)n.walkFlat(r,o,t);else if(r instanceof Ty.Option)n.walkOption(r,o,t);else if(r instanceof Ty.RepetitionMandatory)n.walkAtLeastOne(r,o,t);else if(r instanceof Ty.RepetitionMandatoryWithSeparator)n.walkAtLeastOneSep(r,o,t);else if(r instanceof Ty.RepetitionWithSeparator)n.walkManySep(r,o,t);else if(r instanceof Ty.Repetition)n.walkMany(r,o,t);else{if(!(r instanceof Ty.Alternation))throw Error("non exhaustive match");n.walkOr(r,o,t)}}))},e.prototype.walkTerminal=function(e,t,n){},e.prototype.walkProdRef=function(e,t,n){},e.prototype.walkFlat=function(e,t,n){var r=t.concat(n);this.walk(e,r)},e.prototype.walkOption=function(e,t,n){var r=t.concat(n);this.walk(e,r)},e.prototype.walkAtLeastOne=function(e,t,n){var r=[new Ty.Option({definition:e.definition})].concat(t,n);this.walk(e,r)},e.prototype.walkAtLeastOneSep=function(e,t,n){var r=Ry(e,t,n);this.walk(e,r)},e.prototype.walkMany=function(e,t,n){var r=[new Ty.Option({definition:e.definition})].concat(t,n);this.walk(e,r)},e.prototype.walkManySep=function(e,t,n){var r=Ry(e,t,n);this.walk(e,r)},e.prototype.walkOr=function(e,t,n){var r=this,i=t.concat(n);(0,Cy.forEach)(e.definition,(function(e){var t=new Ty.Alternative({definition:[e]});r.walk(t,i)}))},e}();function Ry(e,t,n){return[new Ty.Option({definition:[new Ty.Terminal({terminalType:e.separator})].concat(e.definition)})].concat(t,n)}zv.RestWalker=Ay;var Iy={},Dy={},xy={};Object.defineProperty(xy,"__esModule",{value:!0}),xy.GAstVisitor=void 0;var by=Yv,Sy=function(){function e(){}return e.prototype.visit=function(e){var t=e;switch(t.constructor){case by.NonTerminal:return this.visitNonTerminal(t);case by.Alternative:return this.visitAlternative(t);case by.Option:return this.visitOption(t);case by.RepetitionMandatory:return this.visitRepetitionMandatory(t);case by.RepetitionMandatoryWithSeparator:return this.visitRepetitionMandatoryWithSeparator(t);case by.RepetitionWithSeparator:return this.visitRepetitionWithSeparator(t);case by.Repetition:return this.visitRepetition(t);case by.Alternation:return this.visitAlternation(t);case by.Terminal:return this.visitTerminal(t);case by.Rule:return this.visitRule(t);default:throw Error("non exhaustive match")}},e.prototype.visitNonTerminal=function(e){},e.prototype.visitAlternative=function(e){},e.prototype.visitOption=function(e){},e.prototype.visitRepetition=function(e){},e.prototype.visitRepetitionMandatory=function(e){},e.prototype.visitRepetitionMandatoryWithSeparator=function(e){},e.prototype.visitRepetitionWithSeparator=function(e){},e.prototype.visitAlternation=function(e){},e.prototype.visitTerminal=function(e){},e.prototype.visitRule=function(e){},e}();xy.GAstVisitor=Sy;var ky=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Dy,"__esModule",{value:!0}),Dy.collectMethods=Dy.DslMethodsCollectorVisitor=Dy.getProductionDslName=Dy.isBranchingProd=Dy.isOptionalProd=Dy.isSequenceProd=void 0;var Oy=kv,Ny=Yv,Py=xy;Dy.isSequenceProd=function(e){return e instanceof Ny.Alternative||e instanceof Ny.Option||e instanceof Ny.Repetition||e instanceof Ny.RepetitionMandatory||e instanceof Ny.RepetitionMandatoryWithSeparator||e instanceof Ny.RepetitionWithSeparator||e instanceof Ny.Terminal||e instanceof Ny.Rule},Dy.isOptionalProd=function e(t,n){return void 0===n&&(n=[]),!!(t instanceof Ny.Option||t instanceof Ny.Repetition||t instanceof Ny.RepetitionWithSeparator)||(t instanceof Ny.Alternation?(0,Oy.some)(t.definition,(function(t){return e(t,n)})):!(t instanceof Ny.NonTerminal&&(0,Oy.contains)(n,t))&&(t instanceof Ny.AbstractProduction&&(t instanceof Ny.NonTerminal&&n.push(t),(0,Oy.every)(t.definition,(function(t){return e(t,n)})))))},Dy.isBranchingProd=function(e){return e instanceof Ny.Alternation},Dy.getProductionDslName=function(e){if(e instanceof Ny.NonTerminal)return"SUBRULE";if(e instanceof Ny.Option)return"OPTION";if(e instanceof Ny.Alternation)return"OR";if(e instanceof Ny.RepetitionMandatory)return"AT_LEAST_ONE";if(e instanceof Ny.RepetitionMandatoryWithSeparator)return"AT_LEAST_ONE_SEP";if(e instanceof Ny.RepetitionWithSeparator)return"MANY_SEP";if(e instanceof Ny.Repetition)return"MANY";if(e instanceof Ny.Terminal)return"CONSUME";throw Error("non exhaustive match")};var wy=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.separator="-",t.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]},t}return ky(t,e),t.prototype.reset=function(){this.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]}},t.prototype.visitTerminal=function(e){var t=e.terminalType.name+this.separator+"Terminal";(0,Oy.has)(this.dslMethods,t)||(this.dslMethods[t]=[]),this.dslMethods[t].push(e)},t.prototype.visitNonTerminal=function(e){var t=e.nonTerminalName+this.separator+"Terminal";(0,Oy.has)(this.dslMethods,t)||(this.dslMethods[t]=[]),this.dslMethods[t].push(e)},t.prototype.visitOption=function(e){this.dslMethods.option.push(e)},t.prototype.visitRepetitionWithSeparator=function(e){this.dslMethods.repetitionWithSeparator.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.dslMethods.repetitionMandatory.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.dslMethods.repetitionMandatoryWithSeparator.push(e)},t.prototype.visitRepetition=function(e){this.dslMethods.repetition.push(e)},t.prototype.visitAlternation=function(e){this.dslMethods.alternation.push(e)},t}(Py.GAstVisitor);Dy.DslMethodsCollectorVisitor=wy;var Ly=new wy;Dy.collectMethods=function(e){Ly.reset(),e.accept(Ly);var t=Ly.dslMethods;return Ly.reset(),t},Object.defineProperty(Iy,"__esModule",{value:!0}),Iy.firstForTerminal=Iy.firstForBranching=Iy.firstForSequence=Iy.first=void 0;var Fy=kv,My=Yv,$y=Dy;function By(e){if(e instanceof My.NonTerminal)return By(e.referencedRule);if(e instanceof My.Terminal)return Uy(e);if((0,$y.isSequenceProd)(e))return qy(e);if((0,$y.isBranchingProd)(e))return jy(e);throw Error("non exhaustive match")}function qy(e){for(var t,n=[],r=e.definition,i=0,o=r.length>i,a=!0;o&&a;)t=r[i],a=(0,$y.isOptionalProd)(t),n=n.concat(By(t)),i+=1,o=r.length>i;return(0,Fy.uniq)(n)}function jy(e){var t=(0,Fy.map)(e.definition,(function(e){return By(e)}));return(0,Fy.uniq)((0,Fy.flatten)(t))}function Uy(e){return[e.terminalType]}Iy.first=By,Iy.firstForSequence=qy,Iy.firstForBranching=jy,Iy.firstForTerminal=Uy;var Wy={};Object.defineProperty(Wy,"__esModule",{value:!0}),Wy.IN=void 0,Wy.IN="_~IN~_";var Ky=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Hv,"__esModule",{value:!0}),Hv.buildInProdFollowPrefix=Hv.buildBetweenProdsFollowPrefix=Hv.computeAllProdsFollows=Hv.ResyncFollowsWalker=void 0;var Gy=Iy,Vy=kv,Hy=Wy,zy=Yv,Yy=function(e){function t(t){var n=e.call(this)||this;return n.topProd=t,n.follows={},n}return Ky(t,e),t.prototype.startWalking=function(){return this.walk(this.topProd),this.follows},t.prototype.walkTerminal=function(e,t,n){},t.prototype.walkProdRef=function(e,t,n){var r=Xy(e.referencedRule,e.idx)+this.topProd.name,i=t.concat(n),o=new zy.Alternative({definition:i}),a=(0,Gy.first)(o);this.follows[r]=a},t}(zv.RestWalker);function Xy(e,t){return e.name+t+Hy.IN}Hv.ResyncFollowsWalker=Yy,Hv.computeAllProdsFollows=function(e){var t={};return(0,Vy.forEach)(e,(function(e){var n=new Yy(e).startWalking();(0,Vy.assign)(t,n)})),t},Hv.buildBetweenProdsFollowPrefix=Xy,Hv.buildInProdFollowPrefix=function(e){return e.terminalType.name+e.idx+Hy.IN};var Jy={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.defaultGrammarValidatorErrorProvider=e.defaultGrammarResolverErrorProvider=e.defaultParserErrorProvider=void 0;var t=Xv,n=kv,r=kv,i=Yv,o=Dy;e.defaultParserErrorProvider={buildMismatchTokenMessage:function(e){var n=e.expected,r=e.actual;return e.previous,e.ruleName,"Expecting "+((0,t.hasTokenLabel)(n)?"--\x3e "+(0,t.tokenLabel)(n)+" <--":"token of type --\x3e "+n.name+" <--")+" but found --\x3e '"+r.image+"' <--"},buildNotAllInputParsedMessage:function(e){var t=e.firstRedundant;return e.ruleName,"Redundant input, expecting EOF but found: "+t.image},buildNoViableAltMessage:function(e){var n=e.expectedPathsPerAlt,i=e.actual;e.previous;var o=e.customUserDescription;e.ruleName;var a="Expecting: ",s="\nbut found: '"+(0,r.first)(i).image+"'";if(o)return a+o+s;var u=(0,r.reduce)(n,(function(e,t){return e.concat(t)}),[]),c=(0,r.map)(u,(function(e){return"["+(0,r.map)(e,(function(e){return(0,t.tokenLabel)(e)})).join(", ")+"]"}));return a+("one of these possible Token sequences:\n"+(0,r.map)(c,(function(e,t){return"  "+(t+1)+". "+e})).join("\n"))+s},buildEarlyExitMessage:function(e){var n=e.expectedIterationPaths,i=e.actual,o=e.customUserDescription;e.ruleName;var a="Expecting: ",s="\nbut found: '"+(0,r.first)(i).image+"'";return o?a+o+s:a+("expecting at least one iteration which starts with one of these possible Token sequences::\n  <"+(0,r.map)(n,(function(e){return"["+(0,r.map)(e,(function(e){return(0,t.tokenLabel)(e)})).join(",")+"]"})).join(" ,")+">")+s}},Object.freeze(e.defaultParserErrorProvider),e.defaultGrammarResolverErrorProvider={buildRuleNotFoundError:function(e,t){return"Invalid grammar, reference to a rule which is not defined: ->"+t.nonTerminalName+"<-\ninside top level rule: ->"+e.name+"<-"}},e.defaultGrammarValidatorErrorProvider={buildDuplicateFoundError:function(e,t){var n,a=e.name,s=(0,r.first)(t),u=s.idx,c=(0,o.getProductionDslName)(s),l=(n=s)instanceof i.Terminal?n.terminalType.name:n instanceof i.NonTerminal?n.nonTerminalName:"",p="->"+c+(u>0?u:"")+"<- "+(l?"with argument: ->"+l+"<-":"")+"\n                  appears more than once ("+t.length+" times) in the top level rule: ->"+a+"<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  ";return p=(p=p.replace(/[ \t]+/g," ")).replace(/\s\s+/g,"\n")},buildNamespaceConflictError:function(e){return"Namespace conflict found in grammar.\nThe grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <"+e.name+">.\nTo resolve this make sure each Terminal and Non-Terminal names are unique\nThis is easy to accomplish by using the convention that Terminal names start with an uppercase letter\nand Non-Terminal names start with a lower case letter."},buildAlternationPrefixAmbiguityError:function(e){var n=(0,r.map)(e.prefixPath,(function(e){return(0,t.tokenLabel)(e)})).join(", "),i=0===e.alternation.idx?"":e.alternation.idx;return"Ambiguous alternatives: <"+e.ambiguityIndices.join(" ,")+"> due to common lookahead prefix\nin <OR"+i+"> inside <"+e.topLevelRule.name+"> Rule,\n<"+n+"> may appears as a prefix path in all these alternatives.\nSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\nFor Further details."},buildAlternationAmbiguityError:function(e){var n=(0,r.map)(e.prefixPath,(function(e){return(0,t.tokenLabel)(e)})).join(", "),i=0===e.alternation.idx?"":e.alternation.idx,o="Ambiguous Alternatives Detected: <"+e.ambiguityIndices.join(" ,")+"> in <OR"+i+"> inside <"+e.topLevelRule.name+"> Rule,\n<"+n+"> may appears as a prefix path in all these alternatives.\n";return o+="See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\nFor Further details."},buildEmptyRepetitionError:function(e){var t=(0,o.getProductionDslName)(e.repetition);return 0!==e.repetition.idx&&(t+=e.repetition.idx),"The repetition <"+t+"> within Rule <"+e.topLevelRule.name+"> can never consume any tokens.\nThis could lead to an infinite loop."},buildTokenNameError:function(e){return"deprecated"},buildEmptyAlternationError:function(e){return"Ambiguous empty alternative: <"+(e.emptyChoiceIdx+1)+"> in <OR"+e.alternation.idx+"> inside <"+e.topLevelRule.name+"> Rule.\nOnly the last alternative may be an empty alternative."},buildTooManyAlternativesError:function(e){return"An Alternation cannot have more than 256 alternatives:\n<OR"+e.alternation.idx+"> inside <"+e.topLevelRule.name+"> Rule.\n has "+(e.alternation.definition.length+1)+" alternatives."},buildLeftRecursionError:function(e){var t=e.topLevelRule.name;return"Left Recursion found in grammar.\nrule: <"+t+"> can be invoked from itself (directly or indirectly)\nwithout consuming any Tokens. The grammar path that causes this is: \n "+(t+" --\x3e "+n.map(e.leftRecursionPath,(function(e){return e.name})).concat([t]).join(" --\x3e "))+"\n To fix this refactor your grammar to remove the left recursion.\nsee: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring."},buildInvalidRuleNameError:function(e){return"deprecated"},buildDuplicateRuleNameError:function(e){return"Duplicate definition, rule: ->"+(e.topLevelRule instanceof i.Rule?e.topLevelRule.name:e.topLevelRule)+"<- is already defined in the grammar: ->"+e.grammarName+"<-"}}}(Jy);var Qy={},Zy={},eE=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(Zy,"__esModule",{value:!0}),Zy.GastRefResolverVisitor=Zy.resolveGrammar=void 0;var tE=Sv,nE=kv,rE=xy;Zy.resolveGrammar=function(e,t){var n=new iE(e,t);return n.resolveRefs(),n.errors};var iE=function(e){function t(t,n){var r=e.call(this)||this;return r.nameToTopRule=t,r.errMsgProvider=n,r.errors=[],r}return eE(t,e),t.prototype.resolveRefs=function(){var e=this;(0,nE.forEach)((0,nE.values)(this.nameToTopRule),(function(t){e.currTopLevel=t,t.accept(e)}))},t.prototype.visitNonTerminal=function(e){var t=this.nameToTopRule[e.nonTerminalName];if(t)e.referencedRule=t;else{var n=this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel,e);this.errors.push({message:n,type:tE.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,ruleName:this.currTopLevel.name,unresolvedRefName:e.nonTerminalName})}},t}(rE.GAstVisitor);Zy.GastRefResolverVisitor=iE;var oE={},aE={},sE={},uE=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(sE,"__esModule",{value:!0}),sE.nextPossibleTokensAfter=sE.possiblePathsFrom=sE.NextTerminalAfterAtLeastOneSepWalker=sE.NextTerminalAfterAtLeastOneWalker=sE.NextTerminalAfterManySepWalker=sE.NextTerminalAfterManyWalker=sE.AbstractNextTerminalAfterProductionWalker=sE.NextAfterTokenWalker=sE.AbstractNextPossibleTokensWalker=void 0;var cE=zv,lE=kv,pE=Iy,fE=Yv,dE=function(e){function t(t,n){var r=e.call(this)||this;return r.topProd=t,r.path=n,r.possibleTokTypes=[],r.nextProductionName="",r.nextProductionOccurrence=0,r.found=!1,r.isAtEndOfPath=!1,r}return uE(t,e),t.prototype.startWalking=function(){if(this.found=!1,this.path.ruleStack[0]!==this.topProd.name)throw Error("The path does not start with the walker's top Rule!");return this.ruleStack=(0,lE.cloneArr)(this.path.ruleStack).reverse(),this.occurrenceStack=(0,lE.cloneArr)(this.path.occurrenceStack).reverse(),this.ruleStack.pop(),this.occurrenceStack.pop(),this.updateExpectedNext(),this.walk(this.topProd),this.possibleTokTypes},t.prototype.walk=function(t,n){void 0===n&&(n=[]),this.found||e.prototype.walk.call(this,t,n)},t.prototype.walkProdRef=function(e,t,n){if(e.referencedRule.name===this.nextProductionName&&e.idx===this.nextProductionOccurrence){var r=t.concat(n);this.updateExpectedNext(),this.walk(e.referencedRule,r)}},t.prototype.updateExpectedNext=function(){(0,lE.isEmpty)(this.ruleStack)?(this.nextProductionName="",this.nextProductionOccurrence=0,this.isAtEndOfPath=!0):(this.nextProductionName=this.ruleStack.pop(),this.nextProductionOccurrence=this.occurrenceStack.pop())},t}(cE.RestWalker);sE.AbstractNextPossibleTokensWalker=dE;var hE=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.path=n,r.nextTerminalName="",r.nextTerminalOccurrence=0,r.nextTerminalName=r.path.lastTok.name,r.nextTerminalOccurrence=r.path.lastTokOccurrence,r}return uE(t,e),t.prototype.walkTerminal=function(e,t,n){if(this.isAtEndOfPath&&e.terminalType.name===this.nextTerminalName&&e.idx===this.nextTerminalOccurrence&&!this.found){var r=t.concat(n),i=new fE.Alternative({definition:r});this.possibleTokTypes=(0,pE.first)(i),this.found=!0}},t}(dE);sE.NextAfterTokenWalker=hE;var mE=function(e){function t(t,n){var r=e.call(this)||this;return r.topRule=t,r.occurrence=n,r.result={token:void 0,occurrence:void 0,isEndOfRule:void 0},r}return uE(t,e),t.prototype.startWalking=function(){return this.walk(this.topRule),this.result},t}(cE.RestWalker);sE.AbstractNextTerminalAfterProductionWalker=mE;var gE=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return uE(t,e),t.prototype.walkMany=function(t,n,r){if(t.idx===this.occurrence){var i=(0,lE.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof fE.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkMany.call(this,t,n,r)},t}(mE);sE.NextTerminalAfterManyWalker=gE;var vE=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return uE(t,e),t.prototype.walkManySep=function(t,n,r){if(t.idx===this.occurrence){var i=(0,lE.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof fE.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkManySep.call(this,t,n,r)},t}(mE);sE.NextTerminalAfterManySepWalker=vE;var yE=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return uE(t,e),t.prototype.walkAtLeastOne=function(t,n,r){if(t.idx===this.occurrence){var i=(0,lE.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof fE.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkAtLeastOne.call(this,t,n,r)},t}(mE);sE.NextTerminalAfterAtLeastOneWalker=yE;var EE=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return uE(t,e),t.prototype.walkAtLeastOneSep=function(t,n,r){if(t.idx===this.occurrence){var i=(0,lE.first)(n.concat(r));this.result.isEndOfRule=void 0===i,i instanceof fE.Terminal&&(this.result.token=i.terminalType,this.result.occurrence=i.idx)}else e.prototype.walkAtLeastOneSep.call(this,t,n,r)},t}(mE);function _E(e,t,n,r){var i=(0,lE.cloneArr)(n);i.push(e.name);var o=(0,lE.cloneArr)(r);return o.push(1),{idx:t,def:e.definition,ruleStack:i,occurrenceStack:o}}sE.NextTerminalAfterAtLeastOneSepWalker=EE,sE.possiblePathsFrom=function e(t,n,r){void 0===r&&(r=[]),r=(0,lE.cloneArr)(r);var i=[],o=0;function a(a){var s=e(a.concat((0,lE.drop)(t,o+1)),n,r);return i.concat(s)}for(;r.length<n&&o<t.length;){var s=t[o];if(s instanceof fE.Alternative)return a(s.definition);if(s instanceof fE.NonTerminal)return a(s.definition);if(s instanceof fE.Option)i=a(s.definition);else{if(s instanceof fE.RepetitionMandatory)return a(u=s.definition.concat([new fE.Repetition({definition:s.definition})]));if(s instanceof fE.RepetitionMandatoryWithSeparator)return a(u=[new fE.Alternative({definition:s.definition}),new fE.Repetition({definition:[new fE.Terminal({terminalType:s.separator})].concat(s.definition)})]);if(s instanceof fE.RepetitionWithSeparator){var u=s.definition.concat([new fE.Repetition({definition:[new fE.Terminal({terminalType:s.separator})].concat(s.definition)})]);i=a(u)}else if(s instanceof fE.Repetition){u=s.definition.concat([new fE.Repetition({definition:s.definition})]);i=a(u)}else{if(s instanceof fE.Alternation)return(0,lE.forEach)(s.definition,(function(e){!1===(0,lE.isEmpty)(e.definition)&&(i=a(e.definition))})),i;if(!(s instanceof fE.Terminal))throw Error("non exhaustive match");r.push(s.terminalType)}}o++}return i.push({partialPath:r,suffixDef:(0,lE.drop)(t,o)}),i},sE.nextPossibleTokensAfter=function(e,t,n,r){var i="EXIT_NONE_TERMINAL",o=[i],a="EXIT_ALTERNATIVE",s=!1,u=t.length,c=u-r-1,l=[],p=[];for(p.push({idx:-1,def:e,ruleStack:[],occurrenceStack:[]});!(0,lE.isEmpty)(p);){var f=p.pop();if(f!==a){var d=f.def,h=f.idx,m=f.ruleStack,g=f.occurrenceStack;if(!(0,lE.isEmpty)(d)){var v=d[0];if(v===i){var y={idx:h,def:(0,lE.drop)(d),ruleStack:(0,lE.dropRight)(m),occurrenceStack:(0,lE.dropRight)(g)};p.push(y)}else if(v instanceof fE.Terminal)if(h<u-1){var E=h+1;if(n(t[E],v.terminalType)){y={idx:E,def:(0,lE.drop)(d),ruleStack:m,occurrenceStack:g};p.push(y)}}else{if(h!==u-1)throw Error("non exhaustive match");l.push({nextTokenType:v.terminalType,nextTokenOccurrence:v.idx,ruleStack:m,occurrenceStack:g}),s=!0}else if(v instanceof fE.NonTerminal){var _=(0,lE.cloneArr)(m);_.push(v.nonTerminalName);var C=(0,lE.cloneArr)(g);C.push(v.idx);y={idx:h,def:v.definition.concat(o,(0,lE.drop)(d)),ruleStack:_,occurrenceStack:C};p.push(y)}else if(v instanceof fE.Option){var T={idx:h,def:(0,lE.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);var A={idx:h,def:v.definition.concat((0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof fE.RepetitionMandatory){var R=new fE.Repetition({definition:v.definition,idx:v.idx});y={idx:h,def:v.definition.concat([R],(0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(y)}else if(v instanceof fE.RepetitionMandatoryWithSeparator){var I=new fE.Terminal({terminalType:v.separator});R=new fE.Repetition({definition:[I].concat(v.definition),idx:v.idx}),y={idx:h,def:v.definition.concat([R],(0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(y)}else if(v instanceof fE.RepetitionWithSeparator){T={idx:h,def:(0,lE.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);I=new fE.Terminal({terminalType:v.separator});var D=new fE.Repetition({definition:[I].concat(v.definition),idx:v.idx});A={idx:h,def:v.definition.concat([D],(0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof fE.Repetition){T={idx:h,def:(0,lE.drop)(d),ruleStack:m,occurrenceStack:g};p.push(T),p.push(a);D=new fE.Repetition({definition:v.definition,idx:v.idx}),A={idx:h,def:v.definition.concat([D],(0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(A)}else if(v instanceof fE.Alternation)for(var x=v.definition.length-1;x>=0;x--){var b={idx:h,def:v.definition[x].definition.concat((0,lE.drop)(d)),ruleStack:m,occurrenceStack:g};p.push(b),p.push(a)}else if(v instanceof fE.Alternative)p.push({idx:h,def:v.definition.concat((0,lE.drop)(d)),ruleStack:m,occurrenceStack:g});else{if(!(v instanceof fE.Rule))throw Error("non exhaustive match");p.push(_E(v,h,m,g))}}}else s&&(0,lE.last)(p).idx<=c&&p.pop()}return l},function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.areTokenCategoriesNotUsed=e.isStrictPrefixOfPath=e.containsPath=e.getLookaheadPathsForOptionalProd=e.getLookaheadPathsForOr=e.lookAheadSequenceFromAlternatives=e.buildSingleAlternativeLookaheadFunction=e.buildAlternativesLookAheadFunc=e.buildLookaheadFuncForOptionalProd=e.buildLookaheadFuncForOr=e.getProdType=e.PROD_TYPE=void 0;var n,r,i=kv,o=sE,a=zv,s=iy,u=Yv,c=xy;(r=n=e.PROD_TYPE||(e.PROD_TYPE={}))[r.OPTION=0]="OPTION",r[r.REPETITION=1]="REPETITION",r[r.REPETITION_MANDATORY=2]="REPETITION_MANDATORY",r[r.REPETITION_MANDATORY_WITH_SEPARATOR=3]="REPETITION_MANDATORY_WITH_SEPARATOR",r[r.REPETITION_WITH_SEPARATOR=4]="REPETITION_WITH_SEPARATOR",r[r.ALTERNATION=5]="ALTERNATION",e.getProdType=function(e){if(e instanceof u.Option)return n.OPTION;if(e instanceof u.Repetition)return n.REPETITION;if(e instanceof u.RepetitionMandatory)return n.REPETITION_MANDATORY;if(e instanceof u.RepetitionMandatoryWithSeparator)return n.REPETITION_MANDATORY_WITH_SEPARATOR;if(e instanceof u.RepetitionWithSeparator)return n.REPETITION_WITH_SEPARATOR;if(e instanceof u.Alternation)return n.ALTERNATION;throw Error("non exhaustive match")},e.buildLookaheadFuncForOr=function(e,t,n,r,i,o){var a=g(e,t,n);return o(a,r,E(a)?s.tokenStructuredMatcherNoCategories:s.tokenStructuredMatcher,i)},e.buildLookaheadFuncForOptionalProd=function(e,t,n,r,i,o){var a=v(e,t,i,n),u=E(a)?s.tokenStructuredMatcherNoCategories:s.tokenStructuredMatcher;return o(a[0],u,r)},e.buildAlternativesLookAheadFunc=function(e,t,n,r){var o=e.length,a=(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return 1===e.length}))}));if(t)return function(t){for(var r=(0,i.map)(t,(function(e){return e.GATE})),a=0;a<o;a++){var s=e[a],u=s.length,c=r[a];if(void 0===c||!1!==c.call(this))e:for(var l=0;l<u;l++){for(var p=s[l],f=p.length,d=0;d<f;d++){var h=this.LA(d+1);if(!1===n(h,p[d]))continue e}return a}}};if(a&&!r){var s=(0,i.map)(e,(function(e){return(0,i.flatten)(e)})),u=(0,i.reduce)(s,(function(e,t,n){return(0,i.forEach)(t,(function(t){(0,i.has)(e,t.tokenTypeIdx)||(e[t.tokenTypeIdx]=n),(0,i.forEach)(t.categoryMatches,(function(t){(0,i.has)(e,t)||(e[t]=n)}))})),e}),[]);return function(){var e=this.LA(1);return u[e.tokenTypeIdx]}}return function(){for(var t=0;t<o;t++){var r=e[t],i=r.length;e:for(var a=0;a<i;a++){for(var s=r[a],u=s.length,c=0;c<u;c++){var l=this.LA(c+1);if(!1===n(l,s[c]))continue e}return t}}}},e.buildSingleAlternativeLookaheadFunction=function(e,t,n){var r=(0,i.every)(e,(function(e){return 1===e.length})),o=e.length;if(r&&!n){var a=(0,i.flatten)(e);if(1===a.length&&(0,i.isEmpty)(a[0].categoryMatches)){var s=a[0].tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===s}}var u=(0,i.reduce)(a,(function(e,t,n){return e[t.tokenTypeIdx]=!0,(0,i.forEach)(t.categoryMatches,(function(t){e[t]=!0})),e}),[]);return function(){var e=this.LA(1);return!0===u[e.tokenTypeIdx]}}return function(){e:for(var n=0;n<o;n++){for(var r=e[n],i=r.length,a=0;a<i;a++){var s=this.LA(a+1);if(!1===t(s,r[a]))continue e}return!0}return!1}};var l=function(e){function r(t,n,r){var i=e.call(this)||this;return i.topProd=t,i.targetOccurrence=n,i.targetProdType=r,i}return t(r,e),r.prototype.startWalking=function(){return this.walk(this.topProd),this.restDef},r.prototype.checkIsTarget=function(e,t,n,r){return e.idx===this.targetOccurrence&&this.targetProdType===t&&(this.restDef=n.concat(r),!0)},r.prototype.walkOption=function(t,r,i){this.checkIsTarget(t,n.OPTION,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkAtLeastOne=function(t,r,i){this.checkIsTarget(t,n.REPETITION_MANDATORY,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkAtLeastOneSep=function(t,r,i){this.checkIsTarget(t,n.REPETITION_MANDATORY_WITH_SEPARATOR,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkMany=function(t,r,i){this.checkIsTarget(t,n.REPETITION,r,i)||e.prototype.walkOption.call(this,t,r,i)},r.prototype.walkManySep=function(t,r,i){this.checkIsTarget(t,n.REPETITION_WITH_SEPARATOR,r,i)||e.prototype.walkOption.call(this,t,r,i)},r}(a.RestWalker),p=function(e){function r(t,n,r){var i=e.call(this)||this;return i.targetOccurrence=t,i.targetProdType=n,i.targetRef=r,i.result=[],i}return t(r,e),r.prototype.checkIsTarget=function(e,t){e.idx!==this.targetOccurrence||this.targetProdType!==t||void 0!==this.targetRef&&e!==this.targetRef||(this.result=e.definition)},r.prototype.visitOption=function(e){this.checkIsTarget(e,n.OPTION)},r.prototype.visitRepetition=function(e){this.checkIsTarget(e,n.REPETITION)},r.prototype.visitRepetitionMandatory=function(e){this.checkIsTarget(e,n.REPETITION_MANDATORY)},r.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.checkIsTarget(e,n.REPETITION_MANDATORY_WITH_SEPARATOR)},r.prototype.visitRepetitionWithSeparator=function(e){this.checkIsTarget(e,n.REPETITION_WITH_SEPARATOR)},r.prototype.visitAlternation=function(e){this.checkIsTarget(e,n.ALTERNATION)},r}(c.GAstVisitor);function f(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=[];return t}function d(e){for(var t=[""],n=0;n<e.length;n++){for(var r=e[n],i=[],o=0;o<t.length;o++){var a=t[o];i.push(a+"_"+r.tokenTypeIdx);for(var s=0;s<r.categoryMatches.length;s++){var u="_"+r.categoryMatches[s];i.push(a+u)}}t=i}return t}function h(e,t,n){for(var r=0;r<e.length;r++)if(r!==n)for(var i=e[r],o=0;o<t.length;o++){if(!0===i[t[o]])return!1}return!0}function m(e,t){for(var n=(0,i.map)(e,(function(e){return(0,o.possiblePathsFrom)([e],1)})),r=f(n.length),a=(0,i.map)(n,(function(e){var t={};return(0,i.forEach)(e,(function(e){var n=d(e.partialPath);(0,i.forEach)(n,(function(e){t[e]=!0}))})),t})),s=n,u=1;u<=t;u++){var c=s;s=f(c.length);for(var l=function(e){for(var n=c[e],l=0;l<n.length;l++){var p=n[l].partialPath,f=n[l].suffixDef,m=d(p);if(h(a,m,e)||(0,i.isEmpty)(f)||p.length===t){var g=r[e];if(!1===y(g,p)){g.push(p);for(var v=0;v<m.length;v++){var E=m[v];a[e][E]=!0}}}else{var _=(0,o.possiblePathsFrom)(f,u+1,p);s[e]=s[e].concat(_),(0,i.forEach)(_,(function(t){var n=d(t.partialPath);(0,i.forEach)(n,(function(t){a[e][t]=!0}))}))}}},p=0;p<c.length;p++)l(p)}return r}function g(e,t,r,i){var o=new p(e,n.ALTERNATION,i);return t.accept(o),m(o.result,r)}function v(e,t,n,r){var i=new p(e,n);t.accept(i);var o=i.result,a=new l(t,e,n).startWalking();return m([new u.Alternative({definition:o}),new u.Alternative({definition:a})],r)}function y(e,t){e:for(var n=0;n<e.length;n++){var r=e[n];if(r.length===t.length){for(var i=0;i<r.length;i++){var o=t[i],a=r[i];if(!1===(o===a||void 0!==a.categoryMatchesMap[o.tokenTypeIdx]))continue e}return!0}}return!1}function E(e){return(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return(0,i.every)(e,(function(e){return(0,i.isEmpty)(e.categoryMatches)}))}))}))}e.lookAheadSequenceFromAlternatives=m,e.getLookaheadPathsForOr=g,e.getLookaheadPathsForOptionalProd=v,e.containsPath=y,e.isStrictPrefixOfPath=function(e,t){return e.length<t.length&&(0,i.every)(e,(function(e,n){var r=t[n];return e===r||r.categoryMatchesMap[e.tokenTypeIdx]}))},e.areTokenCategoriesNotUsed=E}(aE);var CE=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(oE,"__esModule",{value:!0}),oE.checkPrefixAlternativesAmbiguities=oE.validateSomeNonEmptyLookaheadPath=oE.validateTooManyAlts=oE.RepetionCollector=oE.validateAmbiguousAlternationAlternatives=oE.validateEmptyOrAlternative=oE.getFirstNoneTerminal=oE.validateNoLeftRecursion=oE.validateRuleIsOverridden=oE.validateRuleDoesNotAlreadyExist=oE.OccurrenceValidationCollector=oE.identifyProductionForDuplicates=oE.validateGrammar=void 0;var TE=kv,AE=kv,RE=Sv,IE=Dy,DE=aE,xE=sE,bE=Yv,SE=xy;function kE(e){return(0,IE.getProductionDslName)(e)+"_#_"+e.idx+"_#_"+OE(e)}function OE(e){return e instanceof bE.Terminal?e.terminalType.name:e instanceof bE.NonTerminal?e.nonTerminalName:""}oE.validateGrammar=function(e,t,n,r,i){var o=TE.map(e,(function(e){return function(e,t){var n=new NE;e.accept(n);var r=n.allProductions,i=TE.groupBy(r,kE),o=TE.pick(i,(function(e){return e.length>1}));return TE.map(TE.values(o),(function(n){var r=TE.first(n),i=t.buildDuplicateFoundError(e,n),o=(0,IE.getProductionDslName)(r),a={message:i,type:RE.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,ruleName:e.name,dslName:o,occurrence:r.idx},s=OE(r);return s&&(a.parameter=s),a}))}(e,r)})),a=TE.map(e,(function(e){return wE(e,e,r)})),s=[],u=[],c=[];(0,AE.every)(a,AE.isEmpty)&&(s=(0,AE.map)(e,(function(e){return ME(e,r)})),u=(0,AE.map)(e,(function(e){return $E(e,t,r)})),c=jE(e,t,r));var l=function(e,t,n){var r=[],i=(0,AE.map)(t,(function(e){return e.name}));return(0,AE.forEach)(e,(function(e){var t=e.name;if((0,AE.contains)(i,t)){var o=n.buildNamespaceConflictError(e);r.push({message:o,type:RE.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,ruleName:t})}})),r}(e,n,r),p=(0,AE.map)(e,(function(e){return qE(e,r)})),f=(0,AE.map)(e,(function(t){return PE(t,e,i,r)}));return TE.flatten(o.concat(c,a,s,u,l,p,f))},oE.identifyProductionForDuplicates=kE;var NE=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.allProductions=[],t}return CE(t,e),t.prototype.visitNonTerminal=function(e){this.allProductions.push(e)},t.prototype.visitOption=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetition=function(e){this.allProductions.push(e)},t.prototype.visitAlternation=function(e){this.allProductions.push(e)},t.prototype.visitTerminal=function(e){this.allProductions.push(e)},t}(SE.GAstVisitor);function PE(e,t,n,r){var i=[];if((0,AE.reduce)(t,(function(t,n){return n.name===e.name?t+1:t}),0)>1){var o=r.buildDuplicateRuleNameError({topLevelRule:e,grammarName:n});i.push({message:o,type:RE.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:e.name})}return i}function wE(e,t,n,r){void 0===r&&(r=[]);var i=[],o=LE(t.definition);if(TE.isEmpty(o))return[];var a=e.name;TE.contains(o,e)&&i.push({message:n.buildLeftRecursionError({topLevelRule:e,leftRecursionPath:r}),type:RE.ParserDefinitionErrorType.LEFT_RECURSION,ruleName:a});var s=TE.difference(o,r.concat([e])),u=TE.map(s,(function(t){var i=TE.cloneArr(r);return i.push(t),wE(e,t,n,i)}));return i.concat(TE.flatten(u))}function LE(e){var t=[];if(TE.isEmpty(e))return t;var n=TE.first(e);if(n instanceof bE.NonTerminal)t.push(n.referencedRule);else if(n instanceof bE.Alternative||n instanceof bE.Option||n instanceof bE.RepetitionMandatory||n instanceof bE.RepetitionMandatoryWithSeparator||n instanceof bE.RepetitionWithSeparator||n instanceof bE.Repetition)t=t.concat(LE(n.definition));else if(n instanceof bE.Alternation)t=TE.flatten(TE.map(n.definition,(function(e){return LE(e.definition)})));else if(!(n instanceof bE.Terminal))throw Error("non exhaustive match");var r=(0,IE.isOptionalProd)(n),i=e.length>1;if(r&&i){var o=TE.drop(e);return t.concat(LE(o))}return t}oE.OccurrenceValidationCollector=NE,oE.validateRuleDoesNotAlreadyExist=PE,oE.validateRuleIsOverridden=function(e,t,n){var r,i=[];return TE.contains(t,e)||(r="Invalid rule override, rule: ->"+e+"<- cannot be overridden in the grammar: ->"+n+"<-as it is not defined in any of the super grammars ",i.push({message:r,type:RE.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,ruleName:e})),i},oE.validateNoLeftRecursion=wE,oE.getFirstNoneTerminal=LE;var FE=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.alternations=[],t}return CE(t,e),t.prototype.visitAlternation=function(e){this.alternations.push(e)},t}(SE.GAstVisitor);function ME(e,t){var n=new FE;e.accept(n);var r=n.alternations;return TE.reduce(r,(function(n,r){var i=TE.dropRight(r.definition),o=TE.map(i,(function(n,i){var o=(0,xE.nextPossibleTokensAfter)([n],[],null,1);return TE.isEmpty(o)?{message:t.buildEmptyAlternationError({topLevelRule:e,alternation:r,emptyChoiceIdx:i}),type:RE.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,ruleName:e.name,occurrence:r.idx,alternative:i+1}:null}));return n.concat(TE.compact(o))}),[])}function $E(e,t,n){var r=new FE;e.accept(r);var i=r.alternations;return i=(0,AE.reject)(i,(function(e){return!0===e.ignoreAmbiguities})),TE.reduce(i,(function(r,i){var o=i.idx,a=i.maxLookahead||t,s=(0,DE.getLookaheadPathsForOr)(o,e,a,i),u=function(e,t,n,r){var i=[],o=(0,AE.reduce)(e,(function(n,r,o){return!0===t.definition[o].ignoreAmbiguities||(0,AE.forEach)(r,(function(r){var a=[o];(0,AE.forEach)(e,(function(e,n){o!==n&&(0,DE.containsPath)(e,r)&&!0!==t.definition[n].ignoreAmbiguities&&a.push(n)})),a.length>1&&!(0,DE.containsPath)(i,r)&&(i.push(r),n.push({alts:a,path:r}))})),n}),[]);return TE.map(o,(function(e){var i=(0,AE.map)(e.alts,(function(e){return e+1}));return{message:r.buildAlternationAmbiguityError({topLevelRule:n,alternation:t,ambiguityIndices:i,prefixPath:e.path}),type:RE.ParserDefinitionErrorType.AMBIGUOUS_ALTS,ruleName:n.name,occurrence:t.idx,alternatives:[e.alts]}}))}(s,i,e,n),c=UE(s,i,e,n);return r.concat(u,c)}),[])}oE.validateEmptyOrAlternative=ME,oE.validateAmbiguousAlternationAlternatives=$E;var BE=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.allProductions=[],t}return CE(t,e),t.prototype.visitRepetitionWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatory=function(e){this.allProductions.push(e)},t.prototype.visitRepetitionMandatoryWithSeparator=function(e){this.allProductions.push(e)},t.prototype.visitRepetition=function(e){this.allProductions.push(e)},t}(SE.GAstVisitor);function qE(e,t){var n=new FE;e.accept(n);var r=n.alternations;return TE.reduce(r,(function(n,r){return r.definition.length>255&&n.push({message:t.buildTooManyAlternativesError({topLevelRule:e,alternation:r}),type:RE.ParserDefinitionErrorType.TOO_MANY_ALTS,ruleName:e.name,occurrence:r.idx}),n}),[])}function jE(e,t,n){var r=[];return(0,AE.forEach)(e,(function(e){var i=new BE;e.accept(i);var o=i.allProductions;(0,AE.forEach)(o,(function(i){var o=(0,DE.getProdType)(i),a=i.maxLookahead||t,s=i.idx,u=(0,DE.getLookaheadPathsForOptionalProd)(s,e,o,a)[0];if((0,AE.isEmpty)((0,AE.flatten)(u))){var c=n.buildEmptyRepetitionError({topLevelRule:e,repetition:i});r.push({message:c,type:RE.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,ruleName:e.name})}}))})),r}function UE(e,t,n,r){var i=[],o=(0,AE.reduce)(e,(function(e,t,n){var r=(0,AE.map)(t,(function(e){return{idx:n,path:e}}));return e.concat(r)}),[]);return(0,AE.forEach)(o,(function(e){if(!0!==t.definition[e.idx].ignoreAmbiguities){var a=e.idx,s=e.path,u=(0,AE.findAll)(o,(function(e){return!0!==t.definition[e.idx].ignoreAmbiguities&&e.idx<a&&(0,DE.isStrictPrefixOfPath)(e.path,s)})),c=(0,AE.map)(u,(function(e){var i=[e.idx+1,a+1],o=0===t.idx?"":t.idx;return{message:r.buildAlternationPrefixAmbiguityError({topLevelRule:n,alternation:t,ambiguityIndices:i,prefixPath:e.path}),type:RE.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,ruleName:n.name,occurrence:o,alternatives:i}}));i=i.concat(c)}})),i}oE.RepetionCollector=BE,oE.validateTooManyAlts=qE,oE.validateSomeNonEmptyLookaheadPath=jE,oE.checkPrefixAlternativesAmbiguities=UE,Object.defineProperty(Qy,"__esModule",{value:!0}),Qy.validateGrammar=Qy.resolveGrammar=void 0;var WE=kv,KE=Zy,GE=oE,VE=Jy;Qy.resolveGrammar=function(e){e=(0,WE.defaults)(e,{errMsgProvider:VE.defaultGrammarResolverErrorProvider});var t={};return(0,WE.forEach)(e.rules,(function(e){t[e.name]=e})),(0,KE.resolveGrammar)(t,e.errMsgProvider)},Qy.validateGrammar=function(e){return e=(0,WE.defaults)(e,{errMsgProvider:VE.defaultGrammarValidatorErrorProvider}),(0,GE.validateGrammar)(e.rules,e.maxLookahead,e.tokenTypes,e.errMsgProvider,e.grammarName)};var HE={},zE={},YE=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(zE,"__esModule",{value:!0}),zE.EarlyExitException=zE.NotAllInputParsedException=zE.NoViableAltException=zE.MismatchedTokenException=zE.isRecognitionException=void 0;var XE=kv,JE="MismatchedTokenException",QE="NoViableAltException",ZE="EarlyExitException",e_="NotAllInputParsedException",t_=[JE,QE,ZE,e_];Object.freeze(t_),zE.isRecognitionException=function(e){return(0,XE.contains)(t_,e.name)};var n_=function(e){function t(t,n){var r=this.constructor,i=e.call(this,t)||this;return i.token=n,i.resyncedTokens=[],Object.setPrototypeOf(i,r.prototype),Error.captureStackTrace&&Error.captureStackTrace(i,i.constructor),i}return YE(t,e),t}(Error),r_=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=JE,i}return YE(t,e),t}(n_);zE.MismatchedTokenException=r_;var i_=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=QE,i}return YE(t,e),t}(n_);zE.NoViableAltException=i_;var o_=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.name=e_,r}return YE(t,e),t}(n_);zE.NotAllInputParsedException=o_;var a_=function(e){function t(t,n,r){var i=e.call(this,t,n)||this;return i.previousToken=r,i.name=ZE,i}return YE(t,e),t}(n_);zE.EarlyExitException=a_,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.attemptInRepetitionRecovery=e.Recoverable=e.InRuleRecoveryException=e.IN_RULE_RECOVERY_EXCEPTION=e.EOF_FOLLOW_KEY=void 0;var t=Xv,n=kv,r=zE,i=Wy,o=Sv;function a(t){this.name=e.IN_RULE_RECOVERY_EXCEPTION,this.message=t}e.EOF_FOLLOW_KEY={},e.IN_RULE_RECOVERY_EXCEPTION="InRuleRecoveryException",e.InRuleRecoveryException=a,a.prototype=Error.prototype;var s=function(){function s(){}return s.prototype.initRecoverable=function(e){this.firstAfterRepMap={},this.resyncFollows={},this.recoveryEnabled=(0,n.has)(e,"recoveryEnabled")?e.recoveryEnabled:o.DEFAULT_PARSER_CONFIG.recoveryEnabled,this.recoveryEnabled&&(this.attemptInRepetitionRecovery=u)},s.prototype.getTokenToInsert=function(e){var n=(0,t.createTokenInstance)(e,"",NaN,NaN,NaN,NaN,NaN,NaN);return n.isInsertedInRecovery=!0,n},s.prototype.canTokenTypeBeInsertedInRecovery=function(e){return!0},s.prototype.tryInRepetitionRecovery=function(e,t,i,o){for(var a=this,s=this.findReSyncTokenType(),u=this.exportLexerState(),c=[],l=!1,p=this.LA(1),f=this.LA(1),d=function(){var e=a.LA(0),t=a.errorMessageProvider.buildMismatchTokenMessage({expected:o,actual:p,previous:e,ruleName:a.getCurrRuleFullName()}),i=new r.MismatchedTokenException(t,p,a.LA(0));i.resyncedTokens=(0,n.dropRight)(c),a.SAVE_ERROR(i)};!l;){if(this.tokenMatcher(f,o))return void d();if(i.call(this))return d(),void e.apply(this,t);this.tokenMatcher(f,s)?l=!0:(f=this.SKIP_TOKEN(),this.addToResyncTokens(f,c))}this.importLexerState(u)},s.prototype.shouldInRepetitionRecoveryBeTried=function(e,t,n){return!1!==n&&(void 0!==e&&void 0!==t&&(!this.tokenMatcher(this.LA(1),e)&&(!this.isBackTracking()&&!this.canPerformInRuleRecovery(e,this.getFollowsForInRuleRecovery(e,t)))))},s.prototype.getFollowsForInRuleRecovery=function(e,t){var n=this.getCurrentGrammarPath(e,t);return this.getNextPossibleTokenTypes(n)},s.prototype.tryInRuleRecovery=function(e,t){if(this.canRecoverWithSingleTokenInsertion(e,t))return this.getTokenToInsert(e);if(this.canRecoverWithSingleTokenDeletion(e)){var n=this.SKIP_TOKEN();return this.consumeToken(),n}throw new a("sad sad panda")},s.prototype.canPerformInRuleRecovery=function(e,t){return this.canRecoverWithSingleTokenInsertion(e,t)||this.canRecoverWithSingleTokenDeletion(e)},s.prototype.canRecoverWithSingleTokenInsertion=function(e,t){var r=this;if(!this.canTokenTypeBeInsertedInRecovery(e))return!1;if((0,n.isEmpty)(t))return!1;var i=this.LA(1);return void 0!==(0,n.find)(t,(function(e){return r.tokenMatcher(i,e)}))},s.prototype.canRecoverWithSingleTokenDeletion=function(e){return this.tokenMatcher(this.LA(2),e)},s.prototype.isInCurrentRuleReSyncSet=function(e){var t=this.getCurrFollowKey(),r=this.getFollowSetFromFollowKey(t);return(0,n.contains)(r,e)},s.prototype.findReSyncTokenType=function(){for(var e=this.flattenFollowSet(),t=this.LA(1),r=2;;){var i=t.tokenType;if((0,n.contains)(e,i))return i;t=this.LA(r),r++}},s.prototype.getCurrFollowKey=function(){if(1===this.RULE_STACK.length)return e.EOF_FOLLOW_KEY;var t=this.getLastExplicitRuleShortName(),n=this.getLastExplicitRuleOccurrenceIndex(),r=this.getPreviousExplicitRuleShortName();return{ruleName:this.shortRuleNameToFullName(t),idxInCallingRule:n,inRule:this.shortRuleNameToFullName(r)}},s.prototype.buildFullFollowKeyStack=function(){var t=this,r=this.RULE_STACK,i=this.RULE_OCCURRENCE_STACK;return(0,n.map)(r,(function(n,o){return 0===o?e.EOF_FOLLOW_KEY:{ruleName:t.shortRuleNameToFullName(n),idxInCallingRule:i[o],inRule:t.shortRuleNameToFullName(r[o-1])}}))},s.prototype.flattenFollowSet=function(){var e=this,t=(0,n.map)(this.buildFullFollowKeyStack(),(function(t){return e.getFollowSetFromFollowKey(t)}));return(0,n.flatten)(t)},s.prototype.getFollowSetFromFollowKey=function(n){if(n===e.EOF_FOLLOW_KEY)return[t.EOF];var r=n.ruleName+n.idxInCallingRule+i.IN+n.inRule;return this.resyncFollows[r]},s.prototype.addToResyncTokens=function(e,n){return this.tokenMatcher(e,t.EOF)||n.push(e),n},s.prototype.reSyncTo=function(e){for(var t=[],r=this.LA(1);!1===this.tokenMatcher(r,e);)r=this.SKIP_TOKEN(),this.addToResyncTokens(r,t);return(0,n.dropRight)(t)},s.prototype.attemptInRepetitionRecovery=function(e,t,n,r,i,o,a){},s.prototype.getCurrentGrammarPath=function(e,t){return{ruleStack:this.getHumanReadableRuleStack(),occurrenceStack:(0,n.cloneArr)(this.RULE_OCCURRENCE_STACK),lastTok:e,lastTokOccurrence:t}},s.prototype.getHumanReadableRuleStack=function(){var e=this;return(0,n.map)(this.RULE_STACK,(function(t){return e.shortRuleNameToFullName(t)}))},s}();function u(e,n,r,i,o,a,s){var u=this.getKeyForAutomaticLookahead(i,o),c=this.firstAfterRepMap[u];if(void 0===c){var l=this.getCurrRuleFullName();c=new a(this.getGAstProductions()[l],o).startWalking(),this.firstAfterRepMap[u]=c}var p=c.token,f=c.occurrence,d=c.isEndOfRule;1===this.RULE_STACK.length&&d&&void 0===p&&(p=t.EOF,f=1),this.shouldInRepetitionRecoveryBeTried(p,f,s)&&this.tryInRepetitionRecovery(e,n,r,p)}e.Recoverable=s,e.attemptInRepetitionRecovery=u}(HE);var s_={},u_={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.getKeyForAutomaticLookahead=e.AT_LEAST_ONE_SEP_IDX=e.MANY_SEP_IDX=e.AT_LEAST_ONE_IDX=e.MANY_IDX=e.OPTION_IDX=e.OR_IDX=e.BITS_FOR_ALT_IDX=e.BITS_FOR_RULE_IDX=e.BITS_FOR_OCCURRENCE_IDX=e.BITS_FOR_METHOD_TYPE=void 0,e.BITS_FOR_METHOD_TYPE=4,e.BITS_FOR_OCCURRENCE_IDX=8,e.BITS_FOR_RULE_IDX=12,e.BITS_FOR_ALT_IDX=8,e.OR_IDX=1<<e.BITS_FOR_OCCURRENCE_IDX,e.OPTION_IDX=2<<e.BITS_FOR_OCCURRENCE_IDX,e.MANY_IDX=3<<e.BITS_FOR_OCCURRENCE_IDX,e.AT_LEAST_ONE_IDX=4<<e.BITS_FOR_OCCURRENCE_IDX,e.MANY_SEP_IDX=5<<e.BITS_FOR_OCCURRENCE_IDX,e.AT_LEAST_ONE_SEP_IDX=6<<e.BITS_FOR_OCCURRENCE_IDX,e.getKeyForAutomaticLookahead=function(e,t,n){return n|t|e},e.BITS_FOR_ALT_IDX}(u_),Object.defineProperty(s_,"__esModule",{value:!0}),s_.LooksAhead=void 0;var c_=aE,l_=kv,p_=Sv,f_=u_,d_=Dy,h_=function(){function e(){}return e.prototype.initLooksAhead=function(e){this.dynamicTokensEnabled=(0,l_.has)(e,"dynamicTokensEnabled")?e.dynamicTokensEnabled:p_.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled,this.maxLookahead=(0,l_.has)(e,"maxLookahead")?e.maxLookahead:p_.DEFAULT_PARSER_CONFIG.maxLookahead,this.lookAheadFuncsCache=(0,l_.isES2015MapSupported)()?new Map:[],(0,l_.isES2015MapSupported)()?(this.getLaFuncFromCache=this.getLaFuncFromMap,this.setLaFuncCache=this.setLaFuncCacheUsingMap):(this.getLaFuncFromCache=this.getLaFuncFromObj,this.setLaFuncCache=this.setLaFuncUsingObj)},e.prototype.preComputeLookaheadFunctions=function(e){var t=this;(0,l_.forEach)(e,(function(e){t.TRACE_INIT(e.name+" Rule Lookahead",(function(){var n=(0,d_.collectMethods)(e),r=n.alternation,i=n.repetition,o=n.option,a=n.repetitionMandatory,s=n.repetitionMandatoryWithSeparator,u=n.repetitionWithSeparator;(0,l_.forEach)(r,(function(n){var r=0===n.idx?"":n.idx;t.TRACE_INIT(""+(0,d_.getProductionDslName)(n)+r,(function(){var r=(0,c_.buildLookaheadFuncForOr)(n.idx,e,n.maxLookahead||t.maxLookahead,n.hasPredicates,t.dynamicTokensEnabled,t.lookAheadBuilderForAlternatives),i=(0,f_.getKeyForAutomaticLookahead)(t.fullRuleNameToShort[e.name],f_.OR_IDX,n.idx);t.setLaFuncCache(i,r)}))})),(0,l_.forEach)(i,(function(n){t.computeLookaheadFunc(e,n.idx,f_.MANY_IDX,c_.PROD_TYPE.REPETITION,n.maxLookahead,(0,d_.getProductionDslName)(n))})),(0,l_.forEach)(o,(function(n){t.computeLookaheadFunc(e,n.idx,f_.OPTION_IDX,c_.PROD_TYPE.OPTION,n.maxLookahead,(0,d_.getProductionDslName)(n))})),(0,l_.forEach)(a,(function(n){t.computeLookaheadFunc(e,n.idx,f_.AT_LEAST_ONE_IDX,c_.PROD_TYPE.REPETITION_MANDATORY,n.maxLookahead,(0,d_.getProductionDslName)(n))})),(0,l_.forEach)(s,(function(n){t.computeLookaheadFunc(e,n.idx,f_.AT_LEAST_ONE_SEP_IDX,c_.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,n.maxLookahead,(0,d_.getProductionDslName)(n))})),(0,l_.forEach)(u,(function(n){t.computeLookaheadFunc(e,n.idx,f_.MANY_SEP_IDX,c_.PROD_TYPE.REPETITION_WITH_SEPARATOR,n.maxLookahead,(0,d_.getProductionDslName)(n))}))}))}))},e.prototype.computeLookaheadFunc=function(e,t,n,r,i,o){var a=this;this.TRACE_INIT(""+o+(0===t?"":t),(function(){var o=(0,c_.buildLookaheadFuncForOptionalProd)(t,e,i||a.maxLookahead,a.dynamicTokensEnabled,r,a.lookAheadBuilderForOptional),s=(0,f_.getKeyForAutomaticLookahead)(a.fullRuleNameToShort[e.name],n,t);a.setLaFuncCache(s,o)}))},e.prototype.lookAheadBuilderForOptional=function(e,t,n){return(0,c_.buildSingleAlternativeLookaheadFunction)(e,t,n)},e.prototype.lookAheadBuilderForAlternatives=function(e,t,n,r){return(0,c_.buildAlternativesLookAheadFunc)(e,t,n,r)},e.prototype.getKeyForAutomaticLookahead=function(e,t){var n=this.getLastExplicitRuleShortName();return(0,f_.getKeyForAutomaticLookahead)(n,e,t)},e.prototype.getLaFuncFromCache=function(e){},e.prototype.getLaFuncFromMap=function(e){return this.lookAheadFuncsCache.get(e)},e.prototype.getLaFuncFromObj=function(e){return this.lookAheadFuncsCache[e]},e.prototype.setLaFuncCache=function(e,t){},e.prototype.setLaFuncCacheUsingMap=function(e,t){this.lookAheadFuncsCache.set(e,t)},e.prototype.setLaFuncUsingObj=function(e,t){this.lookAheadFuncsCache[e]=t},e}();s_.LooksAhead=h_;var m_={},g_={};Object.defineProperty(g_,"__esModule",{value:!0}),g_.addNoneTerminalToCst=g_.addTerminalToCst=g_.setNodeLocationFull=g_.setNodeLocationOnlyOffset=void 0,g_.setNodeLocationOnlyOffset=function(e,t){!0===isNaN(e.startOffset)?(e.startOffset=t.startOffset,e.endOffset=t.endOffset):e.endOffset<t.endOffset==!0&&(e.endOffset=t.endOffset)},g_.setNodeLocationFull=function(e,t){!0===isNaN(e.startOffset)?(e.startOffset=t.startOffset,e.startColumn=t.startColumn,e.startLine=t.startLine,e.endOffset=t.endOffset,e.endColumn=t.endColumn,e.endLine=t.endLine):e.endOffset<t.endOffset==!0&&(e.endOffset=t.endOffset,e.endColumn=t.endColumn,e.endLine=t.endLine)},g_.addTerminalToCst=function(e,t,n){void 0===e.children[n]?e.children[n]=[t]:e.children[n].push(t)},g_.addNoneTerminalToCst=function(e,t,n){void 0===e.children[t]?e.children[t]=[n]:e.children[t].push(n)};var v_={},y_={};Object.defineProperty(y_,"__esModule",{value:!0}),y_.defineNameProp=y_.functionName=y_.classNameFromInstance=void 0;var E_=kv;y_.classNameFromInstance=function(e){return C_(e.constructor)};var __="name";function C_(e){var t=e.name;return t||"anonymous"}y_.functionName=C_,y_.defineNameProp=function(e,t){var n=Object.getOwnPropertyDescriptor(e,__);return!(!(0,E_.isUndefined)(n)&&!n.configurable)&&(Object.defineProperty(e,__,{enumerable:!1,configurable:!0,writable:!1,value:t}),!0)},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.validateRedundantMethods=e.validateMissingCstMethods=e.validateVisitor=e.CstVisitorDefinitionError=e.createBaseVisitorConstructorWithDefaults=e.createBaseSemanticVisitorConstructor=e.defaultVisit=void 0;var t,n,r=kv,i=y_;function o(e,t){for(var n=(0,r.keys)(e),i=n.length,o=0;o<i;o++)for(var a=e[n[o]],s=a.length,u=0;u<s;u++){var c=a[u];void 0===c.tokenTypeIdx&&this[c.name](c.children,t)}}function a(e,t){var n=s(e,t),r=c(e,t);return n.concat(r)}function s(e,n){var o=(0,r.map)(n,(function(n){if(!(0,r.isFunction)(e[n]))return{msg:"Missing visitor method: <"+n+"> on "+(0,i.functionName)(e.constructor)+" CST Visitor.",type:t.MISSING_METHOD,methodName:n}}));return(0,r.compact)(o)}e.defaultVisit=o,e.createBaseSemanticVisitorConstructor=function(e,t){var n=function(){};return(0,i.defineNameProp)(n,e+"BaseSemantics"),(n.prototype={visit:function(e,t){if((0,r.isArray)(e)&&(e=e[0]),!(0,r.isUndefined)(e))return this[e.name](e.children,t)},validateVisitor:function(){var e=a(this,t);if(!(0,r.isEmpty)(e)){var n=(0,r.map)(e,(function(e){return e.msg}));throw Error("Errors Detected in CST Visitor <"+(0,i.functionName)(this.constructor)+">:\n\t"+n.join("\n\n").replace(/\n/g,"\n\t"))}}}).constructor=n,n._RULE_NAMES=t,n},e.createBaseVisitorConstructorWithDefaults=function(e,t,n){var a=function(){};(0,i.defineNameProp)(a,e+"BaseSemanticsWithDefaults");var s=Object.create(n.prototype);return(0,r.forEach)(t,(function(e){s[e]=o})),(a.prototype=s).constructor=a,a},(n=t=e.CstVisitorDefinitionError||(e.CstVisitorDefinitionError={}))[n.REDUNDANT_METHOD=0]="REDUNDANT_METHOD",n[n.MISSING_METHOD=1]="MISSING_METHOD",e.validateVisitor=a,e.validateMissingCstMethods=s;var u=["constructor","visit","validateVisitor"];function c(e,n){var o=[];for(var a in e)!(0,r.isFunction)(e[a])||(0,r.contains)(u,a)||(0,r.contains)(n,a)||o.push({msg:"Redundant visitor method: <"+a+"> on "+(0,i.functionName)(e.constructor)+" CST Visitor\nThere is no Grammar Rule corresponding to this method's name.\n",type:t.REDUNDANT_METHOD,methodName:a});return o}e.validateRedundantMethods=c}(v_),Object.defineProperty(m_,"__esModule",{value:!0}),m_.TreeBuilder=void 0;var T_=g_,A_=kv,R_=v_,I_=Sv,D_=function(){function e(){}return e.prototype.initTreeBuilder=function(e){if(this.CST_STACK=[],this.outputCst=e.outputCst,this.nodeLocationTracking=(0,A_.has)(e,"nodeLocationTracking")?e.nodeLocationTracking:I_.DEFAULT_PARSER_CONFIG.nodeLocationTracking,this.outputCst)if(/full/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=T_.setNodeLocationFull,this.setNodeLocationFromNode=T_.setNodeLocationFull,this.cstPostRule=A_.NOOP,this.setInitialNodeLocation=this.setInitialNodeLocationFullRecovery):(this.setNodeLocationFromToken=A_.NOOP,this.setNodeLocationFromNode=A_.NOOP,this.cstPostRule=this.cstPostRuleFull,this.setInitialNodeLocation=this.setInitialNodeLocationFullRegular);else if(/onlyOffset/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=T_.setNodeLocationOnlyOffset,this.setNodeLocationFromNode=T_.setNodeLocationOnlyOffset,this.cstPostRule=A_.NOOP,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRecovery):(this.setNodeLocationFromToken=A_.NOOP,this.setNodeLocationFromNode=A_.NOOP,this.cstPostRule=this.cstPostRuleOnlyOffset,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRegular);else{if(!/none/i.test(this.nodeLocationTracking))throw Error('Invalid <nodeLocationTracking> config option: "'+e.nodeLocationTracking+'"');this.setNodeLocationFromToken=A_.NOOP,this.setNodeLocationFromNode=A_.NOOP,this.cstPostRule=A_.NOOP,this.setInitialNodeLocation=A_.NOOP}else this.cstInvocationStateUpdate=A_.NOOP,this.cstFinallyStateUpdate=A_.NOOP,this.cstPostTerminal=A_.NOOP,this.cstPostNonTerminal=A_.NOOP,this.cstPostRule=A_.NOOP},e.prototype.setInitialNodeLocationOnlyOffsetRecovery=function(e){e.location={startOffset:NaN,endOffset:NaN}},e.prototype.setInitialNodeLocationOnlyOffsetRegular=function(e){e.location={startOffset:this.LA(1).startOffset,endOffset:NaN}},e.prototype.setInitialNodeLocationFullRecovery=function(e){e.location={startOffset:NaN,startLine:NaN,startColumn:NaN,endOffset:NaN,endLine:NaN,endColumn:NaN}},e.prototype.setInitialNodeLocationFullRegular=function(e){var t=this.LA(1);e.location={startOffset:t.startOffset,startLine:t.startLine,startColumn:t.startColumn,endOffset:NaN,endLine:NaN,endColumn:NaN}},e.prototype.cstInvocationStateUpdate=function(e,t){var n={name:e,children:{}};this.setInitialNodeLocation(n),this.CST_STACK.push(n)},e.prototype.cstFinallyStateUpdate=function(){this.CST_STACK.pop()},e.prototype.cstPostRuleFull=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset==!0?(n.endOffset=t.endOffset,n.endLine=t.endLine,n.endColumn=t.endColumn):(n.startOffset=NaN,n.startLine=NaN,n.startColumn=NaN)},e.prototype.cstPostRuleOnlyOffset=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset==!0?n.endOffset=t.endOffset:n.startOffset=NaN},e.prototype.cstPostTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,T_.addTerminalToCst)(n,t,e),this.setNodeLocationFromToken(n.location,t)},e.prototype.cstPostNonTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,T_.addNoneTerminalToCst)(n,t,e),this.setNodeLocationFromNode(n.location,e.location)},e.prototype.getBaseCstVisitorConstructor=function(){if((0,A_.isUndefined)(this.baseCstVisitorConstructor)){var e=(0,R_.createBaseSemanticVisitorConstructor)(this.className,(0,A_.keys)(this.gastProductionsCache));return this.baseCstVisitorConstructor=e,e}return this.baseCstVisitorConstructor},e.prototype.getBaseCstVisitorConstructorWithDefaults=function(){if((0,A_.isUndefined)(this.baseCstVisitorWithDefaultsConstructor)){var e=(0,R_.createBaseVisitorConstructorWithDefaults)(this.className,(0,A_.keys)(this.gastProductionsCache),this.getBaseCstVisitorConstructor());return this.baseCstVisitorWithDefaultsConstructor=e,e}return this.baseCstVisitorWithDefaultsConstructor},e.prototype.getLastExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-1]},e.prototype.getPreviousExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-2]},e.prototype.getLastExplicitRuleOccurrenceIndex=function(){var e=this.RULE_OCCURRENCE_STACK;return e[e.length-1]},e}();m_.TreeBuilder=D_;var x_={};Object.defineProperty(x_,"__esModule",{value:!0}),x_.LexerAdapter=void 0;var b_=Sv,S_=function(){function e(){}return e.prototype.initLexerAdapter=function(){this.tokVector=[],this.tokVectorLength=0,this.currIdx=-1},Object.defineProperty(e.prototype,"input",{get:function(){return this.tokVector},set:function(e){if(!0!==this.selfAnalysisDone)throw Error("Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.");this.reset(),this.tokVector=e,this.tokVectorLength=e.length},enumerable:!1,configurable:!0}),e.prototype.SKIP_TOKEN=function(){return this.currIdx<=this.tokVector.length-2?(this.consumeToken(),this.LA(1)):b_.END_OF_FILE},e.prototype.LA=function(e){var t=this.currIdx+e;return t<0||this.tokVectorLength<=t?b_.END_OF_FILE:this.tokVector[t]},e.prototype.consumeToken=function(){this.currIdx++},e.prototype.exportLexerState=function(){return this.currIdx},e.prototype.importLexerState=function(e){this.currIdx=e},e.prototype.resetLexerState=function(){this.currIdx=-1},e.prototype.moveToTerminatedState=function(){this.currIdx=this.tokVector.length-1},e.prototype.getLexerPosition=function(){return this.exportLexerState()},e}();x_.LexerAdapter=S_;var k_={};Object.defineProperty(k_,"__esModule",{value:!0}),k_.RecognizerApi=void 0;var O_=kv,N_=zE,P_=Sv,w_=Jy,L_=oE,F_=Yv,M_=function(){function e(){}return e.prototype.ACTION=function(e){return e.call(this)},e.prototype.consume=function(e,t,n){return this.consumeInternal(t,e,n)},e.prototype.subrule=function(e,t,n){return this.subruleInternal(t,e,n)},e.prototype.option=function(e,t){return this.optionInternal(t,e)},e.prototype.or=function(e,t){return this.orInternal(t,e)},e.prototype.many=function(e,t){return this.manyInternal(e,t)},e.prototype.atLeastOne=function(e,t){return this.atLeastOneInternal(e,t)},e.prototype.CONSUME=function(e,t){return this.consumeInternal(e,0,t)},e.prototype.CONSUME1=function(e,t){return this.consumeInternal(e,1,t)},e.prototype.CONSUME2=function(e,t){return this.consumeInternal(e,2,t)},e.prototype.CONSUME3=function(e,t){return this.consumeInternal(e,3,t)},e.prototype.CONSUME4=function(e,t){return this.consumeInternal(e,4,t)},e.prototype.CONSUME5=function(e,t){return this.consumeInternal(e,5,t)},e.prototype.CONSUME6=function(e,t){return this.consumeInternal(e,6,t)},e.prototype.CONSUME7=function(e,t){return this.consumeInternal(e,7,t)},e.prototype.CONSUME8=function(e,t){return this.consumeInternal(e,8,t)},e.prototype.CONSUME9=function(e,t){return this.consumeInternal(e,9,t)},e.prototype.SUBRULE=function(e,t){return this.subruleInternal(e,0,t)},e.prototype.SUBRULE1=function(e,t){return this.subruleInternal(e,1,t)},e.prototype.SUBRULE2=function(e,t){return this.subruleInternal(e,2,t)},e.prototype.SUBRULE3=function(e,t){return this.subruleInternal(e,3,t)},e.prototype.SUBRULE4=function(e,t){return this.subruleInternal(e,4,t)},e.prototype.SUBRULE5=function(e,t){return this.subruleInternal(e,5,t)},e.prototype.SUBRULE6=function(e,t){return this.subruleInternal(e,6,t)},e.prototype.SUBRULE7=function(e,t){return this.subruleInternal(e,7,t)},e.prototype.SUBRULE8=function(e,t){return this.subruleInternal(e,8,t)},e.prototype.SUBRULE9=function(e,t){return this.subruleInternal(e,9,t)},e.prototype.OPTION=function(e){return this.optionInternal(e,0)},e.prototype.OPTION1=function(e){return this.optionInternal(e,1)},e.prototype.OPTION2=function(e){return this.optionInternal(e,2)},e.prototype.OPTION3=function(e){return this.optionInternal(e,3)},e.prototype.OPTION4=function(e){return this.optionInternal(e,4)},e.prototype.OPTION5=function(e){return this.optionInternal(e,5)},e.prototype.OPTION6=function(e){return this.optionInternal(e,6)},e.prototype.OPTION7=function(e){return this.optionInternal(e,7)},e.prototype.OPTION8=function(e){return this.optionInternal(e,8)},e.prototype.OPTION9=function(e){return this.optionInternal(e,9)},e.prototype.OR=function(e){return this.orInternal(e,0)},e.prototype.OR1=function(e){return this.orInternal(e,1)},e.prototype.OR2=function(e){return this.orInternal(e,2)},e.prototype.OR3=function(e){return this.orInternal(e,3)},e.prototype.OR4=function(e){return this.orInternal(e,4)},e.prototype.OR5=function(e){return this.orInternal(e,5)},e.prototype.OR6=function(e){return this.orInternal(e,6)},e.prototype.OR7=function(e){return this.orInternal(e,7)},e.prototype.OR8=function(e){return this.orInternal(e,8)},e.prototype.OR9=function(e){return this.orInternal(e,9)},e.prototype.MANY=function(e){this.manyInternal(0,e)},e.prototype.MANY1=function(e){this.manyInternal(1,e)},e.prototype.MANY2=function(e){this.manyInternal(2,e)},e.prototype.MANY3=function(e){this.manyInternal(3,e)},e.prototype.MANY4=function(e){this.manyInternal(4,e)},e.prototype.MANY5=function(e){this.manyInternal(5,e)},e.prototype.MANY6=function(e){this.manyInternal(6,e)},e.prototype.MANY7=function(e){this.manyInternal(7,e)},e.prototype.MANY8=function(e){this.manyInternal(8,e)},e.prototype.MANY9=function(e){this.manyInternal(9,e)},e.prototype.MANY_SEP=function(e){this.manySepFirstInternal(0,e)},e.prototype.MANY_SEP1=function(e){this.manySepFirstInternal(1,e)},e.prototype.MANY_SEP2=function(e){this.manySepFirstInternal(2,e)},e.prototype.MANY_SEP3=function(e){this.manySepFirstInternal(3,e)},e.prototype.MANY_SEP4=function(e){this.manySepFirstInternal(4,e)},e.prototype.MANY_SEP5=function(e){this.manySepFirstInternal(5,e)},e.prototype.MANY_SEP6=function(e){this.manySepFirstInternal(6,e)},e.prototype.MANY_SEP7=function(e){this.manySepFirstInternal(7,e)},e.prototype.MANY_SEP8=function(e){this.manySepFirstInternal(8,e)},e.prototype.MANY_SEP9=function(e){this.manySepFirstInternal(9,e)},e.prototype.AT_LEAST_ONE=function(e){this.atLeastOneInternal(0,e)},e.prototype.AT_LEAST_ONE1=function(e){return this.atLeastOneInternal(1,e)},e.prototype.AT_LEAST_ONE2=function(e){this.atLeastOneInternal(2,e)},e.prototype.AT_LEAST_ONE3=function(e){this.atLeastOneInternal(3,e)},e.prototype.AT_LEAST_ONE4=function(e){this.atLeastOneInternal(4,e)},e.prototype.AT_LEAST_ONE5=function(e){this.atLeastOneInternal(5,e)},e.prototype.AT_LEAST_ONE6=function(e){this.atLeastOneInternal(6,e)},e.prototype.AT_LEAST_ONE7=function(e){this.atLeastOneInternal(7,e)},e.prototype.AT_LEAST_ONE8=function(e){this.atLeastOneInternal(8,e)},e.prototype.AT_LEAST_ONE9=function(e){this.atLeastOneInternal(9,e)},e.prototype.AT_LEAST_ONE_SEP=function(e){this.atLeastOneSepFirstInternal(0,e)},e.prototype.AT_LEAST_ONE_SEP1=function(e){this.atLeastOneSepFirstInternal(1,e)},e.prototype.AT_LEAST_ONE_SEP2=function(e){this.atLeastOneSepFirstInternal(2,e)},e.prototype.AT_LEAST_ONE_SEP3=function(e){this.atLeastOneSepFirstInternal(3,e)},e.prototype.AT_LEAST_ONE_SEP4=function(e){this.atLeastOneSepFirstInternal(4,e)},e.prototype.AT_LEAST_ONE_SEP5=function(e){this.atLeastOneSepFirstInternal(5,e)},e.prototype.AT_LEAST_ONE_SEP6=function(e){this.atLeastOneSepFirstInternal(6,e)},e.prototype.AT_LEAST_ONE_SEP7=function(e){this.atLeastOneSepFirstInternal(7,e)},e.prototype.AT_LEAST_ONE_SEP8=function(e){this.atLeastOneSepFirstInternal(8,e)},e.prototype.AT_LEAST_ONE_SEP9=function(e){this.atLeastOneSepFirstInternal(9,e)},e.prototype.RULE=function(e,t,n){if(void 0===n&&(n=P_.DEFAULT_RULE_CONFIG),(0,O_.contains)(this.definedRulesNames,e)){var r={message:w_.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({topLevelRule:e,grammarName:this.className}),type:P_.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:e};this.definitionErrors.push(r)}this.definedRulesNames.push(e);var i=this.defineRule(e,t,n);return this[e]=i,i},e.prototype.OVERRIDE_RULE=function(e,t,n){void 0===n&&(n=P_.DEFAULT_RULE_CONFIG);var r=[];r=r.concat((0,L_.validateRuleIsOverridden)(e,this.definedRulesNames,this.className)),this.definitionErrors=this.definitionErrors.concat(r);var i=this.defineRule(e,t,n);return this[e]=i,i},e.prototype.BACKTRACK=function(e,t){return function(){this.isBackTrackingStack.push(1);var n=this.saveRecogState();try{return e.apply(this,t),!0}catch(PI){if((0,N_.isRecognitionException)(PI))return!1;throw PI}finally{this.reloadRecogState(n),this.isBackTrackingStack.pop()}}},e.prototype.getGAstProductions=function(){return this.gastProductionsCache},e.prototype.getSerializedGastProductions=function(){return(0,F_.serializeGrammar)((0,O_.values)(this.gastProductionsCache))},e}();k_.RecognizerApi=M_;var $_={};Object.defineProperty($_,"__esModule",{value:!0}),$_.RecognizerEngine=void 0;var B_=kv,q_=u_,j_=zE,U_=aE,W_=sE,K_=Sv,G_=HE,V_=Xv,H_=iy,z_=y_,Y_=function(){function e(){}return e.prototype.initRecognizerEngine=function(e,t){if(this.className=(0,z_.classNameFromInstance)(this),this.shortRuleNameToFull={},this.fullRuleNameToShort={},this.ruleShortNameIdx=256,this.tokenMatcher=H_.tokenStructuredMatcherNoCategories,this.definedRulesNames=[],this.tokensMap={},this.isBackTrackingStack=[],this.RULE_STACK=[],this.RULE_OCCURRENCE_STACK=[],this.gastProductionsCache={},(0,B_.has)(t,"serializedGrammar"))throw Error("The Parser's configuration can no longer contain a <serializedGrammar> property.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\n\tFor Further details.");if((0,B_.isArray)(e)){if((0,B_.isEmpty)(e))throw Error("A Token Vocabulary cannot be empty.\n\tNote that the first argument for the parser constructor\n\tis no longer a Token vector (since v4.0).");if("number"==typeof e[0].startOffset)throw Error("The Parser constructor no longer accepts a token vector as the first argument.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\n\tFor Further details.")}if((0,B_.isArray)(e))this.tokensMap=(0,B_.reduce)(e,(function(e,t){return e[t.name]=t,e}),{});else if((0,B_.has)(e,"modes")&&(0,B_.every)((0,B_.flatten)((0,B_.values)(e.modes)),H_.isTokenType)){var n=(0,B_.flatten)((0,B_.values)(e.modes)),r=(0,B_.uniq)(n);this.tokensMap=(0,B_.reduce)(r,(function(e,t){return e[t.name]=t,e}),{})}else{if(!(0,B_.isObject)(e))throw new Error("<tokensDictionary> argument must be An Array of Token constructors, A dictionary of Token constructors or an IMultiModeLexerDefinition");this.tokensMap=(0,B_.cloneObj)(e)}this.tokensMap.EOF=V_.EOF;var i=(0,B_.every)((0,B_.values)(e),(function(e){return(0,B_.isEmpty)(e.categoryMatches)}));this.tokenMatcher=i?H_.tokenStructuredMatcherNoCategories:H_.tokenStructuredMatcher,(0,H_.augmentTokenTypes)((0,B_.values)(this.tokensMap))},e.prototype.defineRule=function(e,t,n){if(this.selfAnalysisDone)throw Error("Grammar rule <"+e+"> may not be defined after the 'performSelfAnalysis' method has been called'\nMake sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.");var r=(0,B_.has)(n,"resyncEnabled")?n.resyncEnabled:K_.DEFAULT_RULE_CONFIG.resyncEnabled,i=(0,B_.has)(n,"recoveryValueFunc")?n.recoveryValueFunc:K_.DEFAULT_RULE_CONFIG.recoveryValueFunc,o=this.ruleShortNameIdx<<q_.BITS_FOR_METHOD_TYPE+q_.BITS_FOR_OCCURRENCE_IDX;function a(e){try{if(!0===this.outputCst){t.apply(this,e);var n=this.CST_STACK[this.CST_STACK.length-1];return this.cstPostRule(n),n}return t.apply(this,e)}catch(PI){return this.invokeRuleCatch(PI,r,i)}finally{this.ruleFinallyStateUpdate()}}this.ruleShortNameIdx++,this.shortRuleNameToFull[o]=e,this.fullRuleNameToShort[e]=o;var s=function(t,n){return void 0===t&&(t=0),this.ruleInvocationStateUpdate(o,e,t),a.call(this,n)};return s.ruleName=e,s.originalGrammarAction=t,s},e.prototype.invokeRuleCatch=function(e,t,n){var r=1===this.RULE_STACK.length,i=t&&!this.isBackTracking()&&this.recoveryEnabled;if((0,j_.isRecognitionException)(e)){var o=e;if(i){var a,s=this.findReSyncTokenType();if(this.isInCurrentRuleReSyncSet(s))return o.resyncedTokens=this.reSyncTo(s),this.outputCst?((a=this.CST_STACK[this.CST_STACK.length-1]).recoveredNode=!0,a):n();throw this.outputCst&&((a=this.CST_STACK[this.CST_STACK.length-1]).recoveredNode=!0,o.partialCstResult=a),o}if(r)return this.moveToTerminatedState(),n();throw o}throw e},e.prototype.optionInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.OPTION_IDX,t);return this.optionInternalLogic(e,t,n)},e.prototype.optionInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==e.DEF){if(r=e.DEF,void 0!==(i=e.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=e;if(!0===a.call(this))return r.call(this)},e.prototype.atLeastOneInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.AT_LEAST_ONE_IDX,e);return this.atLeastOneInternalLogic(e,t,n)},e.prototype.atLeastOneInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==t.DEF){if(r=t.DEF,void 0!==(i=t.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=t;if(!0!==a.call(this))throw this.raiseEarlyExitException(e,U_.PROD_TYPE.REPETITION_MANDATORY,t.ERR_MSG);for(var u=this.doSingleRepetition(r);!0===a.call(this)&&!0===u;)u=this.doSingleRepetition(r);this.attemptInRepetitionRecovery(this.atLeastOneInternal,[e,t],a,q_.AT_LEAST_ONE_IDX,e,W_.NextTerminalAfterAtLeastOneWalker)},e.prototype.atLeastOneSepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.AT_LEAST_ONE_SEP_IDX,e);this.atLeastOneSepFirstInternalLogic(e,t,n)},e.prototype.atLeastOneSepFirstInternalLogic=function(e,t,n){var r=this,i=t.DEF,o=t.SEP;if(!0!==this.getLaFuncFromCache(n).call(this))throw this.raiseEarlyExitException(e,U_.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,t.ERR_MSG);i.call(this);for(var a=function(){return r.tokenMatcher(r.LA(1),o)};!0===this.tokenMatcher(this.LA(1),o);)this.CONSUME(o),i.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,o,a,i,W_.NextTerminalAfterAtLeastOneSepWalker],a,q_.AT_LEAST_ONE_SEP_IDX,e,W_.NextTerminalAfterAtLeastOneSepWalker)},e.prototype.manyInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.MANY_IDX,e);return this.manyInternalLogic(e,t,n)},e.prototype.manyInternalLogic=function(e,t,n){var r,i,o=this,a=this.getLaFuncFromCache(n);if(void 0!==t.DEF){if(r=t.DEF,void 0!==(i=t.GATE)){var s=a;a=function(){return i.call(o)&&s.call(o)}}}else r=t;for(var u=!0;!0===a.call(this)&&!0===u;)u=this.doSingleRepetition(r);this.attemptInRepetitionRecovery(this.manyInternal,[e,t],a,q_.MANY_IDX,e,W_.NextTerminalAfterManyWalker,u)},e.prototype.manySepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.MANY_SEP_IDX,e);this.manySepFirstInternalLogic(e,t,n)},e.prototype.manySepFirstInternalLogic=function(e,t,n){var r=this,i=t.DEF,o=t.SEP;if(!0===this.getLaFuncFromCache(n).call(this)){i.call(this);for(var a=function(){return r.tokenMatcher(r.LA(1),o)};!0===this.tokenMatcher(this.LA(1),o);)this.CONSUME(o),i.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,o,a,i,W_.NextTerminalAfterManySepWalker],a,q_.MANY_SEP_IDX,e,W_.NextTerminalAfterManySepWalker)}},e.prototype.repetitionSepSecondInternal=function(e,t,n,r,i){for(;n();)this.CONSUME(t),r.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,t,n,r,i],n,q_.AT_LEAST_ONE_SEP_IDX,e,i)},e.prototype.doSingleRepetition=function(e){var t=this.getLexerPosition();return e.call(this),this.getLexerPosition()>t},e.prototype.orInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(q_.OR_IDX,t),r=(0,B_.isArray)(e)?e:e.DEF,i=this.getLaFuncFromCache(n).call(this,r);if(void 0!==i)return r[i].ALT.call(this);this.raiseNoAltException(t,e.ERR_MSG)},e.prototype.ruleFinallyStateUpdate=function(){if(this.RULE_STACK.pop(),this.RULE_OCCURRENCE_STACK.pop(),this.cstFinallyStateUpdate(),0===this.RULE_STACK.length&&!1===this.isAtEndOfInput()){var e=this.LA(1),t=this.errorMessageProvider.buildNotAllInputParsedMessage({firstRedundant:e,ruleName:this.getCurrRuleFullName()});this.SAVE_ERROR(new j_.NotAllInputParsedException(t,e))}},e.prototype.subruleInternal=function(e,t,n){var r;try{var i=void 0!==n?n.ARGS:void 0;return r=e.call(this,t,i),this.cstPostNonTerminal(r,void 0!==n&&void 0!==n.LABEL?n.LABEL:e.ruleName),r}catch(PI){this.subruleInternalError(PI,n,e.ruleName)}},e.prototype.subruleInternalError=function(e,t,n){throw(0,j_.isRecognitionException)(e)&&void 0!==e.partialCstResult&&(this.cstPostNonTerminal(e.partialCstResult,void 0!==t&&void 0!==t.LABEL?t.LABEL:n),delete e.partialCstResult),e},e.prototype.consumeInternal=function(e,t,n){var r;try{var i=this.LA(1);!0===this.tokenMatcher(i,e)?(this.consumeToken(),r=i):this.consumeInternalError(e,i,n)}catch(o){r=this.consumeInternalRecovery(e,t,o)}return this.cstPostTerminal(void 0!==n&&void 0!==n.LABEL?n.LABEL:e.name,r),r},e.prototype.consumeInternalError=function(e,t,n){var r,i=this.LA(0);throw r=void 0!==n&&n.ERR_MSG?n.ERR_MSG:this.errorMessageProvider.buildMismatchTokenMessage({expected:e,actual:t,previous:i,ruleName:this.getCurrRuleFullName()}),this.SAVE_ERROR(new j_.MismatchedTokenException(r,t,i))},e.prototype.consumeInternalRecovery=function(e,t,n){if(!this.recoveryEnabled||"MismatchedTokenException"!==n.name||this.isBackTracking())throw n;var r=this.getFollowsForInRuleRecovery(e,t);try{return this.tryInRuleRecovery(e,r)}catch(i){throw i.name===G_.IN_RULE_RECOVERY_EXCEPTION?n:i}},e.prototype.saveRecogState=function(){var e=this.errors,t=(0,B_.cloneArr)(this.RULE_STACK);return{errors:e,lexerState:this.exportLexerState(),RULE_STACK:t,CST_STACK:this.CST_STACK}},e.prototype.reloadRecogState=function(e){this.errors=e.errors,this.importLexerState(e.lexerState),this.RULE_STACK=e.RULE_STACK},e.prototype.ruleInvocationStateUpdate=function(e,t,n){this.RULE_OCCURRENCE_STACK.push(n),this.RULE_STACK.push(e),this.cstInvocationStateUpdate(t,e)},e.prototype.isBackTracking=function(){return 0!==this.isBackTrackingStack.length},e.prototype.getCurrRuleFullName=function(){var e=this.getLastExplicitRuleShortName();return this.shortRuleNameToFull[e]},e.prototype.shortRuleNameToFullName=function(e){return this.shortRuleNameToFull[e]},e.prototype.isAtEndOfInput=function(){return this.tokenMatcher(this.LA(1),V_.EOF)},e.prototype.reset=function(){this.resetLexerState(),this.isBackTrackingStack=[],this.errors=[],this.RULE_STACK=[],this.CST_STACK=[],this.RULE_OCCURRENCE_STACK=[]},e}();$_.RecognizerEngine=Y_;var X_={};Object.defineProperty(X_,"__esModule",{value:!0}),X_.ErrorHandler=void 0;var J_=zE,Q_=kv,Z_=aE,eC=Sv,tC=function(){function e(){}return e.prototype.initErrorHandler=function(e){this._errors=[],this.errorMessageProvider=(0,Q_.has)(e,"errorMessageProvider")?e.errorMessageProvider:eC.DEFAULT_PARSER_CONFIG.errorMessageProvider},e.prototype.SAVE_ERROR=function(e){if((0,J_.isRecognitionException)(e))return e.context={ruleStack:this.getHumanReadableRuleStack(),ruleOccurrenceStack:(0,Q_.cloneArr)(this.RULE_OCCURRENCE_STACK)},this._errors.push(e),e;throw Error("Trying to save an Error which is not a RecognitionException")},Object.defineProperty(e.prototype,"errors",{get:function(){return(0,Q_.cloneArr)(this._errors)},set:function(e){this._errors=e},enumerable:!1,configurable:!0}),e.prototype.raiseEarlyExitException=function(e,t,n){for(var r=this.getCurrRuleFullName(),i=this.getGAstProductions()[r],o=(0,Z_.getLookaheadPathsForOptionalProd)(e,i,t,this.maxLookahead)[0],a=[],s=1;s<=this.maxLookahead;s++)a.push(this.LA(s));var u=this.errorMessageProvider.buildEarlyExitMessage({expectedIterationPaths:o,actual:a,previous:this.LA(0),customUserDescription:n,ruleName:r});throw this.SAVE_ERROR(new J_.EarlyExitException(u,this.LA(1),this.LA(0)))},e.prototype.raiseNoAltException=function(e,t){for(var n=this.getCurrRuleFullName(),r=this.getGAstProductions()[n],i=(0,Z_.getLookaheadPathsForOr)(e,r,this.maxLookahead),o=[],a=1;a<=this.maxLookahead;a++)o.push(this.LA(a));var s=this.LA(0),u=this.errorMessageProvider.buildNoViableAltMessage({expectedPathsPerAlt:i,actual:o,previous:s,customUserDescription:t,ruleName:this.getCurrRuleFullName()});throw this.SAVE_ERROR(new J_.NoViableAltException(u,this.LA(1),s))},e}();X_.ErrorHandler=tC;var nC={};Object.defineProperty(nC,"__esModule",{value:!0}),nC.ContentAssist=void 0;var rC=sE,iC=kv,oC=function(){function e(){}return e.prototype.initContentAssist=function(){},e.prototype.computeContentAssist=function(e,t){var n=this.gastProductionsCache[e];if((0,iC.isUndefined)(n))throw Error("Rule ->"+e+"<- does not exist in this grammar.");return(0,rC.nextPossibleTokensAfter)([n],t,this.tokenMatcher,this.maxLookahead)},e.prototype.getNextPossibleTokenTypes=function(e){var t=(0,iC.first)(e.ruleStack),n=this.getGAstProductions()[t];return new rC.NextAfterTokenWalker(n,e).startWalking()},e}();nC.ContentAssist=oC;var aC={};Object.defineProperty(aC,"__esModule",{value:!0}),aC.GastRecorder=void 0;var sC=kv,uC=Yv,cC=Jv,lC=iy,pC=Xv,fC=Sv,dC=u_,hC={description:"This Object indicates the Parser is during Recording Phase"};Object.freeze(hC);var mC=Math.pow(2,dC.BITS_FOR_OCCURRENCE_IDX)-1,gC=(0,pC.createToken)({name:"RECORDING_PHASE_TOKEN",pattern:cC.Lexer.NA});(0,lC.augmentTokenTypes)([gC]);var vC=(0,pC.createTokenInstance)(gC,"This IToken indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",-1,-1,-1,-1,-1,-1);Object.freeze(vC);var yC={name:"This CSTNode indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",children:{}},EC=function(){function e(){}return e.prototype.initGastRecorder=function(e){this.recordingProdStack=[],this.RECORDING_PHASE=!1},e.prototype.enableRecording=function(){var e=this;this.RECORDING_PHASE=!0,this.TRACE_INIT("Enable Recording",(function(){for(var t=function(t){var n=t>0?t:"";e["CONSUME"+n]=function(e,n){return this.consumeInternalRecord(e,t,n)},e["SUBRULE"+n]=function(e,n){return this.subruleInternalRecord(e,t,n)},e["OPTION"+n]=function(e){return this.optionInternalRecord(e,t)},e["OR"+n]=function(e){return this.orInternalRecord(e,t)},e["MANY"+n]=function(e){this.manyInternalRecord(t,e)},e["MANY_SEP"+n]=function(e){this.manySepFirstInternalRecord(t,e)},e["AT_LEAST_ONE"+n]=function(e){this.atLeastOneInternalRecord(t,e)},e["AT_LEAST_ONE_SEP"+n]=function(e){this.atLeastOneSepFirstInternalRecord(t,e)}},n=0;n<10;n++)t(n);e.consume=function(e,t,n){return this.consumeInternalRecord(t,e,n)},e.subrule=function(e,t,n){return this.subruleInternalRecord(t,e,n)},e.option=function(e,t){return this.optionInternalRecord(t,e)},e.or=function(e,t){return this.orInternalRecord(t,e)},e.many=function(e,t){this.manyInternalRecord(e,t)},e.atLeastOne=function(e,t){this.atLeastOneInternalRecord(e,t)},e.ACTION=e.ACTION_RECORD,e.BACKTRACK=e.BACKTRACK_RECORD,e.LA=e.LA_RECORD}))},e.prototype.disableRecording=function(){var e=this;this.RECORDING_PHASE=!1,this.TRACE_INIT("Deleting Recording methods",(function(){for(var t=0;t<10;t++){var n=t>0?t:"";delete e["CONSUME"+n],delete e["SUBRULE"+n],delete e["OPTION"+n],delete e["OR"+n],delete e["MANY"+n],delete e["MANY_SEP"+n],delete e["AT_LEAST_ONE"+n],delete e["AT_LEAST_ONE_SEP"+n]}delete e.consume,delete e.subrule,delete e.option,delete e.or,delete e.many,delete e.atLeastOne,delete e.ACTION,delete e.BACKTRACK,delete e.LA}))},e.prototype.ACTION_RECORD=function(e){},e.prototype.BACKTRACK_RECORD=function(e,t){return function(){return!0}},e.prototype.LA_RECORD=function(e){return fC.END_OF_FILE},e.prototype.topLevelRuleRecord=function(e,t){try{var n=new uC.Rule({definition:[],name:e});return n.name=e,this.recordingProdStack.push(n),t.call(this),this.recordingProdStack.pop(),n}catch(r){if(!0!==r.KNOWN_RECORDER_ERROR)try{r.message=r.message+'\n\t This error was thrown during the "grammar recording phase" For more info see:\n\thttps://chevrotain.io/docs/guide/internals.html#grammar-recording'}catch(i){throw r}throw r}},e.prototype.optionInternalRecord=function(e,t){return _C.call(this,uC.Option,e,t)},e.prototype.atLeastOneInternalRecord=function(e,t){_C.call(this,uC.RepetitionMandatory,t,e)},e.prototype.atLeastOneSepFirstInternalRecord=function(e,t){_C.call(this,uC.RepetitionMandatoryWithSeparator,t,e,true)},e.prototype.manyInternalRecord=function(e,t){_C.call(this,uC.Repetition,t,e)},e.prototype.manySepFirstInternalRecord=function(e,t){_C.call(this,uC.RepetitionWithSeparator,t,e,true)},e.prototype.orInternalRecord=function(e,t){return CC.call(this,e,t)},e.prototype.subruleInternalRecord=function(e,t,n){if(AC(t),!e||!1===(0,sC.has)(e,"ruleName")){var r=new Error("<SUBRULE"+TC(t)+"> argument is invalid expecting a Parser method reference but got: <"+JSON.stringify(e)+">\n inside top level rule: <"+this.recordingProdStack[0].name+">");throw r.KNOWN_RECORDER_ERROR=!0,r}var i=(0,sC.peek)(this.recordingProdStack),o=e.ruleName,a=new uC.NonTerminal({idx:t,nonTerminalName:o,label:null==n?void 0:n.LABEL,referencedRule:void 0});return i.definition.push(a),this.outputCst?yC:hC},e.prototype.consumeInternalRecord=function(e,t,n){if(AC(t),!(0,lC.hasShortKeyProperty)(e)){var r=new Error("<CONSUME"+TC(t)+"> argument is invalid expecting a TokenType reference but got: <"+JSON.stringify(e)+">\n inside top level rule: <"+this.recordingProdStack[0].name+">");throw r.KNOWN_RECORDER_ERROR=!0,r}var i=(0,sC.peek)(this.recordingProdStack),o=new uC.Terminal({idx:t,terminalType:e,label:null==n?void 0:n.LABEL});return i.definition.push(o),vC},e}();function _C(e,t,n,r){void 0===r&&(r=!1),AC(n);var i=(0,sC.peek)(this.recordingProdStack),o=(0,sC.isFunction)(t)?t:t.DEF,a=new e({definition:[],idx:n});return r&&(a.separator=t.SEP),(0,sC.has)(t,"MAX_LOOKAHEAD")&&(a.maxLookahead=t.MAX_LOOKAHEAD),this.recordingProdStack.push(a),o.call(this),i.definition.push(a),this.recordingProdStack.pop(),hC}function CC(e,t){var n=this;AC(t);var r=(0,sC.peek)(this.recordingProdStack),i=!1===(0,sC.isArray)(e),o=!1===i?e:e.DEF,a=new uC.Alternation({definition:[],idx:t,ignoreAmbiguities:i&&!0===e.IGNORE_AMBIGUITIES});(0,sC.has)(e,"MAX_LOOKAHEAD")&&(a.maxLookahead=e.MAX_LOOKAHEAD);var s=(0,sC.some)(o,(function(e){return(0,sC.isFunction)(e.GATE)}));return a.hasPredicates=s,r.definition.push(a),(0,sC.forEach)(o,(function(e){var t=new uC.Alternative({definition:[]});a.definition.push(t),(0,sC.has)(e,"IGNORE_AMBIGUITIES")?t.ignoreAmbiguities=e.IGNORE_AMBIGUITIES:(0,sC.has)(e,"GATE")&&(t.ignoreAmbiguities=!0),n.recordingProdStack.push(t),e.ALT.call(n),n.recordingProdStack.pop()})),hC}function TC(e){return 0===e?"":""+e}function AC(e){if(e<0||e>mC){var t=new Error("Invalid DSL Method idx value: <"+e+">\n\tIdx value must be a none negative value smaller than "+(mC+1));throw t.KNOWN_RECORDER_ERROR=!0,t}}aC.GastRecorder=EC;var RC={};Object.defineProperty(RC,"__esModule",{value:!0}),RC.PerformanceTracer=void 0;var IC=kv,DC=Sv,xC=function(){function e(){}return e.prototype.initPerformanceTracer=function(e){if((0,IC.has)(e,"traceInitPerf")){var t=e.traceInitPerf,n="number"==typeof t;this.traceInitMaxIdent=n?t:1/0,this.traceInitPerf=n?t>0:t}else this.traceInitMaxIdent=0,this.traceInitPerf=DC.DEFAULT_PARSER_CONFIG.traceInitPerf;this.traceInitIndent=-1},e.prototype.TRACE_INIT=function(e,t){if(!0===this.traceInitPerf){this.traceInitIndent++;var n=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(n+"--\x3e <"+e+">");var r=(0,IC.timer)(t),i=r.time,o=r.value,a=i>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&a(n+"<-- <"+e+"> time: "+i+"ms"),this.traceInitIndent--,o}return t()},e}();RC.PerformanceTracer=xC;var bC={};Object.defineProperty(bC,"__esModule",{value:!0}),bC.applyMixins=void 0,bC.applyMixins=function(e,t){t.forEach((function(t){var n=t.prototype;Object.getOwnPropertyNames(n).forEach((function(r){if("constructor"!==r){var i=Object.getOwnPropertyDescriptor(n,r);i&&(i.get||i.set)?Object.defineProperty(e.prototype,r,i):e.prototype[r]=t.prototype[r]}}))}))},function(e){var t=rr&&rr.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddedActionsParser=e.CstParser=e.Parser=e.EMPTY_ALT=e.ParserDefinitionErrorType=e.DEFAULT_RULE_CONFIG=e.DEFAULT_PARSER_CONFIG=e.END_OF_FILE=void 0;var n,r=kv,i=Hv,o=Xv,a=Jy,s=Qy,u=HE,c=s_,l=m_,p=x_,f=k_,d=$_,h=X_,m=nC,g=aC,v=RC,y=bC;e.END_OF_FILE=(0,o.createTokenInstance)(o.EOF,"",NaN,NaN,NaN,NaN,NaN,NaN),Object.freeze(e.END_OF_FILE),e.DEFAULT_PARSER_CONFIG=Object.freeze({recoveryEnabled:!1,maxLookahead:3,dynamicTokensEnabled:!1,outputCst:!0,errorMessageProvider:a.defaultParserErrorProvider,nodeLocationTracking:"none",traceInitPerf:!1,skipValidations:!1}),e.DEFAULT_RULE_CONFIG=Object.freeze({recoveryValueFunc:function(){},resyncEnabled:!0}),(n=e.ParserDefinitionErrorType||(e.ParserDefinitionErrorType={}))[n.INVALID_RULE_NAME=0]="INVALID_RULE_NAME",n[n.DUPLICATE_RULE_NAME=1]="DUPLICATE_RULE_NAME",n[n.INVALID_RULE_OVERRIDE=2]="INVALID_RULE_OVERRIDE",n[n.DUPLICATE_PRODUCTIONS=3]="DUPLICATE_PRODUCTIONS",n[n.UNRESOLVED_SUBRULE_REF=4]="UNRESOLVED_SUBRULE_REF",n[n.LEFT_RECURSION=5]="LEFT_RECURSION",n[n.NONE_LAST_EMPTY_ALT=6]="NONE_LAST_EMPTY_ALT",n[n.AMBIGUOUS_ALTS=7]="AMBIGUOUS_ALTS",n[n.CONFLICT_TOKENS_RULES_NAMESPACE=8]="CONFLICT_TOKENS_RULES_NAMESPACE",n[n.INVALID_TOKEN_NAME=9]="INVALID_TOKEN_NAME",n[n.NO_NON_EMPTY_LOOKAHEAD=10]="NO_NON_EMPTY_LOOKAHEAD",n[n.AMBIGUOUS_PREFIX_ALTS=11]="AMBIGUOUS_PREFIX_ALTS",n[n.TOO_MANY_ALTS=12]="TOO_MANY_ALTS",e.EMPTY_ALT=function(e){return void 0===e&&(e=void 0),function(){return e}};var E=function(){function t(t,n){this.definitionErrors=[],this.selfAnalysisDone=!1;var i=this;if(i.initErrorHandler(n),i.initLexerAdapter(),i.initLooksAhead(n),i.initRecognizerEngine(t,n),i.initRecoverable(n),i.initTreeBuilder(n),i.initContentAssist(),i.initGastRecorder(n),i.initPerformanceTracer(n),(0,r.has)(n,"ignoredIssues"))throw new Error("The <ignoredIssues> IParserConfig property has been deprecated.\n\tPlease use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\n\tSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\n\tFor further details.");this.skipValidations=(0,r.has)(n,"skipValidations")?n.skipValidations:e.DEFAULT_PARSER_CONFIG.skipValidations}return t.performSelfAnalysis=function(e){throw Error("The **static** `performSelfAnalysis` method has been deprecated.\t\nUse the **instance** method with the same name instead.")},t.prototype.performSelfAnalysis=function(){var e=this;this.TRACE_INIT("performSelfAnalysis",(function(){var n;e.selfAnalysisDone=!0;var o=e.className;e.TRACE_INIT("toFastProps",(function(){(0,r.toFastProperties)(e)})),e.TRACE_INIT("Grammar Recording",(function(){try{e.enableRecording(),(0,r.forEach)(e.definedRulesNames,(function(t){var n=e[t].originalGrammarAction,r=void 0;e.TRACE_INIT(t+" Rule",(function(){r=e.topLevelRuleRecord(t,n)})),e.gastProductionsCache[t]=r}))}finally{e.disableRecording()}}));var u=[];if(e.TRACE_INIT("Grammar Resolving",(function(){u=(0,s.resolveGrammar)({rules:(0,r.values)(e.gastProductionsCache)}),e.definitionErrors=e.definitionErrors.concat(u)})),e.TRACE_INIT("Grammar Validations",(function(){if((0,r.isEmpty)(u)&&!1===e.skipValidations){var t=(0,s.validateGrammar)({rules:(0,r.values)(e.gastProductionsCache),maxLookahead:e.maxLookahead,tokenTypes:(0,r.values)(e.tokensMap),errMsgProvider:a.defaultGrammarValidatorErrorProvider,grammarName:o});e.definitionErrors=e.definitionErrors.concat(t)}})),(0,r.isEmpty)(e.definitionErrors)&&(e.recoveryEnabled&&e.TRACE_INIT("computeAllProdsFollows",(function(){var t=(0,i.computeAllProdsFollows)((0,r.values)(e.gastProductionsCache));e.resyncFollows=t})),e.TRACE_INIT("ComputeLookaheadFunctions",(function(){e.preComputeLookaheadFunctions((0,r.values)(e.gastProductionsCache))}))),!t.DEFER_DEFINITION_ERRORS_HANDLING&&!(0,r.isEmpty)(e.definitionErrors))throw n=(0,r.map)(e.definitionErrors,(function(e){return e.message})),new Error("Parser Definition Errors detected:\n "+n.join("\n-------------------------------\n"))}))},t.DEFER_DEFINITION_ERRORS_HANDLING=!1,t}();e.Parser=E,(0,y.applyMixins)(E,[u.Recoverable,c.LooksAhead,l.TreeBuilder,p.LexerAdapter,d.RecognizerEngine,f.RecognizerApi,h.ErrorHandler,m.ContentAssist,g.GastRecorder,v.PerformanceTracer]);var _=function(n){function i(t,i){void 0===i&&(i=e.DEFAULT_PARSER_CONFIG);var o=(0,r.cloneObj)(i);return o.outputCst=!0,n.call(this,t,o)||this}return t(i,n),i}(E);e.CstParser=_;var C=function(n){function i(t,i){void 0===i&&(i=e.DEFAULT_PARSER_CONFIG);var o=(0,r.cloneObj)(i);return o.outputCst=!1,n.call(this,t,o)||this}return t(i,n),i}(E);e.EmbeddedActionsParser=C}(Sv);var SC={};Object.defineProperty(SC,"__esModule",{value:!0}),SC.createSyntaxDiagramsCode=void 0;var kC=bv;SC.createSyntaxDiagramsCode=function(e,t){var n=void 0===t?{}:t,r=n.resourceBase,i=void 0===r?"https://unpkg.com/chevrotain@"+kC.VERSION+"/diagrams/":r,o=n.css;return'\n\x3c!-- This is a generated file --\x3e\n<!DOCTYPE html>\n<meta charset="utf-8">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n'+("\n<link rel='stylesheet' href='"+(void 0===o?"https://unpkg.com/chevrotain@"+kC.VERSION+"/diagrams/diagrams.css":o)+"'>\n")+("\n<script src='"+i+"vendor/railroad-diagrams.js'><\/script>\n<script src='"+i+"src/diagrams_builder.js'><\/script>\n<script src='"+i+"src/diagrams_behavior.js'><\/script>\n<script src='"+i+"src/main.js'><\/script>\n")+'\n<div id="diagrams" align="center"></div>    \n'+("\n<script>\n    window.serializedGrammar = "+JSON.stringify(e,null,"  ")+";\n<\/script>\n")+'\n<script>\n    var diagramsDiv = document.getElementById("diagrams");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n<\/script>\n'},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.Parser=e.createSyntaxDiagramsCode=e.clearCache=e.GAstVisitor=e.serializeProduction=e.serializeGrammar=e.Terminal=e.Rule=e.RepetitionWithSeparator=e.RepetitionMandatoryWithSeparator=e.RepetitionMandatory=e.Repetition=e.Option=e.NonTerminal=e.Alternative=e.Alternation=e.defaultLexerErrorProvider=e.NoViableAltException=e.NotAllInputParsedException=e.MismatchedTokenException=e.isRecognitionException=e.EarlyExitException=e.defaultParserErrorProvider=e.tokenName=e.tokenMatcher=e.tokenLabel=e.EOF=e.createTokenInstance=e.createToken=e.LexerDefinitionErrorType=e.Lexer=e.EMPTY_ALT=e.ParserDefinitionErrorType=e.EmbeddedActionsParser=e.CstParser=e.VERSION=void 0;var t=bv;Object.defineProperty(e,"VERSION",{enumerable:!0,get:function(){return t.VERSION}});var n=Sv;Object.defineProperty(e,"CstParser",{enumerable:!0,get:function(){return n.CstParser}}),Object.defineProperty(e,"EmbeddedActionsParser",{enumerable:!0,get:function(){return n.EmbeddedActionsParser}}),Object.defineProperty(e,"ParserDefinitionErrorType",{enumerable:!0,get:function(){return n.ParserDefinitionErrorType}}),Object.defineProperty(e,"EMPTY_ALT",{enumerable:!0,get:function(){return n.EMPTY_ALT}});var r=Jv;Object.defineProperty(e,"Lexer",{enumerable:!0,get:function(){return r.Lexer}}),Object.defineProperty(e,"LexerDefinitionErrorType",{enumerable:!0,get:function(){return r.LexerDefinitionErrorType}});var i=Xv;Object.defineProperty(e,"createToken",{enumerable:!0,get:function(){return i.createToken}}),Object.defineProperty(e,"createTokenInstance",{enumerable:!0,get:function(){return i.createTokenInstance}}),Object.defineProperty(e,"EOF",{enumerable:!0,get:function(){return i.EOF}}),Object.defineProperty(e,"tokenLabel",{enumerable:!0,get:function(){return i.tokenLabel}}),Object.defineProperty(e,"tokenMatcher",{enumerable:!0,get:function(){return i.tokenMatcher}}),Object.defineProperty(e,"tokenName",{enumerable:!0,get:function(){return i.tokenName}});var o=Jy;Object.defineProperty(e,"defaultParserErrorProvider",{enumerable:!0,get:function(){return o.defaultParserErrorProvider}});var a=zE;Object.defineProperty(e,"EarlyExitException",{enumerable:!0,get:function(){return a.EarlyExitException}}),Object.defineProperty(e,"isRecognitionException",{enumerable:!0,get:function(){return a.isRecognitionException}}),Object.defineProperty(e,"MismatchedTokenException",{enumerable:!0,get:function(){return a.MismatchedTokenException}}),Object.defineProperty(e,"NotAllInputParsedException",{enumerable:!0,get:function(){return a.NotAllInputParsedException}}),Object.defineProperty(e,"NoViableAltException",{enumerable:!0,get:function(){return a.NoViableAltException}});var s=oy;Object.defineProperty(e,"defaultLexerErrorProvider",{enumerable:!0,get:function(){return s.defaultLexerErrorProvider}});var u=Yv;Object.defineProperty(e,"Alternation",{enumerable:!0,get:function(){return u.Alternation}}),Object.defineProperty(e,"Alternative",{enumerable:!0,get:function(){return u.Alternative}}),Object.defineProperty(e,"NonTerminal",{enumerable:!0,get:function(){return u.NonTerminal}}),Object.defineProperty(e,"Option",{enumerable:!0,get:function(){return u.Option}}),Object.defineProperty(e,"Repetition",{enumerable:!0,get:function(){return u.Repetition}}),Object.defineProperty(e,"RepetitionMandatory",{enumerable:!0,get:function(){return u.RepetitionMandatory}}),Object.defineProperty(e,"RepetitionMandatoryWithSeparator",{enumerable:!0,get:function(){return u.RepetitionMandatoryWithSeparator}}),Object.defineProperty(e,"RepetitionWithSeparator",{enumerable:!0,get:function(){return u.RepetitionWithSeparator}}),Object.defineProperty(e,"Rule",{enumerable:!0,get:function(){return u.Rule}}),Object.defineProperty(e,"Terminal",{enumerable:!0,get:function(){return u.Terminal}});var c=Yv;Object.defineProperty(e,"serializeGrammar",{enumerable:!0,get:function(){return c.serializeGrammar}}),Object.defineProperty(e,"serializeProduction",{enumerable:!0,get:function(){return c.serializeProduction}});var l=xy;Object.defineProperty(e,"GAstVisitor",{enumerable:!0,get:function(){return l.GAstVisitor}}),e.clearCache=function(){console.warn("The clearCache function was 'soft' removed from the Chevrotain API.\n\t It performs no action other than printing this message.\n\t Please avoid using it as it will be completely removed in the future")};var p=SC;Object.defineProperty(e,"createSyntaxDiagramsCode",{enumerable:!0,get:function(){return p.createSyntaxDiagramsCode}});var f=function(){throw new Error("The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\t\nSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0")};e.Parser=f}(xv);var OC=ir(xv);OC.Alternation,OC.Alternative,OC.CstParser,OC.EMPTY_ALT,OC.EOF,OC.EarlyExitException;const NC=OC.EmbeddedActionsParser;OC.GAstVisitor;const PC=OC.Lexer;OC.LexerDefinitionErrorType,OC.MismatchedTokenException,OC.NoViableAltException,OC.NonTerminal,OC.NotAllInputParsedException,OC.Option,OC.Parser,OC.ParserDefinitionErrorType,OC.Repetition,OC.RepetitionMandatory,OC.RepetitionMandatoryWithSeparator,OC.RepetitionWithSeparator,OC.Rule,OC.Terminal,OC.VERSION,OC.clearCache,OC.createSyntaxDiagramsCode;const wC=OC.createToken,LC=OC.createTokenInstance;function FC(e,t){const n=new Map,r=t({cloneToken(t,i){const o="string"==typeof t?e.get(t):t,a=(i instanceof Function?i(o):i)||{},s={...o,...a,get LONGER_ALT(){var e;return(null==(e=a.LONGER_ALT||o.LONGER_ALT)?void 0:e.map((e=>n.get(e)||r.find((t=>t.name===e.name)))).filter(Boolean))||[]}};return n.set(o,s),s}}).filter(Boolean);return console.log(r),uh.exports.cloneDeep(r)}function*MC(e){if(e instanceof Up)yield e;else if(e instanceof Wp)if(vf(e.feature))yield e;else if(e.children.length>1&&If(e.feature)&&wf(e.feature.rule.ref)&&"string"===e.feature.rule.ref.type)yield e;else{const t=e.children,n=t.length;let r,i=-1;for(;++i<n;)r=t[i],yield*MC(r)}}function*$C(e,t=0){if(e instanceof Up)yield{node:e,indexInParent:t};else if(e instanceof Wp){yield{node:e,indexInParent:t};const n=e.children,r=n.length;let i,o=-1;for(;++o<r;)i=n[o],yield*$C(i,o)}}function*BC(e){let t=-1;for(const n of $C(e,0))yield Object.assign(n,{indexInRoot:++t})}function qC(e,t){if(e instanceof Up)return e;if(e instanceof Wp){if(vf(e.feature)){const n=e.children.filter((e=>e.offset<=t)).reverse();for(const r of n){if(qC(r,t))return e}}else if(e.children.length>1&&If(e.feature)&&wf(e.feature.rule.ref)&&"string"===e.feature.rule.ref.type){const n=e.children.filter((e=>e.offset<=t)).reverse();for(const r of n){if(qC(r,t))return e}}const n=e.children.filter((e=>e.offset<=t)).reverse();for(const e of n){const n=qC(e,t);if(n)return n}}}function jC(e){var t;let n,r,i=e;do{if(r=i.parent,!r)break;const e=null!=(t=i.indexInParent)?t:r.children.indexOf(i);let o=0;do{n=r.children[e-++o]}while(n&&n.offset!=n.offset);i=r}while((null==i?void 0:i.parent)&&!n);if(n instanceof Wp){let t;for(const r of MC(n)){if(r===e)break;r.end==r.end&&(t=r)}return t}return n}function UC(e,t,n,r=!0){if(!e||!t||n&&e.element!==n)return[];const i=If(e.feature)&&e.feature.rule.ref||vf(e.feature)&&e.feature;if(!r&&i){if(i===t)return[e];const n=WC(i),r=WC(t);if(console.log("findNodesForFeature",i,e,n,r),n===r)return console.log("match",i,e),[e]}if(e instanceof Wp){return e.children.flatMap((e=>UC(e,t,n,!1)))}return[]}function WC(e){const t=Yp(e,df);if(!t){if(If(e))return e.rule.$refText;if(wf(e))return e.name}const n=Yp(e,wf);if(t&&n)return`${dd(n,t)}:${t.feature}`}function KC(e,t,n){let r=e;for(;r;){if(t(r))return r;if(r=r.$container,n(r))break}}function GC(e,t,n,r){const i=UC(e,t,n);if(0!==i.length)return i[r=void 0!==r?Math.max(0,Math.min(r,i.length-1)):0]}function VC(e,t){console.groupCollapsed("findNodeWithFeature",e,t);let n=GC(e,t);return console.log("result",n),console.groupEnd(),n}function HC(e){return wf(e)||vf(e)}function zC(e){console.groupCollapsed("createCustomParser");const t=e.Grammar,n=new Map,r={},{TokenBuilder:i}=e.parser,o=i.buildTokens(t);o.forEach((e=>{n.set(e.name,e),r[e.name]=e}));const a=new Map;console.log(o);const s=new YC(e,o,r,i.createCustomLexer(n,o));return function(e,t){for(const n of ns(t.rules).filter(wf)){const t={...e,consume:1,optional:1,subrule:1,many:1,or:1},r=(n.entry?t.parser.MAIN_RULE:t.parser.DEFINE_RULE).bind(t.parser),i=n.fragment?void 0:ud(n)?Np:_d(n);t.rules.set(n.name,r(n.name,i,QC(t,n)))}}({parser:s,tokens:n,rules:a},t),s.finalize(),console.groupEnd(),s}OC.defaultLexerErrorProvider,OC.defaultParserErrorProvider,OC.isRecognitionException,OC.serializeGrammar,OC.serializeProduction,OC.tokenLabel,OC.tokenMatcher,OC.tokenName;class YC extends Pp{constructor(e,t,n,r){super(e,t),this.services=e,this.tokenMap=n,this.lexer=r,this.wrapper=new tT(t,n,e.parser.ParserConfig),this._lexer=this.lexer,this._wrapper=this.wrapper}parse(e){console.groupCollapsed("[Parser] parse"),this.services.references.Linker.cleanCache(),console.time("[Parser] parse");const t="string"==typeof e?e:e.textDocument.getText();this.nodeBuilder.buildRootNode(t),console.log(this._lexer),console.time("[Parser] tokenize");const{tokens:n,groups:r,errors:i}=this._lexer.tokenize(t);console.timeEnd("[Parser] tokenize");const o=n;if(this.tokenMap){const e=n.length;for(let t=0;t<e;t++){const e=n[t],r=this.tokenMap[e.tokenType.name];o[t]=Object.assign(e,{tokenType:r,tokenTypeIdx:r.tokenTypeIdx})}}console.log({tokens:o,groups:r,errors:i}),this.wrapper.input=o;const a=this.mainRule.call(this.wrapper);this.addHiddenTokens(a.$cstNode,r.hidden),"string"!=typeof e&&(a.$document=e),console.timeEnd("[Parser] parse"),console.groupEnd();for(const s of BC(a.$cstNode)){const{node:e,...t}=s;Object.assign(e,t)}return{value:a,lexerErrors:i,parserErrors:this.wrapper.errors}}getSerializedGastProductions(){return this._wrapper.getSerializedGastProductions()}}function XC(e,t){const n=e.rules.get(t);if(!n)throw new Error;return n}function JC(e,t){const n=e.tokens.get(t);if(!n)throw new Error;return n}function QC(e,t){const n=ZC(e,t.alternatives),r=[];return Zp(t.alternatives).forEach((e=>{const t=e.node;df(t)&&sd(t.operator)&&r.push(t.feature)})),()=>(e.parser.initializeElement(r),n(),e.parser.construct())}function ZC(e,t){let n;if(Cf(t))n=function(e,t){const n=e.consume++,r=e.tokens.get(t.value);if(!r)throw new Error;return()=>e.parser.consume(n,r,t)}(e,t);else if(cf(t))n=function(e,t){return()=>e.parser.action(t.type,t)}(e,t);else if(df(t))n=ZC(e,t.terminal);else if(vf(t))n=function(e,t){const n=t.terminal;if(n){if(If(n)&&wf(n.rule.ref)){const r=e.subrule++,i=n.rule.ref.name;return()=>e.parser.subrule(r,XC(e,i),t)}if(If(n)&&Ff(n.rule.ref)){const r=e.consume++,i=JC(e,n.rule.ref.name);return()=>e.parser.consume(r,i,t)}throw new Error}{const n=e.consume++,r=JC(e,"ID");return()=>e.parser.consume(n,r,t)}}(e,t);else if(If(t))n=function(e,t){const n=t.rule.ref;if(wf(n)){const r=e.subrule++;return Xp(t,df)||ud(n)?()=>e.parser.subrule(r,XC(e,n.name),t):()=>e.parser.unassignedSubrule(r,XC(e,n.name),t)}if(Ff(n)){const r=e.consume++,i=JC(e,n.name);return()=>e.parser.consume(r,i,t)}throw new Error}(e,t);else if(pf(t))n=function(e,t){if(1===t.elements.length)return ZC(e,t.elements[0]);{const n=[];for(const i of t.elements)n.push(ZC(e,i));const r=e.or++;return()=>e.parser.alternatives(r,n)}}(e,t);else if(kf(t))n=function(e,t){throw new Error("Unordered groups are not supported (yet)")}();else{if(!Ef(t))throw new Error;n=function(e,t){const n=[];for(const r of t.elements)n.push(ZC(e,r));return()=>n.forEach((e=>e()))}(e,t)}return function(e,t,n){if(t=function(e){return function(...t){try{e.apply(this,t)}catch(n){console.error(n.message)}}}(t),n){if("*"===n){const n=e.many++;return()=>e.parser.many(n,t)}if("+"===n){const n=e.many++;return()=>e.parser.atLeastOne(n,t)}if("?"===n){const n=e.optional++;return()=>e.parser.optional(n,t)}throw new Error}return t}(e,n,t.cardinality)}const eT={recoveryEnabled:!0,nodeLocationTracking:"full",skipValidations:!0};class tT extends NC{constructor(e,t,n){super(e,{...eT,...n,maxLookahead:2}),this.tokenMap=t}get IS_RECORDING(){return this.RECORDING_PHASE}DEFINE_RULE(e,t){return this.RULE(e,t)}wrapSelfAnalysis(){this.performSelfAnalysis()}wrapConsume(e,t){try{return this.consume(e,t)}catch(n){if(this.canTokenTypeBeInsertedInRecovery(t))return this.getTokenToInsert(t);throw n}}wrapSubrule(e,t){return this.subrule(e,t)}wrapOr(e,t){this.or(e,t.map((e=>({ALT:e}))))}wrapOption(e,t){this.option(e,t)}wrapMany(e,t){this.many(e,t)}wrapAtLeastOne(e,t){this.atLeastOne(e,t)}}class nT extends Jd{buildTokens(e){return super.buildTokens(e).map((e=>{if("EOL"===e.name){const t={...e};return Object.assign(e,{PATTERN(e,n,r,i){const o=new RegExp(t.PATTERN.source,"y").exec(e.slice(n)),a=r[r.length-1],s=a&&"EOL"!==a.tokenType.name&&(null==o?void 0:o[0]);return(null==s?void 0:s.length)>0&&n+s.length===e.length&&r.push(LC(t,s,n,n+s.length-1,a.endLine,a.endLine,a.endColumn+1,a.endColumn+s.length)),o},LINE_BREAKS:!0,START_CHARS_HINT:["\r","\n"]})}if("OTHER"===e.name){console.log(e),e.PATTERN;const t=/(([^\x00-\xff]|\w|\W)(([^\x00-\xff]|\w|(?!\[|\]|\\|\{|\}|=|\(|\)|\s|,|:|'|"|\|)\W))*)/;return Object.assign(e,{PATTERN(e,n,r){r[r.length-1];return new RegExp(t.source,"y").exec(e.slice(n))},LINE_BREAKS:!1})}return e.LONGER_ALT instanceof Array&&(e.LONGER_ALT=e.LONGER_ALT.filter((e=>"OTHER"!==e.name))),e})).sort(((e,t)=>"OTHER"===e.name?1:"OTHER"===t.name?-1:"Escapse"===e.name?1:"Escapse"===t.name?-1:0))}createCustomLexer(e,t){return new PC({modes:{process:FC(e,(({cloneToken:e})=>[e("---",{PUSH_MODE:"yaml"}),e("EOL"),e("WS"),e("INLINE_COMMENT"),e("ML_COMMENT"),e("SL_COMMENT"),e("@",{PUSH_MODE:"character"}),e("{{",{PUSH_MODE:"template"}),e("|",{PUSH_MODE:"pipe",LONGER_ALT:[]}),e("[",{PUSH_MODE:"macro"}),wC({name:"DocumentHeader",pattern:(e,t,n,r)=>0===n.length?/^(?!\s*---)/y.exec(e.slice(t)):null,push_mode:"yaml",group:"hidden",start_chars_hint:["\n"," "],line_breaks:!1}),e("ESC"),e("OTHER")])),yaml:FC(e,(({cloneToken:e})=>[e("EOL"),e("WS"),e("ML_COMMENT"),e("SL_COMMENT"),e("Characters"),e("Macros"),e("true"),e("false"),e("---",{POP_MODE:!0}),e("-"),e(","),e("(",{LONGER_ALT:[]}),e(")"),e(":"),e("=",{PUSH_MODE:"inlineExpr",LONGER_ALT:[]}),e("ESC"),e("OTHER",{name:"ID"})])),character:FC(e,(({cloneToken:e})=>[e("EOL",{POP_MODE:!0}),e("WS"),e("ML_COMMENT"),e("SL_COMMENT"),e(","),e("("),e(")"),e("[",{PUSH_MODE:"macro",LONGER_ALT:[]}),e("ID"),e("ESC"),e("OTHER")])),template:FC(e,(({cloneToken:e})=>t.map((t=>"("===t.name?e(t,{PUSH_MODE:"expression"}):"}}"===t.name?e(t,{POP_MODE:!0}):"WS"===t.name?e(t,{GROUP:"hidden"}):"ID"!==t.name?"OTHER"===t.name?e("OTHER",{name:"ID"}):e(t):void 0)))),macro:FC(e,(({cloneToken:e})=>t.map((t=>"("===t.name?e(t,{PUSH_MODE:"expression"}):"]"===t.name?e(t,{POP_MODE:!0}):"]("===t.name?e(t,(t=>({LINE_BREAKS:!1,PATTERN(t,n,r,i){const o=/\]\(/y.exec(t.slice(n));if(o){const t=r.length-1;let n=r[t],i=t;const a=n.startLine;for(;"["!==n.tokenType.name;)if(n=r[--i],n.startLine<a)return o;if(n){const n=e("OTHER");for(let e=i+1;e<=t;e++)r[e].tokenType=n,r[e].tokenTypeIdx=n.tokenTypeIdx}}return o}}))):")"===t.name?e(t,{POP_MODE:!0}):"WS"===t.name?e(t,{GROUP:"hidden"}):"ID"!==t.name?"OTHER"===t.name?e("OTHER",{name:"ID"}):e(t):void 0)))),pipe:FC(e,(({cloneToken:e})=>t.map((t=>"("===t.name?e(t,{PUSH_MODE:"expression"}):"]"===t.name||")"===t.name||"EOL"===t.name?e(t,{POP_MODE:!0}):"WS"===t.name?e(t,{GROUP:"hidden"}):"ID"!==t.name?"OTHER"===t.name?e("OTHER",{name:"ID"}):e(t):void 0)))),inlineExpr:FC(e,(({cloneToken:e})=>t.map((t=>"("===t.name?e(t,{PUSH_MODE:"expression"}):"WS"===t.name||"EOL"===t.name?e(t,{POP_MODE:!0}):"ID"!==t.name?"OTHER"===t.name?e("OTHER",{name:"ID"}):e(t):void 0)))),expression:FC(e,(({cloneToken:e})=>t.map((t=>"("===t.name?e(t,{PUSH_MODE:"expression"}):")"===t.name?e(t,{POP_MODE:!0}):"WS"===t.name?e(t,{GROUP:"hidden"}):"ID"!==t.name?"OTHER"===t.name?e("OTHER",{name:"ID"}):e(t):void 0))))},defaultMode:"process"},{skipValidations:!1})}}let rT;const iT={languageId:"advscript",fileExtensions:[".avs",".adv"]},oT={recoveryEnabled:!0,nodeLocationTracking:"full",maxLookahead:4,skipValidations:!0},aT={Grammar:()=>rT||(rT=Cd('{\n  "$type": "Grammar",\n  "usedGrammars": [],\n  "hiddenTokens": [],\n  "metamodelDeclarations": [],\n  "rules": [\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Document",\n      "hiddenTokens": [],\n      "entry": true,\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "header",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "TitlePage"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "content",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "DocumentContents"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TitlePage",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            },\n            "cardinality": "*",\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_YAML"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "EOL"\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "defines",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Declare"\n                  }\n                },\n                "cardinality": "+",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "EOL"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_YAML"\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ],\n        "cardinality": "?"\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "YamlBlock",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_YAML"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "defines",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Declare"\n                  }\n                },\n                "cardinality": "+",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "EOL"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_YAML"\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "DocumentContents",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "contents",\n            "operator": "+=",\n            "terminal": {\n              "$type": "Alternatives",\n              "elements": [\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "YamlBlock"\n                  },\n                  "elements": []\n                },\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "LogicStatment"\n                  }\n                },\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "StoryBlock"\n                  }\n                }\n              ]\n            },\n            "cardinality": "+",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            },\n            "elements": []\n          }\n        ],\n        "cardinality": "+"\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_YAML",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "---",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "QualifiedName",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "+=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "Identifier"\n              }\n            },\n            "cardinality": "+",\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_P"\n                },\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "name",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "CrossReference",\n                  "type": {\n                    "$refText": "Identifier"\n                  }\n                },\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Identifier",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "text",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "ID"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "NameIdentifier",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "text",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "TextExpr"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Declare",\n      "hiddenTokens": [],\n      "type": "Declare",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "CharactersDeclare"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "MacroDeclare"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "OtherDeclare"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "DeclareKind",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "CharactersDeclareKind"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "MacrosDeclareKind"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "KeyedDeclareKind"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CharactersDeclare",\n      "hiddenTokens": [],\n      "type": "Declare",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "CharactersDeclare",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "CharactersDeclareKind"\n              }\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Colon"\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "Alternatives",\n                "elements": [\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "Token_ListItem"\n                        },\n                        "elements": []\n                      },\n                      {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "WS"\n                        },\n                        "cardinality": "?"\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "elements",\n                        "operator": "+=",\n                        "terminal": {\n                          "$type": "RuleCall",\n                          "arguments": [],\n                          "rule": {\n                            "$refText": "Character"\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "EOL"\n                    },\n                    "elements": []\n                  }\n                ]\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CharactersDeclareKind",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "text",\n        "operator": "=",\n        "terminal": {\n          "$type": "Keyword",\n          "value": "Characters"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Character",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "NameIdentifier"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_L"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "modifiers",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Modifier"\n                  }\n                },\n                "cardinality": "*"\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "WS"\n                    },\n                    "cardinality": "?",\n                    "elements": []\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "Token_Comma"\n                    }\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "modifiers",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Modifier"\n                      }\n                    },\n                    "cardinality": "+"\n                  }\n                ],\n                "cardinality": "*"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_R"\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Param"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Modifier",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "name",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "NameIdentifier"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "MacrosDeclareKind",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "text",\n        "operator": "=",\n        "terminal": {\n          "$type": "Keyword",\n          "value": "Macros"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "MacroDeclare",\n      "hiddenTokens": [],\n      "type": "Declare",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "MacroDeclare",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "MacrosDeclareKind"\n              }\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Colon"\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "Alternatives",\n                "elements": [\n                  {\n                    "$type": "Group",\n                    "elements": [\n                      {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "Token_ListItem"\n                        },\n                        "elements": []\n                      },\n                      {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "WS"\n                        },\n                        "cardinality": "?"\n                      },\n                      {\n                        "$type": "Assignment",\n                        "feature": "elements",\n                        "operator": "+=",\n                        "terminal": {\n                          "$type": "RuleCall",\n                          "arguments": [],\n                          "rule": {\n                            "$refText": "Macro"\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "EOL"\n                    },\n                    "elements": []\n                  }\n                ]\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Macro",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Identifier"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_L"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "modifiers",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "CharacterRef"\n                  }\n                }\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "WS"\n                    },\n                    "cardinality": "?",\n                    "elements": []\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "Token_Comma"\n                    }\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "WS"\n                    },\n                    "cardinality": "?"\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "modifiers",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "CharacterRef"\n                      }\n                    },\n                    "cardinality": "+"\n                  }\n                ],\n                "cardinality": "*"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_R"\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Param"\n                  }\n                },\n                "cardinality": "+"\n              }\n            ],\n            "cardinality": "*"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CharacterRef",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "ref",\n        "operator": "=",\n        "terminal": {\n          "$type": "CrossReference",\n          "type": {\n            "$refText": "Character"\n          },\n          "terminal": {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TextExpr"\n            }\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ModifierRef",\n      "hiddenTokens": [],\n      "type": "ModifierRef",\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "ref",\n        "operator": "=",\n        "terminal": {\n          "$type": "CrossReference",\n          "type": {\n            "$refText": "Modifier"\n          },\n          "terminal": {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TextExpr"\n            }\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Param",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Identifier"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Operator_Equal"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "value",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "InitialExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "MacroParam",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "ref",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "Param"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Operator_Equal"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "value",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "InitialExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "InitialExpression",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TextExpression"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TopExpression"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TextExpression",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "TextContnet"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TextContnet",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "OTHER"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ESC"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Escapse"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PlainTextExpression",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "PlainTextContnet"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PlainTextContnet",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Escapse"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Escapse"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "KeyedDeclareKind",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "text",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "PlainTextContnet"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "OtherDeclare",\n      "hiddenTokens": [],\n      "type": "Declare",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "OtherDeclare",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "KeyedDeclareKind"\n              }\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Colon"\n            }\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "PlainTextExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "LogicStatment",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Logic"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "VarStatement"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "IfStatement"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ElseIfStatement"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ElseStatement"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "EndStatement"\n                },\n                "elements": []\n              }\n            ]\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "VarStatement",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "kind",\n            "operator": "=",\n            "terminal": {\n              "$type": "Keyword",\n              "value": "let"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "datas",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "VariableList"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "VariableList",\n      "hiddenTokens": [],\n      "type": "List",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "elements",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Variable"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Comma"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Variable"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "IfStatement",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "kind",\n            "operator": "=",\n            "terminal": {\n              "$type": "Keyword",\n              "value": "if"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "expression",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Expression"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ElseIfStatement",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "kind",\n            "operator": "=",\n            "terminal": {\n              "$type": "Keyword",\n              "value": "elseif"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "expression",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Expression"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ElseStatement",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "kind",\n        "operator": "=",\n        "terminal": {\n          "$type": "Keyword",\n          "value": "else"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "EndStatement",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "kind",\n        "operator": "=",\n        "terminal": {\n          "$type": "Keyword",\n          "value": "end"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Variable",\n      "hiddenTokens": [],\n      "type": "Variable",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Action",\n            "type": "Variable",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "name",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "VariableIdentifier"\n              }\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Operator_Equal"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "initial",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "TopExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "VariableIdentifier",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "prefix",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Token_Prefix_Variable"\n              }\n            },\n            "cardinality": "?",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "text",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "ID"\n              }\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "VariableName",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Prefix_Variable"\n            },\n            "cardinality": "?",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ID"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Prefix_Variable",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": "$",\n            "elements": []\n          },\n          {\n            "$type": "Keyword",\n            "value": "%",\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "StoryBlock",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Dialog"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Action"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Dialog",\n      "hiddenTokens": [],\n      "type": "Dialog",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TOKEN_AT"\n            }\n          },\n          {\n            "$type": "Assignment",\n            "feature": "ref",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "Character"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "TextExpr"\n                }\n              }\n            }\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_L"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "modifiers",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "ModifierRef"\n                  }\n                }\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "WS"\n                    },\n                    "cardinality": "?",\n                    "elements": []\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "Token_Comma"\n                    }\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "modifiers",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "ModifierRef"\n                      }\n                    },\n                    "cardinality": "+"\n                  }\n                ],\n                "cardinality": "*"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_R"\n                }\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "elements",\n                "operator": "+=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Call"\n                  }\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          },\n          {\n            "$type": "Assignment",\n            "feature": "contents",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Content"\n              }\n            },\n            "cardinality": "*"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Action",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "contents",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Content"\n              }\n            },\n            "cardinality": "+",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Content",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "content",\n            "operator": "+=",\n            "terminal": {\n              "$type": "Alternatives",\n              "elements": [\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Template"\n                  },\n                  "elements": []\n                },\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Call"\n                  }\n                },\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "ESCToken"\n                  }\n                },\n                {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Plain"\n                  }\n                }\n              ]\n            },\n            "cardinality": "+",\n            "elements": []\n          },\n          {\n            "$type": "Assignment",\n            "feature": "pipe",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Pipe"\n              }\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "EOL"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Call",\n      "hiddenTokens": [],\n      "type": "Call",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Bracket_L"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Action",\n                    "type": "Mark",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "content",\n                    "operator": "=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "LabelContent"\n                      }\n                    }\n                  },\n                  {\n                    "$type": "Alternatives",\n                    "elements": [\n                      {\n                        "$type": "Group",\n                        "elements": [\n                          {\n                            "$type": "Action",\n                            "type": "Label",\n                            "elements": []\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "Token_LabelStart"\n                            }\n                          },\n                          {\n                            "$type": "Assignment",\n                            "feature": "pipe",\n                            "operator": "=",\n                            "terminal": {\n                              "$type": "Alternatives",\n                              "elements": [\n                                {\n                                  "$type": "RuleCall",\n                                  "arguments": [],\n                                  "rule": {\n                                    "$refText": "URL"\n                                  },\n                                  "elements": []\n                                },\n                                {\n                                  "$type": "RuleCall",\n                                  "arguments": [],\n                                  "rule": {\n                                    "$refText": "CallMacro"\n                                  }\n                                },\n                                {\n                                  "$type": "RuleCall",\n                                  "arguments": [],\n                                  "rule": {\n                                    "$refText": "LabelContent"\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "WS"\n                            },\n                            "cardinality": "?"\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "Token_Paren_R"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        "$type": "Group",\n                        "elements": [\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "WS"\n                            },\n                            "cardinality": "?",\n                            "elements": []\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "Token_Bracket_R"\n                            }\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Alternatives",\n                    "elements": [\n                      {\n                        "$type": "Group",\n                        "elements": [\n                          {\n                            "$type": "Action",\n                            "type": "AtInline",\n                            "elements": []\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "TOKEN_AT"\n                            }\n                          },\n                          {\n                            "$type": "RuleCall",\n                            "arguments": [],\n                            "rule": {\n                              "$refText": "WS"\n                            },\n                            "cardinality": "?"\n                          },\n                          {\n                            "$type": "Assignment",\n                            "feature": "ref",\n                            "operator": "=",\n                            "terminal": {\n                              "$type": "CrossReference",\n                              "type": {\n                                "$refText": "Character"\n                              },\n                              "terminal": {\n                                "$type": "RuleCall",\n                                "arguments": [],\n                                "rule": {\n                                  "$refText": "TextExpr"\n                                }\n                              }\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "CallMacro"\n                        },\n                        "cardinality": "?",\n                        "elements": []\n                      }\n                    ]\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "WS"\n                    },\n                    "cardinality": "?"\n                  },\n                  {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "Token_Bracket_R"\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "CallMacro",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "ref",\n            "operator": "=",\n            "terminal": {\n              "$type": "CrossReference",\n              "type": {\n                "$refText": "Macro"\n              },\n              "terminal": {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                }\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "elements",\n            "operator": "+=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "MacroParam"\n              }\n            },\n            "cardinality": "*"\n          },\n          {\n            "$type": "Assignment",\n            "feature": "pipe",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Pipe"\n              }\n            },\n            "elements": [],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "ESCToken",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "Assignment",\n            "feature": "content",\n            "operator": "=",\n            "terminal": {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Token_Bracket_L"\n              }\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Bracket_R"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "LabelContent",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Escapse"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Escapse"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "ID"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Pipe",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Logic"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Action",\n                    "type": "TextPipe",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "text",\n                    "operator": "=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "LabelContent"\n                      }\n                    }\n                  }\n                ]\n              },\n              {\n                "$type": "Group",\n                "elements": [\n                  {\n                    "$type": "Action",\n                    "type": "MacroPipe",\n                    "elements": []\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "ref",\n                    "operator": "=",\n                    "terminal": {\n                      "$type": "CrossReference",\n                      "type": {\n                        "$refText": "Macro"\n                      },\n                      "terminal": {\n                        "$type": "RuleCall",\n                        "arguments": [],\n                        "rule": {\n                          "$refText": "ID"\n                        }\n                      }\n                    }\n                  },\n                  {\n                    "$type": "Assignment",\n                    "feature": "elements",\n                    "operator": "+=",\n                    "terminal": {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "MacroParam"\n                      }\n                    },\n                    "cardinality": "*"\n                  }\n                ]\n              }\n            ],\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Template",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Template_L"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Assignment",\n                "feature": "expression",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Expression"\n                  }\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "pipe",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Pipe"\n                  }\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              }\n            ],\n            "cardinality": "?"\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Token_Template_R"\n            }\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Plain",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "content",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "PlainText"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PlainText",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Space"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RawText"\n            },\n            "elements": []\n          }\n        ],\n        "cardinality": "+"\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Space",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "RuleCall",\n        "arguments": [],\n        "rule": {\n          "$refText": "WS"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "RawText",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "RawTextPiece"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Alternatives",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "RawTextPiece"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "TOKEN_AT"\n                },\n                "elements": []\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "RawTextPiece",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "StringContent"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "INLINE_COMMENT"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TOKEN_AT",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "@",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_P",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": ".",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Logic",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "|",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Colon",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": ":",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_ListItem",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "-",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Paren_L",\n      "hiddenTokens": [],\n      "fragment": true,\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "(",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Paren_R",\n      "hiddenTokens": [],\n      "fragment": true,\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": ")",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Bracket_L",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "[",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Bracket_R",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "]",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Template_L",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "{{",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Template_R",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "}}",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_Comma",\n      "hiddenTokens": [],\n      "fragment": true,\n      "type": "string",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "Keyword",\n            "value": ",",\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "WS"\n            },\n            "cardinality": "?"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Token_LabelStart",\n      "hiddenTokens": [],\n      "fragment": true,\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "](",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Equal",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "=",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_QuestionQuestion",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "??",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_And",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "&&",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Or",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "||",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_MoreThen",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": ">",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_MoreThenEqual",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": ">=",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_LessThen",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "<",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_LessThenEqual",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "<=",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_EqualEqual",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "==",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Division",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "*",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Multiplication",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "/",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Minus",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "-",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Plus",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "+",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Operator_Relaction",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Operator_MoreThen"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Operator_LessThen"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Operator_EqualEqual"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Operator_MoreThenEqual"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Operator_LessThenEqual"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Expression",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "RuleCall",\n        "arguments": [],\n        "rule": {\n          "$refText": "Comma"\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Comma",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Assign"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Comma",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Comma"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Assign"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Assign",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "TopExpression"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Assign",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Operator_Equal"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "TopExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TopExpression",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Logic"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "TopExpression",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Operator_QuestionQuestion"\n                  }\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Logic"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Logic",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Relaction"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Logic",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "Alternatives",\n                  "elements": [\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_And"\n                      },\n                      "elements": []\n                    },\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_Or"\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Relaction"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Relaction",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Addition"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Relaction",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Operator_Relaction"\n                  }\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Addition"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Addition",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Multiplication"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Addition",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "Alternatives",\n                  "elements": [\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_Plus"\n                      },\n                      "elements": []\n                    },\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_Minus"\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "Multiplication"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Multiplication",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Group",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "PrimaryExpression"\n            },\n            "elements": []\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "Multiplication",\n                "feature": "left",\n                "operator": "=",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "operator",\n                "operator": "=",\n                "terminal": {\n                  "$type": "Alternatives",\n                  "elements": [\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_Multiplication"\n                      },\n                      "elements": []\n                    },\n                    {\n                      "$type": "RuleCall",\n                      "arguments": [],\n                      "rule": {\n                        "$refText": "Operator_Division"\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "WS"\n                },\n                "cardinality": "?"\n              },\n              {\n                "$type": "Assignment",\n                "feature": "right",\n                "operator": "=",\n                "terminal": {\n                  "$type": "RuleCall",\n                  "arguments": [],\n                  "rule": {\n                    "$refText": "PrimaryExpression"\n                  }\n                }\n              }\n            ],\n            "cardinality": "*"\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "PrimaryExpression",\n      "hiddenTokens": [],\n      "type": "Expression",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_L"\n                },\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Expression"\n                }\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "Token_Paren_R"\n                }\n              }\n            ]\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "RefExpression",\n                "elements": []\n              },\n              {\n                "$type": "Assignment",\n                "feature": "ref",\n                "operator": "=",\n                "terminal": {\n                  "$type": "CrossReference",\n                  "type": {\n                    "$refText": "Variable"\n                  },\n                  "terminal": {\n                    "$type": "RuleCall",\n                    "arguments": [],\n                    "rule": {\n                      "$refText": "VariableName"\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          {\n            "$type": "Group",\n            "elements": [\n              {\n                "$type": "Action",\n                "type": "LiteralExpression",\n                "elements": []\n              },\n              {\n                "$type": "RuleCall",\n                "arguments": [],\n                "rule": {\n                  "$refText": "LiteralExpression"\n                }\n              }\n            ]\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "LiteralExpression",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "BooleanLiteral"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "StringLiteral"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "NumberLiteral"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "StringLiteral",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "STRING"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "NumberLiteral",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "RuleCall",\n          "arguments": [],\n          "rule": {\n            "$refText": "NUMBER"\n          }\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "BooleanLiteral",\n      "hiddenTokens": [],\n      "alternatives": {\n        "$type": "Assignment",\n        "feature": "value",\n        "operator": "=",\n        "terminal": {\n          "$type": "Alternatives",\n          "elements": [\n            {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Const_True"\n              },\n              "elements": []\n            },\n            {\n              "$type": "RuleCall",\n              "arguments": [],\n              "rule": {\n                "$refText": "Const_False"\n              }\n            }\n          ]\n        },\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "StringContent",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ID"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Escapse"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Escapse",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "NUMBER"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "OTHER"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ESC"\n            },\n            "elements": []\n          }\n        ]\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "TextExpr",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Alternatives",\n        "elements": [\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "ID"\n            },\n            "elements": []\n          },\n          {\n            "$type": "RuleCall",\n            "arguments": [],\n            "rule": {\n              "$refText": "Escapse"\n            },\n            "elements": []\n          }\n        ],\n        "cardinality": "+"\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Const_True",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "true",\n        "elements": []\n      }\n    },\n    {\n      "$type": "ParserRule",\n      "parameters": [],\n      "name": "Const_False",\n      "hiddenTokens": [],\n      "type": "string",\n      "alternatives": {\n        "$type": "Keyword",\n        "value": "false",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "EOL",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\r?\\\\n",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "WS",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": " +",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "URL",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "(https?|ftp|file):\\\\/\\\\/[\\\\w+\\\\-&@#/%?=~_|!:,.;]+[\\\\w+\\\\-&@#/%=~_|]",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "ID",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "[_a-zA-Z][\\\\w_]*",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "NUMBER",\n      "type": "number",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\d+(\\\\.\\\\d+)?(?=[+\\\\-*\\\\/=><!\\\\]}\\\\)|, \\\\n\\\\r])",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "STRING",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\"((\\\\\\\\.)|[^\\"])*\\"|\'((\\\\\\\\.)|[^\'])*\'",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "ESC",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "(\\\\\\\\\\\\S)+",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "OTHER",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\S",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "name": "INLINE_COMMENT",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "(?!\\\\\\\\)\\\\[\\\\[.+?\\\\]\\\\]",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "hidden": true,\n      "name": "ML_COMMENT",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/\\\\r?\\\\n?",\n        "elements": []\n      }\n    },\n    {\n      "$type": "TerminalRule",\n      "hidden": true,\n      "name": "SL_COMMENT",\n      "type": "string",\n      "terminal": {\n        "$type": "RegexToken",\n        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*\\\\r?\\\\n?",\n        "elements": []\n      }\n    }\n  ],\n  "name": "Advscript"\n}')),AstReflection:()=>new Ev,LanguageMetaData:()=>iT,parser:{ParserConfig:()=>oT}};class sT{constructor(e){this.root=e,this.items=[],this.acceptor=(e,t)=>{const n=this.root.fillCompletionItem(this.document.textDocument,this.triggerOffset,e,{...t,data:this.completionItemData});n&&this.items.push(n)}}setup(e,t){const n={...t,context:t.context};this.document=e,this.completionItemData=n;const r=e.parseResult.value.$cstNode,i=e.textDocument.offsetAt(t.position);if(r){const e=i-1,{node:t,inputNode:o}=pT(r,e),{context:a}=n;a.triggerKind===ch.CompletionTriggerKind.Invoked&&(a.invokeText=t.text,a.triggerCharacter=void 0),this.cursorNode=t,this.triggerNode=o,this.cursorOffset=e,this.triggerOffset=i}return this}}class uT extends Md{constructor(e){super(e),this.services=e,this.options={triggerCharacters:cT},this.currentContext=new sT(this),this.isTopExpression=e=>{return t=e,(_v.isInstance(t,"Template")||function(e){return _v.isInstance(e,xg)}(e)||mv(e)||Sg(e)||Mg(e)||function(e){return _v.isInstance(e,Ng)}(e))&&!this.isTopExpression(e.$container);var t},this.scopeProvider=e.references.ScopeProvider,this.nameProvider=e.references.NameProvider}setContext(e,t){return this.currentContext.setup(e,t)}getContext(){return this.currentContext}flushCompletionList(){return ch.CompletionList.create(this.currentContext.items.splice(0).filter(Boolean).sort(lT),!0)}getCompletion(e,t){!function(e){console.log("params",e.position,function(e){var t;return null==(t=Object.entries(ch.CompletionTriggerKind).find((t=>t[1]===e.context.triggerKind)))?void 0:t[0]}(e),JSON.stringify(e.context.triggerCharacter))}(t);const{cursorNode:n,triggerNode:r,cursorOffset:i,triggerOffset:o}=this.setContext(e,t);if(n&&(isNaN(n.end)||n.end<=o)){const e=this.findCommonSuperRule(n);if(e){console.log("node",JSON.stringify(n.text),i,n,Bp(n)),console.groupCollapsed("input features"),console.log("commonSuperRule",e);const r=HC(n.feature)&&VC(e.node,n.feature)||n,a=this.buildFeatureStack(r);console.log("featureStack",[...a],r,n);const s=Nd(a);if(console.log("input features",s),e){const t=Array.from(MC(e.node)).filter((e=>e.offset<o)),r=this.ruleInterpreter.interpretRule(e.rule,[...t],i);console.log("getCompletion",i,n.text,t);const a=r.filter((e=>{const n=this.ruleInterpreter.featureMatches(e,t[t.length-1],o);return"partial"===n||"both"===n})),u=r.filter((e=>!a.includes(e)));s.push(...a);const c=Nd(u.flatMap((e=>[e])));s.push(...c)}n.end===o&&n.text!==t.context.triggerCharacter&&s.push(n.feature),console.groupEnd();const u=ns(s).distinct((e=>Cf(e)?e.value:e));for(const t of u){if(this.isIgnoreFeature(t))continue;const r=Yp(t,HC);if(r){const i=VC(e.node,r);if(i){if(vf(r)){if(i.end>o){console.log("skip overoffset reference",i);continue}const e=this.isArrayAssignmentFeature(i),t=i.element[this.getCrossReferenceProperty(r)];if(!e&&Hp(t)&&!t.error){console.log("skip resolved reference",t,i);continue}}else if(!isNaN(i.offset))if(Cf(t)){if(i.text===t.value){console.log("skip keyword",t,r,i);continue}}else{if(!KC(i.feature,(e=>Ef(e)&&("*"===e.cardinality||"+"===e.cardinality)),(e=>e===i.parent.feature))){console.log("skip exsist feature",t,r,i);continue}}}else console.log("not find feature",t,"in",e.node);this.completionFor(Bp(n),t,this.currentContext.acceptor)}else this.completionFor(Bp(n),t,this.currentContext.acceptor)}}else{const e=this.grammar.rules.find((e=>wf(e)));this.completionForRule(void 0,e,this.currentContext.acceptor)}}return this.flushCompletionList()}isArrayAssignmentFeature(e){let t=e.feature;for(;t.$container&&rf(t.$container);)t=t.$container;const n=fd(e.element.$cstNode),r="+="===(null==n?void 0:n.operator);return!r&&If(n.terminal)?"ArrayList"===n.terminal.rule.ref.type:r}buildFeatureStack(e){const t=[];for(;e;)e.feature&&t.push(e.feature),e=e.parent;return t}isIgnoreFeature(e){if(Cf(e))return wf(e.$container)&&/^Operator_.+$/.test(e.$container.name);if(If(e)){return Ff(e.rule.ref)}return!1}getCompletetionContext(e){var t;return null==(t=Yp(e.element,this.isTopExpression))?void 0:t.$cstNode}findCommonSuperRule(e){const t=function(e,t){let n=t(e);if(n){console.log("findCommonSuperRule",n);const e=n.feature;if(If(e)&&e.rule.ref)return{rule:e.rule.ref,node:n}}}(e,(e=>this.getCompletetionContext(e)));return null!=t?t:super.findCommonSuperRule(e)}wrapAstNode(e,t,n){if(vf(t.feature)){const r=this.getCrossReferenceProperty(t.feature),i=r&&t.element[r];if(console.log("isCrossReference",r,i,n),n>=t.offset&&n<t.end&&t.length>1)return;if(Hp(i)&&!i.ref)return t=jC(e.node),console.log("node => prev",t),t}return t}completionFor(e,t,n){If(t)&&Ff(t.rule.ref)?this.completionForTerminalRule(e,t.rule.ref,n):super.completionFor(e,t,n)}completionForKeyword(e,t,n){const[r,i,o]=wf(e.$container)&&/(.+?)_(.+)/.exec(e.$container.name)||[];switch(i){case"Const":return n(e.value,{kind:ch.CompletionItemKind.Keyword,detail:i,sortText:"3",documentation:o})}return n(e.value,{kind:ch.CompletionItemKind.Keyword,detail:"Keyword",sortText:/\w/.test(e.value)?"1":"2"})}completionForTerminalRule(e,t,n){console.log("completionForTerminalRule",t,this.services.parser.LangiumParser._lexer.lexerDefinitionErrors)}getCrossReferenceProperty(e){const t=Yp(e,df);if(t)return t.feature}completionForCrossReference(e,t,n){const r=WC(e);if(r){const i=this.scopeProvider.getScope(t,r),o=this.nameProvider.getNameNode(t),a=Array.from(i.getAllElements());if(console.groupCollapsed("completionForCrossReference",e,r,t,a),o&&vf(o.feature)){const e=WC(o.feature);console.log(e,this.services.references.Linker.getCandidateWithCache(o),zp(this.services.references.Linker.getCandidateWithCache(o)))}const s=new Set;for(const e of i.getAllElements())s.has(e.name)||(n(e,{kind:ch.CompletionItemKind.Reference,detail:e.type,sortText:"0",commitCharacters:["="],insertTextFormat:2}),s.add(e.name));console.groupEnd()}}async resolveCompletionItem(e,t){console.group("resolveCompletionItem"),console.log("CompletionItem",t);const{context:n}=t.data;if(n.triggerKind===ch.CompletionTriggerKind.Invoked){const{textEdit:r}=t,{range:i,newText:o}=r,a=n.invokeText||this.getInvokeNode(e,t);console.log("ResolveInputNode",JSON.stringify(a)),t.kind!==ch.CompletionItemKind.Keyword&&0!==o.toLowerCase().indexOf(a.toLowerCase())&&(console.log("replace matched text",a),t.additionalTextEdits=[...t.additionalTextEdits||[],this.buildDelete(i,a.length)])}return console.groupEnd(),t}getInvokeNode(e,t){const{parseResult:n}=e,r=e.textDocument.offsetAt(t.data.position)-1,{node:i}=pT(n.value.$cstNode,r),{text:o}=i;return o}fillCompletionItem(e,t,n,r){var i;let o,a;if("string"==typeof n)o=n;else if(Vp(n)&&this.nameProvider.isNamed(n))o=this.nameProvider.getName(n);else{if(Vp(n))return;o=n.name}const s=o.replace(/^(.*?\(.+\))/g,((e,t)=>(a=t,""))),u=this.buildCompletionTextEdit(e,t,s);if(!u)return;const c={label:(null!=(i=null==a?void 0:a.replace(/\(((?!\)).)*?\)$/,""))?i:"")+s,textEdit:u,documentation:"documentation"};return r&&Object.assign(c,r),c}buildDelete(e,t=0){return{newText:"",range:{start:{line:e.start.line,character:e.start.character-t},end:e.end}}}}const cT=["=",":","@",".","\n",",","*"," ","]",")","|","/","[","{","(","","%","$"];function lT(e,t){return"string"==typeof e.sortText&&"string"==typeof t.sortText?e.sortText.localeCompare(t.sortText):!e.sortText-!t.sortText}function pT(e,t){const n=qC(e,t);let r=n;if(isNaN(r.offset)||r.hidden){for(r of(console.time("prevCstStack"),function*(e){let t=e;for(;t;)t=jC(t),t&&(yield t)}(n)))if(!isNaN(r.end)&&!r.hidden)break;console.timeEnd("prevCstStack"),console.log(r)}return{node:r,inputNode:n}}class fT extends Kd{findReferences(e,t){var n;const r=e.parseResult.value.$cstNode;if(!r)return[];const i=[],o=tf(r,e.textDocument.offsetAt(t.position));if(!o)return[];const a=null==(n=this.references.findDeclaration(o))?void 0:n.element;if(a){if(t.context.includeDeclaration){const e=Jp(a),t=this.findNameNode(a,o.text);t&&i.push({docUri:e.uri,range:t.range})}this.references.findReferences(a).forEach((t=>{var n;if(Hp(t))i.push({docUri:e.uri,range:t.$refNode.range});else{const r=t.segment.range,o=null==(n=tf(e.parseResult.value.$cstNode,e.textDocument.offsetAt(t.segment.range.start)))?void 0:n.element;i.push({docUri:t.sourceUri,range:this.findReferenceWithAstNode(o)||r})}}))}return i.map((e=>ch.Location.create(e.docUri.toString(),e.range)))}findNameReferences(e,t){return super.findReferences(e,t)}findReferenceWithAstNode(e){var t;return jg(e)?e.$container.$cstNode.range:null==(t=null==e?void 0:e.$cstNode)?void 0:t.range}}class dT extends Ud{constructor(e){super(e),this.services=e}getAstNodeHoverContent(e){return Cv(e)?{contents:[{language:"advscript",value:e.$container.$cstNode.text},Sg(e.$container)&&{language:"typescript",value:`(call) useCharacter("${e.text}", {\n${e.$container.elements.map((e=>{var t;if(Kg(e))return`  ${e.name.text}: ${JSON.stringify(null==(t=e.value.$cstNode)?void 0:t.text)},`})).filter(Boolean).flat(2).join("\n")}\n})`}].filter(Boolean)}:{contents:{language:"typescript",value:`type ${e.$type}`}}}}class hT extends qd{getSymbols(e){return this.getSymbol(e,e.parseResult.value)}getSymbol(e,t){const n=t.$cstNode,r=this.nameProvider.getNameNode(t);if(r&&n){const i=this.nameProvider.getDisplayName(t);return[{kind:this.getSymbolKind(t.$type),name:null!=i?i:r.text,range:n.range,selectionRange:r.range,children:this.getChildSymbols(e,t),detail:"(detail)"}]}return this.getChildSymbols(e,t)||[]}getChildSymbols(e,t){const n=[];if(!mv(t))for(const r of Qp(t))if(!Cv(r.node)){const t=this.getSymbol(e,r.node);n.push(...t)}return n.length>0?n:void 0}getSymbolKind(e){if(e===av)return ch.SymbolKind.EnumMember;if(_v.isSubtype(e,kg))return ch.SymbolKind.Package;switch(e){case Bg:return ch.SymbolKind.Property;case Wg:return ch.SymbolKind.Field;case bg:return ch.SymbolKind.Class;case Fg:return ch.SymbolKind.Function;case zg:return ch.SymbolKind.Variable;case hv:case fv:return ch.SymbolKind.Event}return ch.SymbolKind.Constant}}class mT extends Gd{async renameElement(e,t){const n={},r=await this.referenceFinder.findNameReferences(e,{...t,context:{includeDeclaration:!0}});if(Array.isArray(r))return r.forEach((e=>{const r=ch.TextEdit.replace(e.range,t.newName);n[e.uri]?n[e.uri].push(r):n[e.uri]=[r]})),{changes:n}}}var gT,vT,yT,ET;(vT=gT||(gT={}))[vT.comment=0]="comment",vT[vT["keyword.control"]=1]="keyword.control",vT[vT["keyword.operator"]=2]="keyword.operator",vT[vT.regexp=3]="regexp",vT[vT["meta.brace.round"]=4]="meta.brace.round",vT[vT["entity.name.function"]=5]="entity.name.function",vT[vT["entity.name.type"]=6]="entity.name.type",vT[vT["entity.name.tag"]=7]="entity.name.tag",vT[vT["storage.type.property"]=8]="storage.type.property",vT[vT["support.variable.property"]=9]="support.variable.property",vT[vT["constant.property"]=10]="constant.property",vT[vT["constant.boolean"]=11]="constant.boolean",vT[vT["constant.numeric"]=12]="constant.numeric",vT[vT.string=13]="string",vT[vT["markup.raw"]=14]="markup.raw",vT[vT.token=15]="token",(ET=yT||(yT={}))[ET.ts=0]="ts";const _T=Object.freeze({tokenTypes:gT,tokenModifiers:(CT=yT,Object.freeze(Object.entries(CT).reduce(((e,[t,n])=>(parseInt(t)>-1&&(e[t]=n),e)),[])))});var CT;class TT{constructor(e){this.services=e,this.tokenLegend=_T,this.kindLegend={[av]:gT["keyword.control"],[sv]:gT["keyword.control"],[ov]:gT["keyword.control"],[Wg]:gT["entity.name.tag"],[Bg]:gT["entity.name.type"],[gv]:gT["constant.boolean"],[vv]:gT["constant.numeric"],[yv]:gT.string,[lv]:gT["markup.raw"],[Gg]:gT["markup.raw"],[bg]:gT["entity.name.type"],[Fg]:gT["entity.name.function"],[Bg]:gT["constant.property"],[nv]:gT["entity.name.function"],[Ug]:gT["entity.name.type"],[Pg]:gT["entity.name.function"]}}getTokenType(e){return gT[e]}getModifierType(e){return yT[e]}getDocumentSemanticTokens(e,t){var n,r;console.time("[Parser] doDocumentSemanticTokens");const i=[],{value:o}=e.parseResult||{};let a,s,u,c=-1;const{$cstNode:l}=o.header;for(const f of MC(l)){if(t&&l.range.end.line>t.end.line)break;if(f instanceof Wp)vf(f.feature)&&(s=f,u=zp(this.services.references.Linker.getCandidateWithCache(f))?this.getTokenType("entity.name.tag"):this.kindLegend.Character);else{if("WS"===f.tokenType.name||"EOL"===f.tokenType.name)continue;p=f.element,_v.isInstance(p,"TitlePage")&&/^Token_/.test(f.tokenType.name)&&(s=f,u=gT["keyword.operator"])}if(!s){const{element:e,parent:t}=f,n=If(t.feature)&&t.feature.rule.$refText;n&&(/^Token_/.test(n)||/^Operator_/.test(n))?(s=f,u=t.feature.rule.ref.fragment?gT["meta.brace.round"]:Lg(e)?gT["keyword.control"]:gT["keyword.operator"]):Cv(e)&&(Mg(e.$container)||Kg(e.$container)||qg(e.$container)||Sg(e.$container))?(s=f,u=this.kindLegend[e.$container.$type]):(Og(e)||iv(e)||pv(e)||cv(e)||Vg(e)||$g(e)||Cv(e))&&(s=f,u=this.kindLegend[e.$type])}if(s){const{range:{start:e},length:t}=f,{line:o,character:s}=e,l=o-(null!=(n=null==a?void 0:a.line)?n:0),p=0===l?s-(null!=(r=null==a?void 0:a.character)?r:0):s,d=void 0!==u?"number"==typeof u?{type:u}:null!=u?u:{}:{},{type:h=gT.token,modifier:m=yT.ts}=d;i[++c]=l,i[++c]=Math.max(0,p),i[++c]=t,i[++c]=h,i[++c]=m+1,a=e}u=void 0,s=void 0}var p;return console.timeEnd("[Parser] doDocumentSemanticTokens"),{data:i}}}class AT{constructor(e){this.services=e}async getCodeActions(e,t){const n=[];for(const r of t.context.diagnostics){const t=await this.createCodeAction(r,e);t&&n.push(t)}return n}createCodeAction(e,t){switch(e.code){case Iv.identifierNameLowercase:return this.makeLowerCase(e,t);case Iv.identifierNameUppercase:return this.makeUpperCase(e,t);default:return}}_makeUpperOrLowerCase(e,t,n){const r=t.textDocument.getText(e);return this.services.lsp.RenameHandler.renameElement(t,{textDocument:t.textDocument,position:e.start,newName:r[0][`to${n}Case`]()+r.slice(1,r.length)})}async makeLowerCase(e,t){return{title:"First letter to lower case",kind:ch.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:await this._makeUpperOrLowerCase(e.range,t,"Lower")}}async makeUpperCase(e,t){return{title:"First letter to upper case",kind:ch.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:await this._makeUpperOrLowerCase(e.range,t,"Upper")}}}class RT extends Id{constructor(e){super(e),this.services=e,this.getCandidate=uh.exports.memoize(((e,t,n)=>{const r=this.getDescription(e,t,n);return null!=r?r:this.createLinkingError({container:e,property:Rd(t),reference:n})}),((e,t,n)=>n.$refNode)),this.reflection=e.AstReflection,this.nameProvider=e.references.NameProvider}getCandidateWithCache(e){return this.getCandidate.cache.get(e)}cleanCache(){return this.getCandidate.cache.clear()}getLinkedNode(e,t,n){return super.getLinkedNode(e,t,n)}doLink(e,t){super.doLink(e,t);const n=e.reference.error;if(n){const{container:t,property:r,reference:i,index:o}=e,a=Ad(t.$type,r);n.message=`[scope] (${t.$type}:${this.reflection.getReferenceType(a)})${this.nameProvider.getReferenceNodeName(a,i,t)} is not defined`,n.index=o}}getDescription(e,t,n){const r=this.scopeProvider.getScope(e,t),i=this.nameProvider.getReferenceNodeName(t,n,e);return r.getElement(i)}}class IT extends Od{constructor(e){super(),this.reflection=e.AstReflection}getReferenceName(e,t){return`(${this.reflection.getReferenceType(e)})${t.$refText}`}isIdentifierRef(e){return Cv({$type:e})}getReferenceNodeName(e,t,n){const r=this.reflection.getReferenceType(e),i=this.isIdentifierRef(r)?"name":this.getReferenceName(e,t);let o="";mv(n)&&(o="(Character)"+t.$refText),Mg(n)&&(o="(Character)"+t.$refText),jg(n)&&(o="(Character)"+n.$container.ref.$refText),Jg(n)&&(o="(Character)"+n.ref.$refText),$g(n)&&r===Wg&&(o="(Macro)"+n.$container.ref.$refText),Hg(n)&&(o=n.name.slice(0,n.name.indexOf(t)).map((e=>e.$refText)).join("."));return Array.from(new Set([o,i])).filter(Boolean).join(".")}isNamedRefNode(e){return e&&Hp(e.ref)}getName(e){return this.getNameWith(e,!0)}getDisplayName(e){return mv(e)?this.getDialogName(e):dv(e)?this.getActionName(e):Jg(e)?this.getAtName(e):Lg(e)?e.$cstNode.text:this.getNameWith(e)}getInputText(e){return this.getNameWith(e)}getDialogName(e){return`@${e.ref.$refText}: ${e.contents.map((e=>e.$cstNode.text)).join("\n")}`}getAtName(e){return`@${e.ref.$refText}`}getActionName(e){return`@: ${e.$cstNode.text}`}getNameWith(e,t=!1,n){if(e)return"string"==typeof e?e:Hp(e)?this._getTypeName(e,t,n)+e.$refText:this.isNamedRefNode(e)?this.getNameWith(e.ref,t,e):Cv(e)?function(e){return Yg(e)?(e.prefix||"")+e.text:e.text}(e):Hg(e)?e.name.map((n=>this.getNameWith(n,t,e))).join("."):this.isNamed(e)?this._getTypeName(e.$type,t)+this.getNameWith(e.name,t,e):super.getName(e)}_getTypeName(e,t,n){return Hp(e)&&(e=e.$refNode.feature.type.$refText),"string"!=typeof e&&(e=e.$type),n&&"string"!=typeof n&&(n=n.$type),t?`(${[n,e].filter(Boolean).join("::")})`:""}isNamed(e){const{name:t}=e;return Hp(t)||Cv(t)||"string"==typeof t}isNamedSourceNode(e){const{name:t}=e;return Cv(t)||"string"==typeof t}isNamedWithIdentifier(e){const{name:t}=e;return Cv(t)}getNameNode(e){return dv(e)?e.$cstNode:this.getIdentifierNameFeature(e)||ld(e.$cstNode,"kind")||ld(e.$cstNode,"name")||ld(e.$cstNode,"ref")}getIdentifierNameFeature(e){return this.isNamedWithIdentifier(e)&&this.getIdentifierNameFeature(e.name)||Cv(e)&&(Yg(e)?e.$cstNode:ld(e.$cstNode,"text"))}getQualifiedName(e,t){let n=e;this.isDeepElementNode(e)&&(n=this.isDeepPathedNode(e.$container)?this.getQualifiedName(e.$container,this.getName(e)):this.getName(e));return["string"==typeof n?n:"",Cv(t)?"name":this.getName(t)].filter(Boolean).join(".")}isDeepPathedNode(e){return t=e,_v.isInstance(t,tv)||function(e){return _v.isInstance(e,nv)}(e);var t}isDeepElementNode(e){return Sg(e)||qg(e)||Mg(e)}}class DT extends eh{findDeclaration(e){if(e){const t=fd(e),n=Bp(e);if(t&&n){const r=n[t.feature];if(Hp(r))return this.processReference(r);if(Array.isArray(r)){for(const e of r)if(Hp(e)){const t=this.processReference(e);if(t)return t}}else{const t=this.nameProvider.getNameNode(n);if(t===e||t&&t.offset<=e.offset&&t.offset+t.length>e.offset)return t}}}}processReference(e){const t=e.ref;if(t&&t.$cstNode){const e=this.nameProvider.getNameNode(t);return e||t.$cstNode}}}class xT extends nh{}class bT extends rh{constructor(e){super(e)}async computeScope(e,t=ch.CancellationToken.None){const n=e.parseResult.value,r=new Map;await this.processContainer(n,r,e,t);return await super.computeScope(e,t)}async processContainer(e,t,n,r){var i;const o=[];for(const s of(a=e,_v.isInstance(a,"Document")?[...e.content.contents]:e.elements))if(fs(r),Sg(s)){const e=this.descriptions.createDescription(s,s.name.text,n);o.push(e);const r=[];s.modifiers.forEach((e=>{r.push(this.descriptions.createDescription(s,"modifiers."+e.name,n))})),t.set(s,r)}else if(Mg(s)){const e=this.descriptions.createDescription(s,s.name.text,n);o.push(e);const r=[];s.elements.forEach((e=>{r.push(this.descriptions.createDescription(s,"macro."+e.name,n))})),t.set(s,r)}else if(mv(s)){const e=this.descriptions.createDescription(s,null==(i=s.ref)?void 0:i.$refText,n);o.push(e);const r=[];s.elements.forEach((e=>{(Zg(e)||jg(e))&&r.push(this.descriptions.createDescription(s,e.ref.$refText,n))})),t.set(s,r)}else if(this.nameProvider.isDeepPathedNode(s)){const e=await this.processContainer(s,t,n,r);for(const t of e){const e=this.createQualifiedDescription(s,t,n);o.push(e)}}var a;return t.set(e,o),o}createQualifiedDescription(e,t,n){const r=this.nameProvider.getQualifiedName(e,t.name);return this.descriptions.createDescription(t.node,r,n)}}class ST extends ih{serialize(e,t){try{return super.serialize(e,t)}catch(n){return"<node:"+e.$type+">"}}}const kT={AstReflection:()=>_v,validation:{ValidationRegistry:e=>new Rv(e),AdvscriptValidator:e=>new Dv(e)},references:{Linker:e=>new RT(e),ScopeComputation:e=>new bT(e),NameProvider:e=>new IT(e),ScopeProvider:e=>new xT(e),References:e=>new DT(e)},index:{AstNodeLocator:()=>new Av,AstNodeDescriptionProvider:e=>new Tv(e)},serializer:{JsonSerializer:e=>new ST(e)},parser:{TokenBuilder:()=>new nT,LangiumParser:e=>zC(e)},lsp:{HoverProvider:e=>new dT(e),CodeActionProvider:e=>new AT(e),DocumentSemanticProvider:e=>new TT(e),ReferenceFinder:e=>new fT(e),RenameHandler:e=>new mT(e),DocumentSymbolProvider:e=>new hT(e),completion:{CompletionProvider:e=>new uT(e)}}};var OT={},NT={},PT={};Object.defineProperty(PT,"__esModule",{value:!0}),PT.SemanticTokensBuilder=PT.SemanticTokensFeature=void 0;const wT=ch;PT.SemanticTokensFeature=e=>class extends e{get semanticTokens(){return{on:e=>{const t=wT.SemanticTokensRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onDelta:e=>{const t=wT.SemanticTokensDeltaRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onRange:e=>{const t=wT.SemanticTokensRangeRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}};PT.SemanticTokensBuilder=class{constructor(){this._prevData=void 0,this.initialize()}initialize(){this._id=Date.now(),this._prevLine=0,this._prevChar=0,this._data=[],this._dataLen=0}push(e,t,n,r,i){let o=e,a=t;this._dataLen>0&&(o-=this._prevLine,0===o&&(a-=this._prevChar)),this._data[this._dataLen++]=o,this._data[this._dataLen++]=a,this._data[this._dataLen++]=n,this._data[this._dataLen++]=r,this._data[this._dataLen++]=i,this._prevLine=e,this._prevChar=t}get id(){return this._id.toString()}previousResult(e){this.id===e&&(this._prevData=this._data),this.initialize()}build(){return this._prevData=void 0,{resultId:this.id,data:this._data}}canBuildEdits(){return void 0!==this._prevData}buildEdits(){if(void 0!==this._prevData){const e=this._prevData.length,t=this._data.length;let n=0;for(;n<t&&n<e&&this._prevData[n]===this._data[n];)n++;if(n<t&&n<e){let r=0;for(;r<t&&r<e&&this._prevData[e-1-r]===this._data[t-1-r];)r++;const i=this._data.slice(n,t-r);return{resultId:this.id,edits:[{start:n,deleteCount:e-r-n,data:i}]}}return n<t?{resultId:this.id,edits:[{start:n,deleteCount:0,data:this._data.slice(n)}]}:n<e?{resultId:this.id,edits:[{start:n,deleteCount:e-n}]}:{resultId:this.id,edits:[]}}return this.build()}};var LT={},FT={};function MT(e){return"string"==typeof e||e instanceof String}function $T(e){return"function"==typeof e}function BT(e){return Array.isArray(e)}Object.defineProperty(FT,"__esModule",{value:!0}),FT.thenable=FT.typedArray=FT.stringArray=FT.array=FT.func=FT.error=FT.number=FT.string=FT.boolean=void 0,FT.boolean=function(e){return!0===e||!1===e},FT.string=MT,FT.number=function(e){return"number"==typeof e||e instanceof Number},FT.error=function(e){return e instanceof Error},FT.func=$T,FT.array=BT,FT.stringArray=function(e){return BT(e)&&e.every((e=>MT(e)))},FT.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},FT.thenable=function(e){return e&&$T(e.then)};var qT={};Object.defineProperty(qT,"__esModule",{value:!0}),qT.generateUuid=qT.parse=qT.isUUID=qT.v4=qT.empty=void 0;class jT{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}}class UT extends jT{constructor(){super([UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),"-",UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),"-","4",UT._randomHex(),UT._randomHex(),UT._randomHex(),"-",UT._oneOf(UT._timeHighBits),UT._randomHex(),UT._randomHex(),UT._randomHex(),"-",UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex(),UT._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return UT._oneOf(UT._chars)}}function WT(){return new UT}UT._chars=["0","1","2","3","4","5","6","6","7","8","9","a","b","c","d","e","f"],UT._timeHighBits=["8","9","a","b"],qT.empty=new jT("00000000-0000-0000-0000-000000000000"),qT.v4=WT;const KT=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function GT(e){return KT.test(e)}qT.isUUID=GT,qT.parse=function(e){if(!GT(e))throw new Error("invalid uuid");return new jT(e)},qT.generateUuid=function(){return WT().asHex()};var VT={};Object.defineProperty(VT,"__esModule",{value:!0}),VT.attachPartialResult=VT.ProgressFeature=VT.attachWorkDone=void 0;const HT=ch,zT=qT;class YT{constructor(e,t){this._connection=e,this._token=t,YT.Instances.set(this._token,this)}begin(e,t,n,r){let i={kind:"begin",title:e,percentage:t,message:n,cancellable:r};this._connection.sendProgress(HT.WorkDoneProgress.type,this._token,i)}report(e,t){let n={kind:"report"};"number"==typeof e?(n.percentage=e,void 0!==t&&(n.message=t)):n.message=e,this._connection.sendProgress(HT.WorkDoneProgress.type,this._token,n)}done(){YT.Instances.delete(this._token),this._connection.sendProgress(HT.WorkDoneProgress.type,this._token,{kind:"end"})}}YT.Instances=new Map;class XT extends YT{constructor(e,t){super(e,t),this._source=new HT.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose(),super.done()}cancel(){this._source.cancel()}}class JT{constructor(){}begin(){}report(){}done(){}}class QT extends JT{constructor(){super(),this._source=new HT.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose()}cancel(){this._source.cancel()}}VT.attachWorkDone=function(e,t){if(void 0===t||void 0===t.workDoneToken)return new JT;const n=t.workDoneToken;return delete t.workDoneToken,new YT(e,n)};var ZT;VT.ProgressFeature=e=>class extends e{constructor(){super(),this._progressSupported=!1}initialize(e){var t;!0===(null===(t=null==e?void 0:e.window)||void 0===t?void 0:t.workDoneProgress)&&(this._progressSupported=!0,this.connection.onNotification(HT.WorkDoneProgressCancelNotification.type,(e=>{let t=YT.Instances.get(e.token);(t instanceof XT||t instanceof QT)&&t.cancel()})))}attachWorkDoneProgress(e){return void 0===e?new JT:new YT(this.connection,e)}createWorkDoneProgress(){if(this._progressSupported){const e=zT.generateUuid();return this.connection.sendRequest(HT.WorkDoneProgressCreateRequest.type,{token:e}).then((()=>new XT(this.connection,e)))}return Promise.resolve(new QT)}},function(e){e.type=new HT.ProgressType}(ZT||(ZT={}));class eA{constructor(e,t){this._connection=e,this._token=t}report(e){this._connection.sendProgress(ZT.type,this._token,e)}}VT.attachPartialResult=function(e,t){if(void 0===t||void 0===t.partialResultToken)return;const n=t.partialResultToken;return delete t.partialResultToken,new eA(e,n)};var tA={};Object.defineProperty(tA,"__esModule",{value:!0}),tA.ConfigurationFeature=void 0;const nA=ch,rA=FT;tA.ConfigurationFeature=e=>class extends e{getConfiguration(e){return e?rA.string(e)?this._getConfiguration({section:e}):this._getConfiguration(e):this._getConfiguration({})}_getConfiguration(e){let t={items:Array.isArray(e)?e:[e]};return this.connection.sendRequest(nA.ConfigurationRequest.type,t).then((t=>Array.isArray(e)?t:t[0]))}};var iA={};Object.defineProperty(iA,"__esModule",{value:!0}),iA.WorkspaceFoldersFeature=void 0;const oA=ch;iA.WorkspaceFoldersFeature=e=>class extends e{initialize(e){let t=e.workspace;t&&t.workspaceFolders&&(this._onDidChangeWorkspaceFolders=new oA.Emitter,this.connection.onNotification(oA.DidChangeWorkspaceFoldersNotification.type,(e=>{this._onDidChangeWorkspaceFolders.fire(e.event)})))}getWorkspaceFolders(){return this.connection.sendRequest(oA.WorkspaceFoldersRequest.type)}get onDidChangeWorkspaceFolders(){if(!this._onDidChangeWorkspaceFolders)throw new Error("Client doesn't support sending workspace folder change events.");return this._unregistration||(this._unregistration=this.connection.client.register(oA.DidChangeWorkspaceFoldersNotification.type)),this._onDidChangeWorkspaceFolders.event}};var aA={};Object.defineProperty(aA,"__esModule",{value:!0}),aA.CallHierarchyFeature=void 0;const sA=ch;aA.CallHierarchyFeature=e=>class extends e{get callHierarchy(){return{onPrepare:e=>{this.connection.onRequest(sA.CallHierarchyPrepareRequest.type,((t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)))},onIncomingCalls:e=>{const t=sA.CallHierarchyIncomingCallsRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))},onOutgoingCalls:e=>{const t=sA.CallHierarchyOutgoingCallsRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}};var uA={};Object.defineProperty(uA,"__esModule",{value:!0}),uA.ShowDocumentFeature=void 0;const cA=ch;uA.ShowDocumentFeature=e=>class extends e{showDocument(e){return this.connection.sendRequest(cA.ShowDocumentRequest.type,e)}};var lA={};Object.defineProperty(lA,"__esModule",{value:!0}),lA.FileOperationsFeature=void 0;const pA=ch;lA.FileOperationsFeature=e=>class extends e{onDidCreateFiles(e){this.connection.onNotification(pA.DidCreateFilesNotification.type,(t=>{e(t)}))}onDidRenameFiles(e){this.connection.onNotification(pA.DidRenameFilesNotification.type,(t=>{e(t)}))}onDidDeleteFiles(e){this.connection.onNotification(pA.DidDeleteFilesNotification.type,(t=>{e(t)}))}onWillCreateFiles(e){return this.connection.onRequest(pA.WillCreateFilesRequest.type,((t,n)=>e(t,n)))}onWillRenameFiles(e){return this.connection.onRequest(pA.WillRenameFilesRequest.type,((t,n)=>e(t,n)))}onWillDeleteFiles(e){return this.connection.onRequest(pA.WillDeleteFilesRequest.type,((t,n)=>e(t,n)))}};var fA={};Object.defineProperty(fA,"__esModule",{value:!0}),fA.LinkedEditingRangeFeature=void 0;const dA=ch;fA.LinkedEditingRangeFeature=e=>class extends e{onLinkedEditingRange(e){this.connection.onRequest(dA.LinkedEditingRangeRequest.type,((t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)))}};var hA={};Object.defineProperty(hA,"__esModule",{value:!0}),hA.MonikerFeature=void 0;const mA=ch;hA.MonikerFeature=e=>class extends e{get moniker(){return{on:e=>{const t=mA.MonikerRequest.type;this.connection.onRequest(t,((n,r)=>e(n,r,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n))))}}}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.createConnection=e.combineFeatures=e.combineLanguagesFeatures=e.combineWorkspaceFeatures=e.combineWindowFeatures=e.combineClientFeatures=e.combineTracerFeatures=e.combineTelemetryFeatures=e.combineConsoleFeatures=e._LanguagesImpl=e.BulkUnregistration=e.BulkRegistration=e.ErrorMessageTracker=e.TextDocuments=void 0;const t=ch,n=FT,r=qT,i=VT,o=tA,a=iA,s=aA,u=PT,c=uA,l=lA,p=fA,f=hA;function d(e){if(null!==e)return e}e.TextDocuments=class{constructor(e){this._documents=Object.create(null),this._configuration=e,this._onDidChangeContent=new t.Emitter,this._onDidOpen=new t.Emitter,this._onDidClose=new t.Emitter,this._onDidSave=new t.Emitter,this._onWillSave=new t.Emitter}get onDidChangeContent(){return this._onDidChangeContent.event}get onDidOpen(){return this._onDidOpen.event}get onWillSave(){return this._onWillSave.event}onWillSaveWaitUntil(e){this._willSaveWaitUntil=e}get onDidSave(){return this._onDidSave.event}get onDidClose(){return this._onDidClose.event}get(e){return this._documents[e]}all(){return Object.keys(this._documents).map((e=>this._documents[e]))}keys(){return Object.keys(this._documents)}listen(e){e.__textDocumentSync=t.TextDocumentSyncKind.Full,e.onDidOpenTextDocument((e=>{let t=e.textDocument,n=this._configuration.create(t.uri,t.languageId,t.version,t.text);this._documents[t.uri]=n;let r=Object.freeze({document:n});this._onDidOpen.fire(r),this._onDidChangeContent.fire(r)})),e.onDidChangeTextDocument((e=>{let t=e.textDocument,n=e.contentChanges;if(0===n.length)return;let r=this._documents[t.uri];const{version:i}=t;if(null==i)throw new Error(`Received document change event for ${t.uri} without valid version identifier`);r=this._configuration.update(r,n,i),this._documents[t.uri]=r,this._onDidChangeContent.fire(Object.freeze({document:r}))})),e.onDidCloseTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&(delete this._documents[e.textDocument.uri],this._onDidClose.fire(Object.freeze({document:t})))})),e.onWillSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onWillSave.fire(Object.freeze({document:t,reason:e.reason}))})),e.onWillSaveTextDocumentWaitUntil(((e,t)=>{let n=this._documents[e.textDocument.uri];return n&&this._willSaveWaitUntil?this._willSaveWaitUntil(Object.freeze({document:n,reason:e.reason}),t):[]})),e.onDidSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onDidSave.fire(Object.freeze({document:t}))}))}};e.ErrorMessageTracker=class{constructor(){this._messages=Object.create(null)}add(e){let t=this._messages[e];t||(t=0),t++,this._messages[e]=t}sendErrors(e){Object.keys(this._messages).forEach((t=>{e.window.showErrorMessage(t)}))}};class h{constructor(){}rawAttach(e){this._rawConnection=e}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}fillServerCapabilities(e){}initialize(e){}error(e){this.send(t.MessageType.Error,e)}warn(e){this.send(t.MessageType.Warning,e)}info(e){this.send(t.MessageType.Info,e)}log(e){this.send(t.MessageType.Log,e)}send(e,n){this._rawConnection&&this._rawConnection.sendNotification(t.LogMessageNotification.type,{type:e,message:n})}}const m=c.ShowDocumentFeature(i.ProgressFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}showErrorMessage(e,...n){let r={type:t.MessageType.Error,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}showWarningMessage(e,...n){let r={type:t.MessageType.Warning,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}showInformationMessage(e,...n){let r={type:t.MessageType.Info,message:e,actions:n};return this.connection.sendRequest(t.ShowMessageRequest.type,r).then(d)}}));(e.BulkRegistration||(e.BulkRegistration={})).create=function(){return new g};class g{constructor(){this._registrations=[],this._registered=new Set}add(e,t){const i=n.string(e)?e:e.method;if(this._registered.has(i))throw new Error(`${i} is already added to this registration`);const o=r.generateUuid();this._registrations.push({id:o,method:i,registerOptions:t||{}}),this._registered.add(i)}asRegistrationParams(){return{registrations:this._registrations}}}(e.BulkUnregistration||(e.BulkUnregistration={})).create=function(){return new v(void 0,[])};class v{constructor(e,t){this._connection=e,this._unregistrations=new Map,t.forEach((e=>{this._unregistrations.set(e.method,e)}))}get isAttached(){return!!this._connection}attach(e){this._connection=e}add(e){this._unregistrations.set(e.method,e)}dispose(){let e=[];for(let t of this._unregistrations.values())e.push(t);let n={unregisterations:e};this._connection.sendRequest(t.UnregistrationRequest.type,n).then(void 0,(e=>{this._connection.console.info("Bulk unregistration failed.")}))}disposeSingle(e){const r=n.string(e)?e:e.method,i=this._unregistrations.get(r);if(!i)return!1;let o={unregisterations:[i]};return this._connection.sendRequest(t.UnregistrationRequest.type,o).then((()=>{this._unregistrations.delete(r)}),(e=>{this._connection.console.info(`Un-registering request handler for ${i.id} failed.`)})),!0}}class y{attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}register(e,t,n){return e instanceof g?this.registerMany(e):e instanceof v?this.registerSingle1(e,t,n):this.registerSingle2(e,t)}registerSingle1(e,i,o){const a=n.string(i)?i:i.method,s=r.generateUuid();let u={registrations:[{id:s,method:a,registerOptions:o||{}}]};return e.isAttached||e.attach(this.connection),this.connection.sendRequest(t.RegistrationRequest.type,u).then((t=>(e.add({id:s,method:a}),e)),(e=>(this.connection.console.info(`Registering request handler for ${a} failed.`),Promise.reject(e))))}registerSingle2(e,i){const o=n.string(e)?e:e.method,a=r.generateUuid();let s={registrations:[{id:a,method:o,registerOptions:i||{}}]};return this.connection.sendRequest(t.RegistrationRequest.type,s).then((e=>t.Disposable.create((()=>{this.unregisterSingle(a,o)}))),(e=>(this.connection.console.info(`Registering request handler for ${o} failed.`),Promise.reject(e))))}unregisterSingle(e,n){let r={unregisterations:[{id:e,method:n}]};return this.connection.sendRequest(t.UnregistrationRequest.type,r).then(void 0,(t=>{this.connection.console.info(`Un-registering request handler for ${e} failed.`)}))}registerMany(e){let n=e.asRegistrationParams();return this.connection.sendRequest(t.RegistrationRequest.type,n).then((()=>new v(this._connection,n.registrations.map((e=>({id:e.id,method:e.method}))))),(e=>(this.connection.console.info("Bulk registration failed."),Promise.reject(e))))}}const E=l.FileOperationsFeature(a.WorkspaceFoldersFeature(o.ConfigurationFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}applyEdit(e){let n=(r=e)&&r.edit?e:{edit:e};var r;return this.connection.sendRequest(t.ApplyWorkspaceEditRequest.type,n)}})));class _{constructor(){this._trace=t.Trace.Off}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}set trace(e){this._trace=e}log(e,n){this._trace!==t.Trace.Off&&this.connection.sendNotification(t.LogTraceNotification.type,{message:e,verbose:this._trace===t.Trace.Verbose?n:void 0})}}class C{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}logEvent(e){this.connection.sendNotification(t.TelemetryEventNotification.type,e)}}class T{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}attachWorkDoneProgress(e){return i.attachWorkDone(this.connection,e)}attachPartialResultProgress(e,t){return i.attachPartialResult(this.connection,t)}}e._LanguagesImpl=T;const A=f.MonikerFeature(p.LinkedEditingRangeFeature(u.SemanticTokensFeature(s.CallHierarchyFeature(T))));function R(e,t){return function(n){return t(e(n))}}function I(e,t){return function(n){return t(e(n))}}function D(e,t){return function(n){return t(e(n))}}function x(e,t){return function(n){return t(e(n))}}function b(e,t){return function(n){return t(e(n))}}function S(e,t){return function(n){return t(e(n))}}e.combineConsoleFeatures=R,e.combineTelemetryFeatures=I,e.combineTracerFeatures=D,e.combineClientFeatures=x,e.combineWindowFeatures=b,e.combineWorkspaceFeatures=S,e.combineLanguagesFeatures=function(e,t){return function(n){return t(e(n))}},e.combineFeatures=function(e,t){function n(e,t,n){return e&&t?n(e,t):e||t}return{__brand:"features",console:n(e.console,t.console,R),tracer:n(e.tracer,t.tracer,D),telemetry:n(e.telemetry,t.telemetry,I),client:n(e.client,t.client,x),window:n(e.window,t.window,b),workspace:n(e.workspace,t.workspace,S)}},e.createConnection=function(e,r,o){const a=o&&o.console?new(o.console(h)):new h,s=e(a);a.rawAttach(s);const u=o&&o.tracer?new(o.tracer(_)):new _,c=o&&o.telemetry?new(o.telemetry(C)):new C,l=o&&o.client?new(o.client(y)):new y,p=o&&o.window?new(o.window(m)):new m,f=o&&o.workspace?new(o.workspace(E)):new E,d=o&&o.languages?new(o.languages(A)):new A,g=[a,u,c,l,p,f,d];function v(e){return e instanceof Promise?e:n.thenable(e)?new Promise(((t,n)=>{e.then((e=>t(e)),(e=>n(e)))})):Promise.resolve(e)}let T,R,I,D={listen:()=>s.listen(),sendRequest:(e,...t)=>s.sendRequest(n.string(e)?e:e.method,...t),onRequest:(e,t)=>s.onRequest(e,t),sendNotification:(e,t)=>{const r=n.string(e)?e:e.method;1===arguments.length?s.sendNotification(r):s.sendNotification(r,t)},onNotification:(e,t)=>s.onNotification(e,t),onProgress:s.onProgress,sendProgress:s.sendProgress,onInitialize:e=>R=e,onInitialized:e=>s.onNotification(t.InitializedNotification.type,e),onShutdown:e=>T=e,onExit:e=>I=e,get console(){return a},get telemetry(){return c},get tracer(){return u},get client(){return l},get window(){return p},get workspace(){return f},get languages(){return d},onDidChangeConfiguration:e=>s.onNotification(t.DidChangeConfigurationNotification.type,e),onDidChangeWatchedFiles:e=>s.onNotification(t.DidChangeWatchedFilesNotification.type,e),__textDocumentSync:void 0,onDidOpenTextDocument:e=>s.onNotification(t.DidOpenTextDocumentNotification.type,e),onDidChangeTextDocument:e=>s.onNotification(t.DidChangeTextDocumentNotification.type,e),onDidCloseTextDocument:e=>s.onNotification(t.DidCloseTextDocumentNotification.type,e),onWillSaveTextDocument:e=>s.onNotification(t.WillSaveTextDocumentNotification.type,e),onWillSaveTextDocumentWaitUntil:e=>s.onRequest(t.WillSaveTextDocumentWaitUntilRequest.type,e),onDidSaveTextDocument:e=>s.onNotification(t.DidSaveTextDocumentNotification.type,e),sendDiagnostics:e=>s.sendNotification(t.PublishDiagnosticsNotification.type,e),onHover:e=>s.onRequest(t.HoverRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onCompletion:e=>s.onRequest(t.CompletionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCompletionResolve:e=>s.onRequest(t.CompletionResolveRequest.type,e),onSignatureHelp:e=>s.onRequest(t.SignatureHelpRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDeclaration:e=>s.onRequest(t.DeclarationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDefinition:e=>s.onRequest(t.DefinitionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onTypeDefinition:e=>s.onRequest(t.TypeDefinitionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onImplementation:e=>s.onRequest(t.ImplementationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onReferences:e=>s.onRequest(t.ReferencesRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentHighlight:e=>s.onRequest(t.DocumentHighlightRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentSymbol:e=>s.onRequest(t.DocumentSymbolRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onWorkspaceSymbol:e=>s.onRequest(t.WorkspaceSymbolRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeAction:e=>s.onRequest(t.CodeActionRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeActionResolve:e=>s.onRequest(t.CodeActionResolveRequest.type,((t,n)=>e(t,n))),onCodeLens:e=>s.onRequest(t.CodeLensRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onCodeLensResolve:e=>s.onRequest(t.CodeLensResolveRequest.type,((t,n)=>e(t,n))),onDocumentFormatting:e=>s.onRequest(t.DocumentFormattingRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDocumentRangeFormatting:e=>s.onRequest(t.DocumentRangeFormattingRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onDocumentOnTypeFormatting:e=>s.onRequest(t.DocumentOnTypeFormattingRequest.type,((t,n)=>e(t,n))),onRenameRequest:e=>s.onRequest(t.RenameRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),onPrepareRename:e=>s.onRequest(t.PrepareRenameRequest.type,((t,n)=>e(t,n))),onDocumentLinks:e=>s.onRequest(t.DocumentLinkRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onDocumentLinkResolve:e=>s.onRequest(t.DocumentLinkResolveRequest.type,((t,n)=>e(t,n))),onDocumentColor:e=>s.onRequest(t.DocumentColorRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onColorPresentation:e=>s.onRequest(t.ColorPresentationRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onFoldingRanges:e=>s.onRequest(t.FoldingRangeRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onSelectionRanges:e=>s.onRequest(t.SelectionRangeRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),i.attachPartialResult(s,t)))),onExecuteCommand:e=>s.onRequest(t.ExecuteCommandRequest.type,((t,n)=>e(t,n,i.attachWorkDone(s,t),void 0))),dispose:()=>s.dispose()};for(let t of g)t.attach(D);return s.onRequest(t.InitializeRequest.type,(e=>{r.initialize(e),n.string(e.trace)&&(u.trace=t.Trace.fromString(e.trace));for(let t of g)t.initialize(e.capabilities);if(R){return v(R(e,(new t.CancellationTokenSource).token,i.attachWorkDone(s,e),void 0)).then((e=>{if(e instanceof t.ResponseError)return e;let r=e;r||(r={capabilities:{}});let i=r.capabilities;i||(i={},r.capabilities=i),void 0===i.textDocumentSync||null===i.textDocumentSync?i.textDocumentSync=n.number(D.__textDocumentSync)?D.__textDocumentSync:t.TextDocumentSyncKind.None:n.number(i.textDocumentSync)||n.number(i.textDocumentSync.change)||(i.textDocumentSync.change=n.number(D.__textDocumentSync)?D.__textDocumentSync:t.TextDocumentSyncKind.None);for(let t of g)t.fillServerCapabilities(i);return r}))}{let e={capabilities:{textDocumentSync:t.TextDocumentSyncKind.None}};for(let t of g)t.fillServerCapabilities(e.capabilities);return e}})),s.onRequest(t.ShutdownRequest.type,(()=>(r.shutdownReceived=!0,T?T((new t.CancellationTokenSource).token):void 0))),s.onNotification(t.ExitNotification.type,(()=>{try{I&&I()}finally{r.shutdownReceived?r.exit(0):r.exit(1)}})),s.onNotification(t.SetTraceNotification.type,(e=>{u.trace=t.Trace.fromString(e.value)})),D}}(LT),function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.ProposedFeatures=e.SemanticTokensBuilder=void 0;const r=PT;Object.defineProperty(e,"SemanticTokensBuilder",{enumerable:!0,get:function(){return r.SemanticTokensBuilder}}),n(ch,e),n(LT,e),(e.ProposedFeatures||(e.ProposedFeatures={})).all={__brand:"features"}}(NT);var gA=ch;!function(e){var t=rr&&rr.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),n=rr&&rr.__exportStar||function(e,n){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(n,r)||t(n,e,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.createConnection=void 0;const r=NT;n(gA,e),n(NT,e);let i=!1;const o={initialize:e=>{},get shutdownReceived(){return i},set shutdownReceived(e){i=e},exit:e=>{}};e.createConnection=function(e,t,n,i){let a,s,u,c;return void 0!==e&&"features"===e.__brand&&(a=e,e=t,t=n,n=i),r.ConnectionStrategy.is(e)||r.ConnectionOptions.is(e)?c=e:(s=e,u=t,c=n),r.createConnection((e=>r.createProtocolConnection(s,u,e,c)),o,a)}}(OT);var vA,yA,EA,_A,CA,TA,AA,RA=function(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))},IA=function(){function e(e,t,n,r){this._uri=e,this._languageId=t,this._version=n,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content},e.prototype.update=function(t,n){for(var r=0,i=t;r<i.length;r++){var o=i[r];if(e.isIncremental(o)){var a=bA(o.range),s=this.offsetAt(a.start),u=this.offsetAt(a.end);this._content=this._content.substring(0,s)+o.text+this._content.substring(u,this._content.length);var c=Math.max(a.start.line,0),l=Math.max(a.end.line,0),p=this._lineOffsets,f=xA(o.text,!1,s);if(l-c===f.length)for(var d=0,h=f.length;d<h;d++)p[d+c+1]=f[d];else f.length<1e4?p.splice.apply(p,RA([c+1,l-c],f,!1)):this._lineOffsets=p=p.slice(0,c+1).concat(f,p.slice(l+1));var m=o.text.length-(u-s);if(0!==m)for(d=c+1+f.length,h=p.length;d<h;d++)p[d]=p[d]+m}else{if(!e.isFull(o))throw new Error("Unknown change event received");this._content=o.text,this._lineOffsets=void 0}}this._version=n},e.prototype.getLineOffsets=function(){return void 0===this._lineOffsets&&(this._lineOffsets=xA(this._content,!0)),this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),n=0,r=t.length;if(0===r)return{line:0,character:e};for(;n<r;){var i=Math.floor((n+r)/2);t[i]>e?r=i:n=i+1}var o=n-1;return{line:o,character:e-t[o]}},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var n=t[e.line],r=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,r),n)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e.isIncremental=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)},e.isFull=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength},e}();function DA(e,t){if(e.length<=1)return e;var n=e.length/2|0,r=e.slice(0,n),i=e.slice(n);DA(r,t),DA(i,t);for(var o=0,a=0,s=0;o<r.length&&a<i.length;){var u=t(r[o],i[a]);e[s++]=u<=0?r[o++]:i[a++]}for(;o<r.length;)e[s++]=r[o++];for(;a<i.length;)e[s++]=i[a++];return e}function xA(e,t,n){void 0===n&&(n=0);for(var r=t?[n]:[],i=0;i<e.length;i++){var o=e.charCodeAt(i);13!==o&&10!==o||(13===o&&i+1<e.length&&10===e.charCodeAt(i+1)&&i++,r.push(n+i+1))}return r}function bA(e){var t=e.start,n=e.end;return t.line>n.line||t.line===n.line&&t.character>n.character?{start:n,end:t}:e}function SA(e){var t=bA(e.range);return t!==e.range?{newText:e.newText,range:t}:e}function kA(e){return(null==e?void 0:e.type)===yA.Source}function OA(e,t){return function(n,r,i){const o={...r,type:e,kind:n};return NA(o,i),Object.defineProperties(o,{kindName:{get(){return t[this.kind]},enumerable:!0}}),o}}function NA(e,t){const n={_source:t,get sourceNode(){return"object"==typeof this._source?this._source:void 0}};return Object.setPrototypeOf(e,n),Object.defineProperties(e,{sourceString:{get(){return"object"==typeof this._source?this._source.sourceString:this._source},enumerable:!0,configurable:!0}}),e}!function(e){e.create=function(e,t,n,r){return new IA(e,t,n,r)},e.update=function(e,t,n){if(e instanceof IA)return e.update(t,n),e;throw new Error("TextDocument.update: document must be created by TextDocument.create")},e.applyEdits=function(e,t){for(var n=e.getText(),r=0,i=[],o=0,a=DA(t.map(SA),(function(e,t){var n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n}));o<a.length;o++){var s=a[o],u=e.offsetAt(s.range.start);if(u<r)throw new Error("Overlapping edit");u>r&&i.push(n.substring(r,u)),s.newText.length&&i.push(s.newText),r=e.offsetAt(s.range.end)}return i.push(n.substr(r)),i.join("")}}(vA||(vA={})),(EA=yA||(yA={})).Source="Source",EA.Comment="Comment",EA.Statment="statment",EA.Expression="expression",EA.Content="Content",EA.Logic="logic",(CA=_A||(_A={}))[CA.Ignore=0]="Ignore",CA[CA.Content=1]="Content",(AA=TA||(TA={}))[AA.Single=0]="Single";const PA=OA(yA.Comment,TA);function wA(e,t){return PA(0,{value:e},t)}var LA,FA;(FA=LA||(LA={}))[FA.Comma=0]="Comma",FA[FA.Assign=1]="Assign",FA[FA.Binary=2]="Binary",FA[FA.VariableIdentifier=3]="VariableIdentifier",FA[FA.ArrayLiteral=4]="ArrayLiteral",FA[FA.PrecetLiteral=5]="PrecetLiteral",FA[FA.ArraySpreadLiteral=6]="ArraySpreadLiteral",FA[FA.Literal=7]="Literal",FA[FA.Comment=8]="Comment",FA[FA.CallFunction=9]="CallFunction",FA[FA.Template=10]="Template",FA[FA.CallMacro=11]="CallMacro";const MA=OA(yA.Expression,LA);var $A,BA,qA,jA,UA,WA,KA,GA,VA,HA,zA,YA,XA,JA,QA,ZA,eR,tR;function nR(e,t,n,r){let i;return i in qA?i=0:i in UA?i=1:i in VA?i=2:i in zA?i=3:i in XA?i=4:(i in QA||i in eR)&&(i=5),MA(LA.Binary,{value:{kind:i,left:e,operator:t,right:n}},r)}function rR(e,t,n,r){const i="string"==typeof e?sR(null,e):e;return MA(LA.Binary,{value:n?{kind:5,left:i,operator:t,right:null}:{kind:5,left:null,operator:t,right:i}},r)}function iR(e="<anonymous>",t,n){return MA(LA.CallMacro,{name:e,params:(null==t?void 0:t.params)||{},flags:(null==t?void 0:t.flags)||[]},n)}function oR(e="<anonymous>",t,n){return MA(LA.CallFunction,{argumentList:t||[],name:e},n)}function aR(e,t){if(function(e){return e.kind===LA.CallFunction}(e))return e;const{kind:n,params:r,flags:i,...o}=e;return MA(LA.CallFunction,{...o,argumentList:[i.reduce(((e,t)=>({...e,[t]:!0})),{...r})],meta:{params:r,flags:i}},null!=t?t:e.sourceString)}function sR(e,t){return MA(LA.VariableIdentifier,{kindName:LA[LA.VariableIdentifier],prefix:e,text:t},e?e+t:t)}function uR(e,t){return MA(LA.Literal,{value:e},t)}(BA=$A||($A={}))[BA.OrNull=0]="OrNull",BA[BA.Logic=1]="Logic",BA[BA.Realtion=2]="Realtion",BA[BA.Addition=3]="Addition",BA[BA.Multiplication=4]="Multiplication",BA[BA.Automic=5]="Automic",(jA=qA||(qA={}))[jA["??"]=0]="??",(WA=UA||(UA={}))[WA["||"]=0]="||",WA[WA["&&"]=1]="&&",(GA=KA||(KA={}))[GA["!="]=0]="!=",GA[GA["=="]=1]="==",(HA=VA||(VA={}))[HA[">="]=0]=">=",HA[HA["<="]=1]="<=",HA[HA[">"]=2]=">",HA[HA["<"]=3]="<",(YA=zA||(zA={}))[YA["+"]=0]="+",YA[YA["-"]=1]="-",(JA=XA||(XA={}))[JA["%"]=0]="%",JA[JA["/"]=1]="/",JA[JA["*"]=2]="*",(ZA=QA||(QA={}))[ZA["^"]=0]="^",ZA[ZA["!"]=1]="!",(tR=eR||(eR={}))[tR["++"]=0]="++",tR[tR["--"]=1]="--";var cR=function(){const e={},t={exports:e};var n,r;return n=globalThis,r=function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){const r={};for(let i=0;i<128;i++)r[i]=String.fromCharCode(i);r["'".charCodeAt(0)]="\\'",r['"'.charCodeAt(0)]='\\"',r["\\".charCodeAt(0)]="\\\\",r["\b".charCodeAt(0)]="\\b",r["\f".charCodeAt(0)]="\\f",r["\n".charCodeAt(0)]="\\n",r["\r".charCodeAt(0)]="\\r",r["\t".charCodeAt(0)]="\\t",r["\v".charCodeAt(0)]="\\v",t.abstract=function(e){const t=e||"";return function(){throw new Error("this method "+t+" is abstract! (it has no implementation in class "+this.constructor.name+")")}},t.assert=function(e,t){if(!e)throw new Error(t)},t.defineLazyProperty=function(e,t,n){let r;Object.defineProperty(e,t,{get(){return r||(r=n.call(this)),r}})},t.clone=function(e){return e?Object.assign({},e):e},t.repeatFn=function(e,t){const n=[];for(;t-- >0;)n.push(e());return n},t.repeatStr=function(e,t){return new Array(t+1).join(e)},t.repeat=function(e,n){return t.repeatFn((()=>e),n)},t.getDuplicates=function(e){const t=[];for(let n=0;n<e.length;n++){const r=e[n];e.lastIndexOf(r)!==n&&t.indexOf(r)<0&&t.push(r)}return t},t.copyWithoutDuplicates=function(e){const t=[];return e.forEach((e=>{t.indexOf(e)<0&&t.push(e)})),t},t.isSyntactic=function(e){const t=e[0];return t===t.toUpperCase()},t.isLexical=function(e){return!t.isSyntactic(e)},t.padLeft=function(e,n,r){const i=r||" ";return e.length<n?t.repeatStr(i,n-e.length)+e:e},t.StringBuffer=function(){this.strings=[]},t.StringBuffer.prototype.append=function(e){this.strings.push(e)},t.StringBuffer.prototype.contents=function(){return this.strings.join("")},t.escapeChar=function(e,n){const i=e.charCodeAt(0);return'"'!==e&&"'"!==e||!n||e===n?i<128?r[i]:128<=i&&i<256?"\\x"+t.padLeft(i.toString(16),2,"0"):"\\u"+t.padLeft(i.toString(16),4,"0"):e},t.unescapeChar=function(e){if("\\"!==e.charAt(0))return e;switch(e.charAt(1)){case"b":return"\b";case"f":return"\f";case"n":return"\n";case"r":return"\r";case"t":return"\t";case"v":return"\v";case"x":return String.fromCharCode(parseInt(e.substring(2,4),16));case"u":return String.fromCharCode(parseInt(e.substring(2,6),16));default:return e.charAt(1)}},t.unexpectedObjToString=function(e){if(null==e)return String(e);const t=Object.prototype.toString.call(e);try{let n;return n=e.constructor&&e.constructor.name?e.constructor.name:0===t.indexOf("[object ")?t.slice(8,-1):typeof e,n+": "+JSON.stringify(String(e))}catch(n){return t}}},function(e,t,n){const r=n(16),i=n(0);class o{constructor(){if(this.constructor===o)throw new Error("PExpr cannot be instantiated -- it's abstract")}withSource(e){return e&&(this.source=e.trimmed()),this}}const a=Object.create(o.prototype),s=Object.create(o.prototype);class u extends o{constructor(e){super(),this.terms=e}}class c extends o{constructor(e){super(),this.expr=e}}class l extends c{}class p extends c{}class f extends c{}l.prototype.operator="*",p.prototype.operator="+",f.prototype.operator="?",l.prototype.minNumMatches=0,p.prototype.minNumMatches=1,f.prototype.minNumMatches=0,l.prototype.maxNumMatches=Number.POSITIVE_INFINITY,p.prototype.maxNumMatches=Number.POSITIVE_INFINITY,f.prototype.maxNumMatches=1,t.PExpr=o,t.any=a,t.end=s,t.Terminal=class extends o{constructor(e){super(),this.obj=e}},t.Range=class extends o{constructor(e,t){super(),this.from=e,this.to=t}},t.Param=class extends o{constructor(e){super(),this.index=e}},t.Alt=u,t.Extend=class extends u{constructor(e,t,n){super([n,e.rules[t].body]),this.superGrammar=e,this.name=t,this.body=n}},t.Splice=class extends u{constructor(e,t,n,r){const i=e.rules[t].body;super([...n,i,...r]),this.superGrammar=e,this.ruleName=t,this.expansionPos=n.length}},t.Seq=class extends o{constructor(e){super(),this.factors=e}},t.Iter=c,t.Star=l,t.Plus=p,t.Opt=f,t.Not=class extends o{constructor(e){super(),this.expr=e}},t.Lookahead=class extends o{constructor(e){super(),this.expr=e}},t.Lex=class extends o{constructor(e){super(),this.expr=e}},t.Apply=class extends o{constructor(e,t=[]){super(),this.ruleName=e,this.args=t}isSyntactic(){return i.isSyntactic(this.ruleName)}toMemoKey(){return this._memoKey||Object.defineProperty(this,"_memoKey",{value:this.toString()}),this._memoKey}},t.UnicodeChar=class extends o{constructor(e){super(),this.category=e,this.pattern=r[e]}},n(17),n(18),n(19),n(20),n(21),n(22),n(23),n(24),n(25),n(26),n(27),n(28),n(29),n(30)},function(e,t,n){const r=n(1),i=n(11);function o(e,t){let n;return t?(n=new Error(t.getLineAndColumnMessage()+e),n.shortMessage=e,n.interval=t):n=new Error(e),n}e.exports={applicationOfSyntacticRuleFromLexicalContext:function(e,t){return o("Cannot apply syntactic rule "+e+" from here (inside a lexical context)",t.source)},cannotExtendUndeclaredRule:function(e,t,n){return o("Cannot extend rule "+e+" because it is not declared in "+t,n)},cannotOverrideUndeclaredRule:function(e,t,n){return o("Cannot override rule "+e+" because it is not declared in "+t,n)},duplicateGrammarDeclaration:function(e,t){return o("Grammar "+e.name+" is already declared in this namespace")},duplicateParameterNames:function(e,t,n){return o("Duplicate parameter names in rule "+e+": "+t.join(", "),n)},duplicatePropertyNames:function(e){return o("Object pattern has duplicate property names: "+e.join(", "))},duplicateRuleDeclaration:function(e,t,n,r){let i="Duplicate declaration for rule '"+e+"' in grammar '"+t+"'";return t!==n&&(i+=" (originally declared in '"+n+"')"),o(i,r)},inconsistentArity:function(e,t,n,r){return o("Rule "+e+" involves an alternation which has inconsistent arity (expected "+t+", got "+n+")",r.source)},incorrectArgumentType:function(e,t){return o("Incorrect argument type: expected "+e,t.source)},intervalSourcesDontMatch:function(){return o("Interval sources don't match")},invalidConstructorCall:function(e,t,n){return o("Attempt to invoke constructor "+t+" with invalid or unexpected arguments")},invalidParameter:function(e,t){return o("Invalid parameter to rule "+e+": "+t+" has arity "+t.getArity()+", but parameter expressions must have arity 1",t.source)},grammarSyntaxError:function(e){const t=new Error;return Object.defineProperty(t,"message",{enumerable:!0,get:()=>e.message}),Object.defineProperty(t,"shortMessage",{enumerable:!0,get:()=>"Expected "+e.getExpectedText()}),t.interval=e.getInterval(),t},kleeneExprHasNullableOperand:function(e,t){const n=t.length>0?t[t.length-1].args:[];let i="Nullable expression "+e.expr.substituteParams(n)+" is not allowed inside '"+e.operator+"' (possible infinite loop)";return t.length>0&&(i+="\nApplication stack (most recent application last):\n"+t.map((e=>new r.Apply(e.ruleName,e.args))).join("\n")),o(i,e.expr.source)},missingSemanticAction:function(e,t,n,r){let i=r.slice(0,-1).map((e=>{const t="  "+e[0].name+" > "+e[1];return 3===e.length?t+" for '"+e[2]+"'":t})).join("\n");i+="\n  "+t+" > "+e;let a="";"_iter"===e&&(a=["\nNOTE: as of Ohm v16, there is no default action for iteration nodes — see ","  https://git.io/JRwtG for details."].join("\n"));const s=o([`Missing semantic action for '${e}' in ${n} '${t}'.${a}`,"Action stack (most recent call last):",i].join("\n"));return s.name="missingSemanticAction",s},multipleSuperSplices:function(e){return o("'...' can appear at most once in a rule body",e.source)},undeclaredGrammar:function(e,t,n){return o(t?"Grammar "+e+" is not declared in namespace "+i.toString(t):"Undeclared grammar "+e,n)},undeclaredRule:function(e,t,n){return o("Rule "+e+" is not declared in grammar "+t,n)},wrongNumberOfArguments:function(e,t,n,r){return o("Wrong number of arguments for rule "+e+" (expected "+t+", got "+n+")",r.source)},wrongNumberOfParameters:function(e,t,n,r){return o("Wrong number of parameters for rule "+e+" (expected "+t+", got "+n+")",r)},throwErrors(e){if(1===e.length)throw e[0];if(e.length>1)throw function(e){const t=e.map((e=>e.message));return o(["Errors:"].concat(t).join("\n- "),e[0].interval)}(e)}}},function(e,t,n){const r=n(0);function i(e,t,n){const r=e.length;return(e.slice(0,n)+t+e.slice(n+t.length)).substr(0,r)}function o(...e){const t=this,n=t.offset,o=r.repeatStr,a=new r.StringBuffer;a.append("Line "+t.lineNum+", col "+t.colNum+":\n");const s=function(e){let t=0;return e.map((e=>{const n=e.toString();return t=Math.max(t,n.length),n})).map((e=>r.padLeft(e,t)))}([null==t.prevLine?0:t.lineNum-1,t.lineNum,null==t.nextLine?0:t.lineNum+1]),u=(e,t,n)=>{a.append(n+s[e]+" | "+t+"\n")};null!=t.prevLine&&u(0,t.prevLine,"  "),u(1,t.line,"> ");const c=t.line.length;let l=o(" ",c+1);for(let f=0;f<e.length;++f){let a=e[f][0],s=e[f][1];r.assert(a>=0&&a<=s,"range start must be >= 0 and <= end");const u=n-t.colNum+1;a=Math.max(0,a-u),s=Math.min(s-u,c),l=i(l,o("~",s-a),a)}const p=2+s[1].length+3;return a.append(o(" ",p)),l=i(l,"^",t.colNum-1),a.append(l.replace(/ +$/,"")+"\n"),null!=t.nextLine&&u(2,t.nextLine,"  "),a.contents()}let a=[];t.awaitBuiltInRules=e=>{a.push(e)},t.announceBuiltInRules=e=>{a.forEach((t=>{t(e)})),a=null},t.getLineAndColumn=(e,t)=>{let n=1,r=1,i=0,a=0,s=null,u=null,c=-1;for(;i<t;){const t=e.charAt(i++);"\n"===t?(n++,r=1,c=a,a=i):"\r"!==t&&r++}let l=e.indexOf("\n",a);if(-1===l)l=e.length;else{const t=e.indexOf("\n",l+1);s=-1===t?e.slice(l):e.slice(l,t),s=s.replace(/^\r?\n/,"").replace(/\r$/,"")}return c>=0&&(u=e.slice(c,a).replace(/\r?\n$/,"")),{offset:t,lineNum:n,colNum:r,line:e.slice(a,l).replace(/\r$/,""),prevLine:u,nextLine:s,toString:o}},t.getLineAndColumnMessage=function(e,n,...r){return t.getLineAndColumn(e,n).toString(...r)},t.uniqueId=(()=>{let e=0;return t=>""+t+e++})()},function(e,t,n){const r=n(14),i=n(5),o=n(11),a=n(0),s=n(2),u=n(1),c=n(3),l=n(37);let p;const f=Object.create(u.PExpr.prototype);function d(e,t,n){const o=new r;let c,l,d,h=!1;return(n||p).createSemantics().addOperation("visit",{Grammars:e=>e.children.map((e=>e.visit())),Grammar(e,n,r,i,a){const u=e.visit();c=o.newGrammar(u,t),n.child(0)&&n.child(0).visit(),i.children.map((e=>e.visit()));const l=c.build();if(l.source=this.source.trimmed(),u in t)throw s.duplicateGrammarDeclaration(l,t);return t[u]=l,l},SuperGrammar(e,n){const r=n.visit();if("null"===r)c.withSuperGrammar(null);else{if(!t||!(r in t))throw s.undeclaredGrammar(r,t,n.source);c.withSuperGrammar(t[r])}},Rule_define(e,t,n,r,o){l=e.visit(),d=t.children.map((e=>e.visit()))[0]||[],c.defaultStartRule||c.ensureSuperGrammar()===i.ProtoBuiltInRules||c.withDefaultStartRule(l);const a=o.visit(),s=n.children.map((e=>e.visit()))[0],u=this.source.trimmed();return c.define(l,d,a,s,u)},Rule_override(e,t,n,r){l=e.visit(),d=t.children.map((e=>e.visit()))[0]||[];const i=this.source.trimmed();c.ensureSuperGrammarRuleForOverriding(l,i),h=!0;const o=r.visit();return h=!1,c.override(l,d,o,null,i)},Rule_extend(e,t,n,r){l=e.visit(),d=t.children.map((e=>e.visit()))[0]||[];const i=r.visit(),o=this.source.trimmed();return c.extend(l,d,i,null,o)},RuleBody(e,t){const n=t.visit();return o.alt.apply(o,n).withSource(this.source)},OverrideRuleBody(e,t){const n=t.visit(),r=n.indexOf(f);if(r>=0){const e=n.slice(0,r),t=n.slice(r+1);return t.forEach((e=>{if(e===f)throw s.multipleSuperSplices(e)})),new u.Splice(c.superGrammar,l,e,t).withSource(this.source)}return o.alt.apply(o,n).withSource(this.source)},Formals:(e,t,n)=>t.visit(),Params:(e,t,n)=>t.visit(),Alt(e){const t=e.visit();return o.alt.apply(o,t).withSource(this.source)},TopLevelTerm_inline(e,t){const n=l+"_"+t.visit(),r=e.visit(),i=this.source.trimmed(),a=!(c.superGrammar&&c.superGrammar.rules[n]);h&&!a?c.override(n,d,r,null,i):c.define(n,d,r,null,i);const s=d.map((e=>o.app(e)));return o.app(n,s).withSource(r.source)},OverrideTopLevelTerm_superSplice:e=>f,Seq(e){return o.seq.apply(o,e.children.map((e=>e.visit()))).withSource(this.source)},Iter_star(e,t){return o.star(e.visit()).withSource(this.source)},Iter_plus(e,t){return o.plus(e.visit()).withSource(this.source)},Iter_opt(e,t){return o.opt(e.visit()).withSource(this.source)},Pred_not(e,t){return o.not(t.visit()).withSource(this.source)},Pred_lookahead(e,t){return o.lookahead(t.visit()).withSource(this.source)},Lex_lex(e,t){return o.lex(t.visit()).withSource(this.source)},Base_application(e,t){const n=t.children.map((e=>e.visit()))[0]||[];return o.app(e.visit(),n).withSource(this.source)},Base_range(e,t,n){return o.range(e.visit(),n.visit()).withSource(this.source)},Base_terminal(e){return o.terminal(e.visit()).withSource(this.source)},Base_paren:(e,t,n)=>t.visit(),ruleDescr:(e,t,n)=>t.visit(),ruleDescrText(e){return this.sourceString.trim()},caseName:(e,t,n,r,i)=>n.visit(),name(e,t){return this.sourceString},nameFirst(e){},nameRest(e){},terminal:(e,t,n)=>t.children.map((e=>e.visit())).join(""),oneCharTerminal:(e,t,n)=>t.visit(),terminalChar(e){return a.unescapeChar(this.sourceString)},escapeChar(e){return this.sourceString},NonemptyListOf:(e,t,n)=>[e.visit()].concat(n.children.map((e=>e.visit()))),EmptyListOf:()=>[],_terminal(){return this.sourceString}})(e).visit()}function h(e,t){const n=o.extend(o.asNamespace(t));if("string"!=typeof e){if(!(r=e).constructor||"function"!=typeof r.constructor.isBuffer||!r.constructor.isBuffer(r))throw new TypeError("Expected string as first argument, got "+a.unexpectedObjToString(e));e=e.toString()}var r;return function(e,t){const n=p.match(e,"Grammars");if(n.failed())throw s.grammarSyntaxError(n);d(n,t)}(e,n),n}e.exports={createNamespace:o.createNamespace,grammar:function(e,t){const n=h(e,t),r=Object.keys(n);if(0===r.length)throw new Error("Missing grammar definition");if(r.length>1){const e=n[r[1]].source;throw new Error(c.getLineAndColumnMessage(e.sourceString,e.startIdx)+"Found more than one grammar definition -- use ohm.grammars() instead.")}return n[r[0]]},grammars:h,grammarFromScriptElement:function(e){throw new Error("grammarFromScriptElement was removed in Ohm v16.0. See https://git.io/J0gnK for more info.")},grammarsFromScriptElements:function(e){throw new Error("grammarsFromScriptElements was removed in Ohm v16.0. See https://git.io/J0gnK for more info.")},makeRecipe:function(e){return"function"==typeof e?e.call(new r):("string"==typeof e&&(e=JSON.parse(e)),(new r).fromRecipe(e))},ohmGrammar:null,pexprs:u,util:c,extras:n(38),version:l},e.exports._buildGrammar=d,i.BuiltInRules=n(40),c.announceBuiltInRules(i.BuiltInRules),e.exports.ohmGrammar=p=n(41),i.initApplicationParser(p,d)},function(e,t,n){const r=n(15),i=n(31),o=n(34),a=n(0),s=n(2),u=n(1),c=["_iter","_terminal","_nonterminal","_default"];function l(e){return Object.keys(e.rules).sort().map((t=>e.rules[t]))}function p(e,t,n,r){if(this.name=e,this.superGrammar=t,this.rules=n,r){if(!(r in n))throw new Error("Invalid start rule: '"+r+"' is not a rule in grammar '"+e+"'");this.defaultStartRule=r}}let f,d;p.initApplicationParser=function(e,t){f=e,d=t},p.prototype={matcher(){return new i(this)},isBuiltIn(){return this===p.ProtoBuiltInRules||this===p.BuiltInRules},equals(e){if(this===e)return!0;if(null==e||this.name!==e.name||this.defaultStartRule!==e.defaultStartRule||this.superGrammar!==e.superGrammar&&!this.superGrammar.equals(e.superGrammar))return!1;const t=l(this),n=l(e);return t.length===n.length&&t.every(((e,t)=>e.description===n[t].description&&e.formals.join(",")===n[t].formals.join(",")&&e.body.toString()===n[t].body.toString()))},match(e,t){const n=this.matcher();return n.replaceInputRange(0,0,e),n.match(t)},trace(e,t){const n=this.matcher();return n.replaceInputRange(0,0,e),n.trace(t)},createSemantics(){return o.createSemantics(this)},extendSemantics(e){return o.createSemantics(this,e._getSemantics())},_checkTopDownActionDict(e,t,n){const r=[];for(const i in n){const e=n[i];if(!c.includes(i)&&!(i in this.rules)){r.push(`'${i}' is not a valid semantic action for '${this.name}'`);continue}if("function"!=typeof e){r.push(`'${i}' must be a function in an action dictionary for '${this.name}'`);continue}const t=e.length,o=this._topDownActionArity(i);if(t!==o){let e;e="_iter"===i||"_nonterminal"===i?`it should use a rest parameter, e.g. \`${i}(...children) {}\`. NOTE: this is new in Ohm v16 — see https://git.io/Jz4CI for details.`:`expected ${o}, got ${t}`,r.push(`Semantic action '${i}' has the wrong arity: ${e}`)}}if(r.length>0){const n=r.map((e=>"- "+e)),i=new Error([`Found errors in the action dictionary of the '${t}' ${e}:`,...n].join("\n"));throw i.problems=r,i}},_topDownActionArity(e){return c.includes(e)?0:this.rules[e].body.getArity()},_inheritsFrom(e){let t=this.superGrammar;for(;t;){if(t.equals(e,!0))return!0;t=t.superGrammar}return!1},toRecipe(e){const t={};this.source&&(t.source=this.source.contents);let n=null;this.defaultStartRule&&(n=this.defaultStartRule);const r={};Object.keys(this.rules).forEach((e=>{const t=this.rules[e],n=t.body,i=!this.superGrammar||!this.superGrammar.rules[e];let o;o=i?"define":n instanceof u.Extend?"extend":"override";const a={};if(t.source&&this.source){const e=t.source.relativeTo(this.source);a.sourceInterval=[e.startIdx,e.endIdx]}const s=i?t.description:null,c=n.outputRecipe(t.formals,this.source);r[e]=[o,a,s,t.formals,c]}));let i="null";return e?i=e:this.superGrammar&&!this.superGrammar.isBuiltIn()&&(i=this.superGrammar.toRecipe()),`[${[...["grammar",t,this.name].map(JSON.stringify),i,...[n,r].map(JSON.stringify)].join(",")}]`.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},toOperationActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},toAttributeActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},_toOperationOrAttributeActionDictionaryTemplate(){const e=new a.StringBuffer;e.append("{");let t=!0;for(const n in this.rules){const r=this.rules[n].body;t?t=!1:e.append(","),e.append("\n"),e.append("  "),this.addSemanticActionTemplate(n,r,e)}return e.append("\n}"),e.contents()},addSemanticActionTemplate(e,t,n){n.append(e),n.append(": function(");const r=this._topDownActionArity(e);n.append(a.repeat("_",r).join(", ")),n.append(") {\n"),n.append("  }")},parseApplication(e){let t;if(-1===e.indexOf("<"))t=new u.Apply(e);else{const n=f.match(e,"Base_application");t=d(n,{})}if(!(t.ruleName in this.rules))throw s.undeclaredRule(t.ruleName,this.name);const n=this.rules[t.ruleName].formals;if(n.length!==t.args.length){const e=this.rules[t.ruleName].source;throw s.wrongNumberOfParameters(t.ruleName,n.length,t.args.length,e)}return t}},p.ProtoBuiltInRules=new p("ProtoBuiltInRules",void 0,{any:{body:u.any,formals:[],description:"any character",primitive:!0},end:{body:u.end,formals:[],description:"end of input",primitive:!0},caseInsensitive:{body:new r(new u.Param(0)),formals:["str"],primitive:!0},lower:{body:new u.UnicodeChar("Ll"),formals:[],description:"a lowercase letter",primitive:!0},upper:{body:new u.UnicodeChar("Lu"),formals:[],description:"an uppercase letter",primitive:!0},unicodeLtmo:{body:new u.UnicodeChar("Ltmo"),formals:[],description:"a Unicode character in Lt, Lm, or Lo",primitive:!0},spaces:{body:new u.Star(new u.Apply("space")),formals:[]},space:{body:new u.Range("\0"," "),formals:[],description:"a space"}}),e.exports=p},function(e,t,n){const r=n(0);let i=!1;class o{constructor(e,t,n){this.grammar=e,this.ctorName=t,this.matchLength=n}numChildren(){return this.children?this.children.length:0}childAt(e){if(this.children)return this.children[e]}indexOfChild(e){return this.children.indexOf(e)}hasChildren(){return this.numChildren()>0}hasNoChildren(){return!this.hasChildren()}onlyChild(){if(1!==this.numChildren())throw new Error("cannot get only child of a node of type "+this.ctorName+" (it has "+this.numChildren()+" children)");return this.firstChild()}firstChild(){if(this.hasNoChildren())throw new Error("cannot get first child of a "+this.ctorName+" node, which has no children");return this.childAt(0)}lastChild(){if(this.hasNoChildren())throw new Error("cannot get last child of a "+this.ctorName+" node, which has no children");return this.childAt(this.numChildren()-1)}childBefore(e){const t=this.indexOfChild(e);if(t<0)throw new Error("Node.childBefore() called w/ an argument that is not a child");if(0===t)throw new Error("cannot get child before first child");return this.childAt(t-1)}childAfter(e){const t=this.indexOfChild(e);if(t<0)throw new Error("Node.childAfter() called w/ an argument that is not a child");if(t===this.numChildren()-1)throw new Error("cannot get child after last child");return this.childAt(t+1)}isTerminal(){return!1}isNonterminal(){return!1}isIteration(){return!1}isOptional(){return!1}toJSON(){return{[this.ctorName]:this.children}}}e.exports={Node:o,TerminalNode:class extends o{constructor(e,t){super(e,"_terminal",t?t.length:0),this._value=t}isTerminal(){return!0}toJSON(){return{[this.ctorName]:this._value}}get primitiveValue(){return i||(console.warn("Warning: primitiveValue is deprecated and will be removed in a future version of Ohm. Use sourceString instead."),i=!0),this._value}},NonterminalNode:class extends o{constructor(e,t,n,r,i){super(e,t,i),this.children=n,this.childOffsets=r}isNonterminal(){return!0}isLexical(){return r.isLexical(this.ctorName)}isSyntactic(){return r.isSyntactic(this.ctorName)}},IterationNode:class extends o{constructor(e,t,n,r,i){super(e,"_iter",r),this.children=t,this.childOffsets=n,this.optional=i}isIteration(){return!0}isOptional(){return this.optional}}}},function(e,t,n){const r=n(0).assert,i=n(2),o=n(3);function a(e,t,n){this.sourceString=e,this.startIdx=t,this.endIdx=n}a.coverage=function(){const e=arguments[0].sourceString;let t=arguments[0].startIdx,n=arguments[0].endIdx;for(let r=1;r<arguments.length;r++){if(arguments[r].sourceString!==e)throw i.intervalSourcesDontMatch();t=Math.min(t,arguments[r].startIdx),n=Math.max(n,arguments[r].endIdx)}return new a(e,t,n)},a.prototype={coverageWith(){const e=Array.prototype.slice.call(arguments);return e.push(this),a.coverage.apply(void 0,e)},collapsedLeft(){return new a(this.sourceString,this.startIdx,this.startIdx)},collapsedRight(){return new a(this.sourceString,this.endIdx,this.endIdx)},getLineAndColumn(){return o.getLineAndColumn(this.sourceString,this.startIdx)},getLineAndColumnMessage(){const e=[this.startIdx,this.endIdx];return o.getLineAndColumnMessage(this.sourceString,this.startIdx,e)},minus(e){if(this.sourceString!==e.sourceString)throw i.intervalSourcesDontMatch();return this.startIdx===e.startIdx&&this.endIdx===e.endIdx?[]:this.startIdx<e.startIdx&&e.endIdx<this.endIdx?[new a(this.sourceString,this.startIdx,e.startIdx),new a(this.sourceString,e.endIdx,this.endIdx)]:this.startIdx<e.endIdx&&e.endIdx<this.endIdx?[new a(this.sourceString,e.endIdx,this.endIdx)]:this.startIdx<e.startIdx&&e.startIdx<this.endIdx?[new a(this.sourceString,this.startIdx,e.startIdx)]:[this]},relativeTo(e){if(this.sourceString!==e.sourceString)throw i.intervalSourcesDontMatch();return r(this.startIdx>=e.startIdx&&this.endIdx<=e.endIdx,"other interval does not cover this one"),new a(this.sourceString,this.startIdx-e.startIdx,this.endIdx-e.startIdx)},trimmed(){const e=this.contents,t=this.startIdx+e.match(/^\s*/)[0].length,n=this.endIdx-e.match(/\s*$/)[0].length;return new a(this.sourceString,t,n)},subInterval(e,t){const n=this.startIdx+e;return new a(this.sourceString,n,n+t)}},Object.defineProperties(a.prototype,{contents:{get(){return void 0===this._contents&&(this._contents=this.sourceString.slice(this.startIdx,this.endIdx)),this._contents},enumerable:!0},length:{get(){return this.endIdx-this.startIdx},enumerable:!0}}),e.exports=a},function(e,t,n){const r=n(7);function i(e){this.source=e,this.pos=0,this.examinedLength=0}i.prototype={atEnd(){const e=this.pos===this.source.length;return this.examinedLength=Math.max(this.examinedLength,this.pos+1),e},next(){const e=this.source[this.pos++];return this.examinedLength=Math.max(this.examinedLength,this.pos),e},matchString(e,t){let n;if(t){for(n=0;n<e.length;n++){const t=this.next(),r=e[n];if(null==t||t.toUpperCase()!==r.toUpperCase())return!1}return!0}for(n=0;n<e.length;n++)if(this.next()!==e[n])return!1;return!0},sourceSlice(e,t){return this.source.slice(e,t)},interval(e,t){return new r(this.source,e,t||this.pos)}},e.exports=i},function(e,t,n){const r=n(0),i=n(3),o=n(7);function a(e,t,n,o,a,s,u){this.matcher=e,this.input=t,this.startExpr=n,this._cst=o,this._cstOffset=a,this._rightmostFailurePosition=s,this._rightmostFailures=u,this.failed()&&(r.defineLazyProperty(this,"message",(function(){const e="Expected "+this.getExpectedText();return i.getLineAndColumnMessage(this.input,this.getRightmostFailurePosition())+e})),r.defineLazyProperty(this,"shortMessage",(function(){const e="expected "+this.getExpectedText(),t=i.getLineAndColumn(this.input,this.getRightmostFailurePosition());return"Line "+t.lineNum+", col "+t.colNum+": "+e})))}a.prototype.succeeded=function(){return!!this._cst},a.prototype.failed=function(){return!this.succeeded()},a.prototype.getRightmostFailurePosition=function(){return this._rightmostFailurePosition},a.prototype.getRightmostFailures=function(){if(!this._rightmostFailures){this.matcher.setInput(this.input);const e=this.matcher._match(this.startExpr,!1,this.getRightmostFailurePosition());this._rightmostFailures=e.getRightmostFailures()}return this._rightmostFailures},a.prototype.toString=function(){return this.succeeded()?"[match succeeded]":"[match failed at position "+this.getRightmostFailurePosition()+"]"},a.prototype.getExpectedText=function(){if(this.succeeded())throw new Error("cannot get expected text of a successful MatchResult");const e=new r.StringBuffer;let t=this.getRightmostFailures();t=t.filter((e=>!e.isFluffy()));for(let n=0;n<t.length;n++)n>0&&(n===t.length-1?e.append(t.length>2?", or ":" or "):e.append(", ")),e.append(t[n].toString());return e.contents()},a.prototype.getInterval=function(){const e=this.getRightmostFailurePosition();return new o(this.input,e,e)},e.exports=a},function(e,t,n){function r(e,t,n){if("description"!==(r=n)&&"string"!==r&&"code"!==r)throw new Error("invalid Failure type: "+n);var r;this.pexpr=e,this.text=t,this.type=n,this.fluffy=!1}r.prototype.getPExpr=function(){return this.pexpr},r.prototype.getText=function(){return this.text},r.prototype.getType=function(){return this.type},r.prototype.isDescription=function(){return"description"===this.type},r.prototype.isStringTerminal=function(){return"string"===this.type},r.prototype.isCode=function(){return"code"===this.type},r.prototype.isFluffy=function(){return this.fluffy},r.prototype.makeFluffy=function(){this.fluffy=!0},r.prototype.clearFluffy=function(){this.fluffy=!1},r.prototype.subsumes=function(e){return this.getText()===e.getText()&&this.type===e.type&&(!this.isFluffy()||this.isFluffy()&&e.isFluffy())},r.prototype.toString=function(){return"string"===this.type?JSON.stringify(this.getText()):this.getText()},r.prototype.clone=function(){const e=new r(this.pexpr,this.text,this.type);return this.isFluffy()&&e.makeFluffy(),e},r.prototype.toKey=function(){return this.toString()+"#"+this.type},e.exports=r},function(e,t,n){function r(){}r.prototype=Object.create(null),r.asNamespace=function(e){return e instanceof r?e:r.createNamespace(e)},r.createNamespace=function(e){return r.extend(r.prototype,e)},r.extend=function(e,t){if(e!==r.prototype&&!(e instanceof r))throw new TypeError("not a Namespace object: "+e);const n=Object.create(e,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}});return Object.assign(n,t)},r.toString=function(e){return Object.prototype.toString.call(e)},e.exports=r},function(e,t,n){const r=n(7),i=n(0),o={succeeded:1,isRootNode:2,isImplicitSpaces:4,isMemoized:8,isHeadOfLeftRecursion:16,terminatesLR:32};function a(e){return"string"==typeof e?e.replace(/ /g,"⋅").replace(/\t/g,"␉").replace(/\n/g,"␊").replace(/\r/g,"␍"):String(e)}function s(e,t,n,i,a,s,u){this.input=e,this.pos=this.pos1=t,this.pos2=n,this.source=new r(e,t,n),this.expr=i,this.bindings=s,this.children=u||[],this.terminatingLREntry=null,this._flags=a?o.succeeded:0}s.prototype.SKIP={},Object.defineProperty(s.prototype,"displayString",{get(){return this.expr.toDisplayString()}}),Object.keys(o).forEach((e=>{const t=o[e];Object.defineProperty(s.prototype,e,{get(){return 0!=(this._flags&t)},set(e){e?this._flags|=t:this._flags&=~t}})})),s.prototype.clone=function(){return this.cloneWithExpr(this.expr)},s.prototype.cloneWithExpr=function(e){const t=new s(this.input,this.pos,this.pos2,e,this.succeeded,this.bindings,this.children);return t.isHeadOfLeftRecursion=this.isHeadOfLeftRecursion,t.isImplicitSpaces=this.isImplicitSpaces,t.isMemoized=this.isMemoized,t.isRootNode=this.isRootNode,t.terminatesLR=this.terminatesLR,t.terminatingLREntry=this.terminatingLREntry,t},s.prototype.recordLRTermination=function(e,t){this.terminatingLREntry=new s(this.input,this.pos,this.pos2,this.expr,!1,[t],[e]),this.terminatingLREntry.terminatesLR=!0},s.prototype.walk=function(e,t){let n=e;function r(e,i,o){let a=!0;n.enter&&n.enter.call(t,e,i,o)===s.prototype.SKIP&&(a=!1),a&&(e.children.forEach((t=>{r(t,e,o+1)})),n.exit&&n.exit.call(t,e,i,o))}"function"==typeof n&&(n={enter:n}),this.isRootNode?this.children.forEach((e=>{r(e,null,0)})):r(this,null,0)},s.prototype.toString=function(){const e=new i.StringBuffer;return this.walk(((t,n,r)=>{if(!t)return this.SKIP;if("Alt"!==t.expr.constructor.name){var o;if(e.append(function(e,t,n){const r=a(e.slice(t,t+10));return r.length<10?r+i.repeat(" ",10-r.length).join(""):r}(t.input,t.pos)+(o=2*r+1,i.repeat(" ",o).join(""))),e.append((t.succeeded?"✓":"✗")+" "+t.displayString),t.isHeadOfLeftRecursion&&e.append(" (LR)"),t.succeeded){const n=a(t.source.contents);e.append(" ⇒  "),e.append("string"==typeof n?'"'+n+'"':n)}e.append("\n")}})),e.contents()},e.exports=s},function(e,t,n){const r=n(1),i=n(9),o=n(5),a={_terminal(){return this.sourceString},_nonterminal(...e){const t=this._node.ctorName,n=this.args.mapping;if(!n.hasOwnProperty(t)){if(this._node instanceof r.Alt||this._node instanceof r.Apply)return e[0].toAST(n);if(this.isLexical())return this.sourceString;const t=e.filter((e=>!e.isTerminal()));if(1===t.length)return t[0].toAST(n)}if("number"==typeof n[t])return e[n[t]].toAST(n);const i=n[t]||e,o={type:t};for(const r in i){const i=n[t]&&n[t][r];"number"==typeof i?o[r]=e[i].toAST(n):"string"==typeof i||"boolean"==typeof i||null===i?o[r]=i:"object"==typeof i&&i instanceof Number?o[r]=Number(i):"function"==typeof i?o[r]=i.call(this,e):void 0===i&&(e[r]&&!e[r].isTerminal()?o[r]=e[r].toAST(n):delete o[r])}return o},_iter(...e){return this._node.isOptional()?0===this.numChildren?null:e[0].toAST(this.args.mapping):e.map((function(e){return e.toAST(this.args.mapping)}),this)},NonemptyListOf(e,t,n){return[e.toAST(this.args.mapping)].concat(n.toAST(this.args.mapping))},EmptyListOf:()=>[]};e.exports={helper:function(e,t){if(!(e instanceof i)||e.failed())throw new Error("toAST() expects a succesfull MatchResult as first parameter");t=Object.assign({},t);const n=Object.assign({},a);for(const r in t)"function"==typeof t[r]&&(n[r]=t[r],delete t[r]);return e._cst.grammar.createSemantics().addOperation("toAST(mapping)",n)(e).toAST(t)},semantics:function(e){if(!(e instanceof o))throw new Error("semanticsToAST() expects a Grammar as parameter");return e.createSemantics().addOperation("toAST(mapping)",a)}}},function(e,t,n){const r=n(5),i=n(36),o=n(1);function a(){}a.prototype={currentDecl:null,currentRuleName:null,newGrammar:e=>new i(e),grammar(e,t,n,o,a){const s=new i(t);return n&&s.withSuperGrammar(n instanceof r?n:this.fromRecipe(n)),o&&s.withDefaultStartRule(o),e&&e.source&&s.withSource(e.source),this.currentDecl=s,Object.keys(a).forEach((e=>{this.currentRuleName=e;const t=a[e],n=t[0],r=t[1],i=t[2],o=t[3],u=this.fromRecipe(t[4]);let c;s.source&&r&&r.sourceInterval&&(c=s.source.subInterval(r.sourceInterval[0],r.sourceInterval[1]-r.sourceInterval[0])),s[n](e,o,u,i,c)})),this.currentRuleName=this.currentDecl=null,s.build()},terminal:e=>new o.Terminal(e),range:(e,t)=>new o.Range(e,t),param:e=>new o.Param(e),alt(){let e=[];for(let t=0;t<arguments.length;t++){let n=arguments[t];n instanceof o.PExpr||(n=this.fromRecipe(n)),n instanceof o.Alt?e=e.concat(n.terms):e.push(n)}return 1===e.length?e[0]:new o.Alt(e)},seq(){let e=[];for(let t=0;t<arguments.length;t++){let n=arguments[t];n instanceof o.PExpr||(n=this.fromRecipe(n)),n instanceof o.Seq?e=e.concat(n.factors):e.push(n)}return 1===e.length?e[0]:new o.Seq(e)},star(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Star(e)},plus(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Plus(e)},opt(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Opt(e)},not(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Not(e)},la(e){return this.lookahead(e)},lookahead(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Lookahead(e)},lex(e){return e instanceof o.PExpr||(e=this.fromRecipe(e)),new o.Lex(e)},app(e,t){return t&&t.length>0&&(t=t.map((function(e){return e instanceof o.PExpr?e:this.fromRecipe(e)}),this)),new o.Apply(e,t)},splice(e,t){return new o.Splice(this.currentDecl.superGrammar,this.currentRuleName,e.map((e=>this.fromRecipe(e))),t.map((e=>this.fromRecipe(e))))},fromRecipe(e){const t=this[e[0]].apply(this,"grammar"===e[0]?e.slice(1):e.slice(2)),n=e[1];return n&&n.sourceInterval&&this.currentDecl&&t.withSource(this.currentDecl.sourceInterval.apply(this.currentDecl,n.sourceInterval)),t}},e.exports=a},function(e,t,n){const r=n(10),i=n(6).TerminalNode,o=n(0).assert,{PExpr:a,Terminal:s}=n(1);class u extends a{constructor(e){super(),this.obj=e}_getString(e){const t=e.currentApplication().args[this.obj.index];return o(t instanceof s,"expected a Terminal expression"),t.obj}allowsSkippingPrecedingSpace(){return!0}eval(e){const t=e.inputStream,n=t.pos,r=this._getString(e);return t.matchString(r,!0)?(e.pushBinding(new i(e.grammar,r),n),!0):(e.processFailure(n,this),!1)}getArity(){return 1}substituteParams(e){return new u(this.obj.substituteParams(e))}toDisplayString(){return this.obj.toDisplayString()+" (case-insensitive)"}toFailure(e){return new r(this,this.obj.toFailure(e)+" (case-insensitive)","description")}_isNullable(e,t){return this.obj._isNullable(e,t)}}e.exports=u},function(e,t){e.exports={Lu:/[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]/,Ll:/[a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43]/,Lt:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]/,Lm:/[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]/,Lo:/[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Nl:/[\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF]|\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC6E]/,Nd:/[0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]|\uD801[\uDCA0-\uDCA9]|\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDEF0-\uDEF9]|[\uD805\uD807][\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF39]|\uD806[\uDCE0-\uDCE9]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59]|\uD835[\uDFCE-\uDFFF]|\uD83A[\uDD50-\uDD59]/,Mn:/[\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C00\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D01\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1ABD\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA8C5\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDCA-\uDDCC\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3C\uDF40\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDCB3-\uDCB8\uDCBA\uDCBF\uDCC0\uDCC2\uDCC3\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]/,Mc:/[\u0903-\u0903]|[\u093E-\u0940]|[\u0949-\u094C]|[\u0982-\u0983]|[\u09BE-\u09C0]|[\u09C7-\u09C8]|[\u09CB-\u09CC]|[\u09D7-\u09D7]|[\u0A3E-\u0A40]|[\u0A83-\u0A83]|[\u0ABE-\u0AC0]|[\u0AC9-\u0AC9]|[\u0ACB-\u0ACC]|[\u0B02-\u0B03]|[\u0B3E-\u0B3E]|[\u0B40-\u0B40]|[\u0B47-\u0B48]|[\u0B4B-\u0B4C]|[\u0B57-\u0B57]|[\u0B83-\u0B83]|[\u0BBE-\u0BBF]|[\u0BC1-\u0BC2]|[\u0BC6-\u0BC8]|[\u0BCA-\u0BCC]|[\u0BD7-\u0BD7]|[\u0C01-\u0C03]|[\u0C41-\u0C44]|[\u0C82-\u0C83]|[\u0CBE-\u0CBE]|[\u0CC0-\u0CC4]|[\u0CC7-\u0CC8]|[\u0CCA-\u0CCB]|[\u0CD5-\u0CD6]|[\u0D02-\u0D03]|[\u0D3E-\u0D40]|[\u0D46-\u0D48]|[\u0D4A-\u0D4C]|[\u0D57-\u0D57]|[\u0F3E-\u0F3F]|[\u0F7F-\u0F7F]/,Pc:/[_\u203F\u2040\u2054\uFE33\uFE34\uFE4D-\uFE4F\uFF3F]/,Zs:/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,L:/[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Ltmo:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]|[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]|[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.allowsSkippingPrecedingSpace=r.abstract("allowsSkippingPrecedingSpace"),i.any.allowsSkippingPrecedingSpace=i.end.allowsSkippingPrecedingSpace=i.Apply.prototype.allowsSkippingPrecedingSpace=i.Terminal.prototype.allowsSkippingPrecedingSpace=i.Range.prototype.allowsSkippingPrecedingSpace=i.UnicodeChar.prototype.allowsSkippingPrecedingSpace=function(){return!0},i.Alt.prototype.allowsSkippingPrecedingSpace=i.Iter.prototype.allowsSkippingPrecedingSpace=i.Lex.prototype.allowsSkippingPrecedingSpace=i.Lookahead.prototype.allowsSkippingPrecedingSpace=i.Not.prototype.allowsSkippingPrecedingSpace=i.Param.prototype.allowsSkippingPrecedingSpace=i.Seq.prototype.allowsSkippingPrecedingSpace=function(){return!1}},function(e,t,n){const r=n(0),i=n(2),o=n(1);let a,s;n(3).awaitBuiltInRules((e=>{a=e})),o.PExpr.prototype.assertAllApplicationsAreValid=function(e,t){s=0,this._assertAllApplicationsAreValid(e,t)},o.PExpr.prototype._assertAllApplicationsAreValid=r.abstract("_assertAllApplicationsAreValid"),o.any._assertAllApplicationsAreValid=o.end._assertAllApplicationsAreValid=o.Terminal.prototype._assertAllApplicationsAreValid=o.Range.prototype._assertAllApplicationsAreValid=o.Param.prototype._assertAllApplicationsAreValid=o.UnicodeChar.prototype._assertAllApplicationsAreValid=function(e,t){},o.Lex.prototype._assertAllApplicationsAreValid=function(e,t){s++,this.expr._assertAllApplicationsAreValid(e,t),s--},o.Alt.prototype._assertAllApplicationsAreValid=function(e,t){for(let n=0;n<this.terms.length;n++)this.terms[n]._assertAllApplicationsAreValid(e,t)},o.Seq.prototype._assertAllApplicationsAreValid=function(e,t){for(let n=0;n<this.factors.length;n++)this.factors[n]._assertAllApplicationsAreValid(e,t)},o.Iter.prototype._assertAllApplicationsAreValid=o.Not.prototype._assertAllApplicationsAreValid=o.Lookahead.prototype._assertAllApplicationsAreValid=function(e,t){this.expr._assertAllApplicationsAreValid(e,t)},o.Apply.prototype._assertAllApplicationsAreValid=function(e,t){const n=t.rules[this.ruleName];if(!n)throw i.undeclaredRule(this.ruleName,t.name,this.source);if(r.isSyntactic(this.ruleName)&&(!r.isSyntactic(e)||s>0))throw i.applicationOfSyntacticRuleFromLexicalContext(this.ruleName,this);const u=this.args.length,c=n.formals.length;if(u!==c)throw i.wrongNumberOfArguments(this.ruleName,c,u,this.source);if(this.args.forEach((n=>{if(n._assertAllApplicationsAreValid(e,t),1!==n.getArity())throw i.invalidParameter(this.ruleName,n)})),a&&n===a.rules.caseInsensitive&&!(this.args[0]instanceof o.Terminal))throw i.incorrectArgumentType('a Terminal (e.g. "abc")',this.args[0])}},function(e,t,n){const r=n(0),i=n(2),o=n(1);o.PExpr.prototype.assertChoicesHaveUniformArity=r.abstract("assertChoicesHaveUniformArity"),o.any.assertChoicesHaveUniformArity=o.end.assertChoicesHaveUniformArity=o.Terminal.prototype.assertChoicesHaveUniformArity=o.Range.prototype.assertChoicesHaveUniformArity=o.Param.prototype.assertChoicesHaveUniformArity=o.Lex.prototype.assertChoicesHaveUniformArity=o.UnicodeChar.prototype.assertChoicesHaveUniformArity=function(e){},o.Alt.prototype.assertChoicesHaveUniformArity=function(e){if(0===this.terms.length)return;const t=this.terms[0].getArity();for(let n=0;n<this.terms.length;n++){const r=this.terms[n];r.assertChoicesHaveUniformArity();const o=r.getArity();if(t!==o)throw i.inconsistentArity(e,t,o,r)}},o.Extend.prototype.assertChoicesHaveUniformArity=function(e){const t=this.terms[0].getArity(),n=this.terms[1].getArity();if(t!==n)throw i.inconsistentArity(e,n,t,this.terms[0])},o.Seq.prototype.assertChoicesHaveUniformArity=function(e){for(let t=0;t<this.factors.length;t++)this.factors[t].assertChoicesHaveUniformArity(e)},o.Iter.prototype.assertChoicesHaveUniformArity=function(e){this.expr.assertChoicesHaveUniformArity(e)},o.Not.prototype.assertChoicesHaveUniformArity=function(e){},o.Lookahead.prototype.assertChoicesHaveUniformArity=function(e){this.expr.assertChoicesHaveUniformArity(e)},o.Apply.prototype.assertChoicesHaveUniformArity=function(e){}},function(e,t,n){const r=n(0),i=n(2),o=n(1);o.PExpr.prototype.assertIteratedExprsAreNotNullable=r.abstract("assertIteratedExprsAreNotNullable"),o.any.assertIteratedExprsAreNotNullable=o.end.assertIteratedExprsAreNotNullable=o.Terminal.prototype.assertIteratedExprsAreNotNullable=o.Range.prototype.assertIteratedExprsAreNotNullable=o.Param.prototype.assertIteratedExprsAreNotNullable=o.UnicodeChar.prototype.assertIteratedExprsAreNotNullable=function(e){},o.Alt.prototype.assertIteratedExprsAreNotNullable=function(e){for(let t=0;t<this.terms.length;t++)this.terms[t].assertIteratedExprsAreNotNullable(e)},o.Seq.prototype.assertIteratedExprsAreNotNullable=function(e){for(let t=0;t<this.factors.length;t++)this.factors[t].assertIteratedExprsAreNotNullable(e)},o.Iter.prototype.assertIteratedExprsAreNotNullable=function(e){if(this.expr.assertIteratedExprsAreNotNullable(e),this.expr.isNullable(e))throw i.kleeneExprHasNullableOperand(this,[])},o.Opt.prototype.assertIteratedExprsAreNotNullable=o.Not.prototype.assertIteratedExprsAreNotNullable=o.Lookahead.prototype.assertIteratedExprsAreNotNullable=o.Lex.prototype.assertIteratedExprsAreNotNullable=function(e){this.expr.assertIteratedExprsAreNotNullable(e)},o.Apply.prototype.assertIteratedExprsAreNotNullable=function(e){this.args.forEach((t=>{t.assertIteratedExprsAreNotNullable(e)}))}},function(e,t,n){const r=n(12),i=n(0),o=n(2),a=n(6),s=n(1),u=a.TerminalNode,c=a.NonterminalNode,l=a.IterationNode;s.PExpr.prototype.eval=i.abstract("eval"),s.any.eval=function(e){const t=e.inputStream,n=t.pos,r=t.next();return r?(e.pushBinding(new u(e.grammar,r),n),!0):(e.processFailure(n,this),!1)},s.end.eval=function(e){const t=e.inputStream,n=t.pos;return t.atEnd()?(e.pushBinding(new u(e.grammar,void 0),n),!0):(e.processFailure(n,this),!1)},s.Terminal.prototype.eval=function(e){const t=e.inputStream,n=t.pos;return t.matchString(this.obj)?(e.pushBinding(new u(e.grammar,this.obj),n),!0):(e.processFailure(n,this),!1)},s.Range.prototype.eval=function(e){const t=e.inputStream,n=t.pos,r=t.next();return r&&this.from<=r&&r<=this.to?(e.pushBinding(new u(e.grammar,r),n),!0):(e.processFailure(n,this),!1)},s.Param.prototype.eval=function(e){return e.eval(e.currentApplication().args[this.index])},s.Lex.prototype.eval=function(e){e.enterLexifiedContext();const t=e.eval(this.expr);return e.exitLexifiedContext(),t},s.Alt.prototype.eval=function(e){for(let t=0;t<this.terms.length;t++)if(e.eval(this.terms[t]))return!0;return!1},s.Seq.prototype.eval=function(e){for(let t=0;t<this.factors.length;t++){const n=this.factors[t];if(!e.eval(n))return!1}return!0},s.Iter.prototype.eval=function(e){const t=e.inputStream,n=t.pos,r=this.getArity(),i=[],a=[];for(;i.length<r;)i.push([]),a.push([]);let u,c=0,p=n;for(;c<this.maxNumMatches&&e.eval(this.expr);){if(t.pos===p)throw o.kleeneExprHasNullableOperand(this,e._applicationStack);p=t.pos,c++;const n=e._bindings.splice(e._bindings.length-r,r),s=e._bindingOffsets.splice(e._bindingOffsets.length-r,r);for(u=0;u<n.length;u++)i[u].push(n[u]),a[u].push(s[u])}if(c<this.minNumMatches)return!1;let f=e.posToOffset(n),d=0;if(c>0){const e=i[r-1],t=a[r-1],n=t[t.length-1]+e[e.length-1].matchLength;f=a[0][0],d=n-f}const h=this instanceof s.Opt;for(u=0;u<i.length;u++)e._bindings.push(new l(e.grammar,i[u],a[u],d,h)),e._bindingOffsets.push(f);return!0},s.Not.prototype.eval=function(e){const t=e.inputStream,n=t.pos;e.pushFailuresInfo();const r=e.eval(this.expr);return e.popFailuresInfo(),r?(e.processFailure(n,this),!1):(t.pos=n,!0)},s.Lookahead.prototype.eval=function(e){const t=e.inputStream,n=t.pos;return!!e.eval(this.expr)&&(t.pos=n,!0)},s.Apply.prototype.eval=function(e){const t=e.currentApplication(),n=t?t.args:[],r=this.substituteParams(n),i=e.getCurrentPosInfo();if(i.isActive(r))return r.handleCycle(e);const o=r.toMemoKey(),a=i.memo[o];if(a&&i.shouldUseMemoizedResult(a)){if(e.hasNecessaryInfo(a))return e.useMemoizedResult(e.inputStream.pos,a);delete i.memo[o]}return r.reallyEval(e)},s.Apply.prototype.handleCycle=function(e){const t=e.getCurrentPosInfo(),n=t.currentLeftRecursion,r=this.toMemoKey();let i=t.memo[r];return n&&n.headApplication.toMemoKey()===r?i.updateInvolvedApplicationMemoKeys():i||(i=t.memoize(r,{matchLength:0,examinedLength:0,value:!1,rightmostFailureOffset:-1}),t.startLeftRecursion(this,i)),e.useMemoizedResult(e.inputStream.pos,i)},s.Apply.prototype.reallyEval=function(e){const t=e.inputStream,n=t.pos,r=e.getCurrentPosInfo(),o=e.grammar.rules[this.ruleName],a=o.body,s=o.description;e.enterApplication(r,this),s&&e.pushFailuresInfo();const u=t.examinedLength;t.examinedLength=0;let c=this.evalOnce(a,e);const l=r.currentLeftRecursion,p=this.toMemoKey(),f=l&&l.headApplication.toMemoKey()===p;let d;f?(c=this.growSeedResult(a,e,n,l,c),r.endLeftRecursion(),d=l,d.examinedLength=t.examinedLength-n,d.rightmostFailureOffset=e._getRightmostFailureOffset(),r.memoize(p,d)):l&&l.isInvolved(p)||(d=r.memoize(p,{matchLength:t.pos-n,examinedLength:t.examinedLength-n,value:c,failuresAtRightmostPosition:e.cloneRecordedFailures(),rightmostFailureOffset:e._getRightmostFailureOffset()}));const h=!!c;if(s&&(e.popFailuresInfo(),h||e.processFailure(n,this),d&&(d.failuresAtRightmostPosition=e.cloneRecordedFailures())),e.isTracing()&&d){const t=e.getTraceEntry(n,this,h,h?[c]:[]);f&&(i.assert(null!=t.terminatingLREntry||!h),t.isHeadOfLeftRecursion=!0),d.traceEntry=t}return t.examinedLength=Math.max(t.examinedLength,u),e.exitApplication(r,c),h},s.Apply.prototype.evalOnce=function(e,t){const n=t.inputStream,r=n.pos;if(t.eval(e)){const i=e.getArity(),o=t._bindings.splice(t._bindings.length-i,i),a=t._bindingOffsets.splice(t._bindingOffsets.length-i,i);return new c(t.grammar,this.ruleName,o,a,n.pos-r)}return!1},s.Apply.prototype.growSeedResult=function(e,t,n,i,o){if(!o)return!1;const a=t.inputStream;for(;;){if(i.matchLength=a.pos-n,i.value=o,i.failuresAtRightmostPosition=t.cloneRecordedFailures(),t.isTracing()){const e=t.trace[t.trace.length-1];i.traceEntry=new r(t.input,n,a.pos,this,!0,[o],[e.clone()])}if(a.pos=n,o=this.evalOnce(e,t),a.pos-n<=i.matchLength)break;t.isTracing()&&t.trace.splice(-2,1)}return t.isTracing()&&i.traceEntry.recordLRTermination(t.trace.pop(),o),a.pos=n+i.matchLength,i.value},s.UnicodeChar.prototype.eval=function(e){const t=e.inputStream,n=t.pos,r=t.next();return r&&this.pattern.test(r)?(e.pushBinding(new u(e.grammar,r),n),!0):(e.processFailure(n,this),!1)}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.getArity=r.abstract("getArity"),i.any.getArity=i.end.getArity=i.Terminal.prototype.getArity=i.Range.prototype.getArity=i.Param.prototype.getArity=i.Apply.prototype.getArity=i.UnicodeChar.prototype.getArity=function(){return 1},i.Alt.prototype.getArity=function(){return 0===this.terms.length?0:this.terms[0].getArity()},i.Seq.prototype.getArity=function(){let e=0;for(let t=0;t<this.factors.length;t++)e+=this.factors[t].getArity();return e},i.Iter.prototype.getArity=function(){return this.expr.getArity()},i.Not.prototype.getArity=function(){return 0},i.Lookahead.prototype.getArity=i.Lex.prototype.getArity=function(){return this.expr.getArity()}},function(e,t,n){const r=n(0),i=n(1);function o(e,t){const n={};if(e.source&&t){const r=e.source.relativeTo(t);n.sourceInterval=[r.startIdx,r.endIdx]}return n}i.PExpr.prototype.outputRecipe=r.abstract("outputRecipe"),i.any.outputRecipe=function(e,t){return["any",o(this,t)]},i.end.outputRecipe=function(e,t){return["end",o(this,t)]},i.Terminal.prototype.outputRecipe=function(e,t){return["terminal",o(this,t),this.obj]},i.Range.prototype.outputRecipe=function(e,t){return["range",o(this,t),this.from,this.to]},i.Param.prototype.outputRecipe=function(e,t){return["param",o(this,t),this.index]},i.Alt.prototype.outputRecipe=function(e,t){return["alt",o(this,t)].concat(this.terms.map((n=>n.outputRecipe(e,t))))},i.Extend.prototype.outputRecipe=function(e,t){return this.terms[0].outputRecipe(e,t)},i.Splice.prototype.outputRecipe=function(e,t){const n=this.terms.slice(0,this.expansionPos),r=this.terms.slice(this.expansionPos+1);return["splice",o(this,t),n.map((n=>n.outputRecipe(e,t))),r.map((n=>n.outputRecipe(e,t)))]},i.Seq.prototype.outputRecipe=function(e,t){return["seq",o(this,t)].concat(this.factors.map((n=>n.outputRecipe(e,t))))},i.Star.prototype.outputRecipe=i.Plus.prototype.outputRecipe=i.Opt.prototype.outputRecipe=i.Not.prototype.outputRecipe=i.Lookahead.prototype.outputRecipe=i.Lex.prototype.outputRecipe=function(e,t){return[this.constructor.name.toLowerCase(),o(this,t),this.expr.outputRecipe(e,t)]},i.Apply.prototype.outputRecipe=function(e,t){return["app",o(this,t),this.ruleName,this.args.map((n=>n.outputRecipe(e,t)))]},i.UnicodeChar.prototype.outputRecipe=function(e,t){return["unicodeChar",o(this,t),this.category]}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.introduceParams=r.abstract("introduceParams"),i.any.introduceParams=i.end.introduceParams=i.Terminal.prototype.introduceParams=i.Range.prototype.introduceParams=i.Param.prototype.introduceParams=i.UnicodeChar.prototype.introduceParams=function(e){return this},i.Alt.prototype.introduceParams=function(e){return this.terms.forEach(((t,n,r)=>{r[n]=t.introduceParams(e)})),this},i.Seq.prototype.introduceParams=function(e){return this.factors.forEach(((t,n,r)=>{r[n]=t.introduceParams(e)})),this},i.Iter.prototype.introduceParams=i.Not.prototype.introduceParams=i.Lookahead.prototype.introduceParams=i.Lex.prototype.introduceParams=function(e){return this.expr=this.expr.introduceParams(e),this},i.Apply.prototype.introduceParams=function(e){const t=e.indexOf(this.ruleName);if(t>=0){if(this.args.length>0)throw new Error("Parameterized rules cannot be passed as arguments to another rule.");return new i.Param(t).withSource(this.source)}return this.args.forEach(((t,n,r)=>{r[n]=t.introduceParams(e)})),this}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.isNullable=function(e){return this._isNullable(e,Object.create(null))},i.PExpr.prototype._isNullable=r.abstract("_isNullable"),i.any._isNullable=i.Range.prototype._isNullable=i.Param.prototype._isNullable=i.Plus.prototype._isNullable=i.UnicodeChar.prototype._isNullable=function(e,t){return!1},i.end._isNullable=function(e,t){return!0},i.Terminal.prototype._isNullable=function(e,t){return"string"==typeof this.obj&&""===this.obj},i.Alt.prototype._isNullable=function(e,t){return 0===this.terms.length||this.terms.some((n=>n._isNullable(e,t)))},i.Seq.prototype._isNullable=function(e,t){return this.factors.every((n=>n._isNullable(e,t)))},i.Star.prototype._isNullable=i.Opt.prototype._isNullable=i.Not.prototype._isNullable=i.Lookahead.prototype._isNullable=function(e,t){return!0},i.Lex.prototype._isNullable=function(e,t){return this.expr._isNullable(e,t)},i.Apply.prototype._isNullable=function(e,t){const n=this.toMemoKey();if(!Object.prototype.hasOwnProperty.call(t,n)){const r=e.rules[this.ruleName].body.substituteParams(this.args);t[n]=!1,t[n]=r._isNullable(e,t)}return t[n]}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.substituteParams=r.abstract("substituteParams"),i.any.substituteParams=i.end.substituteParams=i.Terminal.prototype.substituteParams=i.Range.prototype.substituteParams=i.UnicodeChar.prototype.substituteParams=function(e){return this},i.Param.prototype.substituteParams=function(e){return e[this.index]},i.Alt.prototype.substituteParams=function(e){return new i.Alt(this.terms.map((t=>t.substituteParams(e))))},i.Seq.prototype.substituteParams=function(e){return new i.Seq(this.factors.map((t=>t.substituteParams(e))))},i.Iter.prototype.substituteParams=i.Not.prototype.substituteParams=i.Lookahead.prototype.substituteParams=i.Lex.prototype.substituteParams=function(e){return new this.constructor(this.expr.substituteParams(e))},i.Apply.prototype.substituteParams=function(e){if(0===this.args.length)return this;{const t=this.args.map((t=>t.substituteParams(e)));return new i.Apply(this.ruleName,t)}}},function(e,t,n){const r=n(0),i=n(1),{copyWithoutDuplicates:o}=r;function a(e){return/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(e)}function s(e){const t=Object.create(null);e.forEach((e=>{t[e]=(t[e]||0)+1})),Object.keys(t).forEach((n=>{if(t[n]<=1)return;let r=1;e.forEach(((t,i)=>{t===n&&(e[i]=t+"_"+r++)}))}))}i.PExpr.prototype.toArgumentNameList=r.abstract("toArgumentNameList"),i.any.toArgumentNameList=function(e,t){return["any"]},i.end.toArgumentNameList=function(e,t){return["end"]},i.Terminal.prototype.toArgumentNameList=function(e,t){return"string"==typeof this.obj&&/^[_a-zA-Z0-9]+$/.test(this.obj)?["_"+this.obj]:["$"+e]},i.Range.prototype.toArgumentNameList=function(e,t){let n=this.from+"_to_"+this.to;return a(n)||(n="_"+n),a(n)||(n="$"+e),[n]},i.Alt.prototype.toArgumentNameList=function(e,t){const n=this.terms.map((t=>t.toArgumentNameList(e,!0))),r=[],i=n[0].length;for(let a=0;a<i;a++){const e=[];for(let r=0;r<this.terms.length;r++)e.push(n[r][a]);const t=o(e);r.push(t.join("_or_"))}return t||s(r),r},i.Seq.prototype.toArgumentNameList=function(e,t){let n=[];return this.factors.forEach((t=>{const r=t.toArgumentNameList(e,!0);n=n.concat(r),e+=r.length})),t||s(n),n},i.Iter.prototype.toArgumentNameList=function(e,t){const n=this.expr.toArgumentNameList(e,t).map((e=>"s"===e[e.length-1]?e+"es":e+"s"));return t||s(n),n},i.Opt.prototype.toArgumentNameList=function(e,t){return this.expr.toArgumentNameList(e,t).map((e=>"opt"+e[0].toUpperCase()+e.slice(1)))},i.Not.prototype.toArgumentNameList=function(e,t){return[]},i.Lookahead.prototype.toArgumentNameList=i.Lex.prototype.toArgumentNameList=function(e,t){return this.expr.toArgumentNameList(e,t)},i.Apply.prototype.toArgumentNameList=function(e,t){return[this.ruleName]},i.UnicodeChar.prototype.toArgumentNameList=function(e,t){return["$"+e]},i.Param.prototype.toArgumentNameList=function(e,t){return["param"+this.index]}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.toDisplayString=r.abstract("toDisplayString"),i.Alt.prototype.toDisplayString=i.Seq.prototype.toDisplayString=function(){return this.source?this.source.trimmed().contents:"["+this.constructor.name+"]"},i.any.toDisplayString=i.end.toDisplayString=i.Iter.prototype.toDisplayString=i.Not.prototype.toDisplayString=i.Lookahead.prototype.toDisplayString=i.Lex.prototype.toDisplayString=i.Terminal.prototype.toDisplayString=i.Range.prototype.toDisplayString=i.Param.prototype.toDisplayString=function(){return this.toString()},i.Apply.prototype.toDisplayString=function(){if(this.args.length>0){const e=this.args.map((e=>e.toDisplayString()));return this.ruleName+"<"+e.join(",")+">"}return this.ruleName},i.UnicodeChar.prototype.toDisplayString=function(){return"Unicode ["+this.category+"] character"}},function(e,t,n){const r=n(10),i=n(0),o=n(1);o.PExpr.prototype.toFailure=i.abstract("toFailure"),o.any.toFailure=function(e){return new r(this,"any object","description")},o.end.toFailure=function(e){return new r(this,"end of input","description")},o.Terminal.prototype.toFailure=function(e){return new r(this,this.obj,"string")},o.Range.prototype.toFailure=function(e){return new r(this,JSON.stringify(this.from)+".."+JSON.stringify(this.to),"code")},o.Not.prototype.toFailure=function(e){const t=this.expr===o.any?"nothing":"not "+this.expr.toFailure(e);return new r(this,t,"description")},o.Lookahead.prototype.toFailure=function(e){return this.expr.toFailure(e)},o.Apply.prototype.toFailure=function(e){let t=e.rules[this.ruleName].description;return t||(t=(/^[aeiouAEIOU]/.test(this.ruleName)?"an":"a")+" "+this.ruleName),new r(this,t,"description")},o.UnicodeChar.prototype.toFailure=function(e){return new r(this,"a Unicode ["+this.category+"] character","description")},o.Alt.prototype.toFailure=function(e){const t="("+this.terms.map((t=>t.toFailure(e))).join(" or ")+")";return new r(this,t,"description")},o.Seq.prototype.toFailure=function(e){const t="("+this.factors.map((t=>t.toFailure(e))).join(" ")+")";return new r(this,t,"description")},o.Iter.prototype.toFailure=function(e){const t="("+this.expr.toFailure(e)+this.operator+")";return new r(this,t,"description")}},function(e,t,n){const r=n(0),i=n(1);i.PExpr.prototype.toString=r.abstract("toString"),i.any.toString=function(){return"any"},i.end.toString=function(){return"end"},i.Terminal.prototype.toString=function(){return JSON.stringify(this.obj)},i.Range.prototype.toString=function(){return JSON.stringify(this.from)+".."+JSON.stringify(this.to)},i.Param.prototype.toString=function(){return"$"+this.index},i.Lex.prototype.toString=function(){return"#("+this.expr.toString()+")"},i.Alt.prototype.toString=function(){return 1===this.terms.length?this.terms[0].toString():"("+this.terms.map((e=>e.toString())).join(" | ")+")"},i.Seq.prototype.toString=function(){return 1===this.factors.length?this.factors[0].toString():"("+this.factors.map((e=>e.toString())).join(" ")+")"},i.Iter.prototype.toString=function(){return this.expr+this.operator},i.Not.prototype.toString=function(){return"~"+this.expr},i.Lookahead.prototype.toString=function(){return"&"+this.expr},i.Apply.prototype.toString=function(){if(this.args.length>0){const e=this.args.map((e=>e.toString()));return this.ruleName+"<"+e.join(",")+">"}return this.ruleName},i.UnicodeChar.prototype.toString=function(){return"\\p{"+this.category+"}"}},function(e,t,n){const r=n(32),i=n(1);function o(e){this.grammar=e,this.memoTable=[],this.input=""}o.prototype.getInput=function(){return this.input},o.prototype.setInput=function(e){return this.input!==e&&this.replaceInputRange(0,this.input.length,e),this},o.prototype.replaceInputRange=function(e,t,n){const r=this.input;if(e<0||e>r.length||t<0||t>r.length||e>t)throw new Error("Invalid indices: "+e+" and "+t);this.input=r.slice(0,e)+n+r.slice(t);const i=this.memoTable.slice(t);this.memoTable.length=e;for(let o=0;o<n.length;o++)this.memoTable.push(void 0);i.forEach((function(e){this.memoTable.push(e)}),this);for(let o=0;o<e;o++){const t=this.memoTable[o];t&&t.clearObsoleteEntries(o,e)}return this},o.prototype.match=function(e){return this._match(this._getStartExpr(e),!1)},o.prototype.trace=function(e){return this._match(this._getStartExpr(e),!0)},o.prototype._match=function(e,t,n){const i=new r(this,e,n);return t?i.getTrace():i.getMatchResult()},o.prototype._getStartExpr=function(e){const t=e||this.grammar.defaultStartRule;if(!t)throw new Error("Missing start rule argument -- the grammar has no default start rule.");const n=this.grammar.parseApplication(t);return new i.Seq([n,i.end])},e.exports=o},function(e,t,n){const r=n(8),i=n(9),o=n(33),a=n(12),s=n(1),u=new s.Apply("spaces");function c(e,t,n){this.matcher=e,this.startExpr=t,this.grammar=e.grammar,this.input=e.input,this.inputStream=new r(e.input),this.memoTable=e.memoTable,this._bindings=[],this._bindingOffsets=[],this._applicationStack=[],this._posStack=[0],this.inLexifiedContextStack=[!1],this.rightmostFailurePosition=-1,this._rightmostFailurePositionStack=[],this._recordedFailuresStack=[],void 0!==n&&(this.positionToRecordFailures=n,this.recordedFailures=Object.create(null))}c.prototype={posToOffset(e){return e-this._posStack[this._posStack.length-1]},enterApplication(e,t){this._posStack.push(this.inputStream.pos),this._applicationStack.push(t),this.inLexifiedContextStack.push(!1),e.enter(t),this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this.rightmostFailurePosition=-1},exitApplication(e,t){const n=this._posStack.pop();this._applicationStack.pop(),this.inLexifiedContextStack.pop(),e.exit(),this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,this._rightmostFailurePositionStack.pop()),t&&this.pushBinding(t,n)},enterLexifiedContext(){this.inLexifiedContextStack.push(!0)},exitLexifiedContext(){this.inLexifiedContextStack.pop()},currentApplication(){return this._applicationStack[this._applicationStack.length-1]},inSyntacticContext(){if("string"!=typeof this.inputStream.source)return!1;const e=this.currentApplication();return e?e.isSyntactic()&&!this.inLexifiedContext():this.startExpr.factors[0].isSyntactic()},inLexifiedContext(){return this.inLexifiedContextStack[this.inLexifiedContextStack.length-1]},skipSpaces(){return this.pushFailuresInfo(),this.eval(u),this.popBinding(),this.popFailuresInfo(),this.inputStream.pos},skipSpacesIfInSyntacticContext(){return this.inSyntacticContext()?this.skipSpaces():this.inputStream.pos},maybeSkipSpacesBefore(e){return e instanceof s.Apply&&e.isSyntactic()?this.skipSpaces():e.allowsSkippingPrecedingSpace()&&e!==u?this.skipSpacesIfInSyntacticContext():this.inputStream.pos},pushBinding(e,t){this._bindings.push(e),this._bindingOffsets.push(this.posToOffset(t))},popBinding(){this._bindings.pop(),this._bindingOffsets.pop()},numBindings(){return this._bindings.length},truncateBindings(e){for(;this._bindings.length>e;)this.popBinding()},getCurrentPosInfo(){return this.getPosInfo(this.inputStream.pos)},getPosInfo(e){let t=this.memoTable[e];return t||(t=this.memoTable[e]=new o),t},processFailure(e,t){if(this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,e),this.recordedFailures&&e===this.positionToRecordFailures){const e=this.currentApplication();e&&(t=t.substituteParams(e.args)),this.recordFailure(t.toFailure(this.grammar),!1)}},recordFailure(e,t){const n=e.toKey();this.recordedFailures[n]?this.recordedFailures[n].isFluffy()&&!e.isFluffy()&&this.recordedFailures[n].clearFluffy():this.recordedFailures[n]=t?e.clone():e},recordFailures(e,t){Object.keys(e).forEach((n=>{this.recordFailure(e[n],t)}))},cloneRecordedFailures(){if(!this.recordedFailures)return;const e=Object.create(null);return Object.keys(this.recordedFailures).forEach((t=>{e[t]=this.recordedFailures[t].clone()})),e},getRightmostFailurePosition(){return this.rightmostFailurePosition},_getRightmostFailureOffset(){return this.rightmostFailurePosition>=0?this.posToOffset(this.rightmostFailurePosition):-1},getMemoizedTraceEntry(e,t){const n=this.memoTable[e];if(n&&t.ruleName){const e=n.memo[t.toMemoKey()];if(e&&e.traceEntry){const n=e.traceEntry.cloneWithExpr(t);return n.isMemoized=!0,n}}return null},getTraceEntry(e,t,n,r){if(t instanceof s.Apply){const e=this.currentApplication(),n=e?e.args:[];t=t.substituteParams(n)}return this.getMemoizedTraceEntry(e,t)||new a(this.input,e,this.inputStream.pos,t,n,r,this.trace)},isTracing(){return!!this.trace},hasNecessaryInfo(e){return!(this.trace&&!e.traceEntry||this.recordedFailures&&this.inputStream.pos+e.rightmostFailureOffset===this.positionToRecordFailures&&!e.failuresAtRightmostPosition)},useMemoizedResult(e,t){this.trace&&this.trace.push(t.traceEntry);const n=this.inputStream.pos+t.rightmostFailureOffset;return this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,n),this.recordedFailures&&this.positionToRecordFailures===n&&t.failuresAtRightmostPosition&&this.recordFailures(t.failuresAtRightmostPosition,!0),this.inputStream.examinedLength=Math.max(this.inputStream.examinedLength,t.examinedLength+e),!!t.value&&(this.inputStream.pos+=t.matchLength,this.pushBinding(t.value,e),!0)},eval(e){const t=this.inputStream,n=this._bindings.length;let r;this.recordedFailures&&(r=this.recordedFailures,this.recordedFailures=Object.create(null));const i=t.pos,o=this.maybeSkipSpacesBefore(e);let a;this.trace&&(a=this.trace,this.trace=[]);const s=e.eval(this);if(this.trace){const t=this._bindings.slice(n),r=this.getTraceEntry(o,e,s,t);r.isImplicitSpaces=e===u,r.isRootNode=e===this.startExpr,a.push(r),this.trace=a}return s?this.recordedFailures&&t.pos===this.positionToRecordFailures&&Object.keys(this.recordedFailures).forEach((e=>{this.recordedFailures[e].makeFluffy()})):(t.pos=i,this.truncateBindings(n)),this.recordedFailures&&this.recordFailures(r,!1),s},getMatchResult(){let e;return this.eval(this.startExpr),this.recordedFailures&&(e=Object.keys(this.recordedFailures).map((e=>this.recordedFailures[e]))),new i(this.matcher,this.input,this.startExpr,this._bindings[0],this._bindingOffsets[0],this.rightmostFailurePosition,e)},getTrace(){this.trace=[];const e=this.getMatchResult(),t=this.trace[this.trace.length-1];return t.result=e,t},pushFailuresInfo(){this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this._recordedFailuresStack.push(this.recordedFailures)},popFailuresInfo(){this.rightmostFailurePosition=this._rightmostFailurePositionStack.pop(),this.recordedFailures=this._recordedFailuresStack.pop()}},e.exports=c},function(e,t,n){function r(){this.applicationMemoKeyStack=[],this.memo={},this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,this.currentLeftRecursion=void 0}r.prototype={isActive(e){return this.applicationMemoKeyStack.indexOf(e.toMemoKey())>=0},enter(e){this.applicationMemoKeyStack.push(e.toMemoKey())},exit(){this.applicationMemoKeyStack.pop()},startLeftRecursion(e,t){t.isLeftRecursion=!0,t.headApplication=e,t.nextLeftRecursion=this.currentLeftRecursion,this.currentLeftRecursion=t;const n=this.applicationMemoKeyStack,r=n.indexOf(e.toMemoKey())+1,i=n.slice(r);t.isInvolved=function(e){return i.indexOf(e)>=0},t.updateInvolvedApplicationMemoKeys=function(){for(let e=r;e<n.length;e++){const t=n[e];this.isInvolved(t)||i.push(t)}}},endLeftRecursion(){this.currentLeftRecursion=this.currentLeftRecursion.nextLeftRecursion},shouldUseMemoizedResult(e){if(!e.isLeftRecursion)return!0;const t=this.applicationMemoKeyStack;for(let n=0;n<t.length;n++){const r=t[n];if(e.isInvolved(r))return!1}return!0},memoize(e,t){return this.memo[e]=t,this.maxExaminedLength=Math.max(this.maxExaminedLength,t.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,t.rightmostFailureOffset),t},clearObsoleteEntries(e,t){if(e+this.maxExaminedLength<=t)return;const n=this.memo;this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,Object.keys(n).forEach((r=>{const i=n[r];e+i.examinedLength>t?delete n[r]:(this.maxExaminedLength=Math.max(this.maxExaminedLength,i.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,i.rightmostFailureOffset))}))}},e.exports=r},function(e,t,n){const r=n(8),i=n(6).IterationNode,o=n(9),a=n(0),s=n(2),u=n(3),c=[];let l,p;class f{constructor(e,t,n){this._node=e,this.source=t,this._baseInterval=n,e.isNonterminal()&&a.assert(t===n),this._childWrappers=[]}toString(){return"[semantics wrapper for "+this._node.grammar.name+"]"}toJSON(){return this.toString()}_forgetMemoizedResultFor(e){delete this._node[this._semantics.attributeKeys[e]],this.children.forEach((t=>{t._forgetMemoizedResultFor(e)}))}child(e){if(!(0<=e&&e<this._node.numChildren()))return;let t=this._childWrappers[e];if(!t){const n=this._node.childAt(e),r=this._node.childOffsets[e],i=this._baseInterval.subInterval(r,n.matchLength),o=n.isNonterminal()?i:this._baseInterval;t=this._childWrappers[e]=this._semantics.wrap(n,i,o)}return t}_children(){for(let e=0;e<this._node.numChildren();e++)this.child(e);return this._childWrappers}isIteration(){return this._node.isIteration()}isTerminal(){return this._node.isTerminal()}isNonterminal(){return this._node.isNonterminal()}isSyntactic(){return this.isNonterminal()&&this._node.isSyntactic()}isLexical(){return this.isNonterminal()&&this._node.isLexical()}isOptional(){return this._node.isOptional()}iteration(e){const t=e||[],n=t.map((e=>e._node)),r=new i(this._node.grammar,n,[],-1,!1),o=this._semantics.wrap(r,null,null);return o._childWrappers=t,o}get children(){return this._children()}get ctorName(){return this._node.ctorName}get interval(){throw new Error("The `interval` property is deprecated -- use `source` instead")}get numChildren(){return this._node.numChildren()}get primitiveValue(){if(this.isTerminal())return this._node.primitiveValue;throw new TypeError("tried to access the 'primitiveValue' attribute of a non-terminal CST node")}get sourceString(){return this.source.contents}}function d(e,t){const n=this;if(this.grammar=e,this.checkedActionDicts=!1,this.Wrapper=class extends(t?t.Wrapper:f){constructor(e,t,r){super(e,t,r),n.checkActionDictsIfHaventAlready(),this._semantics=n}},this.super=t,t){if(!e.equals(this.super.grammar)&&!e._inheritsFrom(this.super.grammar))throw new Error("Cannot extend a semantics for grammar '"+this.super.grammar.name+"' for use with grammar '"+e.name+"' (not a sub-grammar)");this.operations=Object.create(this.super.operations),this.attributes=Object.create(this.super.attributes),this.attributeKeys=Object.create(null);for(const e in this.attributes)Object.defineProperty(this.attributeKeys,e,{value:u.uniqueId(e)})}else this.operations=Object.create(null),this.attributes=Object.create(null),this.attributeKeys=Object.create(null)}function h(e,t){if(!l)return a.assert(-1===e.indexOf("(")),{name:e,formals:[]};const n=l.match(e,"operation"===t?"OperationSignature":"AttributeSignature");if(n.failed())throw new Error(n.message);return p(n).parse()}d.prototype.toString=function(){return"[semantics for "+this.grammar.name+"]"},d.prototype.checkActionDictsIfHaventAlready=function(){this.checkedActionDicts||(this.checkActionDicts(),this.checkedActionDicts=!0)},d.prototype.checkActionDicts=function(){let e;for(e in this.operations)this.operations[e].checkActionDict(this.grammar);for(e in this.attributes)this.attributes[e].checkActionDict(this.grammar)},d.prototype.toRecipe=function(e){function t(e){return e.super!==d.BuiltInSemantics._getSemantics()}let n="(function(g) {\n";if(t(this)){n+="  var semantics = "+this.super.toRecipe(!0)+"(g";const e=this.super.grammar;let t=this.grammar;for(;t!==e;)n+=".superGrammar",t=t.superGrammar;n+=");\n",n+="  return g.extendSemantics(semantics)"}else n+="  return g.createSemantics()";return["Operation","Attribute"].forEach((e=>{const r=this[e.toLowerCase()+"s"];Object.keys(r).forEach((i=>{const{actionDict:o,formals:a,builtInDefault:s}=r[i];let u,c=i;a.length>0&&(c+="("+a.join(", ")+")"),u=t(this)&&this.super[e.toLowerCase()+"s"][i]?"extend"+e:"add"+e,n+="\n    ."+u+"("+JSON.stringify(c)+", {";const l=[];Object.keys(o).forEach((e=>{if(o[e]!==s){let t=o[e].toString().trim();t=t.replace(/^.*\(/,"function("),l.push("\n      "+JSON.stringify(e)+": "+t)}})),n+=l.join(",")+"\n    })"}))})),n+=";\n  })",e||(n="(function() {\n  var grammar = this.fromRecipe("+this.grammar.toRecipe()+");\n  var semantics = "+n+"(grammar);\n  return semantics;\n});\n"),n},d.prototype.addOperationOrAttribute=function(e,t,n){const r=e+"s",i=h(t,e),o=i.name,a=i.formals;this.assertNewName(o,e);const l=(f=e,d=o,v=E,function(...e){const t=(this._semantics.operations[d]||this._semantics.attributes[d]).formals.map((e=>this.args[e]));if(this.isIteration()||1!==e.length)throw s.missingSemanticAction(this.ctorName,d,f,c);return v.apply(e[0],t)}),p={_default:l};var f,d,v;Object.keys(n).forEach((e=>{p[e]=n[e]}));const y="operation"===e?new m(o,a,p,l):new g(o,p,l);function E(){const t=this._semantics[r][o];if(arguments.length!==t.formals.length)throw new Error("Invalid number of arguments passed to "+o+" "+e+" (expected "+t.formals.length+", got "+arguments.length+")");const n=Object.create(null);for(let e=0;e<arguments.length;e++)n[t.formals[e]]=arguments[e];const i=this.args;this.args=n;const a=t.execute(this._semantics,this);return this.args=i,a}y.checkActionDict(this.grammar),this[r][o]=y,"operation"===e?(this.Wrapper.prototype[o]=E,this.Wrapper.prototype[o].toString=function(){return"["+o+" operation]"}):(Object.defineProperty(this.Wrapper.prototype,o,{get:E,configurable:!0}),Object.defineProperty(this.attributeKeys,o,{value:u.uniqueId(o)}))},d.prototype.extendOperationOrAttribute=function(e,t,n){const r=e+"s";if(h(t,"attribute"),!this.super||!(t in this.super[r]))throw new Error("Cannot extend "+e+" '"+t+"': did not inherit an "+e+" with that name");if(Object.prototype.hasOwnProperty.call(this[r],t))throw new Error("Cannot extend "+e+" '"+t+"' again");const i=this[r][t].formals,o=this[r][t].actionDict,a=Object.create(o);Object.keys(n).forEach((e=>{a[e]=n[e]})),this[r][t]="operation"===e?new m(t,i,a):new g(t,a),this[r][t].checkActionDict(this.grammar)},d.prototype.assertNewName=function(e,t){if(f.prototype.hasOwnProperty(e))throw new Error("Cannot add "+t+" '"+e+"': that's a reserved name");if(e in this.operations)throw new Error("Cannot add "+t+" '"+e+"': an operation with that name already exists");if(e in this.attributes)throw new Error("Cannot add "+t+" '"+e+"': an attribute with that name already exists")},d.prototype.wrap=function(e,t,n){const r=n||t;return e instanceof this.Wrapper?e:new this.Wrapper(e,t,r)},d.createSemantics=function(e,t){const n=new d(e,void 0!==t?t:d.BuiltInSemantics._getSemantics()),i=function(t){if(!(t instanceof o))throw new TypeError("Semantics expected a MatchResult, but got "+a.unexpectedObjToString(t));if(t.failed())throw new TypeError("cannot apply Semantics to "+t.toString());const i=t._cst;if(i.grammar!==e)throw new Error("Cannot use a MatchResult from grammar '"+i.grammar.name+"' with a semantics for '"+e.name+"'");const s=new r(t.input);return n.wrap(i,s.interval(t._cstOffset,t.input.length))};return i.addOperation=function(e,t){return n.addOperationOrAttribute("operation",e,t),i},i.extendOperation=function(e,t){return n.extendOperationOrAttribute("operation",e,t),i},i.addAttribute=function(e,t){return n.addOperationOrAttribute("attribute",e,t),i},i.extendAttribute=function(e,t){return n.extendOperationOrAttribute("attribute",e,t),i},i._getActionDict=function(t){const r=n.operations[t]||n.attributes[t];if(!r)throw new Error('"'+t+'" is not a valid operation or attribute name in this semantics for "'+e.name+'"');return r.actionDict},i._remove=function(e){let t;return e in n.operations?(t=n.operations[e],delete n.operations[e]):e in n.attributes&&(t=n.attributes[e],delete n.attributes[e]),delete n.Wrapper.prototype[e],t},i.getOperationNames=function(){return Object.keys(n.operations)},i.getAttributeNames=function(){return Object.keys(n.attributes)},i.getGrammar=function(){return n.grammar},i.toRecipe=function(e){return n.toRecipe(e)},i.toString=n.toString.bind(n),i._getSemantics=function(){return n},i};class m{constructor(e,t,n,r){this.name=e,this.formals=t,this.actionDict=n,this.builtInDefault=r}checkActionDict(e){e._checkTopDownActionDict(this.typeName,this.name,this.actionDict)}execute(e,t){try{const e=t._node.ctorName;let n=this.actionDict[e];return n?(c.push([this,e]),n.apply(t,t._children())):t.isNonterminal()&&(n=this.actionDict._nonterminal,n)?(c.push([this,"_nonterminal",e]),n.apply(t,t._children())):(c.push([this,"default action",e]),this.actionDict._default.apply(t,t._children()))}finally{c.pop()}}}m.prototype.typeName="operation";class g extends m{constructor(e,t,n){super(e,[],t,n)}execute(e,t){const n=t._node,r=e.attributeKeys[this.name];return n.hasOwnProperty(r)||(n[r]=m.prototype.execute.call(this,e,t)),n[r]}}g.prototype.typeName="attribute",u.awaitBuiltInRules((e=>{const t=n(35);var r;!function(e){const t={empty(){return this.iteration()},nonEmpty(e,t,n){return this.iteration([e].concat(n.children))}};d.BuiltInSemantics=d.createSemantics(e,null).addOperation("asIteration",{emptyListOf:t.empty,nonemptyListOf:t.nonEmpty,EmptyListOf:t.empty,NonemptyListOf:t.nonEmpty})}(e),p=(r=t).createSemantics().addOperation("parse",{AttributeSignature:e=>({name:e.parse(),formals:[]}),OperationSignature:(e,t)=>({name:e.parse(),formals:t.children.map((e=>e.parse()))[0]||[]}),Formals:(e,t,n)=>t.asIteration().children.map((e=>e.parse())),name(e,t){return this.sourceString}}),l=r})),e.exports=d},function(e,t,n){var r=n(4);e.exports=r.makeRecipe(["grammar",{source:'OperationsAndAttributes {\n\n  AttributeSignature =\n    name\n\n  OperationSignature =\n    name Formals?\n\n  Formals\n    = "(" ListOf<name, ","> ")"\n\n  name  (a name)\n    = nameFirst nameRest*\n\n  nameFirst\n    = "_"\n    | letter\n\n  nameRest\n    = "_"\n    | alnum\n\n}'},"OperationsAndAttributes",null,"AttributeSignature",{AttributeSignature:["define",{sourceInterval:[29,58]},null,[],["app",{sourceInterval:[54,58]},"name",[]]],OperationSignature:["define",{sourceInterval:[62,100]},null,[],["seq",{sourceInterval:[87,100]},["app",{sourceInterval:[87,91]},"name",[]],["opt",{sourceInterval:[92,100]},["app",{sourceInterval:[92,99]},"Formals",[]]]]],Formals:["define",{sourceInterval:[104,143]},null,[],["seq",{sourceInterval:[118,143]},["terminal",{sourceInterval:[118,121]},"("],["app",{sourceInterval:[122,139]},"ListOf",[["app",{sourceInterval:[129,133]},"name",[]],["terminal",{sourceInterval:[135,138]},","]]],["terminal",{sourceInterval:[140,143]},")"]]],name:["define",{sourceInterval:[147,187]},"a name",[],["seq",{sourceInterval:[168,187]},["app",{sourceInterval:[168,177]},"nameFirst",[]],["star",{sourceInterval:[178,187]},["app",{sourceInterval:[178,186]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[191,223]},null,[],["alt",{sourceInterval:[207,223]},["terminal",{sourceInterval:[207,210]},"_"],["app",{sourceInterval:[217,223]},"letter",[]]]],nameRest:["define",{sourceInterval:[227,257]},null,[],["alt",{sourceInterval:[242,257]},["terminal",{sourceInterval:[242,245]},"_"],["app",{sourceInterval:[252,257]},"alnum",[]]]]}])},function(e,t,n){const r=n(5),i=n(8),o=n(0),a=n(2),s=n(1);function u(e){this.name=e}u.prototype.sourceInterval=function(e,t){return this.source.subInterval(e,t-e)},u.prototype.ensureSuperGrammar=function(){return this.superGrammar||this.withSuperGrammar("BuiltInRules"===this.name?r.ProtoBuiltInRules:r.BuiltInRules),this.superGrammar},u.prototype.ensureSuperGrammarRuleForOverriding=function(e,t){const n=this.ensureSuperGrammar().rules[e];if(!n)throw a.cannotOverrideUndeclaredRule(e,this.superGrammar.name,t);return n},u.prototype.installOverriddenOrExtendedRule=function(e,t,n,r){const i=o.getDuplicates(t);if(i.length>0)throw a.duplicateParameterNames(e,i,r);const s=this.ensureSuperGrammar().rules[e],u=s.formals,c=u?u.length:0;if(t.length!==c)throw a.wrongNumberOfParameters(e,c,t.length,r);return this.install(e,t,n,s.description,r)},u.prototype.install=function(e,t,n,r,i){return this.rules[e]={body:n.introduceParams(t),formals:t,description:r,source:i},this},u.prototype.withSuperGrammar=function(e){if(this.superGrammar)throw new Error("the super grammar of a GrammarDecl cannot be set more than once");return this.superGrammar=e,this.rules=Object.create(e.rules),e.isBuiltIn()||(this.defaultStartRule=e.defaultStartRule),this},u.prototype.withDefaultStartRule=function(e){return this.defaultStartRule=e,this},u.prototype.withSource=function(e){return this.source=new i(e).interval(0,e.length),this},u.prototype.build=function(){const e=new r(this.name,this.ensureSuperGrammar(),this.rules,this.defaultStartRule),t=[];let n=!1;return Object.keys(e.rules).forEach((r=>{const i=e.rules[r].body;try{i.assertChoicesHaveUniformArity(r)}catch(o){t.push(o)}try{i.assertAllApplicationsAreValid(r,e)}catch(o){t.push(o),n=!0}})),n||Object.keys(e.rules).forEach((n=>{const r=e.rules[n].body;try{r.assertIteratedExprsAreNotNullable(e,[])}catch(i){t.push(i)}})),t.length>0&&a.throwErrors(t),this.source&&(e.source=this.source),e},u.prototype.define=function(e,t,n,r,i){if(this.ensureSuperGrammar(),this.superGrammar.rules[e])throw a.duplicateRuleDeclaration(e,this.name,this.superGrammar.name,i);if(this.rules[e])throw a.duplicateRuleDeclaration(e,this.name,this.name,i);const s=o.getDuplicates(t);if(s.length>0)throw a.duplicateParameterNames(e,s,i);return this.install(e,t,n,r,i)},u.prototype.override=function(e,t,n,r,i){return this.ensureSuperGrammarRuleForOverriding(e,i),this.installOverriddenOrExtendedRule(e,t,n,i),this},u.prototype.extend=function(e,t,n,r,i){if(!this.ensureSuperGrammar().rules[e])throw a.cannotExtendUndeclaredRule(e,this.superGrammar.name,i);const o=new s.Extend(this.superGrammar,e,n);return o.source=n.source,this.installOverriddenOrExtendedRule(e,t,o,i),this},e.exports=u},function(e,t,n){e.exports="16.0.0"},function(e,t,n){e.exports={VisitorFamily:n(39),semanticsForToAST:n(13).semantics,toAST:n(13).helper}},function(e,t,n){const r=n(0).assert;function i(e,t,n){return n(t[e])}function o(e,t,n){return t[e].map(n)}function a(e){const t=e.split(/ ?\[\]/);return 2===t.length?o.bind(null,t[0]):i.bind(null,e)}function s(e,t,n){return e.map((e=>e(t,n)))}function u(e){return/^[a-zA-Z_][0-9a-zA-Z_]*$/.test(e)}function c(e){return e.trim()}function l(e){this._shapes=e.shapes,this._getTag=e.getTag,this.Adapter=function(e,t){this._adaptee=e,this._family=t},this.Adapter.prototype.valueOf=function(){throw new Error("heeey!")},this.operations={},this._arities=Object.create(null),this._getChildren=Object.create(null),Object.keys(this._shapes).forEach((e=>{const t=this._shapes[e];var n;this._getChildren[e]="string"==typeof(n=t)?s.bind(null,[a(n)]):Array.isArray(n)?s.bind(null,n.map(a)):(r("function"==typeof n,"Expected a string, Array, or function"),r(2===n.length,"Expected a function of arity 2, got "+n.length),n),"function"!=typeof t&&(this._arities[e]=Array.isArray(t)?t.length:1)})),this._wrap=e=>new this.Adapter(e,this)}l.prototype.wrap=function(e){return this._wrap(e)},l.prototype._checkActionDict=function(e){Object.keys(e).forEach((t=>{r(t in this._getChildren,"Unrecognized action name '"+t+"'");const n=e[t];if(r("function"==typeof n,"Key '"+t+"': expected function, got "+n),t in this._arities){const n=this._arities[t],i=e[t].length;r(i===n,"Action '"+t+"' has the wrong arity: expected "+n+", got "+i)}}))},l.prototype.addOperation=function(e,t){const n=function(e){const t=e.split(/[()]/).map(c);if(3===t.length&&""===t[2]){const e=t[0];let n=[];if(t[1].length>0&&(n=t[1].split(",").map(c)),u(e)&&n.every(u))return{name:e,formals:n}}throw new Error("Invalid operation signature: "+e)}(e),i=n.name;this._checkActionDict(t),this.operations[i]={name:i,formals:n.formals,actions:t};const o=this;return this.Adapter.prototype[i]=function(){const e=o._getTag(this._adaptee);r(e in o._getChildren,"getTag returned unrecognized tag '"+e+"'"),r(e in t,"No action for '"+e+"' in operation '"+i+"'");const a=Object.create(null);for(let t=0;t<arguments.length;t++)a[n.formals[t]]=arguments[t];const s=this.args;this.args=a;const u=t[e].apply(this,o._getChildren[e](this._adaptee,o._wrap));return this.args=s,u},this},e.exports=l},function(e,t,n){var r=n(4);e.exports=r.makeRecipe(["grammar",{source:'BuiltInRules {\n\n  alnum  (an alpha-numeric character)\n    = letter\n    | digit\n\n  letter  (a letter)\n    = lower\n    | upper\n    | unicodeLtmo\n\n  digit  (a digit)\n    = "0".."9"\n\n  hexDigit  (a hexadecimal digit)\n    = digit\n    | "a".."f"\n    | "A".."F"\n\n  ListOf<elem, sep>\n    = NonemptyListOf<elem, sep>\n    | EmptyListOf<elem, sep>\n\n  NonemptyListOf<elem, sep>\n    = elem (sep elem)*\n\n  EmptyListOf<elem, sep>\n    = /* nothing */\n\n  listOf<elem, sep>\n    = nonemptyListOf<elem, sep>\n    | emptyListOf<elem, sep>\n\n  nonemptyListOf<elem, sep>\n    = elem (sep elem)*\n\n  emptyListOf<elem, sep>\n    = /* nothing */\n\n}'},"BuiltInRules",null,null,{alnum:["define",{sourceInterval:[18,78]},"an alpha-numeric character",[],["alt",{sourceInterval:[60,78]},["app",{sourceInterval:[60,66]},"letter",[]],["app",{sourceInterval:[73,78]},"digit",[]]]],letter:["define",{sourceInterval:[82,142]},"a letter",[],["alt",{sourceInterval:[107,142]},["app",{sourceInterval:[107,112]},"lower",[]],["app",{sourceInterval:[119,124]},"upper",[]],["app",{sourceInterval:[131,142]},"unicodeLtmo",[]]]],digit:["define",{sourceInterval:[146,177]},"a digit",[],["range",{sourceInterval:[169,177]},"0","9"]],hexDigit:["define",{sourceInterval:[181,254]},"a hexadecimal digit",[],["alt",{sourceInterval:[219,254]},["app",{sourceInterval:[219,224]},"digit",[]],["range",{sourceInterval:[231,239]},"a","f"],["range",{sourceInterval:[246,254]},"A","F"]]],ListOf:["define",{sourceInterval:[258,336]},null,["elem","sep"],["alt",{sourceInterval:[282,336]},["app",{sourceInterval:[282,307]},"NonemptyListOf",[["param",{sourceInterval:[297,301]},0],["param",{sourceInterval:[303,306]},1]]],["app",{sourceInterval:[314,336]},"EmptyListOf",[["param",{sourceInterval:[326,330]},0],["param",{sourceInterval:[332,335]},1]]]]],NonemptyListOf:["define",{sourceInterval:[340,388]},null,["elem","sep"],["seq",{sourceInterval:[372,388]},["param",{sourceInterval:[372,376]},0],["star",{sourceInterval:[377,388]},["seq",{sourceInterval:[378,386]},["param",{sourceInterval:[378,381]},1],["param",{sourceInterval:[382,386]},0]]]]],EmptyListOf:["define",{sourceInterval:[392,434]},null,["elem","sep"],["seq",{sourceInterval:[438,438]}]],listOf:["define",{sourceInterval:[438,516]},null,["elem","sep"],["alt",{sourceInterval:[462,516]},["app",{sourceInterval:[462,487]},"nonemptyListOf",[["param",{sourceInterval:[477,481]},0],["param",{sourceInterval:[483,486]},1]]],["app",{sourceInterval:[494,516]},"emptyListOf",[["param",{sourceInterval:[506,510]},0],["param",{sourceInterval:[512,515]},1]]]]],nonemptyListOf:["define",{sourceInterval:[520,568]},null,["elem","sep"],["seq",{sourceInterval:[552,568]},["param",{sourceInterval:[552,556]},0],["star",{sourceInterval:[557,568]},["seq",{sourceInterval:[558,566]},["param",{sourceInterval:[558,561]},1],["param",{sourceInterval:[562,566]},0]]]]],emptyListOf:["define",{sourceInterval:[572,614]},null,["elem","sep"],["seq",{sourceInterval:[616,616]}]]}])},function(e,t,n){var r=n(4);e.exports=r.makeRecipe(["grammar",{source:'Ohm {\n\n  Grammars\n    = Grammar*\n\n  Grammar\n    = ident SuperGrammar? "{" Rule* "}"\n\n  SuperGrammar\n    = "<:" ident\n\n  Rule\n    = ident Formals? ruleDescr? "="  RuleBody  -- define\n    | ident Formals?            ":=" OverrideRuleBody  -- override\n    | ident Formals?            "+=" RuleBody  -- extend\n\n  RuleBody\n    = "|"? NonemptyListOf<TopLevelTerm, "|">\n\n  TopLevelTerm\n    = Seq caseName  -- inline\n    | Seq\n\n  OverrideRuleBody\n    = "|"? NonemptyListOf<OverrideTopLevelTerm, "|">\n\n  OverrideTopLevelTerm\n    = "..."  -- superSplice\n    | TopLevelTerm\n\n  Formals\n    = "<" ListOf<ident, ","> ">"\n\n  Params\n    = "<" ListOf<Seq, ","> ">"\n\n  Alt\n    = NonemptyListOf<Seq, "|">\n\n  Seq\n    = Iter*\n\n  Iter\n    = Pred "*"  -- star\n    | Pred "+"  -- plus\n    | Pred "?"  -- opt\n    | Pred\n\n  Pred\n    = "~" Lex  -- not\n    | "&" Lex  -- lookahead\n    | Lex\n\n  Lex\n    = "#" Base  -- lex\n    | Base\n\n  Base\n    = ident Params? ~(ruleDescr? "=" | ":=" | "+=")  -- application\n    | oneCharTerminal ".." oneCharTerminal           -- range\n    | terminal                                       -- terminal\n    | "(" Alt ")"                                    -- paren\n\n  ruleDescr  (a rule description)\n    = "(" ruleDescrText ")"\n\n  ruleDescrText\n    = (~")" any)*\n\n  caseName\n    = "--" (~"\\n" space)* name (~"\\n" space)* ("\\n" | &"}")\n\n  name  (a name)\n    = nameFirst nameRest*\n\n  nameFirst\n    = "_"\n    | letter\n\n  nameRest\n    = "_"\n    | alnum\n\n  ident  (an identifier)\n    = name\n\n  terminal\n    = "\\"" terminalChar* "\\""\n\n  oneCharTerminal\n    = "\\"" terminalChar "\\""\n\n  terminalChar\n    = escapeChar\n    | ~"\\\\" ~"\\"" ~"\\n" any\n\n  escapeChar  (an escape sequence)\n    = "\\\\\\\\"                                     -- backslash\n    | "\\\\\\""                                     -- doubleQuote\n    | "\\\\\\\'"                                     -- singleQuote\n    | "\\\\b"                                      -- backspace\n    | "\\\\n"                                      -- lineFeed\n    | "\\\\r"                                      -- carriageReturn\n    | "\\\\t"                                      -- tab\n    | "\\\\u" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\n    | "\\\\x" hexDigit hexDigit                    -- hexEscape\n\n  space\n   += comment\n\n  comment\n    = "//" (~"\\n" any)* &("\\n" | end)  -- singleLine\n    | "/*" (~"*/" any)* "*/"  -- multiLine\n\n  tokens = token*\n\n  token = caseName | comment | ident | operator | punctuation | terminal | any\n\n  operator = "<:" | "=" | ":=" | "+=" | "*" | "+" | "?" | "~" | "&"\n\n  punctuation = "<" | ">" | "," | "--"\n}'},"Ohm",null,"Grammars",{Grammars:["define",{sourceInterval:[9,32]},null,[],["star",{sourceInterval:[24,32]},["app",{sourceInterval:[24,31]},"Grammar",[]]]],Grammar:["define",{sourceInterval:[36,83]},null,[],["seq",{sourceInterval:[50,83]},["app",{sourceInterval:[50,55]},"ident",[]],["opt",{sourceInterval:[56,69]},["app",{sourceInterval:[56,68]},"SuperGrammar",[]]],["terminal",{sourceInterval:[70,73]},"{"],["star",{sourceInterval:[74,79]},["app",{sourceInterval:[74,78]},"Rule",[]]],["terminal",{sourceInterval:[80,83]},"}"]]],SuperGrammar:["define",{sourceInterval:[87,116]},null,[],["seq",{sourceInterval:[106,116]},["terminal",{sourceInterval:[106,110]},"<:"],["app",{sourceInterval:[111,116]},"ident",[]]]],Rule_define:["define",{sourceInterval:[131,181]},null,[],["seq",{sourceInterval:[131,170]},["app",{sourceInterval:[131,136]},"ident",[]],["opt",{sourceInterval:[137,145]},["app",{sourceInterval:[137,144]},"Formals",[]]],["opt",{sourceInterval:[146,156]},["app",{sourceInterval:[146,155]},"ruleDescr",[]]],["terminal",{sourceInterval:[157,160]},"="],["app",{sourceInterval:[162,170]},"RuleBody",[]]]],Rule_override:["define",{sourceInterval:[188,248]},null,[],["seq",{sourceInterval:[188,235]},["app",{sourceInterval:[188,193]},"ident",[]],["opt",{sourceInterval:[194,202]},["app",{sourceInterval:[194,201]},"Formals",[]]],["terminal",{sourceInterval:[214,218]},":="],["app",{sourceInterval:[219,235]},"OverrideRuleBody",[]]]],Rule_extend:["define",{sourceInterval:[255,305]},null,[],["seq",{sourceInterval:[255,294]},["app",{sourceInterval:[255,260]},"ident",[]],["opt",{sourceInterval:[261,269]},["app",{sourceInterval:[261,268]},"Formals",[]]],["terminal",{sourceInterval:[281,285]},"+="],["app",{sourceInterval:[286,294]},"RuleBody",[]]]],Rule:["define",{sourceInterval:[120,305]},null,[],["alt",{sourceInterval:[131,305]},["app",{sourceInterval:[131,170]},"Rule_define",[]],["app",{sourceInterval:[188,235]},"Rule_override",[]],["app",{sourceInterval:[255,294]},"Rule_extend",[]]]],RuleBody:["define",{sourceInterval:[309,362]},null,[],["seq",{sourceInterval:[324,362]},["opt",{sourceInterval:[324,328]},["terminal",{sourceInterval:[324,327]},"|"]],["app",{sourceInterval:[329,362]},"NonemptyListOf",[["app",{sourceInterval:[344,356]},"TopLevelTerm",[]],["terminal",{sourceInterval:[358,361]},"|"]]]]],TopLevelTerm_inline:["define",{sourceInterval:[385,408]},null,[],["seq",{sourceInterval:[385,397]},["app",{sourceInterval:[385,388]},"Seq",[]],["app",{sourceInterval:[389,397]},"caseName",[]]]],TopLevelTerm:["define",{sourceInterval:[366,418]},null,[],["alt",{sourceInterval:[385,418]},["app",{sourceInterval:[385,397]},"TopLevelTerm_inline",[]],["app",{sourceInterval:[415,418]},"Seq",[]]]],OverrideRuleBody:["define",{sourceInterval:[422,491]},null,[],["seq",{sourceInterval:[445,491]},["opt",{sourceInterval:[445,449]},["terminal",{sourceInterval:[445,448]},"|"]],["app",{sourceInterval:[450,491]},"NonemptyListOf",[["app",{sourceInterval:[465,485]},"OverrideTopLevelTerm",[]],["terminal",{sourceInterval:[487,490]},"|"]]]]],OverrideTopLevelTerm_superSplice:["define",{sourceInterval:[522,543]},null,[],["terminal",{sourceInterval:[522,527]},"..."]],OverrideTopLevelTerm:["define",{sourceInterval:[495,562]},null,[],["alt",{sourceInterval:[522,562]},["app",{sourceInterval:[522,527]},"OverrideTopLevelTerm_superSplice",[]],["app",{sourceInterval:[550,562]},"TopLevelTerm",[]]]],Formals:["define",{sourceInterval:[566,606]},null,[],["seq",{sourceInterval:[580,606]},["terminal",{sourceInterval:[580,583]},"<"],["app",{sourceInterval:[584,602]},"ListOf",[["app",{sourceInterval:[591,596]},"ident",[]],["terminal",{sourceInterval:[598,601]},","]]],["terminal",{sourceInterval:[603,606]},">"]]],Params:["define",{sourceInterval:[610,647]},null,[],["seq",{sourceInterval:[623,647]},["terminal",{sourceInterval:[623,626]},"<"],["app",{sourceInterval:[627,643]},"ListOf",[["app",{sourceInterval:[634,637]},"Seq",[]],["terminal",{sourceInterval:[639,642]},","]]],["terminal",{sourceInterval:[644,647]},">"]]],Alt:["define",{sourceInterval:[651,685]},null,[],["app",{sourceInterval:[661,685]},"NonemptyListOf",[["app",{sourceInterval:[676,679]},"Seq",[]],["terminal",{sourceInterval:[681,684]},"|"]]]],Seq:["define",{sourceInterval:[689,704]},null,[],["star",{sourceInterval:[699,704]},["app",{sourceInterval:[699,703]},"Iter",[]]]],Iter_star:["define",{sourceInterval:[719,736]},null,[],["seq",{sourceInterval:[719,727]},["app",{sourceInterval:[719,723]},"Pred",[]],["terminal",{sourceInterval:[724,727]},"*"]]],Iter_plus:["define",{sourceInterval:[743,760]},null,[],["seq",{sourceInterval:[743,751]},["app",{sourceInterval:[743,747]},"Pred",[]],["terminal",{sourceInterval:[748,751]},"+"]]],Iter_opt:["define",{sourceInterval:[767,783]},null,[],["seq",{sourceInterval:[767,775]},["app",{sourceInterval:[767,771]},"Pred",[]],["terminal",{sourceInterval:[772,775]},"?"]]],Iter:["define",{sourceInterval:[708,794]},null,[],["alt",{sourceInterval:[719,794]},["app",{sourceInterval:[719,727]},"Iter_star",[]],["app",{sourceInterval:[743,751]},"Iter_plus",[]],["app",{sourceInterval:[767,775]},"Iter_opt",[]],["app",{sourceInterval:[790,794]},"Pred",[]]]],Pred_not:["define",{sourceInterval:[809,824]},null,[],["seq",{sourceInterval:[809,816]},["terminal",{sourceInterval:[809,812]},"~"],["app",{sourceInterval:[813,816]},"Lex",[]]]],Pred_lookahead:["define",{sourceInterval:[831,852]},null,[],["seq",{sourceInterval:[831,838]},["terminal",{sourceInterval:[831,834]},"&"],["app",{sourceInterval:[835,838]},"Lex",[]]]],Pred:["define",{sourceInterval:[798,862]},null,[],["alt",{sourceInterval:[809,862]},["app",{sourceInterval:[809,816]},"Pred_not",[]],["app",{sourceInterval:[831,838]},"Pred_lookahead",[]],["app",{sourceInterval:[859,862]},"Lex",[]]]],Lex_lex:["define",{sourceInterval:[876,892]},null,[],["seq",{sourceInterval:[876,884]},["terminal",{sourceInterval:[876,879]},"#"],["app",{sourceInterval:[880,884]},"Base",[]]]],Lex:["define",{sourceInterval:[866,903]},null,[],["alt",{sourceInterval:[876,903]},["app",{sourceInterval:[876,884]},"Lex_lex",[]],["app",{sourceInterval:[899,903]},"Base",[]]]],Base_application:["define",{sourceInterval:[918,979]},null,[],["seq",{sourceInterval:[918,963]},["app",{sourceInterval:[918,923]},"ident",[]],["opt",{sourceInterval:[924,931]},["app",{sourceInterval:[924,930]},"Params",[]]],["not",{sourceInterval:[932,963]},["alt",{sourceInterval:[934,962]},["seq",{sourceInterval:[934,948]},["opt",{sourceInterval:[934,944]},["app",{sourceInterval:[934,943]},"ruleDescr",[]]],["terminal",{sourceInterval:[945,948]},"="]],["terminal",{sourceInterval:[951,955]},":="],["terminal",{sourceInterval:[958,962]},"+="]]]]],Base_range:["define",{sourceInterval:[986,1041]},null,[],["seq",{sourceInterval:[986,1022]},["app",{sourceInterval:[986,1001]},"oneCharTerminal",[]],["terminal",{sourceInterval:[1002,1006]},".."],["app",{sourceInterval:[1007,1022]},"oneCharTerminal",[]]]],Base_terminal:["define",{sourceInterval:[1048,1106]},null,[],["app",{sourceInterval:[1048,1056]},"terminal",[]]],Base_paren:["define",{sourceInterval:[1113,1168]},null,[],["seq",{sourceInterval:[1113,1124]},["terminal",{sourceInterval:[1113,1116]},"("],["app",{sourceInterval:[1117,1120]},"Alt",[]],["terminal",{sourceInterval:[1121,1124]},")"]]],Base:["define",{sourceInterval:[907,1168]},null,[],["alt",{sourceInterval:[918,1168]},["app",{sourceInterval:[918,963]},"Base_application",[]],["app",{sourceInterval:[986,1022]},"Base_range",[]],["app",{sourceInterval:[1048,1056]},"Base_terminal",[]],["app",{sourceInterval:[1113,1124]},"Base_paren",[]]]],ruleDescr:["define",{sourceInterval:[1172,1231]},"a rule description",[],["seq",{sourceInterval:[1210,1231]},["terminal",{sourceInterval:[1210,1213]},"("],["app",{sourceInterval:[1214,1227]},"ruleDescrText",[]],["terminal",{sourceInterval:[1228,1231]},")"]]],ruleDescrText:["define",{sourceInterval:[1235,1266]},null,[],["star",{sourceInterval:[1255,1266]},["seq",{sourceInterval:[1256,1264]},["not",{sourceInterval:[1256,1260]},["terminal",{sourceInterval:[1257,1260]},")"]],["app",{sourceInterval:[1261,1264]},"any",[]]]]],caseName:["define",{sourceInterval:[1270,1338]},null,[],["seq",{sourceInterval:[1285,1338]},["terminal",{sourceInterval:[1285,1289]},"--"],["star",{sourceInterval:[1290,1304]},["seq",{sourceInterval:[1291,1302]},["not",{sourceInterval:[1291,1296]},["terminal",{sourceInterval:[1292,1296]},"\n"]],["app",{sourceInterval:[1297,1302]},"space",[]]]],["app",{sourceInterval:[1305,1309]},"name",[]],["star",{sourceInterval:[1310,1324]},["seq",{sourceInterval:[1311,1322]},["not",{sourceInterval:[1311,1316]},["terminal",{sourceInterval:[1312,1316]},"\n"]],["app",{sourceInterval:[1317,1322]},"space",[]]]],["alt",{sourceInterval:[1326,1337]},["terminal",{sourceInterval:[1326,1330]},"\n"],["lookahead",{sourceInterval:[1333,1337]},["terminal",{sourceInterval:[1334,1337]},"}"]]]]],name:["define",{sourceInterval:[1342,1382]},"a name",[],["seq",{sourceInterval:[1363,1382]},["app",{sourceInterval:[1363,1372]},"nameFirst",[]],["star",{sourceInterval:[1373,1382]},["app",{sourceInterval:[1373,1381]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[1386,1418]},null,[],["alt",{sourceInterval:[1402,1418]},["terminal",{sourceInterval:[1402,1405]},"_"],["app",{sourceInterval:[1412,1418]},"letter",[]]]],nameRest:["define",{sourceInterval:[1422,1452]},null,[],["alt",{sourceInterval:[1437,1452]},["terminal",{sourceInterval:[1437,1440]},"_"],["app",{sourceInterval:[1447,1452]},"alnum",[]]]],ident:["define",{sourceInterval:[1456,1489]},"an identifier",[],["app",{sourceInterval:[1485,1489]},"name",[]]],terminal:["define",{sourceInterval:[1493,1531]},null,[],["seq",{sourceInterval:[1508,1531]},["terminal",{sourceInterval:[1508,1512]},'"'],["star",{sourceInterval:[1513,1526]},["app",{sourceInterval:[1513,1525]},"terminalChar",[]]],["terminal",{sourceInterval:[1527,1531]},'"']]],oneCharTerminal:["define",{sourceInterval:[1535,1579]},null,[],["seq",{sourceInterval:[1557,1579]},["terminal",{sourceInterval:[1557,1561]},'"'],["app",{sourceInterval:[1562,1574]},"terminalChar",[]],["terminal",{sourceInterval:[1575,1579]},'"']]],terminalChar:["define",{sourceInterval:[1583,1640]},null,[],["alt",{sourceInterval:[1602,1640]},["app",{sourceInterval:[1602,1612]},"escapeChar",[]],["seq",{sourceInterval:[1619,1640]},["not",{sourceInterval:[1619,1624]},["terminal",{sourceInterval:[1620,1624]},"\\"]],["not",{sourceInterval:[1625,1630]},["terminal",{sourceInterval:[1626,1630]},'"']],["not",{sourceInterval:[1631,1636]},["terminal",{sourceInterval:[1632,1636]},"\n"]],["app",{sourceInterval:[1637,1640]},"any",[]]]]],escapeChar_backslash:["define",{sourceInterval:[1683,1738]},null,[],["terminal",{sourceInterval:[1683,1689]},"\\\\"]],escapeChar_doubleQuote:["define",{sourceInterval:[1745,1802]},null,[],["terminal",{sourceInterval:[1745,1751]},'\\"']],escapeChar_singleQuote:["define",{sourceInterval:[1809,1866]},null,[],["terminal",{sourceInterval:[1809,1815]},"\\'"]],escapeChar_backspace:["define",{sourceInterval:[1873,1928]},null,[],["terminal",{sourceInterval:[1873,1878]},"\\b"]],escapeChar_lineFeed:["define",{sourceInterval:[1935,1989]},null,[],["terminal",{sourceInterval:[1935,1940]},"\\n"]],escapeChar_carriageReturn:["define",{sourceInterval:[1996,2056]},null,[],["terminal",{sourceInterval:[1996,2001]},"\\r"]],escapeChar_tab:["define",{sourceInterval:[2063,2112]},null,[],["terminal",{sourceInterval:[2063,2068]},"\\t"]],escapeChar_unicodeEscape:["define",{sourceInterval:[2119,2178]},null,[],["seq",{sourceInterval:[2119,2160]},["terminal",{sourceInterval:[2119,2124]},"\\u"],["app",{sourceInterval:[2125,2133]},"hexDigit",[]],["app",{sourceInterval:[2134,2142]},"hexDigit",[]],["app",{sourceInterval:[2143,2151]},"hexDigit",[]],["app",{sourceInterval:[2152,2160]},"hexDigit",[]]]],escapeChar_hexEscape:["define",{sourceInterval:[2185,2240]},null,[],["seq",{sourceInterval:[2185,2208]},["terminal",{sourceInterval:[2185,2190]},"\\x"],["app",{sourceInterval:[2191,2199]},"hexDigit",[]],["app",{sourceInterval:[2200,2208]},"hexDigit",[]]]],escapeChar:["define",{sourceInterval:[1644,2240]},"an escape sequence",[],["alt",{sourceInterval:[1683,2240]},["app",{sourceInterval:[1683,1689]},"escapeChar_backslash",[]],["app",{sourceInterval:[1745,1751]},"escapeChar_doubleQuote",[]],["app",{sourceInterval:[1809,1815]},"escapeChar_singleQuote",[]],["app",{sourceInterval:[1873,1878]},"escapeChar_backspace",[]],["app",{sourceInterval:[1935,1940]},"escapeChar_lineFeed",[]],["app",{sourceInterval:[1996,2001]},"escapeChar_carriageReturn",[]],["app",{sourceInterval:[2063,2068]},"escapeChar_tab",[]],["app",{sourceInterval:[2119,2160]},"escapeChar_unicodeEscape",[]],["app",{sourceInterval:[2185,2208]},"escapeChar_hexEscape",[]]]],space:["extend",{sourceInterval:[2244,2263]},null,[],["app",{sourceInterval:[2256,2263]},"comment",[]]],comment_singleLine:["define",{sourceInterval:[2281,2327]},null,[],["seq",{sourceInterval:[2281,2312]},["terminal",{sourceInterval:[2281,2285]},"//"],["star",{sourceInterval:[2286,2298]},["seq",{sourceInterval:[2287,2296]},["not",{sourceInterval:[2287,2292]},["terminal",{sourceInterval:[2288,2292]},"\n"]],["app",{sourceInterval:[2293,2296]},"any",[]]]],["lookahead",{sourceInterval:[2299,2312]},["alt",{sourceInterval:[2301,2311]},["terminal",{sourceInterval:[2301,2305]},"\n"],["app",{sourceInterval:[2308,2311]},"end",[]]]]]],comment_multiLine:["define",{sourceInterval:[2334,2370]},null,[],["seq",{sourceInterval:[2334,2356]},["terminal",{sourceInterval:[2334,2338]},"/*"],["star",{sourceInterval:[2339,2351]},["seq",{sourceInterval:[2340,2349]},["not",{sourceInterval:[2340,2345]},["terminal",{sourceInterval:[2341,2345]},"*/"]],["app",{sourceInterval:[2346,2349]},"any",[]]]],["terminal",{sourceInterval:[2352,2356]},"*/"]]],comment:["define",{sourceInterval:[2267,2370]},null,[],["alt",{sourceInterval:[2281,2370]},["app",{sourceInterval:[2281,2312]},"comment_singleLine",[]],["app",{sourceInterval:[2334,2356]},"comment_multiLine",[]]]],tokens:["define",{sourceInterval:[2374,2389]},null,[],["star",{sourceInterval:[2383,2389]},["app",{sourceInterval:[2383,2388]},"token",[]]]],token:["define",{sourceInterval:[2393,2469]},null,[],["alt",{sourceInterval:[2401,2469]},["app",{sourceInterval:[2401,2409]},"caseName",[]],["app",{sourceInterval:[2412,2419]},"comment",[]],["app",{sourceInterval:[2422,2427]},"ident",[]],["app",{sourceInterval:[2430,2438]},"operator",[]],["app",{sourceInterval:[2441,2452]},"punctuation",[]],["app",{sourceInterval:[2455,2463]},"terminal",[]],["app",{sourceInterval:[2466,2469]},"any",[]]]],operator:["define",{sourceInterval:[2473,2538]},null,[],["alt",{sourceInterval:[2484,2538]},["terminal",{sourceInterval:[2484,2488]},"<:"],["terminal",{sourceInterval:[2491,2494]},"="],["terminal",{sourceInterval:[2497,2501]},":="],["terminal",{sourceInterval:[2504,2508]},"+="],["terminal",{sourceInterval:[2511,2514]},"*"],["terminal",{sourceInterval:[2517,2520]},"+"],["terminal",{sourceInterval:[2523,2526]},"?"],["terminal",{sourceInterval:[2529,2532]},"~"],["terminal",{sourceInterval:[2535,2538]},"&"]]],punctuation:["define",{sourceInterval:[2542,2578]},null,[],["alt",{sourceInterval:[2556,2578]},["terminal",{sourceInterval:[2556,2559]},"<"],["terminal",{sourceInterval:[2562,2565]},">"],["terminal",{sourceInterval:[2568,2571]},","],["terminal",{sourceInterval:[2574,2578]},"--"]]]}])}])},"object"==typeof e&&"object"==typeof t?t.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof e?e.ohm=r():n.ohm=r(),t.exports}();const lR=cR.createNamespace();lR.Super=cR.makeRecipe(["grammar",{source:'Super {\r\n  Main = literalOf<(null | boolean | number)>\r\n\r\n  optional<T> = T?\r\n  stringify<T> = T\r\n\r\n  End($END$) = end\r\n  exprEnd($Exp$) = (";" | space)+\r\n\r\n  join<P, C> = P C\r\n  startWith<P, C> = P C\r\n  endWith<C, S> = C S\r\n\r\n  null = "null"\r\n  \r\n  centerOf<L, C, R> = L C R\r\n\r\n\r\n  lineBreak = "\\n"\r\n  linePad = lineSpace*\r\n  lineSpace(space) = ~lineBreak space\r\n  lineEnd($LineEnd$) = linePad (lineBreak | end)\r\n\r\n  padWith<T> = centerOf<linePad, T, linePad>\r\n  multiplePadWith<T> = centerOf<space*, T, space*>\r\n  preSpaceWith<T> = startWith<lineSpace+, T>\r\n  leftPadWith<T> = startWith<linePad, T>\r\n  rightPadWith<T> = endWith<T, linePad>\r\n\r\n  bracketSyntax<L, C, R> = centerOf<L, multiplePadWith<C>, R>\r\n  bracketText<L, C, R> = centerOf<L, multiplePadWith<stringify<(~startWith<space*, R> C)+>>, R>\r\n\r\n  bracketSyntaxInline<L, C, R> = centerOf<L, padWith<C>, R>\r\n  bracketTextInline<L, C, R> = centerOf<L, padWith<stringify<(esc<char> | ~(lineBreak | startWith<linePad, R>) C)+>>, R>\r\n\r\n  simpleBracketSyntax<C, LR> = bracketSyntax<LR, C, LR>\r\n  simpleBracketText<C, LR> = bracketText<LR, C, LR>\r\n\r\n  simpleBracketSyntaxInline<C, LR> = bracketSyntaxInline<LR, C, LR>\r\n  simpleBracketTextInline<C, LR> = bracketTextInline<LR, C, LR>\r\n  \r\n  sourceOf<T> = T\r\n  \r\n  literalOf<T> = T\r\n\r\n  boolean($boolean$) = "true" | "false"\r\n\r\n  char = ~space any\r\n\r\n  number($number$)\r\n    = num* "." num+ -- fract\r\n    | num+ -- whole\r\n\r\n  sign<T>($number$)\r\n    = stringify<T> -- apply\r\n    | ("-" | "+") stringify<T> -- signed\r\n\r\n\r\n  num($num$) = digit\r\n\r\n  internalEscape = "\'" | "\\"" | "\\\\" | "b" | "f" | "n" | "r" | "t" | "v"\r\n\r\n  esc<T> = startWith<&"\\\\", oresc<T>>\r\n  noesc<T> = ~(&"\\\\") T\r\n  oresc<T> = "\\\\"? T\r\n  escWith<T> = strictEscWith<T, T>\r\n  strictEscWith<Escaped, NonEscaped> = esc<(internalEscape | "x" | "u" | Escaped)> | ~NonEscaped any\r\n\r\n  ignore<T> = T\r\n  \r\n  single<T> = endWith<T, &(~T any?)>\r\n  dobule<T> = join<noesc<T>, T>\r\n\r\n  tokenOf<T> = single<noesc<T>>\r\n  dobuleTokenOf<T> = join<noesc<T>, single<T>>\r\n\r\n  parenL = "("\r\n  parenR = ")"\r\n  bracketL = "["\r\n  bracketR = "]"\r\n  // tokenOf2<T> = noesc<single2<T>>\r\n}'},"Super",null,"Main",{Main:["define",{sourceInterval:[11,54]},null,[],["app",{sourceInterval:[18,54]},"literalOf",[["alt",{sourceInterval:[28,53]},["app",{sourceInterval:[29,33]},"null",[]],["app",{sourceInterval:[36,43]},"boolean",[]],["app",{sourceInterval:[46,52]},"number",[]]]]]],optional:["define",{sourceInterval:[60,76]},null,["T"],["opt",{sourceInterval:[74,76]},["param",{sourceInterval:[74,75]},0]]],stringify:["define",{sourceInterval:[80,96]},null,["T"],["param",{sourceInterval:[95,96]},0]],End:["define",{sourceInterval:[102,118]},"$END$",[],["app",{sourceInterval:[115,118]},"end",[]]],exprEnd:["define",{sourceInterval:[122,153]},"$Exp$",[],["plus",{sourceInterval:[139,153]},["alt",{sourceInterval:[140,151]},["terminal",{sourceInterval:[140,143]},";"],["app",{sourceInterval:[146,151]},"space",[]]]]],join:["define",{sourceInterval:[159,175]},null,["P","C"],["seq",{sourceInterval:[172,175]},["param",{sourceInterval:[172,173]},0],["param",{sourceInterval:[174,175]},1]]],startWith:["define",{sourceInterval:[179,200]},null,["P","C"],["seq",{sourceInterval:[197,200]},["param",{sourceInterval:[197,198]},0],["param",{sourceInterval:[199,200]},1]]],endWith:["define",{sourceInterval:[204,223]},null,["C","S"],["seq",{sourceInterval:[220,223]},["param",{sourceInterval:[220,221]},0],["param",{sourceInterval:[222,223]},1]]],null:["define",{sourceInterval:[229,242]},null,[],["terminal",{sourceInterval:[236,242]},"null"]],centerOf:["define",{sourceInterval:[250,275]},null,["L","C","R"],["seq",{sourceInterval:[270,275]},["param",{sourceInterval:[270,271]},0],["param",{sourceInterval:[272,273]},1],["param",{sourceInterval:[274,275]},2]]],lineBreak:["define",{sourceInterval:[283,299]},null,[],["terminal",{sourceInterval:[295,299]},"\n"]],linePad:["define",{sourceInterval:[303,323]},null,[],["star",{sourceInterval:[313,323]},["app",{sourceInterval:[313,322]},"lineSpace",[]]]],lineSpace:["define",{sourceInterval:[327,362]},"space",[],["seq",{sourceInterval:[346,362]},["not",{sourceInterval:[346,356]},["app",{sourceInterval:[347,356]},"lineBreak",[]]],["app",{sourceInterval:[357,362]},"space",[]]]],lineEnd:["define",{sourceInterval:[366,412]},"$LineEnd$",[],["seq",{sourceInterval:[387,412]},["app",{sourceInterval:[387,394]},"linePad",[]],["alt",{sourceInterval:[396,411]},["app",{sourceInterval:[396,405]},"lineBreak",[]],["app",{sourceInterval:[408,411]},"end",[]]]]],padWith:["define",{sourceInterval:[418,460]},null,["T"],["app",{sourceInterval:[431,460]},"centerOf",[["app",{sourceInterval:[440,447]},"linePad",[]],["param",{sourceInterval:[449,450]},0],["app",{sourceInterval:[452,459]},"linePad",[]]]]],multiplePadWith:["define",{sourceInterval:[464,512]},null,["T"],["app",{sourceInterval:[485,512]},"centerOf",[["star",{sourceInterval:[494,500]},["app",{sourceInterval:[494,499]},"space",[]]],["param",{sourceInterval:[502,503]},0],["star",{sourceInterval:[505,511]},["app",{sourceInterval:[505,510]},"space",[]]]]]],preSpaceWith:["define",{sourceInterval:[516,558]},null,["T"],["app",{sourceInterval:[534,558]},"startWith",[["plus",{sourceInterval:[544,554]},["app",{sourceInterval:[544,553]},"lineSpace",[]]],["param",{sourceInterval:[556,557]},0]]]],leftPadWith:["define",{sourceInterval:[562,600]},null,["T"],["app",{sourceInterval:[579,600]},"startWith",[["app",{sourceInterval:[589,596]},"linePad",[]],["param",{sourceInterval:[598,599]},0]]]],rightPadWith:["define",{sourceInterval:[604,641]},null,["T"],["app",{sourceInterval:[622,641]},"endWith",[["param",{sourceInterval:[630,631]},0],["app",{sourceInterval:[633,640]},"linePad",[]]]]],bracketSyntax:["define",{sourceInterval:[647,706]},null,["L","C","R"],["app",{sourceInterval:[672,706]},"centerOf",[["param",{sourceInterval:[681,682]},0],["app",{sourceInterval:[684,702]},"multiplePadWith",[["param",{sourceInterval:[700,701]},1]]],["param",{sourceInterval:[704,705]},2]]]],bracketText:["define",{sourceInterval:[710,803]},null,["L","C","R"],["app",{sourceInterval:[733,803]},"centerOf",[["param",{sourceInterval:[742,743]},0],["app",{sourceInterval:[745,799]},"multiplePadWith",[["app",{sourceInterval:[761,798]},"stringify",[["plus",{sourceInterval:[771,797]},["seq",{sourceInterval:[772,795]},["not",{sourceInterval:[772,793]},["app",{sourceInterval:[773,793]},"startWith",[["star",{sourceInterval:[783,789]},["app",{sourceInterval:[783,788]},"space",[]]],["param",{sourceInterval:[791,792]},2]]]],["param",{sourceInterval:[794,795]},1]]]]]]],["param",{sourceInterval:[801,802]},2]]]],bracketSyntaxInline:["define",{sourceInterval:[809,866]},null,["L","C","R"],["app",{sourceInterval:[840,866]},"centerOf",[["param",{sourceInterval:[849,850]},0],["app",{sourceInterval:[852,862]},"padWith",[["param",{sourceInterval:[860,861]},1]]],["param",{sourceInterval:[864,865]},2]]]],bracketTextInline:["define",{sourceInterval:[870,988]},null,["L","C","R"],["app",{sourceInterval:[899,988]},"centerOf",[["param",{sourceInterval:[908,909]},0],["app",{sourceInterval:[911,984]},"padWith",[["app",{sourceInterval:[919,983]},"stringify",[["plus",{sourceInterval:[929,982]},["alt",{sourceInterval:[930,980]},["app",{sourceInterval:[930,939]},"esc",[["app",{sourceInterval:[934,938]},"char",[]]]],["seq",{sourceInterval:[942,980]},["not",{sourceInterval:[942,978]},["alt",{sourceInterval:[944,977]},["app",{sourceInterval:[944,953]},"lineBreak",[]],["app",{sourceInterval:[956,977]},"startWith",[["app",{sourceInterval:[966,973]},"linePad",[]],["param",{sourceInterval:[975,976]},2]]]]],["param",{sourceInterval:[979,980]},1]]]]]]]],["param",{sourceInterval:[986,987]},2]]]],simpleBracketSyntax:["define",{sourceInterval:[994,1047]},null,["C","LR"],["app",{sourceInterval:[1023,1047]},"bracketSyntax",[["param",{sourceInterval:[1037,1039]},1],["param",{sourceInterval:[1041,1042]},0],["param",{sourceInterval:[1044,1046]},1]]]],simpleBracketText:["define",{sourceInterval:[1051,1100]},null,["C","LR"],["app",{sourceInterval:[1078,1100]},"bracketText",[["param",{sourceInterval:[1090,1092]},1],["param",{sourceInterval:[1094,1095]},0],["param",{sourceInterval:[1097,1099]},1]]]],simpleBracketSyntaxInline:["define",{sourceInterval:[1106,1171]},null,["C","LR"],["app",{sourceInterval:[1141,1171]},"bracketSyntaxInline",[["param",{sourceInterval:[1161,1163]},1],["param",{sourceInterval:[1165,1166]},0],["param",{sourceInterval:[1168,1170]},1]]]],simpleBracketTextInline:["define",{sourceInterval:[1175,1236]},null,["C","LR"],["app",{sourceInterval:[1208,1236]},"bracketTextInline",[["param",{sourceInterval:[1226,1228]},1],["param",{sourceInterval:[1230,1231]},0],["param",{sourceInterval:[1233,1235]},1]]]],sourceOf:["define",{sourceInterval:[1244,1259]},null,["T"],["param",{sourceInterval:[1258,1259]},0]],literalOf:["define",{sourceInterval:[1267,1283]},null,["T"],["param",{sourceInterval:[1282,1283]},0]],boolean:["define",{sourceInterval:[1289,1326]},"$boolean$",[],["alt",{sourceInterval:[1310,1326]},["terminal",{sourceInterval:[1310,1316]},"true"],["terminal",{sourceInterval:[1319,1326]},"false"]]],char:["define",{sourceInterval:[1332,1349]},null,[],["seq",{sourceInterval:[1339,1349]},["not",{sourceInterval:[1339,1345]},["app",{sourceInterval:[1340,1345]},"space",[]]],["app",{sourceInterval:[1346,1349]},"any",[]]]],number_fract:["define",{sourceInterval:[1379,1401]},null,[],["seq",{sourceInterval:[1379,1392]},["star",{sourceInterval:[1379,1383]},["app",{sourceInterval:[1379,1382]},"num",[]]],["terminal",{sourceInterval:[1384,1387]},"."],["plus",{sourceInterval:[1388,1392]},["app",{sourceInterval:[1388,1391]},"num",[]]]]],number_whole:["define",{sourceInterval:[1409,1422]},null,[],["plus",{sourceInterval:[1409,1413]},["app",{sourceInterval:[1409,1412]},"num",[]]]],number:["define",{sourceInterval:[1355,1422]},"$number$",[],["alt",{sourceInterval:[1379,1422]},["app",{sourceInterval:[1379,1392]},"number_fract",[]],["app",{sourceInterval:[1409,1413]},"number_whole",[]]]],sign_apply:["define",{sourceInterval:[1453,1474]},null,["T"],["app",{sourceInterval:[1453,1465]},"stringify",[["param",{sourceInterval:[1463,1464]},0]]]],sign_signed:["define",{sourceInterval:[1482,1516]},null,["T"],["seq",{sourceInterval:[1482,1506]},["alt",{sourceInterval:[1483,1492]},["terminal",{sourceInterval:[1483,1486]},"-"],["terminal",{sourceInterval:[1489,1492]},"+"]],["app",{sourceInterval:[1494,1506]},"stringify",[["param",{sourceInterval:[1504,1505]},0]]]]],sign:["define",{sourceInterval:[1428,1516]},"$number$",["T"],["alt",{sourceInterval:[1453,1516]},["app",{sourceInterval:[1453,1465]},"sign_apply",[["param",{},0]]],["app",{sourceInterval:[1482,1506]},"sign_signed",[["param",{},0]]]]],num:["define",{sourceInterval:[1524,1542]},"$num$",[],["app",{sourceInterval:[1537,1542]},"digit",[]]],internalEscape:["define",{sourceInterval:[1548,1618]},null,[],["alt",{sourceInterval:[1565,1618]},["terminal",{sourceInterval:[1565,1568]},"'"],["terminal",{sourceInterval:[1571,1575]},'"'],["terminal",{sourceInterval:[1578,1582]},"\\"],["terminal",{sourceInterval:[1585,1588]},"b"],["terminal",{sourceInterval:[1591,1594]},"f"],["terminal",{sourceInterval:[1597,1600]},"n"],["terminal",{sourceInterval:[1603,1606]},"r"],["terminal",{sourceInterval:[1609,1612]},"t"],["terminal",{sourceInterval:[1615,1618]},"v"]]],esc:["define",{sourceInterval:[1624,1659]},null,["T"],["app",{sourceInterval:[1633,1659]},"startWith",[["lookahead",{sourceInterval:[1643,1648]},["terminal",{sourceInterval:[1644,1648]},"\\"]],["app",{sourceInterval:[1650,1658]},"oresc",[["param",{sourceInterval:[1656,1657]},0]]]]]],noesc:["define",{sourceInterval:[1663,1684]},null,["T"],["seq",{sourceInterval:[1674,1684]},["not",{sourceInterval:[1674,1682]},["lookahead",{sourceInterval:[1676,1681]},["terminal",{sourceInterval:[1677,1681]},"\\"]]],["param",{sourceInterval:[1683,1684]},0]]],oresc:["define",{sourceInterval:[1688,1706]},null,["T"],["seq",{sourceInterval:[1699,1706]},["opt",{sourceInterval:[1699,1704]},["terminal",{sourceInterval:[1699,1703]},"\\"]],["param",{sourceInterval:[1705,1706]},0]]],escWith:["define",{sourceInterval:[1710,1742]},null,["T"],["app",{sourceInterval:[1723,1742]},"strictEscWith",[["param",{sourceInterval:[1737,1738]},0],["param",{sourceInterval:[1740,1741]},0]]]],strictEscWith:["define",{sourceInterval:[1746,1844]},null,["Escaped","NonEscaped"],["alt",{sourceInterval:[1783,1844]},["app",{sourceInterval:[1783,1826]},"esc",[["alt",{sourceInterval:[1787,1825]},["app",{sourceInterval:[1788,1802]},"internalEscape",[]],["terminal",{sourceInterval:[1805,1808]},"x"],["terminal",{sourceInterval:[1811,1814]},"u"],["param",{sourceInterval:[1817,1824]},0]]]],["seq",{sourceInterval:[1829,1844]},["not",{sourceInterval:[1829,1840]},["param",{sourceInterval:[1830,1840]},1]],["app",{sourceInterval:[1841,1844]},"any",[]]]]],ignore:["define",{sourceInterval:[1850,1863]},null,["T"],["param",{sourceInterval:[1862,1863]},0]],single:["define",{sourceInterval:[1871,1905]},null,["T"],["app",{sourceInterval:[1883,1905]},"endWith",[["param",{sourceInterval:[1891,1892]},0],["lookahead",{sourceInterval:[1894,1904]},["seq",{sourceInterval:[1896,1903]},["not",{sourceInterval:[1896,1898]},["param",{sourceInterval:[1897,1898]},0]],["opt",{sourceInterval:[1899,1903]},["app",{sourceInterval:[1899,1902]},"any",[]]]]]]]],dobule:["define",{sourceInterval:[1909,1938]},null,["T"],["app",{sourceInterval:[1921,1938]},"join",[["app",{sourceInterval:[1926,1934]},"noesc",[["param",{sourceInterval:[1932,1933]},0]]],["param",{sourceInterval:[1936,1937]},0]]]],tokenOf:["define",{sourceInterval:[1944,1973]},null,["T"],["app",{sourceInterval:[1957,1973]},"single",[["app",{sourceInterval:[1964,1972]},"noesc",[["param",{sourceInterval:[1970,1971]},0]]]]]],dobuleTokenOf:["define",{sourceInterval:[1977,2021]},null,["T"],["app",{sourceInterval:[1996,2021]},"join",[["app",{sourceInterval:[2001,2009]},"noesc",[["param",{sourceInterval:[2007,2008]},0]]],["app",{sourceInterval:[2011,2020]},"single",[["param",{sourceInterval:[2018,2019]},0]]]]]],parenL:["define",{sourceInterval:[2027,2039]},null,[],["terminal",{sourceInterval:[2036,2039]},"("]],parenR:["define",{sourceInterval:[2043,2055]},null,[],["terminal",{sourceInterval:[2052,2055]},")"]],bracketL:["define",{sourceInterval:[2059,2073]},null,[],["terminal",{sourceInterval:[2070,2073]},"["]],bracketR:["define",{sourceInterval:[2077,2091]},null,[],["terminal",{sourceInterval:[2088,2091]},"]"]]}]),lR.Base=cR.makeRecipe(["grammar",{source:'Base <: Super {\r\n\r\n  literal($literal$) = percet | literalOf<(string | number | boolean | null)> \r\n\r\n  number += sign<hex>   -- sign\r\n    | sign<number_fract> -- double\r\n    | sign<number_whole> -- int\r\n\r\n  hex($hexNumber$) = "0x" ("a".."f" | "A".."F" | num)+\r\n\r\n  string\r\n    = simpleBracketSyntaxInline<stringify<strictEscWith<char, "\\"">*>, "\\""> -- doubleQuote\r\n    | simpleBracketSyntaxInline<stringify<strictEscWith<char, "\\\'">*>, "\\\'"> -- singleQuote\r\n  \r\n  // escapeCharacter = internalEscape | "x" | "u" | ~(alnum|space)any\r\n  \r\n  percet = (number_double | number_int) "%" ~(literal | variableName)\r\n\r\n  variableName($variableName$) = stringify<(variableNamePrefix?)> identifier\r\n  variableNamePrefix($variableNamePrefix$) = "$" | "%"\r\n\r\n  identifier = ~invalidIdentifier(validIdentifierPrefixChar ~invalidIdentifierChar (validIdentifierChar)*)\r\n  invalidIdentifier($invalidIdentifier$) = boolean | number | null\r\n\r\n  validIdentifierChar($validIdentifierChar$[:alnum: | "_" | "$"]) = alnum | "_" | "$"\r\n  invalidIdentifierChar($invalidIdentifierChar$["#" | "@" | ...$spicalChar$]) = "#" | "@"\r\n  validIdentifierPrefixChar($validIdentifierPrefixChar$) =  ~(variableNamePrefix)(letter | "_")\r\n\r\n  op = op_comma | op_logic | op_orNull | op_eq | op_rel | op_add | op_mul | op_pow | op_invert\r\n  op_comma = ","\r\n  op_logic = "&&" | "||"\r\n  op_orNull = "??"\r\n  op_eq = "==" | "!="\r\n  op_rel = "<=" | "<" | ">=" | ">"\r\n  op_add = "-" | "+"\r\n  op_mul = "%" | "/" | "*"\r\n  op_pow = "^"\r\n  op_invert = "!"\r\n\r\n}'},"Base",lR.Super,"Main",{literal:["define",{sourceInterval:[21,96]},"$literal$",[],["alt",{sourceInterval:[42,96]},["app",{sourceInterval:[42,48]},"percet",[]],["app",{sourceInterval:[51,96]},"literalOf",[["alt",{sourceInterval:[61,95]},["app",{sourceInterval:[62,68]},"string",[]],["app",{sourceInterval:[71,77]},"number",[]],["app",{sourceInterval:[80,87]},"boolean",[]],["app",{sourceInterval:[90,94]},"null",[]]]]]]],number_sign:["define",{sourceInterval:[113,132]},null,[],["app",{sourceInterval:[113,122]},"sign",[["app",{sourceInterval:[118,121]},"hex",[]]]]],number_double:["define",{sourceInterval:[140,168]},null,[],["app",{sourceInterval:[140,158]},"sign",[["app",{sourceInterval:[145,157]},"number_fract",[]]]]],number_int:["define",{sourceInterval:[176,201]},null,[],["app",{sourceInterval:[176,194]},"sign",[["app",{sourceInterval:[181,193]},"number_whole",[]]]]],number:["extend",{sourceInterval:[103,201]},null,[],["alt",{sourceInterval:[113,201]},["app",{sourceInterval:[113,122]},"number_sign",[]],["app",{sourceInterval:[140,158]},"number_double",[]],["app",{sourceInterval:[176,194]},"number_int",[]]]],hex:["define",{sourceInterval:[207,259]},"$hexNumber$",[],["seq",{sourceInterval:[226,259]},["terminal",{sourceInterval:[226,230]},"0x"],["plus",{sourceInterval:[231,259]},["alt",{sourceInterval:[232,257]},["range",{sourceInterval:[232,240]},"a","f"],["range",{sourceInterval:[243,251]},"A","F"],["app",{sourceInterval:[254,257]},"num",[]]]]]],string_doubleQuote:["define",{sourceInterval:[279,364]},null,[],["app",{sourceInterval:[279,349]},"simpleBracketSyntaxInline",[["app",{sourceInterval:[305,342]},"stringify",[["star",{sourceInterval:[315,341]},["app",{sourceInterval:[315,340]},"strictEscWith",[["app",{sourceInterval:[329,333]},"char",[]],["terminal",{sourceInterval:[335,339]},'"']]]]]],["terminal",{sourceInterval:[344,348]},'"']]]],string_singleQuote:["define",{sourceInterval:[372,457]},null,[],["app",{sourceInterval:[372,442]},"simpleBracketSyntaxInline",[["app",{sourceInterval:[398,435]},"stringify",[["star",{sourceInterval:[408,434]},["app",{sourceInterval:[408,433]},"strictEscWith",[["app",{sourceInterval:[422,426]},"char",[]],["terminal",{sourceInterval:[428,432]},"'"]]]]]],["terminal",{sourceInterval:[437,441]},"'"]]]],string:["define",{sourceInterval:[265,457]},null,[],["alt",{sourceInterval:[279,457]},["app",{sourceInterval:[279,349]},"string_doubleQuote",[]],["app",{sourceInterval:[372,442]},"string_singleQuote",[]]]],percet:["define",{sourceInterval:[540,607]},null,[],["seq",{sourceInterval:[549,607]},["alt",{sourceInterval:[550,576]},["app",{sourceInterval:[550,563]},"number_double",[]],["app",{sourceInterval:[566,576]},"number_int",[]]],["terminal",{sourceInterval:[578,581]},"%"],["not",{sourceInterval:[582,607]},["alt",{sourceInterval:[584,606]},["app",{sourceInterval:[584,591]},"literal",[]],["app",{sourceInterval:[594,606]},"variableName",[]]]]]],variableName:["define",{sourceInterval:[613,687]},"$variableName$",[],["seq",{sourceInterval:[644,687]},["app",{sourceInterval:[644,676]},"stringify",[["opt",{sourceInterval:[654,675]},["app",{sourceInterval:[655,673]},"variableNamePrefix",[]]]]],["app",{sourceInterval:[677,687]},"identifier",[]]]],variableNamePrefix:["define",{sourceInterval:[691,743]},"$variableNamePrefix$",[],["alt",{sourceInterval:[734,743]},["terminal",{sourceInterval:[734,737]},"$"],["terminal",{sourceInterval:[740,743]},"%"]]],identifier:["define",{sourceInterval:[749,853]},null,[],["seq",{sourceInterval:[762,853]},["not",{sourceInterval:[762,780]},["app",{sourceInterval:[763,780]},"invalidIdentifier",[]]],["app",{sourceInterval:[781,806]},"validIdentifierPrefixChar",[]],["not",{sourceInterval:[807,829]},["app",{sourceInterval:[808,829]},"invalidIdentifierChar",[]]],["star",{sourceInterval:[830,852]},["app",{sourceInterval:[831,850]},"validIdentifierChar",[]]]]],invalidIdentifier:["define",{sourceInterval:[857,921]},"$invalidIdentifier$",[],["alt",{sourceInterval:[898,921]},["app",{sourceInterval:[898,905]},"boolean",[]],["app",{sourceInterval:[908,914]},"number",[]],["app",{sourceInterval:[917,921]},"null",[]]]],validIdentifierChar:["define",{sourceInterval:[927,1010]},'$validIdentifierChar$[:alnum: | "_" | "$"]',[],["alt",{sourceInterval:[993,1010]},["app",{sourceInterval:[993,998]},"alnum",[]],["terminal",{sourceInterval:[1001,1004]},"_"],["terminal",{sourceInterval:[1007,1010]},"$"]]],invalidIdentifierChar:["define",{sourceInterval:[1014,1101]},'$invalidIdentifierChar$["#" | "@" | ...$spicalChar$]',[],["alt",{sourceInterval:[1092,1101]},["terminal",{sourceInterval:[1092,1095]},"#"],["terminal",{sourceInterval:[1098,1101]},"@"]]],validIdentifierPrefixChar:["define",{sourceInterval:[1105,1198]},"$validIdentifierPrefixChar$",[],["seq",{sourceInterval:[1163,1198]},["not",{sourceInterval:[1163,1184]},["app",{sourceInterval:[1165,1183]},"variableNamePrefix",[]]],["alt",{sourceInterval:[1185,1197]},["app",{sourceInterval:[1185,1191]},"letter",[]],["terminal",{sourceInterval:[1194,1197]},"_"]]]],op:["define",{sourceInterval:[1204,1296]},null,[],["alt",{sourceInterval:[1209,1296]},["app",{sourceInterval:[1209,1217]},"op_comma",[]],["app",{sourceInterval:[1220,1228]},"op_logic",[]],["app",{sourceInterval:[1231,1240]},"op_orNull",[]],["app",{sourceInterval:[1243,1248]},"op_eq",[]],["app",{sourceInterval:[1251,1257]},"op_rel",[]],["app",{sourceInterval:[1260,1266]},"op_add",[]],["app",{sourceInterval:[1269,1275]},"op_mul",[]],["app",{sourceInterval:[1278,1284]},"op_pow",[]],["app",{sourceInterval:[1287,1296]},"op_invert",[]]]],op_comma:["define",{sourceInterval:[1300,1314]},null,[],["terminal",{sourceInterval:[1311,1314]},","]],op_logic:["define",{sourceInterval:[1318,1340]},null,[],["alt",{sourceInterval:[1329,1340]},["terminal",{sourceInterval:[1329,1333]},"&&"],["terminal",{sourceInterval:[1336,1340]},"||"]]],op_orNull:["define",{sourceInterval:[1344,1360]},null,[],["terminal",{sourceInterval:[1356,1360]},"??"]],op_eq:["define",{sourceInterval:[1364,1383]},null,[],["alt",{sourceInterval:[1372,1383]},["terminal",{sourceInterval:[1372,1376]},"=="],["terminal",{sourceInterval:[1379,1383]},"!="]]],op_rel:["define",{sourceInterval:[1387,1419]},null,[],["alt",{sourceInterval:[1396,1419]},["terminal",{sourceInterval:[1396,1400]},"<="],["terminal",{sourceInterval:[1403,1406]},"<"],["terminal",{sourceInterval:[1409,1413]},">="],["terminal",{sourceInterval:[1416,1419]},">"]]],op_add:["define",{sourceInterval:[1423,1441]},null,[],["alt",{sourceInterval:[1432,1441]},["terminal",{sourceInterval:[1432,1435]},"-"],["terminal",{sourceInterval:[1438,1441]},"+"]]],op_mul:["define",{sourceInterval:[1445,1469]},null,[],["alt",{sourceInterval:[1454,1469]},["terminal",{sourceInterval:[1454,1457]},"%"],["terminal",{sourceInterval:[1460,1463]},"/"],["terminal",{sourceInterval:[1466,1469]},"*"]]],op_pow:["define",{sourceInterval:[1473,1485]},null,[],["terminal",{sourceInterval:[1482,1485]},"^"]],op_invert:["define",{sourceInterval:[1489,1504]},null,[],["terminal",{sourceInterval:[1501,1504]},"!"]]}]),lR.AdvScript=cR.makeRecipe(["grammar",{source:'AdvScript <: Base {\r\n  Main := Statement\r\n\r\n  Statement\r\n    = macroBegin Macro_Call optional<(Macro_Pipe | #pipeFlag)> (exprEnd | End) -- Macro\r\n    | Template End -- Inline\r\n    | Macro_Pipe (exprEnd | End) -- Pipe\r\n    | #pipeFlag (exprEnd | End) -- AnonymousPipe\r\n    | Exp (exprEnd | End) -- Exp\r\n    | End\r\n\r\n  macroBegin($macroBegin$) = "@"\r\n  tmplBegin($tmplBegin$) = "{{"\r\n  tmplEnd($tmplEnd$) = "}}"\r\n\r\n  Template = tmplBegin Exp optional<(Macro_Pipe | #pipeFlag)> tmplEnd\r\n\r\n  Macro_Call = (CallExpression | Macro_Call_Expr)\r\n  Macro_Pipe\r\n    = pipeFlag Macro_Call -- Call\r\n    | pipeFlag pipeExprBegin Exp -- Expr\r\n\r\n  pipeFlag($pipeFlag$) = token_split\r\n  pipeExprBegin($pipeExprBegin$) = "="\r\n\r\n  Macro_Call_Expr = #identifier optional<Params>\r\n\r\n  Params \r\n    = Param (#space | ",") Params -- multiple\r\n    | Param  ";"*                      -- single\r\n\r\n  Param = identifier "=" TopExp    -- setValue\r\n    | identifier                   -- setFlag\r\n\r\n  Array($Array$)= "[" ArrayElements "]"\r\n  ArraySpread($ArraySpread$) = SpreadExp_spread\r\n\r\n  ArrayElements($ArrayElements$) = ListOf<TopExp, ",">\r\n\r\n  CallExpression($CallExpression$) = #identifier "(" ListOf<TopExp, ","> ")"\r\n\r\n  Exp\r\n    = Exp op_comma Exp -- Comma\r\n    | TopExp\r\n\r\n  TopExp\r\n    = SpreadExp_spread -- ArraySpread\r\n    | #variableName "=" TopExp -- assign\r\n    | LogicExp\r\n\r\n  CatchOrNullExp($CatchOrNullExp$) = ~LogicExp_logic RelationExp\r\n  CatchOrNullExp2($CatchOrNullExp$) = ~OrNullExp_or LogicExp\r\n\r\n  LogicExp\r\n    = LogicExp op_logic CatchOrNullExp2  -- logic\r\n    | OrNullExp\r\n\r\n  OrNullExp\r\n    = OrNullExp op_orNull CatchOrNullExp  -- or\r\n    | EqualExp\r\n\r\n  EqualExp\r\n    = EqualExp op_eq EqualExp  -- eq\r\n    | RelationExp\r\n\r\n  RelationExp\r\n    = RelationExp op_rel RelationExp     -- rel\r\n    | SpreadExp\r\n\r\n  SpreadExp\r\n    = SpreadExp op_spread SpreadExp  -- spread\r\n    | AddExp\r\n\r\n  AddExp\r\n    = AddExp op_add MulExp  -- add\r\n    | MulExp\r\n\r\n  MulExp\r\n    = MulExp op_mul ExpExp  -- mul\r\n    | ExpExp\r\n\r\n  ExpExp\r\n    = PriExp op_pow ExpExp  -- pow\r\n    | IncrementExp\r\n    | op_invert PriExp -- invert\r\n    | ~number (op_add PriExp)   -- sign\r\n    | PriExp\r\n\r\n  IncrementExp($Exp$)\r\n    = #variableName op_increment -- after\r\n    | op_increment #variableName -- before\r\n\r\n  PriExp($Exp$) \r\n    = "(" Exp ")" -- paren // parenthesis\r\n    | CallExpression \r\n    | Array\r\n    | variableName\r\n    | literal\r\n  \r\n  op += op_increment | op_spread\r\n  op_increment = "--" | "++"\r\n  op_spread = "..."\r\n\r\n  token_split = "|"\r\n}'},"AdvScript",lR.Base,"Main",{Main:["override",{sourceInterval:[23,40]},null,[],["app",{sourceInterval:[31,40]},"Statement",[]]],Statement_Macro:["define",{sourceInterval:[63,144]},null,[],["seq",{sourceInterval:[63,135]},["app",{sourceInterval:[63,73]},"macroBegin",[]],["app",{sourceInterval:[74,84]},"Macro_Call",[]],["app",{sourceInterval:[85,119]},"optional",[["alt",{sourceInterval:[94,118]},["app",{sourceInterval:[95,105]},"Macro_Pipe",[]],["lex",{sourceInterval:[108,117]},["app",{sourceInterval:[109,117]},"pipeFlag",[]]]]]],["alt",{sourceInterval:[121,134]},["app",{sourceInterval:[121,128]},"exprEnd",[]],["app",{sourceInterval:[131,134]},"End",[]]]]],Statement_Inline:["define",{sourceInterval:[152,174]},null,[],["seq",{sourceInterval:[152,164]},["app",{sourceInterval:[152,160]},"Template",[]],["app",{sourceInterval:[161,164]},"End",[]]]],Statement_Pipe:["define",{sourceInterval:[182,216]},null,[],["seq",{sourceInterval:[182,208]},["app",{sourceInterval:[182,192]},"Macro_Pipe",[]],["alt",{sourceInterval:[194,207]},["app",{sourceInterval:[194,201]},"exprEnd",[]],["app",{sourceInterval:[204,207]},"End",[]]]]],Statement_AnonymousPipe:["define",{sourceInterval:[224,266]},null,[],["seq",{sourceInterval:[224,249]},["lex",{sourceInterval:[224,233]},["app",{sourceInterval:[225,233]},"pipeFlag",[]]],["alt",{sourceInterval:[235,248]},["app",{sourceInterval:[235,242]},"exprEnd",[]],["app",{sourceInterval:[245,248]},"End",[]]]]],Statement_Exp:["define",{sourceInterval:[274,300]},null,[],["seq",{sourceInterval:[274,293]},["app",{sourceInterval:[274,277]},"Exp",[]],["alt",{sourceInterval:[279,292]},["app",{sourceInterval:[279,286]},"exprEnd",[]],["app",{sourceInterval:[289,292]},"End",[]]]]],Statement:["define",{sourceInterval:[46,311]},null,[],["alt",{sourceInterval:[63,311]},["app",{sourceInterval:[63,135]},"Statement_Macro",[]],["app",{sourceInterval:[152,164]},"Statement_Inline",[]],["app",{sourceInterval:[182,208]},"Statement_Pipe",[]],["app",{sourceInterval:[224,249]},"Statement_AnonymousPipe",[]],["app",{sourceInterval:[274,293]},"Statement_Exp",[]],["app",{sourceInterval:[308,311]},"End",[]]]],macroBegin:["define",{sourceInterval:[317,347]},"$macroBegin$",[],["terminal",{sourceInterval:[344,347]},"@"]],tmplBegin:["define",{sourceInterval:[351,380]},"$tmplBegin$",[],["terminal",{sourceInterval:[376,380]},"{{"]],tmplEnd:["define",{sourceInterval:[384,409]},"$tmplEnd$",[],["terminal",{sourceInterval:[405,409]},"}}"]],Template:["define",{sourceInterval:[415,482]},null,[],["seq",{sourceInterval:[426,482]},["app",{sourceInterval:[426,435]},"tmplBegin",[]],["app",{sourceInterval:[436,439]},"Exp",[]],["app",{sourceInterval:[440,474]},"optional",[["alt",{sourceInterval:[449,473]},["app",{sourceInterval:[450,460]},"Macro_Pipe",[]],["lex",{sourceInterval:[463,472]},["app",{sourceInterval:[464,472]},"pipeFlag",[]]]]]],["app",{sourceInterval:[475,482]},"tmplEnd",[]]]],Macro_Call:["define",{sourceInterval:[488,535]},null,[],["alt",{sourceInterval:[501,535]},["app",{sourceInterval:[502,516]},"CallExpression",[]],["app",{sourceInterval:[519,534]},"Macro_Call_Expr",[]]]],Macro_Pipe_Call:["define",{sourceInterval:[557,584]},null,[],["seq",{sourceInterval:[557,576]},["app",{sourceInterval:[557,565]},"pipeFlag",[]],["app",{sourceInterval:[566,576]},"Macro_Call",[]]]],Macro_Pipe_Expr:["define",{sourceInterval:[592,626]},null,[],["seq",{sourceInterval:[592,618]},["app",{sourceInterval:[592,600]},"pipeFlag",[]],["app",{sourceInterval:[601,614]},"pipeExprBegin",[]],["app",{sourceInterval:[615,618]},"Exp",[]]]],Macro_Pipe:["define",{sourceInterval:[539,626]},null,[],["alt",{sourceInterval:[557,626]},["app",{sourceInterval:[557,576]},"Macro_Pipe_Call",[]],["app",{sourceInterval:[592,618]},"Macro_Pipe_Expr",[]]]],pipeFlag:["define",{sourceInterval:[632,666]},"$pipeFlag$",[],["app",{sourceInterval:[655,666]},"token_split",[]]],pipeExprBegin:["define",{sourceInterval:[670,706]},"$pipeExprBegin$",[],["terminal",{sourceInterval:[703,706]},"="]],Macro_Call_Expr:["define",{sourceInterval:[712,758]},null,[],["seq",{sourceInterval:[730,758]},["lex",{sourceInterval:[730,741]},["app",{sourceInterval:[731,741]},"identifier",[]]],["app",{sourceInterval:[742,758]},"optional",[["app",{sourceInterval:[751,757]},"Params",[]]]]]],Params_multiple:["define",{sourceInterval:[779,818]},null,[],["seq",{sourceInterval:[779,806]},["app",{sourceInterval:[779,784]},"Param",[]],["alt",{sourceInterval:[786,798]},["lex",{sourceInterval:[786,792]},["app",{sourceInterval:[787,792]},"space",[]]],["terminal",{sourceInterval:[795,798]},","]],["app",{sourceInterval:[800,806]},"Params",[]]]],Params_single:["define",{sourceInterval:[826,868]},null,[],["seq",{sourceInterval:[826,837]},["app",{sourceInterval:[826,831]},"Param",[]],["star",{sourceInterval:[833,837]},["terminal",{sourceInterval:[833,836]},";"]]]],Params:["define",{sourceInterval:[764,868]},null,[],["alt",{sourceInterval:[779,868]},["app",{sourceInterval:[779,806]},"Params_multiple",[]],["app",{sourceInterval:[826,837]},"Params_single",[]]]],Param_setValue:["define",{sourceInterval:[882,918]},null,[],["seq",{sourceInterval:[882,903]},["app",{sourceInterval:[882,892]},"identifier",[]],["terminal",{sourceInterval:[893,896]},"="],["app",{sourceInterval:[897,903]},"TopExp",[]]]],Param_setFlag:["define",{sourceInterval:[926,965]},null,[],["app",{sourceInterval:[926,936]},"identifier",[]]],Param:["define",{sourceInterval:[874,965]},null,[],["alt",{sourceInterval:[882,965]},["app",{sourceInterval:[882,903]},"Param_setValue",[]],["app",{sourceInterval:[926,936]},"Param_setFlag",[]]]],Array:["define",{sourceInterval:[971,1008]},"$Array$",[],["seq",{sourceInterval:[987,1008]},["terminal",{sourceInterval:[987,990]},"["],["app",{sourceInterval:[991,1004]},"ArrayElements",[]],["terminal",{sourceInterval:[1005,1008]},"]"]]],ArraySpread:["define",{sourceInterval:[1012,1057]},"$ArraySpread$",[],["app",{sourceInterval:[1041,1057]},"SpreadExp_spread",[]]],ArrayElements:["define",{sourceInterval:[1063,1115]},"$ArrayElements$",[],["app",{sourceInterval:[1096,1115]},"ListOf",[["app",{sourceInterval:[1103,1109]},"TopExp",[]],["terminal",{sourceInterval:[1111,1114]},","]]]],CallExpression:["define",{sourceInterval:[1121,1195]},"$CallExpression$",[],["seq",{sourceInterval:[1156,1195]},["lex",{sourceInterval:[1156,1167]},["app",{sourceInterval:[1157,1167]},"identifier",[]]],["terminal",{sourceInterval:[1168,1171]},"("],["app",{sourceInterval:[1172,1191]},"ListOf",[["app",{sourceInterval:[1179,1185]},"TopExp",[]],["terminal",{sourceInterval:[1187,1190]},","]]],["terminal",{sourceInterval:[1192,1195]},")"]]],Exp_Comma:["define",{sourceInterval:[1212,1237]},null,[],["seq",{sourceInterval:[1212,1228]},["app",{sourceInterval:[1212,1215]},"Exp",[]],["app",{sourceInterval:[1216,1224]},"op_comma",[]],["app",{sourceInterval:[1225,1228]},"Exp",[]]]],Exp:["define",{sourceInterval:[1201,1251]},null,[],["alt",{sourceInterval:[1212,1251]},["app",{sourceInterval:[1212,1228]},"Exp_Comma",[]],["app",{sourceInterval:[1245,1251]},"TopExp",[]]]],TopExp_ArraySpread:["define",{sourceInterval:[1271,1302]},null,[],["app",{sourceInterval:[1271,1287]},"SpreadExp_spread",[]]],TopExp_assign:["define",{sourceInterval:[1310,1344]},null,[],["seq",{sourceInterval:[1310,1334]},["lex",{sourceInterval:[1310,1323]},["app",{sourceInterval:[1311,1323]},"variableName",[]]],["terminal",{sourceInterval:[1324,1327]},"="],["app",{sourceInterval:[1328,1334]},"TopExp",[]]]],TopExp:["define",{sourceInterval:[1257,1360]},null,[],["alt",{sourceInterval:[1271,1360]},["app",{sourceInterval:[1271,1287]},"TopExp_ArraySpread",[]],["app",{sourceInterval:[1310,1334]},"TopExp_assign",[]],["app",{sourceInterval:[1352,1360]},"LogicExp",[]]]],CatchOrNullExp:["define",{sourceInterval:[1366,1428]},"$CatchOrNullExp$",[],["seq",{sourceInterval:[1401,1428]},["not",{sourceInterval:[1401,1416]},["app",{sourceInterval:[1402,1416]},"LogicExp_logic",[]]],["app",{sourceInterval:[1417,1428]},"RelationExp",[]]]],CatchOrNullExp2:["define",{sourceInterval:[1432,1490]},"$CatchOrNullExp$",[],["seq",{sourceInterval:[1468,1490]},["not",{sourceInterval:[1468,1481]},["app",{sourceInterval:[1469,1481]},"OrNullExp_or",[]]],["app",{sourceInterval:[1482,1490]},"LogicExp",[]]]],LogicExp_logic:["define",{sourceInterval:[1512,1555]},null,[],["seq",{sourceInterval:[1512,1545]},["app",{sourceInterval:[1512,1520]},"LogicExp",[]],["app",{sourceInterval:[1521,1529]},"op_logic",[]],["app",{sourceInterval:[1530,1545]},"CatchOrNullExp2",[]]]],LogicExp:["define",{sourceInterval:[1496,1572]},null,[],["alt",{sourceInterval:[1512,1572]},["app",{sourceInterval:[1512,1545]},"LogicExp_logic",[]],["app",{sourceInterval:[1563,1572]},"OrNullExp",[]]]],OrNullExp_or:["define",{sourceInterval:[1595,1636]},null,[],["seq",{sourceInterval:[1595,1629]},["app",{sourceInterval:[1595,1604]},"OrNullExp",[]],["app",{sourceInterval:[1605,1614]},"op_orNull",[]],["app",{sourceInterval:[1615,1629]},"CatchOrNullExp",[]]]],OrNullExp:["define",{sourceInterval:[1578,1652]},null,[],["alt",{sourceInterval:[1595,1652]},["app",{sourceInterval:[1595,1629]},"OrNullExp_or",[]],["app",{sourceInterval:[1644,1652]},"EqualExp",[]]]],EqualExp_eq:["define",{sourceInterval:[1674,1704]},null,[],["seq",{sourceInterval:[1674,1697]},["app",{sourceInterval:[1674,1682]},"EqualExp",[]],["app",{sourceInterval:[1683,1688]},"op_eq",[]],["app",{sourceInterval:[1689,1697]},"EqualExp",[]]]],EqualExp:["define",{sourceInterval:[1658,1723]},null,[],["alt",{sourceInterval:[1674,1723]},["app",{sourceInterval:[1674,1697]},"EqualExp_eq",[]],["app",{sourceInterval:[1712,1723]},"RelationExp",[]]]],RelationExp_rel:["define",{sourceInterval:[1748,1789]},null,[],["seq",{sourceInterval:[1748,1778]},["app",{sourceInterval:[1748,1759]},"RelationExp",[]],["app",{sourceInterval:[1760,1766]},"op_rel",[]],["app",{sourceInterval:[1767,1778]},"RelationExp",[]]]],RelationExp:["define",{sourceInterval:[1729,1806]},null,[],["alt",{sourceInterval:[1748,1806]},["app",{sourceInterval:[1748,1778]},"RelationExp_rel",[]],["app",{sourceInterval:[1797,1806]},"SpreadExp",[]]]],SpreadExp_spread:["define",{sourceInterval:[1829,1869]},null,[],["seq",{sourceInterval:[1829,1858]},["app",{sourceInterval:[1829,1838]},"SpreadExp",[]],["app",{sourceInterval:[1839,1848]},"op_spread",[]],["app",{sourceInterval:[1849,1858]},"SpreadExp",[]]]],SpreadExp:["define",{sourceInterval:[1812,1883]},null,[],["alt",{sourceInterval:[1829,1883]},["app",{sourceInterval:[1829,1858]},"SpreadExp_spread",[]],["app",{sourceInterval:[1877,1883]},"AddExp",[]]]],AddExp_add:["define",{sourceInterval:[1903,1931]},null,[],["seq",{sourceInterval:[1903,1923]},["app",{sourceInterval:[1903,1909]},"AddExp",[]],["app",{sourceInterval:[1910,1916]},"op_add",[]],["app",{sourceInterval:[1917,1923]},"MulExp",[]]]],AddExp:["define",{sourceInterval:[1889,1945]},null,[],["alt",{sourceInterval:[1903,1945]},["app",{sourceInterval:[1903,1923]},"AddExp_add",[]],["app",{sourceInterval:[1939,1945]},"MulExp",[]]]],MulExp_mul:["define",{sourceInterval:[1965,1993]},null,[],["seq",{sourceInterval:[1965,1985]},["app",{sourceInterval:[1965,1971]},"MulExp",[]],["app",{sourceInterval:[1972,1978]},"op_mul",[]],["app",{sourceInterval:[1979,1985]},"ExpExp",[]]]],MulExp:["define",{sourceInterval:[1951,2007]},null,[],["alt",{sourceInterval:[1965,2007]},["app",{sourceInterval:[1965,1985]},"MulExp_mul",[]],["app",{sourceInterval:[2001,2007]},"ExpExp",[]]]],ExpExp_pow:["define",{sourceInterval:[2027,2055]},null,[],["seq",{sourceInterval:[2027,2047]},["app",{sourceInterval:[2027,2033]},"PriExp",[]],["app",{sourceInterval:[2034,2040]},"op_pow",[]],["app",{sourceInterval:[2041,2047]},"ExpExp",[]]]],ExpExp_invert:["define",{sourceInterval:[2083,2109]},null,[],["seq",{sourceInterval:[2083,2099]},["app",{sourceInterval:[2083,2092]},"op_invert",[]],["app",{sourceInterval:[2093,2099]},"PriExp",[]]]],ExpExp_sign:["define",{sourceInterval:[2117,2150]},null,[],["seq",{sourceInterval:[2117,2140]},["not",{sourceInterval:[2117,2124]},["app",{sourceInterval:[2118,2124]},"number",[]]],["app",{sourceInterval:[2126,2132]},"op_add",[]],["app",{sourceInterval:[2133,2139]},"PriExp",[]]]],ExpExp:["define",{sourceInterval:[2013,2164]},null,[],["alt",{sourceInterval:[2027,2164]},["app",{sourceInterval:[2027,2047]},"ExpExp_pow",[]],["app",{sourceInterval:[2063,2075]},"IncrementExp",[]],["app",{sourceInterval:[2083,2099]},"ExpExp_invert",[]],["app",{sourceInterval:[2117,2140]},"ExpExp_sign",[]],["app",{sourceInterval:[2158,2164]},"PriExp",[]]]],IncrementExp_after:["define",{sourceInterval:[2197,2232]},null,[],["seq",{sourceInterval:[2197,2223]},["lex",{sourceInterval:[2197,2210]},["app",{sourceInterval:[2198,2210]},"variableName",[]]],["app",{sourceInterval:[2211,2223]},"op_increment",[]]]],IncrementExp_before:["define",{sourceInterval:[2240,2276]},null,[],["seq",{sourceInterval:[2240,2266]},["app",{sourceInterval:[2240,2252]},"op_increment",[]],["lex",{sourceInterval:[2253,2266]},["app",{sourceInterval:[2254,2266]},"variableName",[]]]]],IncrementExp:["define",{sourceInterval:[2170,2276]},"$Exp$",[],["alt",{sourceInterval:[2197,2276]},["app",{sourceInterval:[2197,2223]},"IncrementExp_after",[]],["app",{sourceInterval:[2240,2266]},"IncrementExp_before",[]]]],PriExp_paren:["define",{sourceInterval:[2304,2339]},null,[],["seq",{sourceInterval:[2304,2315]},["terminal",{sourceInterval:[2304,2307]},"("],["app",{sourceInterval:[2308,2311]},"Exp",[]],["terminal",{sourceInterval:[2312,2315]},")"]]],PriExp:["define",{sourceInterval:[2282,2410]},"$Exp$",[],["alt",{sourceInterval:[2304,2410]},["app",{sourceInterval:[2304,2315]},"PriExp_paren",[]],["app",{sourceInterval:[2347,2361]},"CallExpression",[]],["app",{sourceInterval:[2370,2375]},"Array",[]],["app",{sourceInterval:[2383,2395]},"variableName",[]],["app",{sourceInterval:[2403,2410]},"literal",[]]]],op:["extend",{sourceInterval:[2418,2448]},null,[],["alt",{sourceInterval:[2424,2448]},["app",{sourceInterval:[2424,2436]},"op_increment",[]],["app",{sourceInterval:[2439,2448]},"op_spread",[]]]],op_increment:["define",{sourceInterval:[2452,2478]},null,[],["alt",{sourceInterval:[2467,2478]},["terminal",{sourceInterval:[2467,2471]},"--"],["terminal",{sourceInterval:[2474,2478]},"++"]]],op_spread:["define",{sourceInterval:[2482,2499]},null,[],["terminal",{sourceInterval:[2494,2499]},"..."]],token_split:["define",{sourceInterval:[2505,2522]},null,[],["terminal",{sourceInterval:[2519,2522]},"|"]]}]),lR.AdvFountain=cR.makeRecipe(["grammar",{source:'AdvFountain <: AdvScript {\r\n  main = statment+ | end\r\n  statment = (content | errorBoundary)\r\n\r\n  parenWith<T> = bracketSyntaxInline<parenL, T, parenR> | bracketSyntaxInline<"（", T, "）">\r\n  parenStringWith<T> = bracketTextInline<parenL, T, parenR> | bracketTextInline<"（", T, "）">\r\n\r\n  bracketWith<T> = bracketSyntaxInline<bracketL, T, bracketR> | bracketSyntaxInline<"【", T, "】">\r\n  bracketStringWith<T> = bracketTextInline<bracketL, T, bracketR> | bracketTextInline<"【", T, "】">\r\n  \r\n\r\n  stringWith<Char> = stringify<Char+>\r\n\r\n  errorBoundary \r\n    = ignoreError\r\n    | logicError\r\n    | characterError\r\n    | commandError\r\n    | actionError\r\n    | otherError\r\n\r\n  characterError = statementOf<rawOf<startWith<sToken_character, (~lineBreak any)*>>>\r\n  actionError = linesOf<action_plain>\r\n  commandError = linesOf<command>\r\n  logicError = block_logic | logicStatment\r\n  ignoreError = linesOf<(comment | ignore<&emptyLine>)>\r\n  otherError = linesOf<~textSyntax_action rawOf<(~lineBreak any)+>> -- raw\r\n\r\n  comment\r\n    = comment_inline       -- notes\r\n    | bracketTextInline<"[[", any, ("]]" | &lineBreak)>  -- inline\r\n    | startWith<startWith<"//", linePad>, stringify<endWith<escWith<lineBreak>*, &lineEnd>>> -- single\r\n    | bracketText<join<"/", "*"+>, any, join<"*"+, "/">>       -- multi\r\n\r\n  block_comment($Comment$) = groupUntil<comment, &ignore<(logicStatment | block_command | block_textSyntax | errorBoundary)>>\r\n  groupUntil<T, UNTIL> = syntaxListOf<T, blockEndOf<UNTIL>>\r\n\r\n  content\r\n    = block_logic\r\n    | block_comment\r\n    | emptyLine -- empty\r\n    | block_command\r\n    | block_textSyntax\r\n\r\n  block_textSyntax = block_dialogue | block_action\r\n\r\n  inlineSyntax = ~command_pageBreak command | comment\r\n\r\n  contentBlockEnd = startWith<(lineOf<textSyntax_space> | lineEnd), (textSyntax_action | logicStatment)>\r\n\r\n  block_action($ActionBlock$) = contentBlockLinesOf<action_start, action_content, action_end>\r\n  action_start = ~(command_transition | command_pageBreak) action_plain\r\n  action_plain = textSyntax_action | textSyntax_space\r\n  action_content = inlineSyntax | textSyntax_action | textSyntax_space\r\n  action_end = blockEndOf<&contentBlockEnd>\r\n  \r\n  block_dialogue($CharacterBlock$) = contentBlockLinesOf<character_call, dialogue_content, dialogue_end>\r\n  character_call = padWith<character_name> (optional<character_call_macro> | optional<macro>)\r\n  character_call_macro = character_modifier optional<macro>\r\n  character_modifier = parenStringWith<any>\r\n  dialogue_action = padWith<character_call_macro>\r\n  dialogue_content = dialogue_action | inlineSyntax | leftPadWith<textSyntax_dialogue> | textSyntax_space\r\n  character_name\r\n    = join<upper, (upper|digit|"_")+> -- plain\r\n    | startWith<"@", stringify<(~(character_modifier | "\\n") any)+>> -- esc\r\n  dialogue_end = blockEndOf<&contentBlockEnd>\r\n  \r\n  block_command($CommandBlock$) = groupUntil<command, &(comment)>\r\n  command = command_transition | command_macro | command_pageBreak\r\n  command_transition($Command:Transition$) = ">" leftPadWith<stringify<escWith<("[" | lineBreak | "<")>+>> (~"<" optional<macro>)\r\n  command_macro($Command:CallMacro$) = macro\r\n  command_pageBreak($Command:PageBreak$) = "==="\r\n\r\n\r\n  sToken = \r\n    | sToken_character\r\n    | sToken_action\r\n    | sToken_lyrics\r\n  \r\n  sToken_character($sToken_character$) = "@"\r\n  sToken_action($sToken_action$) = "!"\r\n  sToken_lyrics = "~"\r\n\r\n  textSyntax = textSyntax_action | textSyntax_dialogue | textSyntax_space\r\n\r\n  textSyntax_action = startWith<~sToken_character &any, (sToken_action | sToken_lyrics)?> rightPadWith<textContent> optional<expr_pipe>\r\n\r\n  textSyntax_dialogue = sToken_lyrics? &(~sToken_action any) rightPadWith<textContent> optional<expr_pipe>\r\n  textSyntax_space = lineSpace+\r\n\r\n  emptyLine($EmptyLine$) = lineBreak+\r\n\r\n  blockEnd($blockEnd$) = linePad (lineBreak | end)\r\n  blockEndOf<T>($blockEnd$) = blockEnd | T | &logicStatment\r\n\r\n  lineOf<T> = endWith<T, lineEnd>\r\n  linesOf<T> = endWith<lineOf<T>+, emptyLine?>\r\n\r\n  syntaxListOf<Child, End> = syntaxBlockLinesOf<Child, syntaxOf<(Child | &ignore<lineSpace+>)>, End>\r\n  syntaxOf<T> = T | startWith<ignore<emptyLine+>, ~errorBoundary T>\r\n\r\n  contentLinesOf<Child, End> = contentBlockLinesOf<Child, Child, End>\r\n  // 块内语句之间可以使用\r\n  syntaxBlockLinesOf<Begin, Child, End> = syntaxBlockOf<lineOf<Begin>, lineOf<Child>, End>\r\n  contentBlockLinesOf<Begin, Child, End> = contentBlockOf<lineOf<Begin>, lineOf<Child>, End>\r\n\r\n  \r\n  syntaxBlockOf<Begin, Child, End> = Begin Child* End\r\n  contentBlockOf<Begin, Child, End> = Begin Child* End\r\n  nonemptyBlockOf<Begin, Child, End> = Begin Child+ End\r\n  nonemptyContentBlockOf<Begin, Child, End> = Begin Child+ End\r\n\r\n  statmentBreak($StatmentBreak$) = (block_comment | emptyLine)\r\n  startStatmentOf<T> = bracketSyntaxInline<&(statmentBreak*), T, statmentBreak+>\r\n  statementOf<T> = bracketSyntaxInline<&(statmentBreak*), startWith<linePad, T>, (statmentBreak+ | end)>\r\n\r\n  textContent = styled_centered<(centeredContent | escToken)+> -- centered\r\n    | withText<(textPiece | escToken)+> -- plain\r\n\r\n  // textSyntax_paren<Content> \r\n\r\n  styled_centered<T> = centeredL T centeredR\r\n  centeredL = rightPadWith<">">\r\n  centeredR = leftPadWith<"<">\r\n\r\n  centeredContent = styled<centeredContent> \r\n    | template\r\n    | plainTextUntil<(plainText_until | centeredR)>\r\n  \r\n  withText<T> = T\r\n  textPiece\r\n   = styled<textPiece> -- styled\r\n    | template\r\n    | plainText\r\n\r\n  escToken = oresc<~token_split char>\r\n\r\n  // fountain中的强调（Emphasis）语法\r\n  styled<T>($Emphasis$) =\r\n    | "**" withText<(~(styled_bold<T>) T)+> "**" -- bold\r\n    | "*" withText<(~(styled_italic<T>) T)+> "*" -- italic\r\n    | "_" withText<(~(styled_underline<T>) T)+> "_" -- underline\r\n\r\n  plainText_until = comment | template | macro | token_split | lineEnd | "_" | "*"\r\n  plainText($plainText$) = plainTextUntil<plainText_until>\r\n  plainTextUntil<Until> = rawOf<strictEscWith<char, (Until | lineBreak)>+> // app\r\n  rawOf<T> = stringify<T>\r\n\r\n  expr($Expr$)\r\n    = expr_template\r\n    | expr_logic\r\n    | expr_auto\r\n    | expr_pipe\r\n\r\n  expr_template = embbedExprUntil<"}}">\r\n  expr_logic = embbedExprUntil<lineBreak>\r\n  expr_auto = embbedExprUntil<")">\r\n  expr_pipe($PipeExp$) = token_split embbedExprUntil<token_split>?\r\n\r\n  template($TemplateExp$)\r\n    = bracketSyntaxInline<tokenOf<"[">, plainTextUntil<"](">, tokenOf<"]">> bracketSyntaxInline<"(", expr_auto, ")"> -- label\r\n    | bracketSyntaxInline<"{{", optional<expr_template>, "}}"> -- native \r\n    | comment_inline\r\n    | rawOf<bracketSyntaxInline<"[", embbedExprUntil<"]">, "]">> -- macro\r\n\r\n  macro = bracketSyntaxInline<tokenOf<"[">, embbedExprUntil<"]">, tokenOf<"]">>\r\n  \r\n  // awesomeExpr($awesomeExpr$) = embbedExprUntil<("[" | "]" | "(" | ")" | "}}" | "{{")>\r\n  embbedExprUntil<Exclude>($awesomeExpr$) = stringify<(sourceOf<string> | strictEscWith<char, (Exclude | lineBreak)>)+>\r\n\r\n\r\n  block_logic($LogicStatment$)\r\n    = statementOf<logicSyntax_let>\r\n    | logic_blockIf<content>\r\n    | logic_blockForeach<content>\r\n    | logic_blockWhile<content>\r\n    // | contentBlockLinesOf<logic_block_begin, storyLine, statementOf<logic_end>>\r\n  \r\n  logicSyntax($logicSyntax$)\r\n    = ctlKey<scriptToken_var> leftPadWith<expr_logic> -- let\r\n    | ctlKey<~scriptToken_var scriptToken>\r\n  logicStatment = statementOf<padWith<logicSyntax>>\r\n\r\n  logic_blockIf<T> = statementOf<logic_if> leftPadWith<T>* (statementOf<logic_elseIf> T*)* (statementOf<logic_else> T*)? statementOf<logic_end>\r\n  logic_if = ctlKey<scriptToken_if> padWith<expr_logic>\r\n  logic_elseIf = ctlKey<scriptToken_elseif> padWith<expr_logic>\r\n  logic_else = ctlKey<scriptToken_else>\r\n\r\n  scriptToken = scriptToken_var | scriptToken_if | scriptToken_elseif | scriptToken_else | scriptToken_end | scriptToken_for | scriptToken_while\r\n\r\n  scriptToken_var = "let"\r\n  scriptToken_if = "if"\r\n  scriptToken_elseif = "elseif"\r\n  scriptToken_else = "else"\r\n  scriptToken_end = "end"\r\n  scriptToken_for = "foreach"\r\n  scriptToken_in = "in"\r\n  scriptToken_while = "while"\r\n\r\n\r\n  logic_blockForeach<T> = syntaxBlockOf<lineOf<logic_foreach>, leftPadWith<T>, statementOf<logic_end>>\r\n  logic_foreach = ctlKey<scriptToken_for> preSpaceWith<variableName> preSpaceWith<scriptToken_in> preSpaceWith<expr_logic>\r\n\r\n  logic_blockWhile<T> = syntaxBlockOf<lineOf<logic_while>, leftPadWith<T>, statementOf<logic_end>>\r\n  logic_while = ctlKey<scriptToken_while> preSpaceWith<expr_logic>\r\n\r\n  ctlKey<key> = leftPadWith<join<token_split, key>> // control statment keyword\r\n\r\n  logic_end = ctlKey<scriptToken_end>\r\n\r\n  tokens\r\n    = token*\r\n    \r\n  token\r\n    = comment \r\n    // | kwSelectorPrefix | kwSelectorPart \r\n    | valueToken \r\n    | keyword \r\n    // | instVarAccess\r\n    // | javaStyleSelector \r\n    // | binSelector \r\n    | any\r\n  valueToken = sToken\r\n  // instVarAccess\r\n  //   = "." spaces varName ~(spaces "(")\r\n  // javaStyleSelector\r\n  //   = "." spaces varName &(spaces "(")\r\n  // kwSelectorPrefix\r\n  //   = varName &(space+ expStart)\r\n  // expStart\r\n  //   = valueToken | "(" | "{"\r\n\r\n  keyword = ctlKey<scriptToken>\r\n\r\n}'},"AdvFountain",lR.AdvScript,"Main",{main:["define",{sourceInterval:[30,52]},null,[],["alt",{sourceInterval:[37,52]},["plus",{sourceInterval:[37,46]},["app",{sourceInterval:[37,45]},"statment",[]]],["app",{sourceInterval:[49,52]},"end",[]]]],statment:["define",{sourceInterval:[56,92]},null,[],["alt",{sourceInterval:[67,92]},["app",{sourceInterval:[68,75]},"content",[]],["app",{sourceInterval:[78,91]},"errorBoundary",[]]]],parenWith:["define",{sourceInterval:[98,186]},null,["T"],["alt",{sourceInterval:[113,186]},["app",{sourceInterval:[113,151]},"bracketSyntaxInline",[["app",{sourceInterval:[133,139]},"parenL",[]],["param",{sourceInterval:[141,142]},0],["app",{sourceInterval:[144,150]},"parenR",[]]]],["app",{sourceInterval:[154,186]},"bracketSyntaxInline",[["terminal",{sourceInterval:[174,177]},"（"],["param",{sourceInterval:[179,180]},0],["terminal",{sourceInterval:[182,185]},"）"]]]]],parenStringWith:["define",{sourceInterval:[190,280]},null,["T"],["alt",{sourceInterval:[211,280]},["app",{sourceInterval:[211,247]},"bracketTextInline",[["app",{sourceInterval:[229,235]},"parenL",[]],["param",{sourceInterval:[237,238]},0],["app",{sourceInterval:[240,246]},"parenR",[]]]],["app",{sourceInterval:[250,280]},"bracketTextInline",[["terminal",{sourceInterval:[268,271]},"（"],["param",{sourceInterval:[273,274]},0],["terminal",{sourceInterval:[276,279]},"）"]]]]],bracketWith:["define",{sourceInterval:[286,380]},null,["T"],["alt",{sourceInterval:[303,380]},["app",{sourceInterval:[303,345]},"bracketSyntaxInline",[["app",{sourceInterval:[323,331]},"bracketL",[]],["param",{sourceInterval:[333,334]},0],["app",{sourceInterval:[336,344]},"bracketR",[]]]],["app",{sourceInterval:[348,380]},"bracketSyntaxInline",[["terminal",{sourceInterval:[368,371]},"【"],["param",{sourceInterval:[373,374]},0],["terminal",{sourceInterval:[376,379]},"】"]]]]],bracketStringWith:["define",{sourceInterval:[384,480]},null,["T"],["alt",{sourceInterval:[407,480]},["app",{sourceInterval:[407,447]},"bracketTextInline",[["app",{sourceInterval:[425,433]},"bracketL",[]],["param",{sourceInterval:[435,436]},0],["app",{sourceInterval:[438,446]},"bracketR",[]]]],["app",{sourceInterval:[450,480]},"bracketTextInline",[["terminal",{sourceInterval:[468,471]},"【"],["param",{sourceInterval:[473,474]},0],["terminal",{sourceInterval:[476,479]},"】"]]]]],stringWith:["define",{sourceInterval:[490,525]},null,["Char"],["app",{sourceInterval:[509,525]},"stringify",[["plus",{sourceInterval:[519,524]},["param",{sourceInterval:[519,523]},0]]]]],errorBoundary:["define",{sourceInterval:[531,661]},null,[],["alt",{sourceInterval:[553,661]},["app",{sourceInterval:[553,564]},"ignoreError",[]],["app",{sourceInterval:[572,582]},"logicError",[]],["app",{sourceInterval:[590,604]},"characterError",[]],["app",{sourceInterval:[612,624]},"commandError",[]],["app",{sourceInterval:[632,643]},"actionError",[]],["app",{sourceInterval:[651,661]},"otherError",[]]]],characterError:["define",{sourceInterval:[667,750]},null,[],["app",{sourceInterval:[684,750]},"statementOf",[["app",{sourceInterval:[696,749]},"rawOf",[["app",{sourceInterval:[702,748]},"startWith",[["app",{sourceInterval:[712,728]},"sToken_character",[]],["star",{sourceInterval:[730,747]},["seq",{sourceInterval:[731,745]},["not",{sourceInterval:[731,741]},["app",{sourceInterval:[732,741]},"lineBreak",[]]],["app",{sourceInterval:[742,745]},"any",[]]]]]]]]]]],actionError:["define",{sourceInterval:[754,789]},null,[],["app",{sourceInterval:[768,789]},"linesOf",[["app",{sourceInterval:[776,788]},"action_plain",[]]]]],commandError:["define",{sourceInterval:[793,824]},null,[],["app",{sourceInterval:[808,824]},"linesOf",[["app",{sourceInterval:[816,823]},"command",[]]]]],logicError:["define",{sourceInterval:[828,868]},null,[],["alt",{sourceInterval:[841,868]},["app",{sourceInterval:[841,852]},"block_logic",[]],["app",{sourceInterval:[855,868]},"logicStatment",[]]]],ignoreError:["define",{sourceInterval:[872,925]},null,[],["app",{sourceInterval:[886,925]},"linesOf",[["alt",{sourceInterval:[894,924]},["app",{sourceInterval:[895,902]},"comment",[]],["app",{sourceInterval:[905,923]},"ignore",[["lookahead",{sourceInterval:[912,922]},["app",{sourceInterval:[913,922]},"emptyLine",[]]]]]]]]],otherError_raw:["define",{sourceInterval:[942,1001]},null,[],["app",{sourceInterval:[942,994]},"linesOf",[["seq",{sourceInterval:[950,993]},["not",{sourceInterval:[950,968]},["app",{sourceInterval:[951,968]},"textSyntax_action",[]]],["app",{sourceInterval:[969,993]},"rawOf",[["plus",{sourceInterval:[975,992]},["seq",{sourceInterval:[976,990]},["not",{sourceInterval:[976,986]},["app",{sourceInterval:[977,986]},"lineBreak",[]]],["app",{sourceInterval:[987,990]},"any",[]]]]]]]]]],otherError:["define",{sourceInterval:[929,1001]},null,[],["app",{sourceInterval:[942,1001]},"otherError_raw",[]]],comment_notes:["define",{sourceInterval:[1022,1051]},null,[],["app",{sourceInterval:[1022,1036]},"comment_inline",[]]],comment_inline:["define",{sourceInterval:[1059,1119]},null,[],["app",{sourceInterval:[1059,1108]},"bracketTextInline",[["terminal",{sourceInterval:[1077,1081]},"[["],["app",{sourceInterval:[1083,1086]},"any",[]],["alt",{sourceInterval:[1088,1107]},["terminal",{sourceInterval:[1089,1093]},"]]"],["lookahead",{sourceInterval:[1096,1106]},["app",{sourceInterval:[1097,1106]},"lineBreak",[]]]]]]],comment_single:["define",{sourceInterval:[1127,1223]},null,[],["app",{sourceInterval:[1127,1213]},"startWith",[["app",{sourceInterval:[1137,1161]},"startWith",[["terminal",{sourceInterval:[1147,1151]},"//"],["app",{sourceInterval:[1153,1160]},"linePad",[]]]],["app",{sourceInterval:[1163,1212]},"stringify",[["app",{sourceInterval:[1173,1211]},"endWith",[["star",{sourceInterval:[1181,1200]},["app",{sourceInterval:[1181,1199]},"escWith",[["app",{sourceInterval:[1189,1198]},"lineBreak",[]]]]],["lookahead",{sourceInterval:[1202,1210]},["app",{sourceInterval:[1203,1210]},"lineEnd",[]]]]]]]]]],comment_multi:["define",{sourceInterval:[1231,1296]},null,[],["app",{sourceInterval:[1231,1281]},"bracketText",[["app",{sourceInterval:[1243,1258]},"join",[["terminal",{sourceInterval:[1248,1251]},"/"],["plus",{sourceInterval:[1253,1257]},["terminal",{sourceInterval:[1253,1256]},"*"]]]],["app",{sourceInterval:[1260,1263]},"any",[]],["app",{sourceInterval:[1265,1280]},"join",[["plus",{sourceInterval:[1270,1274]},["terminal",{sourceInterval:[1270,1273]},"*"]],["terminal",{sourceInterval:[1276,1279]},"/"]]]]]],comment:["define",{sourceInterval:[1007,1296]},null,[],["alt",{sourceInterval:[1022,1296]},["app",{sourceInterval:[1022,1036]},"comment_notes",[]],["app",{sourceInterval:[1059,1108]},"comment_inline",[]],["app",{sourceInterval:[1127,1213]},"comment_single",[]],["app",{sourceInterval:[1231,1281]},"comment_multi",[]]]],block_comment:["define",{sourceInterval:[1302,1425]},"$Comment$",[],["app",{sourceInterval:[1329,1425]},"groupUntil",[["app",{sourceInterval:[1340,1347]},"comment",[]],["lookahead",{sourceInterval:[1349,1424]},["app",{sourceInterval:[1350,1424]},"ignore",[["alt",{sourceInterval:[1357,1423]},["app",{sourceInterval:[1358,1371]},"logicStatment",[]],["app",{sourceInterval:[1374,1387]},"block_command",[]],["app",{sourceInterval:[1390,1406]},"block_textSyntax",[]],["app",{sourceInterval:[1409,1422]},"errorBoundary",[]]]]]]]]],groupUntil:["define",{sourceInterval:[1429,1486]},null,["T","UNTIL"],["app",{sourceInterval:[1452,1486]},"syntaxListOf",[["param",{sourceInterval:[1465,1466]},0],["app",{sourceInterval:[1468,1485]},"blockEndOf",[["param",{sourceInterval:[1479,1484]},1]]]]]],content_empty:["define",{sourceInterval:[1547,1565]},null,[],["app",{sourceInterval:[1547,1556]},"emptyLine",[]]],content:["define",{sourceInterval:[1492,1610]},null,[],["alt",{sourceInterval:[1507,1610]},["app",{sourceInterval:[1507,1518]},"block_logic",[]],["app",{sourceInterval:[1526,1539]},"block_comment",[]],["app",{sourceInterval:[1547,1556]},"content_empty",[]],["app",{sourceInterval:[1573,1586]},"block_command",[]],["app",{sourceInterval:[1594,1610]},"block_textSyntax",[]]]],block_textSyntax:["define",{sourceInterval:[1616,1664]},null,[],["alt",{sourceInterval:[1635,1664]},["app",{sourceInterval:[1635,1649]},"block_dialogue",[]],["app",{sourceInterval:[1652,1664]},"block_action",[]]]],inlineSyntax:["define",{sourceInterval:[1670,1721]},null,[],["alt",{sourceInterval:[1685,1721]},["seq",{sourceInterval:[1685,1711]},["not",{sourceInterval:[1685,1703]},["app",{sourceInterval:[1686,1703]},"command_pageBreak",[]]],["app",{sourceInterval:[1704,1711]},"command",[]]],["app",{sourceInterval:[1714,1721]},"comment",[]]]],contentBlockEnd:["define",{sourceInterval:[1727,1829]},null,[],["app",{sourceInterval:[1745,1829]},"startWith",[["alt",{sourceInterval:[1755,1791]},["app",{sourceInterval:[1756,1780]},"lineOf",[["app",{sourceInterval:[1763,1779]},"textSyntax_space",[]]]],["app",{sourceInterval:[1783,1790]},"lineEnd",[]]],["alt",{sourceInterval:[1793,1828]},["app",{sourceInterval:[1794,1811]},"textSyntax_action",[]],["app",{sourceInterval:[1814,1827]},"logicStatment",[]]]]]],block_action:["define",{sourceInterval:[1835,1926]},"$ActionBlock$",[],["app",{sourceInterval:[1865,1926]},"contentBlockLinesOf",[["app",{sourceInterval:[1885,1897]},"action_start",[]],["app",{sourceInterval:[1899,1913]},"action_content",[]],["app",{sourceInterval:[1915,1925]},"action_end",[]]]]],action_start:["define",{sourceInterval:[1930,1999]},null,[],["seq",{sourceInterval:[1945,1999]},["not",{sourceInterval:[1945,1986]},["alt",{sourceInterval:[1947,1985]},["app",{sourceInterval:[1947,1965]},"command_transition",[]],["app",{sourceInterval:[1968,1985]},"command_pageBreak",[]]]],["app",{sourceInterval:[1987,1999]},"action_plain",[]]]],action_plain:["define",{sourceInterval:[2003,2054]},null,[],["alt",{sourceInterval:[2018,2054]},["app",{sourceInterval:[2018,2035]},"textSyntax_action",[]],["app",{sourceInterval:[2038,2054]},"textSyntax_space",[]]]],action_content:["define",{sourceInterval:[2058,2126]},null,[],["alt",{sourceInterval:[2075,2126]},["app",{sourceInterval:[2075,2087]},"inlineSyntax",[]],["app",{sourceInterval:[2090,2107]},"textSyntax_action",[]],["app",{sourceInterval:[2110,2126]},"textSyntax_space",[]]]],action_end:["define",{sourceInterval:[2130,2171]},null,[],["app",{sourceInterval:[2143,2171]},"blockEndOf",[["lookahead",{sourceInterval:[2154,2170]},["app",{sourceInterval:[2155,2170]},"contentBlockEnd",[]]]]]],block_dialogue:["define",{sourceInterval:[2179,2281]},"$CharacterBlock$",[],["app",{sourceInterval:[2214,2281]},"contentBlockLinesOf",[["app",{sourceInterval:[2234,2248]},"character_call",[]],["app",{sourceInterval:[2250,2266]},"dialogue_content",[]],["app",{sourceInterval:[2268,2280]},"dialogue_end",[]]]]],character_call:["define",{sourceInterval:[2285,2376]},null,[],["seq",{sourceInterval:[2302,2376]},["app",{sourceInterval:[2302,2325]},"padWith",[["app",{sourceInterval:[2310,2324]},"character_name",[]]]],["alt",{sourceInterval:[2327,2375]},["app",{sourceInterval:[2327,2357]},"optional",[["app",{sourceInterval:[2336,2356]},"character_call_macro",[]]]],["app",{sourceInterval:[2360,2375]},"optional",[["app",{sourceInterval:[2369,2374]},"macro",[]]]]]]],character_call_macro:["define",{sourceInterval:[2380,2437]},null,[],["seq",{sourceInterval:[2403,2437]},["app",{sourceInterval:[2403,2421]},"character_modifier",[]],["app",{sourceInterval:[2422,2437]},"optional",[["app",{sourceInterval:[2431,2436]},"macro",[]]]]]],character_modifier:["define",{sourceInterval:[2441,2482]},null,[],["app",{sourceInterval:[2462,2482]},"parenStringWith",[["app",{sourceInterval:[2478,2481]},"any",[]]]]],dialogue_action:["define",{sourceInterval:[2486,2533]},null,[],["app",{sourceInterval:[2504,2533]},"padWith",[["app",{sourceInterval:[2512,2532]},"character_call_macro",[]]]]],dialogue_content:["define",{sourceInterval:[2537,2640]},null,[],["alt",{sourceInterval:[2556,2640]},["app",{sourceInterval:[2556,2571]},"dialogue_action",[]],["app",{sourceInterval:[2574,2586]},"inlineSyntax",[]],["app",{sourceInterval:[2589,2621]},"leftPadWith",[["app",{sourceInterval:[2601,2620]},"textSyntax_dialogue",[]]]],["app",{sourceInterval:[2624,2640]},"textSyntax_space",[]]]],character_name_plain:["define",{sourceInterval:[2666,2706]},null,[],["app",{sourceInterval:[2666,2697]},"join",[["app",{sourceInterval:[2671,2676]},"upper",[]],["plus",{sourceInterval:[2678,2696]},["alt",{sourceInterval:[2679,2694]},["app",{sourceInterval:[2679,2684]},"upper",[]],["app",{sourceInterval:[2685,2690]},"digit",[]],["terminal",{sourceInterval:[2691,2694]},"_"]]]]]],character_name_esc:["define",{sourceInterval:[2714,2783]},null,[],["app",{sourceInterval:[2714,2776]},"startWith",[["terminal",{sourceInterval:[2724,2727]},"@"],["app",{sourceInterval:[2729,2775]},"stringify",[["plus",{sourceInterval:[2739,2774]},["seq",{sourceInterval:[2740,2772]},["not",{sourceInterval:[2740,2768]},["alt",{sourceInterval:[2742,2767]},["app",{sourceInterval:[2742,2760]},"character_modifier",[]],["terminal",{sourceInterval:[2763,2767]},"\n"]]],["app",{sourceInterval:[2769,2772]},"any",[]]]]]]]]],character_name:["define",{sourceInterval:[2644,2783]},null,[],["alt",{sourceInterval:[2666,2783]},["app",{sourceInterval:[2666,2697]},"character_name_plain",[]],["app",{sourceInterval:[2714,2776]},"character_name_esc",[]]]],dialogue_end:["define",{sourceInterval:[2787,2830]},null,[],["app",{sourceInterval:[2802,2830]},"blockEndOf",[["lookahead",{sourceInterval:[2813,2829]},["app",{sourceInterval:[2814,2829]},"contentBlockEnd",[]]]]]],block_command:["define",{sourceInterval:[2838,2901]},"$CommandBlock$",[],["app",{sourceInterval:[2870,2901]},"groupUntil",[["app",{sourceInterval:[2881,2888]},"command",[]],["lookahead",{sourceInterval:[2890,2900]},["app",{sourceInterval:[2892,2899]},"comment",[]]]]]],command:["define",{sourceInterval:[2905,2969]},null,[],["alt",{sourceInterval:[2915,2969]},["app",{sourceInterval:[2915,2933]},"command_transition",[]],["app",{sourceInterval:[2936,2949]},"command_macro",[]],["app",{sourceInterval:[2952,2969]},"command_pageBreak",[]]]],command_transition:["define",{sourceInterval:[2973,3100]},"$Command:Transition$",[],["seq",{sourceInterval:[3016,3100]},["terminal",{sourceInterval:[3016,3019]},">"],["app",{sourceInterval:[3020,3077]},"leftPadWith",[["app",{sourceInterval:[3032,3076]},"stringify",[["plus",{sourceInterval:[3042,3075]},["app",{sourceInterval:[3042,3074]},"escWith",[["alt",{sourceInterval:[3050,3073]},["terminal",{sourceInterval:[3051,3054]},"["],["app",{sourceInterval:[3057,3066]},"lineBreak",[]],["terminal",{sourceInterval:[3069,3072]},"<"]]]]]]]]],["not",{sourceInterval:[3079,3083]},["terminal",{sourceInterval:[3080,3083]},"<"]],["app",{sourceInterval:[3084,3099]},"optional",[["app",{sourceInterval:[3093,3098]},"macro",[]]]]]],command_macro:["define",{sourceInterval:[3104,3146]},"$Command:CallMacro$",[],["app",{sourceInterval:[3141,3146]},"macro",[]]],command_pageBreak:["define",{sourceInterval:[3150,3196]},"$Command:PageBreak$",[],["terminal",{sourceInterval:[3191,3196]},"==="]],sToken:["define",{sourceInterval:[3204,3279]},null,[],["alt",{sourceInterval:[3219,3279]},["app",{sourceInterval:[3221,3237]},"sToken_character",[]],["app",{sourceInterval:[3245,3258]},"sToken_action",[]],["app",{sourceInterval:[3266,3279]},"sToken_lyrics",[]]]],sToken_character:["define",{sourceInterval:[3287,3329]},"$sToken_character$",[],["terminal",{sourceInterval:[3326,3329]},"@"]],sToken_action:["define",{sourceInterval:[3333,3369]},"$sToken_action$",[],["terminal",{sourceInterval:[3366,3369]},"!"]],sToken_lyrics:["define",{sourceInterval:[3373,3392]},null,[],["terminal",{sourceInterval:[3389,3392]},"~"]],textSyntax:["define",{sourceInterval:[3398,3469]},null,[],["alt",{sourceInterval:[3411,3469]},["app",{sourceInterval:[3411,3428]},"textSyntax_action",[]],["app",{sourceInterval:[3431,3450]},"textSyntax_dialogue",[]],["app",{sourceInterval:[3453,3469]},"textSyntax_space",[]]]],textSyntax_action:["define",{sourceInterval:[3475,3608]},null,[],["seq",{sourceInterval:[3495,3608]},["app",{sourceInterval:[3495,3562]},"startWith",[["seq",{sourceInterval:[3505,3527]},["not",{sourceInterval:[3505,3522]},["app",{sourceInterval:[3506,3522]},"sToken_character",[]]],["lookahead",{sourceInterval:[3523,3527]},["app",{sourceInterval:[3524,3527]},"any",[]]]],["opt",{sourceInterval:[3529,3561]},["alt",{sourceInterval:[3530,3559]},["app",{sourceInterval:[3530,3543]},"sToken_action",[]],["app",{sourceInterval:[3546,3559]},"sToken_lyrics",[]]]]]],["app",{sourceInterval:[3563,3588]},"rightPadWith",[["app",{sourceInterval:[3576,3587]},"textContent",[]]]],["app",{sourceInterval:[3589,3608]},"optional",[["app",{sourceInterval:[3598,3607]},"expr_pipe",[]]]]]],textSyntax_dialogue:["define",{sourceInterval:[3614,3718]},null,[],["seq",{sourceInterval:[3636,3718]},["opt",{sourceInterval:[3636,3650]},["app",{sourceInterval:[3636,3649]},"sToken_lyrics",[]]],["lookahead",{sourceInterval:[3651,3672]},["seq",{sourceInterval:[3653,3671]},["not",{sourceInterval:[3653,3667]},["app",{sourceInterval:[3654,3667]},"sToken_action",[]]],["app",{sourceInterval:[3668,3671]},"any",[]]]],["app",{sourceInterval:[3673,3698]},"rightPadWith",[["app",{sourceInterval:[3686,3697]},"textContent",[]]]],["app",{sourceInterval:[3699,3718]},"optional",[["app",{sourceInterval:[3708,3717]},"expr_pipe",[]]]]]],textSyntax_space:["define",{sourceInterval:[3722,3751]},null,[],["plus",{sourceInterval:[3741,3751]},["app",{sourceInterval:[3741,3750]},"lineSpace",[]]]],emptyLine:["define",{sourceInterval:[3757,3792]},"$EmptyLine$",[],["plus",{sourceInterval:[3782,3792]},["app",{sourceInterval:[3782,3791]},"lineBreak",[]]]],blockEnd:["define",{sourceInterval:[3798,3846]},"$blockEnd$",[],["seq",{sourceInterval:[3821,3846]},["app",{sourceInterval:[3821,3828]},"linePad",[]],["alt",{sourceInterval:[3830,3845]},["app",{sourceInterval:[3830,3839]},"lineBreak",[]],["app",{sourceInterval:[3842,3845]},"end",[]]]]],blockEndOf:["define",{sourceInterval:[3850,3907]},"$blockEnd$",["T"],["alt",{sourceInterval:[3878,3907]},["app",{sourceInterval:[3878,3886]},"blockEnd",[]],["param",{sourceInterval:[3889,3890]},0],["lookahead",{sourceInterval:[3893,3907]},["app",{sourceInterval:[3894,3907]},"logicStatment",[]]]]],lineOf:["define",{sourceInterval:[3913,3944]},null,["T"],["app",{sourceInterval:[3925,3944]},"endWith",[["param",{sourceInterval:[3933,3934]},0],["app",{sourceInterval:[3936,3943]},"lineEnd",[]]]]],linesOf:["define",{sourceInterval:[3948,3992]},null,["T"],["app",{sourceInterval:[3961,3992]},"endWith",[["plus",{sourceInterval:[3969,3979]},["app",{sourceInterval:[3969,3978]},"lineOf",[["param",{sourceInterval:[3976,3977]},0]]]],["opt",{sourceInterval:[3981,3991]},["app",{sourceInterval:[3981,3990]},"emptyLine",[]]]]]],syntaxListOf:["define",{sourceInterval:[3998,4096]},null,["Child","End"],["app",{sourceInterval:[4025,4096]},"syntaxBlockLinesOf",[["param",{sourceInterval:[4044,4049]},0],["app",{sourceInterval:[4051,4090]},"syntaxOf",[["alt",{sourceInterval:[4060,4089]},["param",{sourceInterval:[4061,4066]},0],["lookahead",{sourceInterval:[4069,4088]},["app",{sourceInterval:[4070,4088]},"ignore",[["plus",{sourceInterval:[4077,4087]},["app",{sourceInterval:[4077,4086]},"lineSpace",[]]]]]]]]],["param",{sourceInterval:[4092,4095]},1]]]],syntaxOf:["define",{sourceInterval:[4100,4165]},null,["T"],["alt",{sourceInterval:[4114,4165]},["param",{sourceInterval:[4114,4115]},0],["app",{sourceInterval:[4118,4165]},"startWith",[["app",{sourceInterval:[4128,4146]},"ignore",[["plus",{sourceInterval:[4135,4145]},["app",{sourceInterval:[4135,4144]},"emptyLine",[]]]]],["seq",{sourceInterval:[4148,4164]},["not",{sourceInterval:[4148,4162]},["app",{sourceInterval:[4149,4162]},"errorBoundary",[]]],["param",{sourceInterval:[4163,4164]},0]]]]]],contentLinesOf:["define",{sourceInterval:[4171,4238]},null,["Child","End"],["app",{sourceInterval:[4200,4238]},"contentBlockLinesOf",[["param",{sourceInterval:[4220,4225]},0],["param",{sourceInterval:[4227,4232]},0],["param",{sourceInterval:[4234,4237]},1]]]],syntaxBlockLinesOf:["define",{sourceInterval:[4259,4347]},null,["Begin","Child","End"],["app",{sourceInterval:[4299,4347]},"syntaxBlockOf",[["app",{sourceInterval:[4313,4326]},"lineOf",[["param",{sourceInterval:[4320,4325]},0]]],["app",{sourceInterval:[4328,4341]},"lineOf",[["param",{sourceInterval:[4335,4340]},1]]],["param",{sourceInterval:[4343,4346]},2]]]],contentBlockLinesOf:["define",{sourceInterval:[4351,4441]},null,["Begin","Child","End"],["app",{sourceInterval:[4392,4441]},"contentBlockOf",[["app",{sourceInterval:[4407,4420]},"lineOf",[["param",{sourceInterval:[4414,4419]},0]]],["app",{sourceInterval:[4422,4435]},"lineOf",[["param",{sourceInterval:[4429,4434]},1]]],["param",{sourceInterval:[4437,4440]},2]]]],syntaxBlockOf:["define",{sourceInterval:[4451,4502]},null,["Begin","Child","End"],["seq",{sourceInterval:[4486,4502]},["param",{sourceInterval:[4486,4491]},0],["star",{sourceInterval:[4492,4498]},["param",{sourceInterval:[4492,4497]},1]],["param",{sourceInterval:[4499,4502]},2]]],contentBlockOf:["define",{sourceInterval:[4506,4558]},null,["Begin","Child","End"],["seq",{sourceInterval:[4542,4558]},["param",{sourceInterval:[4542,4547]},0],["star",{sourceInterval:[4548,4554]},["param",{sourceInterval:[4548,4553]},1]],["param",{sourceInterval:[4555,4558]},2]]],nonemptyBlockOf:["define",{sourceInterval:[4562,4615]},null,["Begin","Child","End"],["seq",{sourceInterval:[4599,4615]},["param",{sourceInterval:[4599,4604]},0],["plus",{sourceInterval:[4605,4611]},["param",{sourceInterval:[4605,4610]},1]],["param",{sourceInterval:[4612,4615]},2]]],nonemptyContentBlockOf:["define",{sourceInterval:[4619,4679]},null,["Begin","Child","End"],["seq",{sourceInterval:[4663,4679]},["param",{sourceInterval:[4663,4668]},0],["plus",{sourceInterval:[4669,4675]},["param",{sourceInterval:[4669,4674]},1]],["param",{sourceInterval:[4676,4679]},2]]],statmentBreak:["define",{sourceInterval:[4685,4745]},"$StatmentBreak$",[],["alt",{sourceInterval:[4718,4745]},["app",{sourceInterval:[4719,4732]},"block_comment",[]],["app",{sourceInterval:[4735,4744]},"emptyLine",[]]]],startStatmentOf:["define",{sourceInterval:[4749,4827]},null,["T"],["app",{sourceInterval:[4770,4827]},"bracketSyntaxInline",[["lookahead",{sourceInterval:[4790,4807]},["star",{sourceInterval:[4792,4806]},["app",{sourceInterval:[4792,4805]},"statmentBreak",[]]]],["param",{sourceInterval:[4809,4810]},0],["plus",{sourceInterval:[4812,4826]},["app",{sourceInterval:[4812,4825]},"statmentBreak",[]]]]]],statementOf:["define",{sourceInterval:[4831,4933]},null,["T"],["app",{sourceInterval:[4848,4933]},"bracketSyntaxInline",[["lookahead",{sourceInterval:[4868,4885]},["star",{sourceInterval:[4870,4884]},["app",{sourceInterval:[4870,4883]},"statmentBreak",[]]]],["app",{sourceInterval:[4887,4908]},"startWith",[["app",{sourceInterval:[4897,4904]},"linePad",[]],["param",{sourceInterval:[4906,4907]},0]]],["alt",{sourceInterval:[4910,4932]},["plus",{sourceInterval:[4911,4925]},["app",{sourceInterval:[4911,4924]},"statmentBreak",[]]],["app",{sourceInterval:[4928,4931]},"end",[]]]]]],textContent_centered:["define",{sourceInterval:[4953,5011]},null,[],["app",{sourceInterval:[4953,4999]},"styled_centered",[["plus",{sourceInterval:[4969,4998]},["alt",{sourceInterval:[4970,4996]},["app",{sourceInterval:[4970,4985]},"centeredContent",[]],["app",{sourceInterval:[4988,4996]},"escToken",[]]]]]]],textContent_plain:["define",{sourceInterval:[5019,5061]},null,[],["app",{sourceInterval:[5019,5052]},"withText",[["plus",{sourceInterval:[5028,5051]},["alt",{sourceInterval:[5029,5049]},["app",{sourceInterval:[5029,5038]},"textPiece",[]],["app",{sourceInterval:[5041,5049]},"escToken",[]]]]]]],textContent:["define",{sourceInterval:[4939,5061]},null,[],["alt",{sourceInterval:[4953,5061]},["app",{sourceInterval:[4953,4999]},"textContent_centered",[]],["app",{sourceInterval:[5019,5052]},"textContent_plain",[]]]],styled_centered:["define",{sourceInterval:[5102,5144]},null,["T"],["seq",{sourceInterval:[5123,5144]},["app",{sourceInterval:[5123,5132]},"centeredL",[]],["param",{sourceInterval:[5133,5134]},0],["app",{sourceInterval:[5135,5144]},"centeredR",[]]]],centeredL:["define",{sourceInterval:[5148,5177]},null,[],["app",{sourceInterval:[5160,5177]},"rightPadWith",[["terminal",{sourceInterval:[5173,5176]},">"]]]],centeredR:["define",{sourceInterval:[5181,5209]},null,[],["app",{sourceInterval:[5193,5209]},"leftPadWith",[["terminal",{sourceInterval:[5205,5208]},"<"]]]],centeredContent:["define",{sourceInterval:[5215,5326]},null,[],["alt",{sourceInterval:[5233,5326]},["app",{sourceInterval:[5233,5256]},"styled",[["app",{sourceInterval:[5240,5255]},"centeredContent",[]]]],["app",{sourceInterval:[5265,5273]},"template",[]],["app",{sourceInterval:[5281,5326]},"plainTextUntil",[["alt",{sourceInterval:[5296,5325]},["app",{sourceInterval:[5297,5312]},"plainText_until",[]],["app",{sourceInterval:[5315,5324]},"centeredR",[]]]]]]],withText:["define",{sourceInterval:[5334,5349]},null,["T"],["param",{sourceInterval:[5348,5349]},0]],textPiece_styled:["define",{sourceInterval:[5369,5396]},null,[],["app",{sourceInterval:[5369,5386]},"styled",[["app",{sourceInterval:[5376,5385]},"textPiece",[]]]]],textPiece:["define",{sourceInterval:[5353,5429]},null,[],["alt",{sourceInterval:[5369,5429]},["app",{sourceInterval:[5369,5386]},"textPiece_styled",[]],["app",{sourceInterval:[5404,5412]},"template",[]],["app",{sourceInterval:[5420,5429]},"plainText",[]]]],escToken:["define",{sourceInterval:[5435,5470]},null,[],["app",{sourceInterval:[5446,5470]},"oresc",[["seq",{sourceInterval:[5452,5469]},["not",{sourceInterval:[5452,5464]},["app",{sourceInterval:[5453,5464]},"token_split",[]]],["app",{sourceInterval:[5465,5469]},"char",[]]]]]],styled_bold:["define",{sourceInterval:[5538,5588]},null,["T"],["seq",{sourceInterval:[5538,5580]},["terminal",{sourceInterval:[5538,5542]},"**"],["app",{sourceInterval:[5543,5575]},"withText",[["plus",{sourceInterval:[5552,5574]},["seq",{sourceInterval:[5553,5572]},["not",{sourceInterval:[5553,5570]},["app",{sourceInterval:[5555,5569]},"styled_bold",[["param",{sourceInterval:[5567,5568]},0]]]],["param",{sourceInterval:[5571,5572]},0]]]]],["terminal",{sourceInterval:[5576,5580]},"**"]]],styled_italic:["define",{sourceInterval:[5596,5648]},null,["T"],["seq",{sourceInterval:[5596,5638]},["terminal",{sourceInterval:[5596,5599]},"*"],["app",{sourceInterval:[5600,5634]},"withText",[["plus",{sourceInterval:[5609,5633]},["seq",{sourceInterval:[5610,5631]},["not",{sourceInterval:[5610,5629]},["app",{sourceInterval:[5612,5628]},"styled_italic",[["param",{sourceInterval:[5626,5627]},0]]]],["param",{sourceInterval:[5630,5631]},0]]]]],["terminal",{sourceInterval:[5635,5638]},"*"]]],styled_underline:["define",{sourceInterval:[5656,5714]},null,["T"],["seq",{sourceInterval:[5656,5701]},["terminal",{sourceInterval:[5656,5659]},"_"],["app",{sourceInterval:[5660,5697]},"withText",[["plus",{sourceInterval:[5669,5696]},["seq",{sourceInterval:[5670,5694]},["not",{sourceInterval:[5670,5692]},["app",{sourceInterval:[5672,5691]},"styled_underline",[["param",{sourceInterval:[5689,5690]},0]]]],["param",{sourceInterval:[5693,5694]},0]]]]],["terminal",{sourceInterval:[5698,5701]},"_"]]],styled:["define",{sourceInterval:[5507,5714]},"$Emphasis$",["T"],["alt",{sourceInterval:[5536,5714]},["app",{sourceInterval:[5538,5580]},"styled_bold",[["param",{},0]]],["app",{sourceInterval:[5596,5638]},"styled_italic",[["param",{},0]]],["app",{sourceInterval:[5656,5701]},"styled_underline",[["param",{},0]]]]],plainText_until:["define",{sourceInterval:[5720,5800]},null,[],["alt",{sourceInterval:[5738,5800]},["app",{sourceInterval:[5738,5745]},"comment",[]],["app",{sourceInterval:[5748,5756]},"template",[]],["app",{sourceInterval:[5759,5764]},"macro",[]],["app",{sourceInterval:[5767,5778]},"token_split",[]],["app",{sourceInterval:[5781,5788]},"lineEnd",[]],["terminal",{sourceInterval:[5791,5794]},"_"],["terminal",{sourceInterval:[5797,5800]},"*"]]],plainText:["define",{sourceInterval:[5804,5860]},"$plainText$",[],["app",{sourceInterval:[5829,5860]},"plainTextUntil",[["app",{sourceInterval:[5844,5859]},"plainText_until",[]]]]],plainTextUntil:["define",{sourceInterval:[5864,5936]},null,["Until"],["app",{sourceInterval:[5888,5936]},"rawOf",[["plus",{sourceInterval:[5894,5935]},["app",{sourceInterval:[5894,5934]},"strictEscWith",[["app",{sourceInterval:[5908,5912]},"char",[]],["alt",{sourceInterval:[5914,5933]},["param",{sourceInterval:[5915,5920]},0],["app",{sourceInterval:[5923,5932]},"lineBreak",[]]]]]]]]],rawOf:["define",{sourceInterval:[5947,5970]},null,["T"],["app",{sourceInterval:[5958,5970]},"stringify",[["param",{sourceInterval:[5968,5969]},0]]]],expr:["define",{sourceInterval:[5976,6061]},"$Expr$",[],["alt",{sourceInterval:[5996,6061]},["app",{sourceInterval:[5996,6009]},"expr_template",[]],["app",{sourceInterval:[6017,6027]},"expr_logic",[]],["app",{sourceInterval:[6035,6044]},"expr_auto",[]],["app",{sourceInterval:[6052,6061]},"expr_pipe",[]]]],expr_template:["define",{sourceInterval:[6067,6104]},null,[],["app",{sourceInterval:[6083,6104]},"embbedExprUntil",[["terminal",{sourceInterval:[6099,6103]},"}}"]]]],expr_logic:["define",{sourceInterval:[6108,6147]},null,[],["app",{sourceInterval:[6121,6147]},"embbedExprUntil",[["app",{sourceInterval:[6137,6146]},"lineBreak",[]]]]],expr_auto:["define",{sourceInterval:[6151,6183]},null,[],["app",{sourceInterval:[6163,6183]},"embbedExprUntil",[["terminal",{sourceInterval:[6179,6182]},")"]]]],expr_pipe:["define",{sourceInterval:[6187,6251]},"$PipeExp$",[],["seq",{sourceInterval:[6210,6251]},["app",{sourceInterval:[6210,6221]},"token_split",[]],["opt",{sourceInterval:[6222,6251]},["app",{sourceInterval:[6222,6250]},"embbedExprUntil",[["app",{sourceInterval:[6238,6249]},"token_split",[]]]]]]],template_label:["define",{sourceInterval:[6288,6407]},null,[],["seq",{sourceInterval:[6288,6398]},["app",{sourceInterval:[6288,6357]},"bracketSyntaxInline",[["app",{sourceInterval:[6308,6320]},"tokenOf",[["terminal",{sourceInterval:[6316,6319]},"["]]],["app",{sourceInterval:[6322,6342]},"plainTextUntil",[["terminal",{sourceInterval:[6337,6341]},"]("]]],["app",{sourceInterval:[6344,6356]},"tokenOf",[["terminal",{sourceInterval:[6352,6355]},"]"]]]]],["app",{sourceInterval:[6358,6398]},"bracketSyntaxInline",[["terminal",{sourceInterval:[6378,6381]},"("],["app",{sourceInterval:[6383,6392]},"expr_auto",[]],["terminal",{sourceInterval:[6394,6397]},")"]]]]],template_native:["define",{sourceInterval:[6415,6481]},null,[],["app",{sourceInterval:[6415,6471]},"bracketSyntaxInline",[["terminal",{sourceInterval:[6435,6439]},"{{"],["app",{sourceInterval:[6441,6464]},"optional",[["app",{sourceInterval:[6450,6463]},"expr_template",[]]]],["terminal",{sourceInterval:[6466,6470]},"}}"]]]],template_macro:["define",{sourceInterval:[6512,6579]},null,[],["app",{sourceInterval:[6512,6570]},"rawOf",[["app",{sourceInterval:[6518,6569]},"bracketSyntaxInline",[["terminal",{sourceInterval:[6538,6541]},"["],["app",{sourceInterval:[6543,6563]},"embbedExprUntil",[["terminal",{sourceInterval:[6559,6562]},"]"]]],["terminal",{sourceInterval:[6565,6568]},"]"]]]]]],template:["define",{sourceInterval:[6257,6579]},"$TemplateExp$",[],["alt",{sourceInterval:[6288,6579]},["app",{sourceInterval:[6288,6398]},"template_label",[]],["app",{sourceInterval:[6415,6471]},"template_native",[]],["app",{sourceInterval:[6490,6504]},"comment_inline",[]],["app",{sourceInterval:[6512,6570]},"template_macro",[]]]],macro:["define",{sourceInterval:[6585,6662]},null,[],["app",{sourceInterval:[6593,6662]},"bracketSyntaxInline",[["app",{sourceInterval:[6613,6625]},"tokenOf",[["terminal",{sourceInterval:[6621,6624]},"["]]],["app",{sourceInterval:[6627,6647]},"embbedExprUntil",[["terminal",{sourceInterval:[6643,6646]},"]"]]],["app",{sourceInterval:[6649,6661]},"tokenOf",[["terminal",{sourceInterval:[6657,6660]},"]"]]]]]],embbedExprUntil:["define",{sourceInterval:[6760,6877]},"$awesomeExpr$",["Exclude"],["app",{sourceInterval:[6802,6877]},"stringify",[["plus",{sourceInterval:[6812,6876]},["alt",{sourceInterval:[6813,6874]},["app",{sourceInterval:[6813,6829]},"sourceOf",[["app",{sourceInterval:[6822,6828]},"string",[]]]],["app",{sourceInterval:[6832,6874]},"strictEscWith",[["app",{sourceInterval:[6846,6850]},"char",[]],["alt",{sourceInterval:[6852,6873]},["param",{sourceInterval:[6853,6860]},0],["app",{sourceInterval:[6863,6872]},"lineBreak",[]]]]]]]]]],block_logic:["define",{sourceInterval:[6885,7047]},"$LogicStatment$",[],["alt",{sourceInterval:[6921,7047]},["app",{sourceInterval:[6921,6949]},"statementOf",[["app",{sourceInterval:[6933,6948]},"logicSyntax_let",[]]]],["app",{sourceInterval:[6957,6979]},"logic_blockIf",[["app",{sourceInterval:[6971,6978]},"content",[]]]],["app",{sourceInterval:[6987,7014]},"logic_blockForeach",[["app",{sourceInterval:[7006,7013]},"content",[]]]],["app",{sourceInterval:[7022,7047]},"logic_blockWhile",[["app",{sourceInterval:[7039,7046]},"content",[]]]]]],logicSyntax_let:["define",{sourceInterval:[7173,7227]},null,[],["seq",{sourceInterval:[7173,7220]},["app",{sourceInterval:[7173,7196]},"ctlKey",[["app",{sourceInterval:[7180,7195]},"scriptToken_var",[]]]],["app",{sourceInterval:[7197,7220]},"leftPadWith",[["app",{sourceInterval:[7209,7219]},"expr_logic",[]]]]]],logicSyntax:["define",{sourceInterval:[7139,7271]},"$logicSyntax$",[],["alt",{sourceInterval:[7173,7271]},["app",{sourceInterval:[7173,7220]},"logicSyntax_let",[]],["app",{sourceInterval:[7235,7271]},"ctlKey",[["seq",{sourceInterval:[7242,7270]},["not",{sourceInterval:[7242,7258]},["app",{sourceInterval:[7243,7258]},"scriptToken_var",[]]],["app",{sourceInterval:[7259,7270]},"scriptToken",[]]]]]]],logicStatment:["define",{sourceInterval:[7275,7324]},null,[],["app",{sourceInterval:[7291,7324]},"statementOf",[["app",{sourceInterval:[7303,7323]},"padWith",[["app",{sourceInterval:[7311,7322]},"logicSyntax",[]]]]]]],logic_blockIf:["define",{sourceInterval:[7330,7471]},null,["T"],["seq",{sourceInterval:[7349,7471]},["app",{sourceInterval:[7349,7370]},"statementOf",[["app",{sourceInterval:[7361,7369]},"logic_if",[]]]],["star",{sourceInterval:[7371,7386]},["app",{sourceInterval:[7371,7385]},"leftPadWith",[["param",{sourceInterval:[7383,7384]},0]]]],["star",{sourceInterval:[7387,7418]},["seq",{sourceInterval:[7388,7416]},["app",{sourceInterval:[7388,7413]},"statementOf",[["app",{sourceInterval:[7400,7412]},"logic_elseIf",[]]]],["star",{sourceInterval:[7414,7416]},["param",{sourceInterval:[7414,7415]},0]]]],["opt",{sourceInterval:[7419,7448]},["seq",{sourceInterval:[7420,7446]},["app",{sourceInterval:[7420,7443]},"statementOf",[["app",{sourceInterval:[7432,7442]},"logic_else",[]]]],["star",{sourceInterval:[7444,7446]},["param",{sourceInterval:[7444,7445]},0]]]],["app",{sourceInterval:[7449,7471]},"statementOf",[["app",{sourceInterval:[7461,7470]},"logic_end",[]]]]]],logic_if:["define",{sourceInterval:[7475,7528]},null,[],["seq",{sourceInterval:[7486,7528]},["app",{sourceInterval:[7486,7508]},"ctlKey",[["app",{sourceInterval:[7493,7507]},"scriptToken_if",[]]]],["app",{sourceInterval:[7509,7528]},"padWith",[["app",{sourceInterval:[7517,7527]},"expr_logic",[]]]]]],logic_elseIf:["define",{sourceInterval:[7532,7593]},null,[],["seq",{sourceInterval:[7547,7593]},["app",{sourceInterval:[7547,7573]},"ctlKey",[["app",{sourceInterval:[7554,7572]},"scriptToken_elseif",[]]]],["app",{sourceInterval:[7574,7593]},"padWith",[["app",{sourceInterval:[7582,7592]},"expr_logic",[]]]]]],logic_else:["define",{sourceInterval:[7597,7634]},null,[],["app",{sourceInterval:[7610,7634]},"ctlKey",[["app",{sourceInterval:[7617,7633]},"scriptToken_else",[]]]]],scriptToken:["define",{sourceInterval:[7640,7782]},null,[],["alt",{sourceInterval:[7654,7782]},["app",{sourceInterval:[7654,7669]},"scriptToken_var",[]],["app",{sourceInterval:[7672,7686]},"scriptToken_if",[]],["app",{sourceInterval:[7689,7707]},"scriptToken_elseif",[]],["app",{sourceInterval:[7710,7726]},"scriptToken_else",[]],["app",{sourceInterval:[7729,7744]},"scriptToken_end",[]],["app",{sourceInterval:[7747,7762]},"scriptToken_for",[]],["app",{sourceInterval:[7765,7782]},"scriptToken_while",[]]]],scriptToken_var:["define",{sourceInterval:[7788,7811]},null,[],["terminal",{sourceInterval:[7806,7811]},"let"]],scriptToken_if:["define",{sourceInterval:[7815,7836]},null,[],["terminal",{sourceInterval:[7832,7836]},"if"]],scriptToken_elseif:["define",{sourceInterval:[7840,7869]},null,[],["terminal",{sourceInterval:[7861,7869]},"elseif"]],scriptToken_else:["define",{sourceInterval:[7873,7898]},null,[],["terminal",{sourceInterval:[7892,7898]},"else"]],scriptToken_end:["define",{sourceInterval:[7902,7925]},null,[],["terminal",{sourceInterval:[7920,7925]},"end"]],scriptToken_for:["define",{sourceInterval:[7929,7956]},null,[],["terminal",{sourceInterval:[7947,7956]},"foreach"]],scriptToken_in:["define",{sourceInterval:[7960,7981]},null,[],["terminal",{sourceInterval:[7977,7981]},"in"]],scriptToken_while:["define",{sourceInterval:[7985,8012]},null,[],["terminal",{sourceInterval:[8005,8012]},"while"]],logic_blockForeach:["define",{sourceInterval:[8020,8120]},null,["T"],["app",{sourceInterval:[8044,8120]},"syntaxBlockOf",[["app",{sourceInterval:[8058,8079]},"lineOf",[["app",{sourceInterval:[8065,8078]},"logic_foreach",[]]]],["app",{sourceInterval:[8081,8095]},"leftPadWith",[["param",{sourceInterval:[8093,8094]},0]]],["app",{sourceInterval:[8097,8119]},"statementOf",[["app",{sourceInterval:[8109,8118]},"logic_end",[]]]]]]],logic_foreach:["define",{sourceInterval:[8124,8244]},null,[],["seq",{sourceInterval:[8140,8244]},["app",{sourceInterval:[8140,8163]},"ctlKey",[["app",{sourceInterval:[8147,8162]},"scriptToken_for",[]]]],["app",{sourceInterval:[8164,8190]},"preSpaceWith",[["app",{sourceInterval:[8177,8189]},"variableName",[]]]],["app",{sourceInterval:[8191,8219]},"preSpaceWith",[["app",{sourceInterval:[8204,8218]},"scriptToken_in",[]]]],["app",{sourceInterval:[8220,8244]},"preSpaceWith",[["app",{sourceInterval:[8233,8243]},"expr_logic",[]]]]]],logic_blockWhile:["define",{sourceInterval:[8250,8346]},null,["T"],["app",{sourceInterval:[8272,8346]},"syntaxBlockOf",[["app",{sourceInterval:[8286,8305]},"lineOf",[["app",{sourceInterval:[8293,8304]},"logic_while",[]]]],["app",{sourceInterval:[8307,8321]},"leftPadWith",[["param",{sourceInterval:[8319,8320]},0]]],["app",{sourceInterval:[8323,8345]},"statementOf",[["app",{sourceInterval:[8335,8344]},"logic_end",[]]]]]]],logic_while:["define",{sourceInterval:[8350,8414]},null,[],["seq",{sourceInterval:[8364,8414]},["app",{sourceInterval:[8364,8389]},"ctlKey",[["app",{sourceInterval:[8371,8388]},"scriptToken_while",[]]]],["app",{sourceInterval:[8390,8414]},"preSpaceWith",[["app",{sourceInterval:[8403,8413]},"expr_logic",[]]]]]],ctlKey:["define",{sourceInterval:[8420,8469]},null,["key"],["app",{sourceInterval:[8434,8469]},"leftPadWith",[["app",{sourceInterval:[8446,8468]},"join",[["app",{sourceInterval:[8451,8462]},"token_split",[]],["param",{sourceInterval:[8464,8467]},0]]]]]],logic_end:["define",{sourceInterval:[8503,8538]},null,[],["app",{sourceInterval:[8515,8538]},"ctlKey",[["app",{sourceInterval:[8522,8537]},"scriptToken_end",[]]]]],tokens:["define",{sourceInterval:[8544,8564]},null,[],["star",{sourceInterval:[8558,8564]},["app",{sourceInterval:[8558,8563]},"token",[]]]],token:["define",{sourceInterval:[8574,8762]},null,[],["alt",{sourceInterval:[8587,8762]},["app",{sourceInterval:[8587,8594]},"comment",[]],["app",{sourceInterval:[8648,8658]},"valueToken",[]],["app",{sourceInterval:[8667,8674]},"keyword",[]],["app",{sourceInterval:[8759,8762]},"any",[]]]],valueToken:["define",{sourceInterval:[8766,8785]},null,[],["app",{sourceInterval:[8779,8785]},"sToken",[]]],keyword:["define",{sourceInterval:[9029,9058]},null,[],["app",{sourceInterval:[9039,9058]},"ctlKey",[["app",{sourceInterval:[9046,9057]},"scriptToken",[]]]]]}]);const pR=lR.AdvFountain;var fR="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},dR={exports:{}};function hR(e,t,n){const r=e.length;return(e.slice(0,n)+t+e.slice(n+t.length)).substr(0,r)}function mR(e,t,n){return _R(e=e.slice(t,n))}function gR(e,...t){const n=e.offset,r=e.line,i=(e,t)=>e.repeat(t);let o="Line "+e.lineNum+", col "+e.colNum+":\n";const a=function(e){let t=0;return e.map((e=>{const n=e.toString();return t=Math.max(t,n.length),n})).map((e=>dR.exports.padStart(e,t)))}([null==e.prevLine?0:e.lineNum-1,e.lineNum,null==e.nextLine?0:e.lineNum+1]),s=(e,t,n)=>{o+=n+a[e]+" | "+t+"\n"};null!=e.prevLine&&s(0,e.prevLine,"  "),s(1,e.line,"> ");const u=_R(e.line),c=e.colNum-1;let l=" ".repeat(u+1);for(let f=0;f<t.length;++f){let[e,o]=t[f];console.assert(e>=0&&e<=o,"range start must be >= 0 and <= end");const a=n-c;e=Math.max(0,e-a),o=Math.min(o-a,u),l=hR(l,i("~",mR(r,e,o)),mR(r,0,e))}const p=2+a[1].length+3;return o+=i(" ",p),l=hR(l,"^",mR(r,0,c)),o+=l.replace(/ +$/,"")+"\n",null!=e.nextLine&&s(2,e.nextLine,"  "),o}function vR(e,t){return Error(function(e){const{source:t}=e;return gR(t.getLineAndColumn(),[t.startIdx,t.endIdx])}(t)+"\n"+e)}
/**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
!function(e,t){(function(){var n,r="Expected a function",i="__lodash_hash_undefined__",o="__lodash_placeholder__",a=16,s=32,u=64,c=128,l=256,p=1/0,f=9007199254740991,d=NaN,h=4294967295,m=[["ary",c],["bind",1],["bindKey",2],["curry",8],["curryRight",a],["flip",512],["partial",s],["partialRight",u],["rearg",l]],g="[object Arguments]",v="[object Array]",y="[object Boolean]",E="[object Date]",_="[object Error]",C="[object Function]",T="[object GeneratorFunction]",A="[object Map]",R="[object Number]",I="[object Object]",D="[object Promise]",x="[object RegExp]",b="[object Set]",S="[object String]",k="[object Symbol]",O="[object WeakMap]",N="[object ArrayBuffer]",P="[object DataView]",w="[object Float32Array]",L="[object Float64Array]",F="[object Int8Array]",M="[object Int16Array]",$="[object Int32Array]",B="[object Uint8Array]",q="[object Uint8ClampedArray]",j="[object Uint16Array]",U="[object Uint32Array]",W=/\b__p \+= '';/g,K=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,z=RegExp(V.source),Y=RegExp(H.source),X=/<%-([\s\S]+?)%>/g,J=/<%([\s\S]+?)%>/g,Q=/<%=([\s\S]+?)%>/g,Z=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ee=/^\w*$/,te=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ne=/[\\^$.*+?()[\]{}|]/g,re=RegExp(ne.source),ie=/^\s+/,oe=/\s/,ae=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,se=/\{\n\/\* \[wrapped with (.+)\] \*/,ue=/,? & /,ce=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,le=/[()=,{}\[\]\/\s]/,pe=/\\(\\)?/g,fe=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,de=/\w*$/,he=/^[-+]0x[0-9a-f]+$/i,me=/^0b[01]+$/i,ge=/^\[object .+?Constructor\]$/,ve=/^0o[0-7]+$/i,ye=/^(?:0|[1-9]\d*)$/,Ee=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,_e=/($^)/,Ce=/['\n\r\u2028\u2029\\]/g,Te="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Ae="\\u2700-\\u27bf",Re="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",De="\\ufe0e\\ufe0f",xe="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",be="['’]",Se="[\\ud800-\\udfff]",ke="["+xe+"]",Oe="["+Te+"]",Ne="\\d+",Pe="[\\u2700-\\u27bf]",we="["+Re+"]",Le="[^\\ud800-\\udfff"+xe+Ne+Ae+Re+Ie+"]",Fe="\\ud83c[\\udffb-\\udfff]",Me="[^\\ud800-\\udfff]",$e="(?:\\ud83c[\\udde6-\\uddff]){2}",Be="[\\ud800-\\udbff][\\udc00-\\udfff]",qe="["+Ie+"]",je="(?:"+we+"|"+Le+")",Ue="(?:"+qe+"|"+Le+")",We="(?:['’](?:d|ll|m|re|s|t|ve))?",Ke="(?:['’](?:D|LL|M|RE|S|T|VE))?",Ge="(?:"+Oe+"|"+Fe+")"+"?",Ve="[\\ufe0e\\ufe0f]?",He=Ve+Ge+("(?:\\u200d(?:"+[Me,$e,Be].join("|")+")"+Ve+Ge+")*"),ze="(?:"+[Pe,$e,Be].join("|")+")"+He,Ye="(?:"+[Me+Oe+"?",Oe,$e,Be,Se].join("|")+")",Xe=RegExp(be,"g"),Je=RegExp(Oe,"g"),Qe=RegExp(Fe+"(?="+Fe+")|"+Ye+He,"g"),Ze=RegExp([qe+"?"+we+"+"+We+"(?="+[ke,qe,"$"].join("|")+")",Ue+"+"+Ke+"(?="+[ke,qe+je,"$"].join("|")+")",qe+"?"+je+"+"+We,qe+"+"+Ke,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ne,ze].join("|"),"g"),et=RegExp("[\\u200d\\ud800-\\udfff"+Te+De+"]"),tt=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,nt=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],rt=-1,it={};it[w]=it[L]=it[F]=it[M]=it[$]=it[B]=it[q]=it[j]=it[U]=!0,it[g]=it[v]=it[N]=it[y]=it[P]=it[E]=it[_]=it[C]=it[A]=it[R]=it[I]=it[x]=it[b]=it[S]=it[O]=!1;var ot={};ot[g]=ot[v]=ot[N]=ot[P]=ot[y]=ot[E]=ot[w]=ot[L]=ot[F]=ot[M]=ot[$]=ot[A]=ot[R]=ot[I]=ot[x]=ot[b]=ot[S]=ot[k]=ot[B]=ot[q]=ot[j]=ot[U]=!0,ot[_]=ot[C]=ot[O]=!1;var at={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},st=parseFloat,ut=parseInt,ct="object"==typeof fR&&fR&&fR.Object===Object&&fR,lt="object"==typeof self&&self&&self.Object===Object&&self,pt=ct||lt||Function("return this")(),ft=t&&!t.nodeType&&t,dt=ft&&e&&!e.nodeType&&e,ht=dt&&dt.exports===ft,mt=ht&&ct.process,gt=function(){try{var e=dt&&dt.require&&dt.require("util").types;return e||mt&&mt.binding&&mt.binding("util")}catch(PI){}}(),vt=gt&&gt.isArrayBuffer,yt=gt&&gt.isDate,Et=gt&&gt.isMap,_t=gt&&gt.isRegExp,Ct=gt&&gt.isSet,Tt=gt&&gt.isTypedArray;function At(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function Rt(e,t,n,r){for(var i=-1,o=null==e?0:e.length;++i<o;){var a=e[i];t(r,a,n(a),e)}return r}function It(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function Dt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function xt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function bt(e,t){for(var n=-1,r=null==e?0:e.length,i=0,o=[];++n<r;){var a=e[n];t(a,n,e)&&(o[i++]=a)}return o}function St(e,t){return!!(null==e?0:e.length)&&Bt(e,t,0)>-1}function kt(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1}function Ot(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}function Nt(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function Pt(e,t,n,r){var i=-1,o=null==e?0:e.length;for(r&&o&&(n=e[++i]);++i<o;)n=t(n,e[i],i,e);return n}function wt(e,t,n,r){var i=null==e?0:e.length;for(r&&i&&(n=e[--i]);i--;)n=t(n,e[i],i,e);return n}function Lt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var Ft=Wt("length");function Mt(e,t,n){var r;return n(e,(function(e,n,i){if(t(e,n,i))return r=n,!1})),r}function $t(e,t,n,r){for(var i=e.length,o=n+(r?1:-1);r?o--:++o<i;)if(t(e[o],o,e))return o;return-1}function Bt(e,t,n){return t==t?function(e,t,n){var r=n-1,i=e.length;for(;++r<i;)if(e[r]===t)return r;return-1}(e,t,n):$t(e,jt,n)}function qt(e,t,n,r){for(var i=n-1,o=e.length;++i<o;)if(r(e[i],t))return i;return-1}function jt(e){return e!=e}function Ut(e,t){var n=null==e?0:e.length;return n?Vt(e,t)/n:d}function Wt(e){return function(t){return null==t?n:t[e]}}function Kt(e){return function(t){return null==e?n:e[t]}}function Gt(e,t,n,r,i){return i(e,(function(e,i,o){n=r?(r=!1,e):t(n,e,i,o)})),n}function Vt(e,t){for(var r,i=-1,o=e.length;++i<o;){var a=t(e[i]);a!==n&&(r=r===n?a:r+a)}return r}function Ht(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function zt(e){return e?e.slice(0,fn(e)+1).replace(ie,""):e}function Yt(e){return function(t){return e(t)}}function Xt(e,t){return Ot(t,(function(t){return e[t]}))}function Jt(e,t){return e.has(t)}function Qt(e,t){for(var n=-1,r=e.length;++n<r&&Bt(t,e[n],0)>-1;);return n}function Zt(e,t){for(var n=e.length;n--&&Bt(t,e[n],0)>-1;);return n}function en(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var tn=Kt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),nn=Kt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function rn(e){return"\\"+at[e]}function on(e){return et.test(e)}function an(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function sn(e,t){return function(n){return e(t(n))}}function un(e,t){for(var n=-1,r=e.length,i=0,a=[];++n<r;){var s=e[n];s!==t&&s!==o||(e[n]=o,a[i++]=n)}return a}function cn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function ln(e){return on(e)?function(e){var t=Qe.lastIndex=0;for(;Qe.test(e);)++t;return t}(e):Ft(e)}function pn(e){return on(e)?function(e){return e.match(Qe)||[]}(e):function(e){return e.split("")}(e)}function fn(e){for(var t=e.length;t--&&oe.test(e.charAt(t)););return t}var dn=Kt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var hn=function e(t){var oe,Te=(t=null==t?pt:hn.defaults(pt.Object(),t,hn.pick(pt,nt))).Array,Ae=t.Date,Re=t.Error,Ie=t.Function,De=t.Math,xe=t.Object,be=t.RegExp,Se=t.String,ke=t.TypeError,Oe=Te.prototype,Ne=Ie.prototype,Pe=xe.prototype,we=t["__core-js_shared__"],Le=Ne.toString,Fe=Pe.hasOwnProperty,Me=0,$e=(oe=/[^.]+$/.exec(we&&we.keys&&we.keys.IE_PROTO||""))?"Symbol(src)_1."+oe:"",Be=Pe.toString,qe=Le.call(xe),je=pt._,Ue=be("^"+Le.call(Fe).replace(ne,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),We=ht?t.Buffer:n,Ke=t.Symbol,Ge=t.Uint8Array,Ve=We?We.allocUnsafe:n,He=sn(xe.getPrototypeOf,xe),ze=xe.create,Ye=Pe.propertyIsEnumerable,Qe=Oe.splice,et=Ke?Ke.isConcatSpreadable:n,at=Ke?Ke.iterator:n,ct=Ke?Ke.toStringTag:n,lt=function(){try{var e=fo(xe,"defineProperty");return e({},"",{}),e}catch(PI){}}(),ft=t.clearTimeout!==pt.clearTimeout&&t.clearTimeout,dt=Ae&&Ae.now!==pt.Date.now&&Ae.now,mt=t.setTimeout!==pt.setTimeout&&t.setTimeout,gt=De.ceil,Ft=De.floor,Kt=xe.getOwnPropertySymbols,mn=We?We.isBuffer:n,gn=t.isFinite,vn=Oe.join,yn=sn(xe.keys,xe),En=De.max,_n=De.min,Cn=Ae.now,Tn=t.parseInt,An=De.random,Rn=Oe.reverse,In=fo(t,"DataView"),Dn=fo(t,"Map"),xn=fo(t,"Promise"),bn=fo(t,"Set"),Sn=fo(t,"WeakMap"),kn=fo(xe,"create"),On=Sn&&new Sn,Nn={},Pn=Wo(In),wn=Wo(Dn),Ln=Wo(xn),Fn=Wo(bn),Mn=Wo(Sn),$n=Ke?Ke.prototype:n,Bn=$n?$n.valueOf:n,qn=$n?$n.toString:n;function jn(e){if(as(e)&&!Ya(e)&&!(e instanceof Gn)){if(e instanceof Kn)return e;if(Fe.call(e,"__wrapped__"))return Ko(e)}return new Kn(e)}var Un=function(){function e(){}return function(t){if(!os(t))return{};if(ze)return ze(t);e.prototype=t;var r=new e;return e.prototype=n,r}}();function Wn(){}function Kn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=n}function Gn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=h,this.__views__=[]}function Vn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Hn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function zn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Yn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new zn;++t<n;)this.add(e[t])}function Xn(e){var t=this.__data__=new Hn(e);this.size=t.size}function Jn(e,t){var n=Ya(e),r=!n&&za(e),i=!n&&!r&&Za(e),o=!n&&!r&&!i&&hs(e),a=n||r||i||o,s=a?Ht(e.length,Se):[],u=s.length;for(var c in e)!t&&!Fe.call(e,c)||a&&("length"==c||i&&("offset"==c||"parent"==c)||o&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||_o(c,u))||s.push(c);return s}function Qn(e){var t=e.length;return t?e[Yr(0,t-1)]:n}function Zn(e,t){return Mo(ki(e),ur(t,0,e.length))}function er(e){return Mo(ki(e))}function tr(e,t,r){(r!==n&&!Ga(e[t],r)||r===n&&!(t in e))&&ar(e,t,r)}function nr(e,t,r){var i=e[t];Fe.call(e,t)&&Ga(i,r)&&(r!==n||t in e)||ar(e,t,r)}function rr(e,t){for(var n=e.length;n--;)if(Ga(e[n][0],t))return n;return-1}function ir(e,t,n,r){return dr(e,(function(e,i,o){t(r,e,n(e),o)})),r}function or(e,t){return e&&Oi(t,Fs(t),e)}function ar(e,t,n){"__proto__"==t&&lt?lt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function sr(e,t){for(var r=-1,i=t.length,o=Te(i),a=null==e;++r<i;)o[r]=a?n:Os(e,t[r]);return o}function ur(e,t,r){return e==e&&(r!==n&&(e=e<=r?e:r),t!==n&&(e=e>=t?e:t)),e}function cr(e,t,r,i,o,a){var s,u=1&t,c=2&t,l=4&t;if(r&&(s=o?r(e,i,o,a):r(e)),s!==n)return s;if(!os(e))return e;var p=Ya(e);if(p){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&"string"==typeof e[0]&&Fe.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!u)return ki(e,s)}else{var f=go(e),d=f==C||f==T;if(Za(e))return Ri(e,u);if(f==I||f==g||d&&!o){if(s=c||d?{}:yo(e),!u)return c?function(e,t){return Oi(e,mo(e),t)}(e,function(e,t){return e&&Oi(t,Ms(t),e)}(s,e)):function(e,t){return Oi(e,ho(e),t)}(e,or(s,e))}else{if(!ot[f])return o?e:{};s=function(e,t,n){var r=e.constructor;switch(t){case N:return Ii(e);case y:case E:return new r(+e);case P:return function(e,t){var n=t?Ii(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case w:case L:case F:case M:case $:case B:case q:case j:case U:return Di(e,n);case A:return new r;case R:case S:return new r(e);case x:return function(e){var t=new e.constructor(e.source,de.exec(e));return t.lastIndex=e.lastIndex,t}(e);case b:return new r;case k:return i=e,Bn?xe(Bn.call(i)):{}}var i}(e,f,u)}}a||(a=new Xn);var h=a.get(e);if(h)return h;a.set(e,s),ps(e)?e.forEach((function(n){s.add(cr(n,t,r,n,e,a))})):ss(e)&&e.forEach((function(n,i){s.set(i,cr(n,t,r,i,e,a))}));var m=p?n:(l?c?oo:io:c?Ms:Fs)(e);return It(m||e,(function(n,i){m&&(n=e[i=n]),nr(s,i,cr(n,t,r,i,e,a))})),s}function lr(e,t,r){var i=r.length;if(null==e)return!i;for(e=xe(e);i--;){var o=r[i],a=t[o],s=e[o];if(s===n&&!(o in e)||!a(s))return!1}return!0}function pr(e,t,i){if("function"!=typeof e)throw new ke(r);return Po((function(){e.apply(n,i)}),t)}function fr(e,t,n,r){var i=-1,o=St,a=!0,s=e.length,u=[],c=t.length;if(!s)return u;n&&(t=Ot(t,Yt(n))),r?(o=kt,a=!1):t.length>=200&&(o=Jt,a=!1,t=new Yn(t));e:for(;++i<s;){var l=e[i],p=null==n?l:n(l);if(l=r||0!==l?l:0,a&&p==p){for(var f=c;f--;)if(t[f]===p)continue e;u.push(l)}else o(t,p,r)||u.push(l)}return u}jn.templateSettings={escape:X,evaluate:J,interpolate:Q,variable:"",imports:{_:jn}},jn.prototype=Wn.prototype,jn.prototype.constructor=jn,Kn.prototype=Un(Wn.prototype),Kn.prototype.constructor=Kn,Gn.prototype=Un(Wn.prototype),Gn.prototype.constructor=Gn,Vn.prototype.clear=function(){this.__data__=kn?kn(null):{},this.size=0},Vn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Vn.prototype.get=function(e){var t=this.__data__;if(kn){var r=t[e];return r===i?n:r}return Fe.call(t,e)?t[e]:n},Vn.prototype.has=function(e){var t=this.__data__;return kn?t[e]!==n:Fe.call(t,e)},Vn.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=kn&&t===n?i:t,this},Hn.prototype.clear=function(){this.__data__=[],this.size=0},Hn.prototype.delete=function(e){var t=this.__data__,n=rr(t,e);return!(n<0)&&(n==t.length-1?t.pop():Qe.call(t,n,1),--this.size,!0)},Hn.prototype.get=function(e){var t=this.__data__,r=rr(t,e);return r<0?n:t[r][1]},Hn.prototype.has=function(e){return rr(this.__data__,e)>-1},Hn.prototype.set=function(e,t){var n=this.__data__,r=rr(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},zn.prototype.clear=function(){this.size=0,this.__data__={hash:new Vn,map:new(Dn||Hn),string:new Vn}},zn.prototype.delete=function(e){var t=lo(this,e).delete(e);return this.size-=t?1:0,t},zn.prototype.get=function(e){return lo(this,e).get(e)},zn.prototype.has=function(e){return lo(this,e).has(e)},zn.prototype.set=function(e,t){var n=lo(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Yn.prototype.add=Yn.prototype.push=function(e){return this.__data__.set(e,i),this},Yn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.clear=function(){this.__data__=new Hn,this.size=0},Xn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Xn.prototype.get=function(e){return this.__data__.get(e)},Xn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Hn){var r=n.__data__;if(!Dn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new zn(r)}return n.set(e,t),this.size=n.size,this};var dr=wi(Cr),hr=wi(Tr,!0);function mr(e,t){var n=!0;return dr(e,(function(e,r,i){return n=!!t(e,r,i)})),n}function gr(e,t,r){for(var i=-1,o=e.length;++i<o;){var a=e[i],s=t(a);if(null!=s&&(u===n?s==s&&!ds(s):r(s,u)))var u=s,c=a}return c}function vr(e,t){var n=[];return dr(e,(function(e,r,i){t(e,r,i)&&n.push(e)})),n}function yr(e,t,n,r,i){var o=-1,a=e.length;for(n||(n=Eo),i||(i=[]);++o<a;){var s=e[o];t>0&&n(s)?t>1?yr(s,t-1,n,r,i):Nt(i,s):r||(i[i.length]=s)}return i}var Er=Li(),_r=Li(!0);function Cr(e,t){return e&&Er(e,t,Fs)}function Tr(e,t){return e&&_r(e,t,Fs)}function Ar(e,t){return bt(t,(function(t){return ns(e[t])}))}function Rr(e,t){for(var r=0,i=(t=_i(t,e)).length;null!=e&&r<i;)e=e[Uo(t[r++])];return r&&r==i?e:n}function Ir(e,t,n){var r=t(e);return Ya(e)?r:Nt(r,n(e))}function Dr(e){return null==e?e===n?"[object Undefined]":"[object Null]":ct&&ct in xe(e)?function(e){var t=Fe.call(e,ct),r=e[ct];try{e[ct]=n;var i=!0}catch(PI){}var o=Be.call(e);i&&(t?e[ct]=r:delete e[ct]);return o}(e):function(e){return Be.call(e)}(e)}function xr(e,t){return e>t}function br(e,t){return null!=e&&Fe.call(e,t)}function Sr(e,t){return null!=e&&t in xe(e)}function kr(e,t,r){for(var i=r?kt:St,o=e[0].length,a=e.length,s=a,u=Te(a),c=1/0,l=[];s--;){var p=e[s];s&&t&&(p=Ot(p,Yt(t))),c=_n(p.length,c),u[s]=!r&&(t||o>=120&&p.length>=120)?new Yn(s&&p):n}p=e[0];var f=-1,d=u[0];e:for(;++f<o&&l.length<c;){var h=p[f],m=t?t(h):h;if(h=r||0!==h?h:0,!(d?Jt(d,m):i(l,m,r))){for(s=a;--s;){var g=u[s];if(!(g?Jt(g,m):i(e[s],m,r)))continue e}d&&d.push(m),l.push(h)}}return l}function Or(e,t,r){var i=null==(e=So(e,t=_i(t,e)))?e:e[Uo(ta(t))];return null==i?n:At(i,e,r)}function Nr(e){return as(e)&&Dr(e)==g}function Pr(e,t,r,i,o){return e===t||(null==e||null==t||!as(e)&&!as(t)?e!=e&&t!=t:function(e,t,r,i,o,a){var s=Ya(e),u=Ya(t),c=s?v:go(e),l=u?v:go(t),p=(c=c==g?I:c)==I,f=(l=l==g?I:l)==I,d=c==l;if(d&&Za(e)){if(!Za(t))return!1;s=!0,p=!1}if(d&&!p)return a||(a=new Xn),s||hs(e)?no(e,t,r,i,o,a):function(e,t,n,r,i,o,a){switch(n){case P:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case N:return!(e.byteLength!=t.byteLength||!o(new Ge(e),new Ge(t)));case y:case E:case R:return Ga(+e,+t);case _:return e.name==t.name&&e.message==t.message;case x:case S:return e==t+"";case A:var s=an;case b:var u=1&r;if(s||(s=cn),e.size!=t.size&&!u)return!1;var c=a.get(e);if(c)return c==t;r|=2,a.set(e,t);var l=no(s(e),s(t),r,i,o,a);return a.delete(e),l;case k:if(Bn)return Bn.call(e)==Bn.call(t)}return!1}(e,t,c,r,i,o,a);if(!(1&r)){var h=p&&Fe.call(e,"__wrapped__"),m=f&&Fe.call(t,"__wrapped__");if(h||m){var C=h?e.value():e,T=m?t.value():t;return a||(a=new Xn),o(C,T,r,i,a)}}if(!d)return!1;return a||(a=new Xn),function(e,t,r,i,o,a){var s=1&r,u=io(e),c=u.length,l=io(t).length;if(c!=l&&!s)return!1;var p=c;for(;p--;){var f=u[p];if(!(s?f in t:Fe.call(t,f)))return!1}var d=a.get(e),h=a.get(t);if(d&&h)return d==t&&h==e;var m=!0;a.set(e,t),a.set(t,e);var g=s;for(;++p<c;){var v=e[f=u[p]],y=t[f];if(i)var E=s?i(y,v,f,t,e,a):i(v,y,f,e,t,a);if(!(E===n?v===y||o(v,y,r,i,a):E)){m=!1;break}g||(g="constructor"==f)}if(m&&!g){var _=e.constructor,C=t.constructor;_==C||!("constructor"in e)||!("constructor"in t)||"function"==typeof _&&_ instanceof _&&"function"==typeof C&&C instanceof C||(m=!1)}return a.delete(e),a.delete(t),m}(e,t,r,i,o,a)}(e,t,r,i,Pr,o))}function wr(e,t,r,i){var o=r.length,a=o,s=!i;if(null==e)return!a;for(e=xe(e);o--;){var u=r[o];if(s&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++o<a;){var c=(u=r[o])[0],l=e[c],p=u[1];if(s&&u[2]){if(l===n&&!(c in e))return!1}else{var f=new Xn;if(i)var d=i(l,p,c,e,t,f);if(!(d===n?Pr(p,l,3,i,f):d))return!1}}return!0}function Lr(e){return!(!os(e)||(t=e,$e&&$e in t))&&(ns(e)?Ue:ge).test(Wo(e));var t}function Fr(e){return"function"==typeof e?e:null==e?uu:"object"==typeof e?Ya(e)?Ur(e[0],e[1]):jr(e):vu(e)}function Mr(e){if(!Io(e))return yn(e);var t=[];for(var n in xe(e))Fe.call(e,n)&&"constructor"!=n&&t.push(n);return t}function $r(e){if(!os(e))return function(e){var t=[];if(null!=e)for(var n in xe(e))t.push(n);return t}(e);var t=Io(e),n=[];for(var r in e)("constructor"!=r||!t&&Fe.call(e,r))&&n.push(r);return n}function Br(e,t){return e<t}function qr(e,t){var n=-1,r=Ja(e)?Te(e.length):[];return dr(e,(function(e,i,o){r[++n]=t(e,i,o)})),r}function jr(e){var t=po(e);return 1==t.length&&t[0][2]?xo(t[0][0],t[0][1]):function(n){return n===e||wr(n,e,t)}}function Ur(e,t){return To(e)&&Do(t)?xo(Uo(e),t):function(r){var i=Os(r,e);return i===n&&i===t?Ns(r,e):Pr(t,i,3)}}function Wr(e,t,r,i,o){e!==t&&Er(t,(function(a,s){if(o||(o=new Xn),os(a))!function(e,t,r,i,o,a,s){var u=Oo(e,r),c=Oo(t,r),l=s.get(c);if(l)return void tr(e,r,l);var p=a?a(u,c,r+"",e,t,s):n,f=p===n;if(f){var d=Ya(c),h=!d&&Za(c),m=!d&&!h&&hs(c);p=c,d||h||m?Ya(u)?p=u:Qa(u)?p=ki(u):h?(f=!1,p=Ri(c,!0)):m?(f=!1,p=Di(c,!0)):p=[]:cs(c)||za(c)?(p=u,za(u)?p=Ts(u):os(u)&&!ns(u)||(p=yo(c))):f=!1}f&&(s.set(c,p),o(p,c,i,a,s),s.delete(c));tr(e,r,p)}(e,t,s,r,Wr,i,o);else{var u=i?i(Oo(e,s),a,s+"",e,t,o):n;u===n&&(u=a),tr(e,s,u)}}),Ms)}function Kr(e,t){var r=e.length;if(r)return _o(t+=t<0?r:0,r)?e[t]:n}function Gr(e,t,n){t=t.length?Ot(t,(function(e){return Ya(e)?function(t){return Rr(t,1===e.length?e[0]:e)}:e})):[uu];var r=-1;return t=Ot(t,Yt(co())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(qr(e,(function(e,n,i){return{criteria:Ot(t,(function(t){return t(e)})),index:++r,value:e}})),(function(e,t){return function(e,t,n){var r=-1,i=e.criteria,o=t.criteria,a=i.length,s=n.length;for(;++r<a;){var u=xi(i[r],o[r]);if(u)return r>=s?u:u*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}))}function Vr(e,t,n){for(var r=-1,i=t.length,o={};++r<i;){var a=t[r],s=Rr(e,a);n(s,a)&&ei(o,_i(a,e),s)}return o}function Hr(e,t,n,r){var i=r?qt:Bt,o=-1,a=t.length,s=e;for(e===t&&(t=ki(t)),n&&(s=Ot(e,Yt(n)));++o<a;)for(var u=0,c=t[o],l=n?n(c):c;(u=i(s,l,u,r))>-1;)s!==e&&Qe.call(s,u,1),Qe.call(e,u,1);return e}function zr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var i=t[n];if(n==r||i!==o){var o=i;_o(i)?Qe.call(e,i,1):fi(e,i)}}return e}function Yr(e,t){return e+Ft(An()*(t-e+1))}function Xr(e,t){var n="";if(!e||t<1||t>f)return n;do{t%2&&(n+=e),(t=Ft(t/2))&&(e+=e)}while(t);return n}function Jr(e,t){return wo(bo(e,t,uu),e+"")}function Qr(e){return Qn(Gs(e))}function Zr(e,t){var n=Gs(e);return Mo(n,ur(t,0,n.length))}function ei(e,t,r,i){if(!os(e))return e;for(var o=-1,a=(t=_i(t,e)).length,s=a-1,u=e;null!=u&&++o<a;){var c=Uo(t[o]),l=r;if("__proto__"===c||"constructor"===c||"prototype"===c)return e;if(o!=s){var p=u[c];(l=i?i(p,c,u):n)===n&&(l=os(p)?p:_o(t[o+1])?[]:{})}nr(u,c,l),u=u[c]}return e}var ti=On?function(e,t){return On.set(e,t),e}:uu,ni=lt?function(e,t){return lt(e,"toString",{configurable:!0,enumerable:!1,value:ou(t),writable:!0})}:uu;function ri(e){return Mo(Gs(e))}function ii(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var o=Te(i);++r<i;)o[r]=e[r+t];return o}function oi(e,t){var n;return dr(e,(function(e,r,i){return!(n=t(e,r,i))})),!!n}function ai(e,t,n){var r=0,i=null==e?r:e.length;if("number"==typeof t&&t==t&&i<=2147483647){for(;r<i;){var o=r+i>>>1,a=e[o];null!==a&&!ds(a)&&(n?a<=t:a<t)?r=o+1:i=o}return i}return si(e,t,uu,n)}function si(e,t,r,i){var o=0,a=null==e?0:e.length;if(0===a)return 0;for(var s=(t=r(t))!=t,u=null===t,c=ds(t),l=t===n;o<a;){var p=Ft((o+a)/2),f=r(e[p]),d=f!==n,h=null===f,m=f==f,g=ds(f);if(s)var v=i||m;else v=l?m&&(i||d):u?m&&d&&(i||!h):c?m&&d&&!h&&(i||!g):!h&&!g&&(i?f<=t:f<t);v?o=p+1:a=p}return _n(a,4294967294)}function ui(e,t){for(var n=-1,r=e.length,i=0,o=[];++n<r;){var a=e[n],s=t?t(a):a;if(!n||!Ga(s,u)){var u=s;o[i++]=0===a?0:a}}return o}function ci(e){return"number"==typeof e?e:ds(e)?d:+e}function li(e){if("string"==typeof e)return e;if(Ya(e))return Ot(e,li)+"";if(ds(e))return qn?qn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function pi(e,t,n){var r=-1,i=St,o=e.length,a=!0,s=[],u=s;if(n)a=!1,i=kt;else if(o>=200){var c=t?null:Xi(e);if(c)return cn(c);a=!1,i=Jt,u=new Yn}else u=t?[]:s;e:for(;++r<o;){var l=e[r],p=t?t(l):l;if(l=n||0!==l?l:0,a&&p==p){for(var f=u.length;f--;)if(u[f]===p)continue e;t&&u.push(p),s.push(l)}else i(u,p,n)||(u!==s&&u.push(p),s.push(l))}return s}function fi(e,t){return null==(e=So(e,t=_i(t,e)))||delete e[Uo(ta(t))]}function di(e,t,n,r){return ei(e,t,n(Rr(e,t)),r)}function hi(e,t,n,r){for(var i=e.length,o=r?i:-1;(r?o--:++o<i)&&t(e[o],o,e););return n?ii(e,r?0:o,r?o+1:i):ii(e,r?o+1:0,r?i:o)}function mi(e,t){var n=e;return n instanceof Gn&&(n=n.value()),Pt(t,(function(e,t){return t.func.apply(t.thisArg,Nt([e],t.args))}),n)}function gi(e,t,n){var r=e.length;if(r<2)return r?pi(e[0]):[];for(var i=-1,o=Te(r);++i<r;)for(var a=e[i],s=-1;++s<r;)s!=i&&(o[i]=fr(o[i]||a,e[s],t,n));return pi(yr(o,1),t,n)}function vi(e,t,r){for(var i=-1,o=e.length,a=t.length,s={};++i<o;){var u=i<a?t[i]:n;r(s,e[i],u)}return s}function yi(e){return Qa(e)?e:[]}function Ei(e){return"function"==typeof e?e:uu}function _i(e,t){return Ya(e)?e:To(e,t)?[e]:jo(As(e))}var Ci=Jr;function Ti(e,t,r){var i=e.length;return r=r===n?i:r,!t&&r>=i?e:ii(e,t,r)}var Ai=ft||function(e){return pt.clearTimeout(e)};function Ri(e,t){if(t)return e.slice();var n=e.length,r=Ve?Ve(n):new e.constructor(n);return e.copy(r),r}function Ii(e){var t=new e.constructor(e.byteLength);return new Ge(t).set(new Ge(e)),t}function Di(e,t){var n=t?Ii(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function xi(e,t){if(e!==t){var r=e!==n,i=null===e,o=e==e,a=ds(e),s=t!==n,u=null===t,c=t==t,l=ds(t);if(!u&&!l&&!a&&e>t||a&&s&&c&&!u&&!l||i&&s&&c||!r&&c||!o)return 1;if(!i&&!a&&!l&&e<t||l&&r&&o&&!i&&!a||u&&r&&o||!s&&o||!c)return-1}return 0}function bi(e,t,n,r){for(var i=-1,o=e.length,a=n.length,s=-1,u=t.length,c=En(o-a,0),l=Te(u+c),p=!r;++s<u;)l[s]=t[s];for(;++i<a;)(p||i<o)&&(l[n[i]]=e[i]);for(;c--;)l[s++]=e[i++];return l}function Si(e,t,n,r){for(var i=-1,o=e.length,a=-1,s=n.length,u=-1,c=t.length,l=En(o-s,0),p=Te(l+c),f=!r;++i<l;)p[i]=e[i];for(var d=i;++u<c;)p[d+u]=t[u];for(;++a<s;)(f||i<o)&&(p[d+n[a]]=e[i++]);return p}function ki(e,t){var n=-1,r=e.length;for(t||(t=Te(r));++n<r;)t[n]=e[n];return t}function Oi(e,t,r,i){var o=!r;r||(r={});for(var a=-1,s=t.length;++a<s;){var u=t[a],c=i?i(r[u],e[u],u,r,e):n;c===n&&(c=e[u]),o?ar(r,u,c):nr(r,u,c)}return r}function Ni(e,t){return function(n,r){var i=Ya(n)?Rt:ir,o=t?t():{};return i(n,e,co(r,2),o)}}function Pi(e){return Jr((function(t,r){var i=-1,o=r.length,a=o>1?r[o-1]:n,s=o>2?r[2]:n;for(a=e.length>3&&"function"==typeof a?(o--,a):n,s&&Co(r[0],r[1],s)&&(a=o<3?n:a,o=1),t=xe(t);++i<o;){var u=r[i];u&&e(t,u,i,a)}return t}))}function wi(e,t){return function(n,r){if(null==n)return n;if(!Ja(n))return e(n,r);for(var i=n.length,o=t?i:-1,a=xe(n);(t?o--:++o<i)&&!1!==r(a[o],o,a););return n}}function Li(e){return function(t,n,r){for(var i=-1,o=xe(t),a=r(t),s=a.length;s--;){var u=a[e?s:++i];if(!1===n(o[u],u,o))break}return t}}function Fi(e){return function(t){var r=on(t=As(t))?pn(t):n,i=r?r[0]:t.charAt(0),o=r?Ti(r,1).join(""):t.slice(1);return i[e]()+o}}function Mi(e){return function(t){return Pt(nu(zs(t).replace(Xe,"")),e,"")}}function $i(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Un(e.prototype),r=e.apply(n,t);return os(r)?r:n}}function Bi(e){return function(t,r,i){var o=xe(t);if(!Ja(t)){var a=co(r,3);t=Fs(t),r=function(e){return a(o[e],e,o)}}var s=e(t,r,i);return s>-1?o[a?t[s]:s]:n}}function qi(e){return ro((function(t){var i=t.length,o=i,a=Kn.prototype.thru;for(e&&t.reverse();o--;){var s=t[o];if("function"!=typeof s)throw new ke(r);if(a&&!u&&"wrapper"==so(s))var u=new Kn([],!0)}for(o=u?o:i;++o<i;){var c=so(s=t[o]),l="wrapper"==c?ao(s):n;u=l&&Ao(l[0])&&424==l[1]&&!l[4].length&&1==l[9]?u[so(l[0])].apply(u,l[3]):1==s.length&&Ao(s)?u[c]():u.thru(s)}return function(){var e=arguments,n=e[0];if(u&&1==e.length&&Ya(n))return u.plant(n).value();for(var r=0,o=i?t[r].apply(this,e):n;++r<i;)o=t[r].call(this,o);return o}}))}function ji(e,t,r,i,o,a,s,u,l,p){var f=t&c,d=1&t,h=2&t,m=24&t,g=512&t,v=h?n:$i(e);return function n(){for(var c=arguments.length,y=Te(c),E=c;E--;)y[E]=arguments[E];if(m)var _=uo(n),C=en(y,_);if(i&&(y=bi(y,i,o,m)),a&&(y=Si(y,a,s,m)),c-=C,m&&c<p){var T=un(y,_);return zi(e,t,ji,n.placeholder,r,y,T,u,l,p-c)}var A=d?r:this,R=h?A[e]:e;return c=y.length,u?y=ko(y,u):g&&c>1&&y.reverse(),f&&l<c&&(y.length=l),this&&this!==pt&&this instanceof n&&(R=v||$i(R)),R.apply(A,y)}}function Ui(e,t){return function(n,r){return function(e,t,n,r){return Cr(e,(function(e,i,o){t(r,n(e),i,o)})),r}(n,e,t(r),{})}}function Wi(e,t){return function(r,i){var o;if(r===n&&i===n)return t;if(r!==n&&(o=r),i!==n){if(o===n)return i;"string"==typeof r||"string"==typeof i?(r=li(r),i=li(i)):(r=ci(r),i=ci(i)),o=e(r,i)}return o}}function Ki(e){return ro((function(t){return t=Ot(t,Yt(co())),Jr((function(n){var r=this;return e(t,(function(e){return At(e,r,n)}))}))}))}function Gi(e,t){var r=(t=t===n?" ":li(t)).length;if(r<2)return r?Xr(t,e):t;var i=Xr(t,gt(e/ln(t)));return on(t)?Ti(pn(i),0,e).join(""):i.slice(0,e)}function Vi(e){return function(t,r,i){return i&&"number"!=typeof i&&Co(t,r,i)&&(r=i=n),t=ys(t),r===n?(r=t,t=0):r=ys(r),function(e,t,n,r){for(var i=-1,o=En(gt((t-e)/(n||1)),0),a=Te(o);o--;)a[r?o:++i]=e,e+=n;return a}(t,r,i=i===n?t<r?1:-1:ys(i),e)}}function Hi(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=Cs(t),n=Cs(n)),e(t,n)}}function zi(e,t,r,i,o,a,c,l,p,f){var d=8&t;t|=d?s:u,4&(t&=~(d?u:s))||(t&=-4);var h=[e,t,o,d?a:n,d?c:n,d?n:a,d?n:c,l,p,f],m=r.apply(n,h);return Ao(e)&&No(m,h),m.placeholder=i,Lo(m,e,t)}function Yi(e){var t=De[e];return function(e,n){if(e=Cs(e),(n=null==n?0:_n(Es(n),292))&&gn(e)){var r=(As(e)+"e").split("e");return+((r=(As(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var Xi=bn&&1/cn(new bn([,-0]))[1]==p?function(e){return new bn(e)}:du;function Ji(e){return function(t){var n=go(t);return n==A?an(t):n==b?function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}(t):function(e,t){return Ot(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Qi(e,t,i,p,f,d,h,m){var g=2&t;if(!g&&"function"!=typeof e)throw new ke(r);var v=p?p.length:0;if(v||(t&=-97,p=f=n),h=h===n?h:En(Es(h),0),m=m===n?m:Es(m),v-=f?f.length:0,t&u){var y=p,E=f;p=f=n}var _=g?n:ao(e),C=[e,t,i,p,f,y,E,d,h,m];if(_&&function(e,t){var n=e[1],r=t[1],i=n|r,a=i<131,s=r==c&&8==n||r==c&&n==l&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!a&&!s)return e;1&r&&(e[2]=t[2],i|=1&n?0:4);var u=t[3];if(u){var p=e[3];e[3]=p?bi(p,u,t[4]):u,e[4]=p?un(e[3],o):t[4]}(u=t[5])&&(p=e[5],e[5]=p?Si(p,u,t[6]):u,e[6]=p?un(e[5],o):t[6]);(u=t[7])&&(e[7]=u);r&c&&(e[8]=null==e[8]?t[8]:_n(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=i}(C,_),e=C[0],t=C[1],i=C[2],p=C[3],f=C[4],!(m=C[9]=C[9]===n?g?0:e.length:En(C[9]-v,0))&&24&t&&(t&=-25),t&&1!=t)T=8==t||t==a?function(e,t,r){var i=$i(e);return function o(){for(var a=arguments.length,s=Te(a),u=a,c=uo(o);u--;)s[u]=arguments[u];var l=a<3&&s[0]!==c&&s[a-1]!==c?[]:un(s,c);return(a-=l.length)<r?zi(e,t,ji,o.placeholder,n,s,l,n,n,r-a):At(this&&this!==pt&&this instanceof o?i:e,this,s)}}(e,t,m):t!=s&&33!=t||f.length?ji.apply(n,C):function(e,t,n,r){var i=1&t,o=$i(e);return function t(){for(var a=-1,s=arguments.length,u=-1,c=r.length,l=Te(c+s),p=this&&this!==pt&&this instanceof t?o:e;++u<c;)l[u]=r[u];for(;s--;)l[u++]=arguments[++a];return At(p,i?n:this,l)}}(e,t,i,p);else var T=function(e,t,n){var r=1&t,i=$i(e);return function t(){return(this&&this!==pt&&this instanceof t?i:e).apply(r?n:this,arguments)}}(e,t,i);return Lo((_?ti:No)(T,C),e,t)}function Zi(e,t,r,i){return e===n||Ga(e,Pe[r])&&!Fe.call(i,r)?t:e}function eo(e,t,r,i,o,a){return os(e)&&os(t)&&(a.set(t,e),Wr(e,t,n,eo,a),a.delete(t)),e}function to(e){return cs(e)?n:e}function no(e,t,r,i,o,a){var s=1&r,u=e.length,c=t.length;if(u!=c&&!(s&&c>u))return!1;var l=a.get(e),p=a.get(t);if(l&&p)return l==t&&p==e;var f=-1,d=!0,h=2&r?new Yn:n;for(a.set(e,t),a.set(t,e);++f<u;){var m=e[f],g=t[f];if(i)var v=s?i(g,m,f,t,e,a):i(m,g,f,e,t,a);if(v!==n){if(v)continue;d=!1;break}if(h){if(!Lt(t,(function(e,t){if(!Jt(h,t)&&(m===e||o(m,e,r,i,a)))return h.push(t)}))){d=!1;break}}else if(m!==g&&!o(m,g,r,i,a)){d=!1;break}}return a.delete(e),a.delete(t),d}function ro(e){return wo(bo(e,n,Xo),e+"")}function io(e){return Ir(e,Fs,ho)}function oo(e){return Ir(e,Ms,mo)}var ao=On?function(e){return On.get(e)}:du;function so(e){for(var t=e.name+"",n=Nn[t],r=Fe.call(Nn,t)?n.length:0;r--;){var i=n[r],o=i.func;if(null==o||o==e)return i.name}return t}function uo(e){return(Fe.call(jn,"placeholder")?jn:e).placeholder}function co(){var e=jn.iteratee||cu;return e=e===cu?Fr:e,arguments.length?e(arguments[0],arguments[1]):e}function lo(e,t){var n,r,i=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?i["string"==typeof t?"string":"hash"]:i.map}function po(e){for(var t=Fs(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,Do(i)]}return t}function fo(e,t){var r=function(e,t){return null==e?n:e[t]}(e,t);return Lr(r)?r:n}var ho=Kt?function(e){return null==e?[]:(e=xe(e),bt(Kt(e),(function(t){return Ye.call(e,t)})))}:_u,mo=Kt?function(e){for(var t=[];e;)Nt(t,ho(e)),e=He(e);return t}:_u,go=Dr;function vo(e,t,n){for(var r=-1,i=(t=_i(t,e)).length,o=!1;++r<i;){var a=Uo(t[r]);if(!(o=null!=e&&n(e,a)))break;e=e[a]}return o||++r!=i?o:!!(i=null==e?0:e.length)&&is(i)&&_o(a,i)&&(Ya(e)||za(e))}function yo(e){return"function"!=typeof e.constructor||Io(e)?{}:Un(He(e))}function Eo(e){return Ya(e)||za(e)||!!(et&&e&&e[et])}function _o(e,t){var n=typeof e;return!!(t=null==t?f:t)&&("number"==n||"symbol"!=n&&ye.test(e))&&e>-1&&e%1==0&&e<t}function Co(e,t,n){if(!os(n))return!1;var r=typeof t;return!!("number"==r?Ja(n)&&_o(t,n.length):"string"==r&&t in n)&&Ga(n[t],e)}function To(e,t){if(Ya(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ds(e))||(ee.test(e)||!Z.test(e)||null!=t&&e in xe(t))}function Ao(e){var t=so(e),n=jn[t];if("function"!=typeof n||!(t in Gn.prototype))return!1;if(e===n)return!0;var r=ao(n);return!!r&&e===r[0]}(In&&go(new In(new ArrayBuffer(1)))!=P||Dn&&go(new Dn)!=A||xn&&go(xn.resolve())!=D||bn&&go(new bn)!=b||Sn&&go(new Sn)!=O)&&(go=function(e){var t=Dr(e),r=t==I?e.constructor:n,i=r?Wo(r):"";if(i)switch(i){case Pn:return P;case wn:return A;case Ln:return D;case Fn:return b;case Mn:return O}return t});var Ro=we?ns:Cu;function Io(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Pe)}function Do(e){return e==e&&!os(e)}function xo(e,t){return function(r){return null!=r&&(r[e]===t&&(t!==n||e in xe(r)))}}function bo(e,t,r){return t=En(t===n?e.length-1:t,0),function(){for(var n=arguments,i=-1,o=En(n.length-t,0),a=Te(o);++i<o;)a[i]=n[t+i];i=-1;for(var s=Te(t+1);++i<t;)s[i]=n[i];return s[t]=r(a),At(e,this,s)}}function So(e,t){return t.length<2?e:Rr(e,ii(t,0,-1))}function ko(e,t){for(var r=e.length,i=_n(t.length,r),o=ki(e);i--;){var a=t[i];e[i]=_o(a,r)?o[a]:n}return e}function Oo(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var No=Fo(ti),Po=mt||function(e,t){return pt.setTimeout(e,t)},wo=Fo(ni);function Lo(e,t,n){var r=t+"";return wo(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(ae,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return It(m,(function(n){var r="_."+n[0];t&n[1]&&!St(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(se);return t?t[1].split(ue):[]}(r),n)))}function Fo(e){var t=0,r=0;return function(){var i=Cn(),o=16-(i-r);if(r=i,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(n,arguments)}}function Mo(e,t){var r=-1,i=e.length,o=i-1;for(t=t===n?i:t;++r<t;){var a=Yr(r,o),s=e[a];e[a]=e[r],e[r]=s}return e.length=t,e}var $o,Bo,qo,jo=($o=function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(te,(function(e,n,r,i){t.push(r?i.replace(pe,"$1"):n||e)})),t},Bo=Ba($o,(function(e){return 500===qo.size&&qo.clear(),e})),qo=Bo.cache,Bo);function Uo(e){if("string"==typeof e||ds(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Wo(e){if(null!=e){try{return Le.call(e)}catch(PI){}try{return e+""}catch(PI){}}return""}function Ko(e){if(e instanceof Gn)return e.clone();var t=new Kn(e.__wrapped__,e.__chain__);return t.__actions__=ki(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Go=Jr((function(e,t){return Qa(e)?fr(e,yr(t,1,Qa,!0)):[]})),Vo=Jr((function(e,t){var r=ta(t);return Qa(r)&&(r=n),Qa(e)?fr(e,yr(t,1,Qa,!0),co(r,2)):[]})),Ho=Jr((function(e,t){var r=ta(t);return Qa(r)&&(r=n),Qa(e)?fr(e,yr(t,1,Qa,!0),n,r):[]}));function zo(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:Es(n);return i<0&&(i=En(r+i,0)),$t(e,co(t,3),i)}function Yo(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var o=i-1;return r!==n&&(o=Es(r),o=r<0?En(i+o,0):_n(o,i-1)),$t(e,co(t,3),o,!0)}function Xo(e){return(null==e?0:e.length)?yr(e,1):[]}function Jo(e){return e&&e.length?e[0]:n}var Qo=Jr((function(e){var t=Ot(e,yi);return t.length&&t[0]===e[0]?kr(t):[]})),Zo=Jr((function(e){var t=ta(e),r=Ot(e,yi);return t===ta(r)?t=n:r.pop(),r.length&&r[0]===e[0]?kr(r,co(t,2)):[]})),ea=Jr((function(e){var t=ta(e),r=Ot(e,yi);return(t="function"==typeof t?t:n)&&r.pop(),r.length&&r[0]===e[0]?kr(r,n,t):[]}));function ta(e){var t=null==e?0:e.length;return t?e[t-1]:n}var na=Jr(ra);function ra(e,t){return e&&e.length&&t&&t.length?Hr(e,t):e}var ia=ro((function(e,t){var n=null==e?0:e.length,r=sr(e,t);return zr(e,Ot(t,(function(e){return _o(e,n)?+e:e})).sort(xi)),r}));function oa(e){return null==e?e:Rn.call(e)}var aa=Jr((function(e){return pi(yr(e,1,Qa,!0))})),sa=Jr((function(e){var t=ta(e);return Qa(t)&&(t=n),pi(yr(e,1,Qa,!0),co(t,2))})),ua=Jr((function(e){var t=ta(e);return t="function"==typeof t?t:n,pi(yr(e,1,Qa,!0),n,t)}));function ca(e){if(!e||!e.length)return[];var t=0;return e=bt(e,(function(e){if(Qa(e))return t=En(e.length,t),!0})),Ht(t,(function(t){return Ot(e,Wt(t))}))}function la(e,t){if(!e||!e.length)return[];var r=ca(e);return null==t?r:Ot(r,(function(e){return At(t,n,e)}))}var pa=Jr((function(e,t){return Qa(e)?fr(e,t):[]})),fa=Jr((function(e){return gi(bt(e,Qa))})),da=Jr((function(e){var t=ta(e);return Qa(t)&&(t=n),gi(bt(e,Qa),co(t,2))})),ha=Jr((function(e){var t=ta(e);return t="function"==typeof t?t:n,gi(bt(e,Qa),n,t)})),ma=Jr(ca);var ga=Jr((function(e){var t=e.length,r=t>1?e[t-1]:n;return r="function"==typeof r?(e.pop(),r):n,la(e,r)}));function va(e){var t=jn(e);return t.__chain__=!0,t}function ya(e,t){return t(e)}var Ea=ro((function(e){var t=e.length,r=t?e[0]:0,i=this.__wrapped__,o=function(t){return sr(t,e)};return!(t>1||this.__actions__.length)&&i instanceof Gn&&_o(r)?((i=i.slice(r,+r+(t?1:0))).__actions__.push({func:ya,args:[o],thisArg:n}),new Kn(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(n),e}))):this.thru(o)}));var _a=Ni((function(e,t,n){Fe.call(e,n)?++e[n]:ar(e,n,1)}));var Ca=Bi(zo),Ta=Bi(Yo);function Aa(e,t){return(Ya(e)?It:dr)(e,co(t,3))}function Ra(e,t){return(Ya(e)?Dt:hr)(e,co(t,3))}var Ia=Ni((function(e,t,n){Fe.call(e,n)?e[n].push(t):ar(e,n,[t])}));var Da=Jr((function(e,t,n){var r=-1,i="function"==typeof t,o=Ja(e)?Te(e.length):[];return dr(e,(function(e){o[++r]=i?At(t,e,n):Or(e,t,n)})),o})),xa=Ni((function(e,t,n){ar(e,n,t)}));function ba(e,t){return(Ya(e)?Ot:qr)(e,co(t,3))}var Sa=Ni((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var ka=Jr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&Co(e,t[0],t[1])?t=[]:n>2&&Co(t[0],t[1],t[2])&&(t=[t[0]]),Gr(e,yr(t,1),[])})),Oa=dt||function(){return pt.Date.now()};function Na(e,t,r){return t=r?n:t,t=e&&null==t?e.length:t,Qi(e,c,n,n,n,n,t)}function Pa(e,t){var i;if("function"!=typeof t)throw new ke(r);return e=Es(e),function(){return--e>0&&(i=t.apply(this,arguments)),e<=1&&(t=n),i}}var wa=Jr((function(e,t,n){var r=1;if(n.length){var i=un(n,uo(wa));r|=s}return Qi(e,r,t,n,i)})),La=Jr((function(e,t,n){var r=3;if(n.length){var i=un(n,uo(La));r|=s}return Qi(t,r,e,n,i)}));function Fa(e,t,i){var o,a,s,u,c,l,p=0,f=!1,d=!1,h=!0;if("function"!=typeof e)throw new ke(r);function m(t){var r=o,i=a;return o=a=n,p=t,u=e.apply(i,r)}function g(e){return p=e,c=Po(y,t),f?m(e):u}function v(e){var r=e-l;return l===n||r>=t||r<0||d&&e-p>=s}function y(){var e=Oa();if(v(e))return E(e);c=Po(y,function(e){var n=t-(e-l);return d?_n(n,s-(e-p)):n}(e))}function E(e){return c=n,h&&o?m(e):(o=a=n,u)}function _(){var e=Oa(),r=v(e);if(o=arguments,a=this,l=e,r){if(c===n)return g(l);if(d)return Ai(c),c=Po(y,t),m(l)}return c===n&&(c=Po(y,t)),u}return t=Cs(t)||0,os(i)&&(f=!!i.leading,s=(d="maxWait"in i)?En(Cs(i.maxWait)||0,t):s,h="trailing"in i?!!i.trailing:h),_.cancel=function(){c!==n&&Ai(c),p=0,o=l=a=c=n},_.flush=function(){return c===n?u:E(Oa())},_}var Ma=Jr((function(e,t){return pr(e,1,t)})),$a=Jr((function(e,t,n){return pr(e,Cs(t)||0,n)}));function Ba(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new ke(r);var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],o=n.cache;if(o.has(i))return o.get(i);var a=e.apply(this,r);return n.cache=o.set(i,a)||o,a};return n.cache=new(Ba.Cache||zn),n}function qa(e){if("function"!=typeof e)throw new ke(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Ba.Cache=zn;var ja=Ci((function(e,t){var n=(t=1==t.length&&Ya(t[0])?Ot(t[0],Yt(co())):Ot(yr(t,1),Yt(co()))).length;return Jr((function(r){for(var i=-1,o=_n(r.length,n);++i<o;)r[i]=t[i].call(this,r[i]);return At(e,this,r)}))})),Ua=Jr((function(e,t){var r=un(t,uo(Ua));return Qi(e,s,n,t,r)})),Wa=Jr((function(e,t){var r=un(t,uo(Wa));return Qi(e,u,n,t,r)})),Ka=ro((function(e,t){return Qi(e,l,n,n,n,t)}));function Ga(e,t){return e===t||e!=e&&t!=t}var Va=Hi(xr),Ha=Hi((function(e,t){return e>=t})),za=Nr(function(){return arguments}())?Nr:function(e){return as(e)&&Fe.call(e,"callee")&&!Ye.call(e,"callee")},Ya=Te.isArray,Xa=vt?Yt(vt):function(e){return as(e)&&Dr(e)==N};function Ja(e){return null!=e&&is(e.length)&&!ns(e)}function Qa(e){return as(e)&&Ja(e)}var Za=mn||Cu,es=yt?Yt(yt):function(e){return as(e)&&Dr(e)==E};function ts(e){if(!as(e))return!1;var t=Dr(e);return t==_||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!cs(e)}function ns(e){if(!os(e))return!1;var t=Dr(e);return t==C||t==T||"[object AsyncFunction]"==t||"[object Proxy]"==t}function rs(e){return"number"==typeof e&&e==Es(e)}function is(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=f}function os(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function as(e){return null!=e&&"object"==typeof e}var ss=Et?Yt(Et):function(e){return as(e)&&go(e)==A};function us(e){return"number"==typeof e||as(e)&&Dr(e)==R}function cs(e){if(!as(e)||Dr(e)!=I)return!1;var t=He(e);if(null===t)return!0;var n=Fe.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Le.call(n)==qe}var ls=_t?Yt(_t):function(e){return as(e)&&Dr(e)==x};var ps=Ct?Yt(Ct):function(e){return as(e)&&go(e)==b};function fs(e){return"string"==typeof e||!Ya(e)&&as(e)&&Dr(e)==S}function ds(e){return"symbol"==typeof e||as(e)&&Dr(e)==k}var hs=Tt?Yt(Tt):function(e){return as(e)&&is(e.length)&&!!it[Dr(e)]};var ms=Hi(Br),gs=Hi((function(e,t){return e<=t}));function vs(e){if(!e)return[];if(Ja(e))return fs(e)?pn(e):ki(e);if(at&&e[at])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[at]());var t=go(e);return(t==A?an:t==b?cn:Gs)(e)}function ys(e){return e?(e=Cs(e))===p||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function Es(e){var t=ys(e),n=t%1;return t==t?n?t-n:t:0}function _s(e){return e?ur(Es(e),0,h):0}function Cs(e){if("number"==typeof e)return e;if(ds(e))return d;if(os(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=os(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=zt(e);var n=me.test(e);return n||ve.test(e)?ut(e.slice(2),n?2:8):he.test(e)?d:+e}function Ts(e){return Oi(e,Ms(e))}function As(e){return null==e?"":li(e)}var Rs=Pi((function(e,t){if(Io(t)||Ja(t))Oi(t,Fs(t),e);else for(var n in t)Fe.call(t,n)&&nr(e,n,t[n])})),Is=Pi((function(e,t){Oi(t,Ms(t),e)})),Ds=Pi((function(e,t,n,r){Oi(t,Ms(t),e,r)})),xs=Pi((function(e,t,n,r){Oi(t,Fs(t),e,r)})),bs=ro(sr);var Ss=Jr((function(e,t){e=xe(e);var r=-1,i=t.length,o=i>2?t[2]:n;for(o&&Co(t[0],t[1],o)&&(i=1);++r<i;)for(var a=t[r],s=Ms(a),u=-1,c=s.length;++u<c;){var l=s[u],p=e[l];(p===n||Ga(p,Pe[l])&&!Fe.call(e,l))&&(e[l]=a[l])}return e})),ks=Jr((function(e){return e.push(n,eo),At(Bs,n,e)}));function Os(e,t,r){var i=null==e?n:Rr(e,t);return i===n?r:i}function Ns(e,t){return null!=e&&vo(e,t,Sr)}var Ps=Ui((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Be.call(t)),e[t]=n}),ou(uu)),ws=Ui((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Be.call(t)),Fe.call(e,t)?e[t].push(n):e[t]=[n]}),co),Ls=Jr(Or);function Fs(e){return Ja(e)?Jn(e):Mr(e)}function Ms(e){return Ja(e)?Jn(e,!0):$r(e)}var $s=Pi((function(e,t,n){Wr(e,t,n)})),Bs=Pi((function(e,t,n,r){Wr(e,t,n,r)})),qs=ro((function(e,t){var n={};if(null==e)return n;var r=!1;t=Ot(t,(function(t){return t=_i(t,e),r||(r=t.length>1),t})),Oi(e,oo(e),n),r&&(n=cr(n,7,to));for(var i=t.length;i--;)fi(n,t[i]);return n}));var js=ro((function(e,t){return null==e?{}:function(e,t){return Vr(e,t,(function(t,n){return Ns(e,n)}))}(e,t)}));function Us(e,t){if(null==e)return{};var n=Ot(oo(e),(function(e){return[e]}));return t=co(t),Vr(e,n,(function(e,n){return t(e,n[0])}))}var Ws=Ji(Fs),Ks=Ji(Ms);function Gs(e){return null==e?[]:Xt(e,Fs(e))}var Vs=Mi((function(e,t,n){return t=t.toLowerCase(),e+(n?Hs(t):t)}));function Hs(e){return tu(As(e).toLowerCase())}function zs(e){return(e=As(e))&&e.replace(Ee,tn).replace(Je,"")}var Ys=Mi((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),Xs=Mi((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Js=Fi("toLowerCase");var Qs=Mi((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var Zs=Mi((function(e,t,n){return e+(n?" ":"")+tu(t)}));var eu=Mi((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),tu=Fi("toUpperCase");function nu(e,t,r){return e=As(e),(t=r?n:t)===n?function(e){return tt.test(e)}(e)?function(e){return e.match(Ze)||[]}(e):function(e){return e.match(ce)||[]}(e):e.match(t)||[]}var ru=Jr((function(e,t){try{return At(e,n,t)}catch(PI){return ts(PI)?PI:new Re(PI)}})),iu=ro((function(e,t){return It(t,(function(t){t=Uo(t),ar(e,t,wa(e[t],e))})),e}));function ou(e){return function(){return e}}var au=qi(),su=qi(!0);function uu(e){return e}function cu(e){return Fr("function"==typeof e?e:cr(e,1))}var lu=Jr((function(e,t){return function(n){return Or(n,e,t)}})),pu=Jr((function(e,t){return function(n){return Or(e,n,t)}}));function fu(e,t,n){var r=Fs(t),i=Ar(t,r);null!=n||os(t)&&(i.length||!r.length)||(n=t,t=e,e=this,i=Ar(t,Fs(t)));var o=!(os(n)&&"chain"in n&&!n.chain),a=ns(e);return It(i,(function(n){var r=t[n];e[n]=r,a&&(e.prototype[n]=function(){var t=this.__chain__;if(o||t){var n=e(this.__wrapped__),i=n.__actions__=ki(this.__actions__);return i.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Nt([this.value()],arguments))})})),e}function du(){}var hu=Ki(Ot),mu=Ki(xt),gu=Ki(Lt);function vu(e){return To(e)?Wt(Uo(e)):function(e){return function(t){return Rr(t,e)}}(e)}var yu=Vi(),Eu=Vi(!0);function _u(){return[]}function Cu(){return!1}var Tu=Wi((function(e,t){return e+t}),0),Au=Yi("ceil"),Ru=Wi((function(e,t){return e/t}),1),Iu=Yi("floor");var Du,xu=Wi((function(e,t){return e*t}),1),bu=Yi("round"),Su=Wi((function(e,t){return e-t}),0);return jn.after=function(e,t){if("function"!=typeof t)throw new ke(r);return e=Es(e),function(){if(--e<1)return t.apply(this,arguments)}},jn.ary=Na,jn.assign=Rs,jn.assignIn=Is,jn.assignInWith=Ds,jn.assignWith=xs,jn.at=bs,jn.before=Pa,jn.bind=wa,jn.bindAll=iu,jn.bindKey=La,jn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Ya(e)?e:[e]},jn.chain=va,jn.chunk=function(e,t,r){t=(r?Co(e,t,r):t===n)?1:En(Es(t),0);var i=null==e?0:e.length;if(!i||t<1)return[];for(var o=0,a=0,s=Te(gt(i/t));o<i;)s[a++]=ii(e,o,o+=t);return s},jn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,i=[];++t<n;){var o=e[t];o&&(i[r++]=o)}return i},jn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=Te(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return Nt(Ya(n)?ki(n):[n],yr(t,1))},jn.cond=function(e){var t=null==e?0:e.length,n=co();return e=t?Ot(e,(function(e){if("function"!=typeof e[1])throw new ke(r);return[n(e[0]),e[1]]})):[],Jr((function(n){for(var r=-1;++r<t;){var i=e[r];if(At(i[0],this,n))return At(i[1],this,n)}}))},jn.conforms=function(e){return function(e){var t=Fs(e);return function(n){return lr(n,e,t)}}(cr(e,1))},jn.constant=ou,jn.countBy=_a,jn.create=function(e,t){var n=Un(e);return null==t?n:or(n,t)},jn.curry=function e(t,r,i){var o=Qi(t,8,n,n,n,n,n,r=i?n:r);return o.placeholder=e.placeholder,o},jn.curryRight=function e(t,r,i){var o=Qi(t,a,n,n,n,n,n,r=i?n:r);return o.placeholder=e.placeholder,o},jn.debounce=Fa,jn.defaults=Ss,jn.defaultsDeep=ks,jn.defer=Ma,jn.delay=$a,jn.difference=Go,jn.differenceBy=Vo,jn.differenceWith=Ho,jn.drop=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,(t=r||t===n?1:Es(t))<0?0:t,i):[]},jn.dropRight=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,0,(t=i-(t=r||t===n?1:Es(t)))<0?0:t):[]},jn.dropRightWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!0,!0):[]},jn.dropWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!0):[]},jn.fill=function(e,t,r,i){var o=null==e?0:e.length;return o?(r&&"number"!=typeof r&&Co(e,t,r)&&(r=0,i=o),function(e,t,r,i){var o=e.length;for((r=Es(r))<0&&(r=-r>o?0:o+r),(i=i===n||i>o?o:Es(i))<0&&(i+=o),i=r>i?0:_s(i);r<i;)e[r++]=t;return e}(e,t,r,i)):[]},jn.filter=function(e,t){return(Ya(e)?bt:vr)(e,co(t,3))},jn.flatMap=function(e,t){return yr(ba(e,t),1)},jn.flatMapDeep=function(e,t){return yr(ba(e,t),p)},jn.flatMapDepth=function(e,t,r){return r=r===n?1:Es(r),yr(ba(e,t),r)},jn.flatten=Xo,jn.flattenDeep=function(e){return(null==e?0:e.length)?yr(e,p):[]},jn.flattenDepth=function(e,t){return(null==e?0:e.length)?yr(e,t=t===n?1:Es(t)):[]},jn.flip=function(e){return Qi(e,512)},jn.flow=au,jn.flowRight=su,jn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var i=e[t];r[i[0]]=i[1]}return r},jn.functions=function(e){return null==e?[]:Ar(e,Fs(e))},jn.functionsIn=function(e){return null==e?[]:Ar(e,Ms(e))},jn.groupBy=Ia,jn.initial=function(e){return(null==e?0:e.length)?ii(e,0,-1):[]},jn.intersection=Qo,jn.intersectionBy=Zo,jn.intersectionWith=ea,jn.invert=Ps,jn.invertBy=ws,jn.invokeMap=Da,jn.iteratee=cu,jn.keyBy=xa,jn.keys=Fs,jn.keysIn=Ms,jn.map=ba,jn.mapKeys=function(e,t){var n={};return t=co(t,3),Cr(e,(function(e,r,i){ar(n,t(e,r,i),e)})),n},jn.mapValues=function(e,t){var n={};return t=co(t,3),Cr(e,(function(e,r,i){ar(n,r,t(e,r,i))})),n},jn.matches=function(e){return jr(cr(e,1))},jn.matchesProperty=function(e,t){return Ur(e,cr(t,1))},jn.memoize=Ba,jn.merge=$s,jn.mergeWith=Bs,jn.method=lu,jn.methodOf=pu,jn.mixin=fu,jn.negate=qa,jn.nthArg=function(e){return e=Es(e),Jr((function(t){return Kr(t,e)}))},jn.omit=qs,jn.omitBy=function(e,t){return Us(e,qa(co(t)))},jn.once=function(e){return Pa(2,e)},jn.orderBy=function(e,t,r,i){return null==e?[]:(Ya(t)||(t=null==t?[]:[t]),Ya(r=i?n:r)||(r=null==r?[]:[r]),Gr(e,t,r))},jn.over=hu,jn.overArgs=ja,jn.overEvery=mu,jn.overSome=gu,jn.partial=Ua,jn.partialRight=Wa,jn.partition=Sa,jn.pick=js,jn.pickBy=Us,jn.property=vu,jn.propertyOf=function(e){return function(t){return null==e?n:Rr(e,t)}},jn.pull=na,jn.pullAll=ra,jn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Hr(e,t,co(n,2)):e},jn.pullAllWith=function(e,t,r){return e&&e.length&&t&&t.length?Hr(e,t,n,r):e},jn.pullAt=ia,jn.range=yu,jn.rangeRight=Eu,jn.rearg=Ka,jn.reject=function(e,t){return(Ya(e)?bt:vr)(e,qa(co(t,3)))},jn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,i=[],o=e.length;for(t=co(t,3);++r<o;){var a=e[r];t(a,r,e)&&(n.push(a),i.push(r))}return zr(e,i),n},jn.rest=function(e,t){if("function"!=typeof e)throw new ke(r);return Jr(e,t=t===n?t:Es(t))},jn.reverse=oa,jn.sampleSize=function(e,t,r){return t=(r?Co(e,t,r):t===n)?1:Es(t),(Ya(e)?Zn:Zr)(e,t)},jn.set=function(e,t,n){return null==e?e:ei(e,t,n)},jn.setWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:ei(e,t,r,i)},jn.shuffle=function(e){return(Ya(e)?er:ri)(e)},jn.slice=function(e,t,r){var i=null==e?0:e.length;return i?(r&&"number"!=typeof r&&Co(e,t,r)?(t=0,r=i):(t=null==t?0:Es(t),r=r===n?i:Es(r)),ii(e,t,r)):[]},jn.sortBy=ka,jn.sortedUniq=function(e){return e&&e.length?ui(e):[]},jn.sortedUniqBy=function(e,t){return e&&e.length?ui(e,co(t,2)):[]},jn.split=function(e,t,r){return r&&"number"!=typeof r&&Co(e,t,r)&&(t=r=n),(r=r===n?h:r>>>0)?(e=As(e))&&("string"==typeof t||null!=t&&!ls(t))&&!(t=li(t))&&on(e)?Ti(pn(e),0,r):e.split(t,r):[]},jn.spread=function(e,t){if("function"!=typeof e)throw new ke(r);return t=null==t?0:En(Es(t),0),Jr((function(n){var r=n[t],i=Ti(n,0,t);return r&&Nt(i,r),At(e,this,i)}))},jn.tail=function(e){var t=null==e?0:e.length;return t?ii(e,1,t):[]},jn.take=function(e,t,r){return e&&e.length?ii(e,0,(t=r||t===n?1:Es(t))<0?0:t):[]},jn.takeRight=function(e,t,r){var i=null==e?0:e.length;return i?ii(e,(t=i-(t=r||t===n?1:Es(t)))<0?0:t,i):[]},jn.takeRightWhile=function(e,t){return e&&e.length?hi(e,co(t,3),!1,!0):[]},jn.takeWhile=function(e,t){return e&&e.length?hi(e,co(t,3)):[]},jn.tap=function(e,t){return t(e),e},jn.throttle=function(e,t,n){var i=!0,o=!0;if("function"!=typeof e)throw new ke(r);return os(n)&&(i="leading"in n?!!n.leading:i,o="trailing"in n?!!n.trailing:o),Fa(e,t,{leading:i,maxWait:t,trailing:o})},jn.thru=ya,jn.toArray=vs,jn.toPairs=Ws,jn.toPairsIn=Ks,jn.toPath=function(e){return Ya(e)?Ot(e,Uo):ds(e)?[e]:ki(jo(As(e)))},jn.toPlainObject=Ts,jn.transform=function(e,t,n){var r=Ya(e),i=r||Za(e)||hs(e);if(t=co(t,4),null==n){var o=e&&e.constructor;n=i?r?new o:[]:os(e)&&ns(o)?Un(He(e)):{}}return(i?It:Cr)(e,(function(e,r,i){return t(n,e,r,i)})),n},jn.unary=function(e){return Na(e,1)},jn.union=aa,jn.unionBy=sa,jn.unionWith=ua,jn.uniq=function(e){return e&&e.length?pi(e):[]},jn.uniqBy=function(e,t){return e&&e.length?pi(e,co(t,2)):[]},jn.uniqWith=function(e,t){return t="function"==typeof t?t:n,e&&e.length?pi(e,n,t):[]},jn.unset=function(e,t){return null==e||fi(e,t)},jn.unzip=ca,jn.unzipWith=la,jn.update=function(e,t,n){return null==e?e:di(e,t,Ei(n))},jn.updateWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:di(e,t,Ei(r),i)},jn.values=Gs,jn.valuesIn=function(e){return null==e?[]:Xt(e,Ms(e))},jn.without=pa,jn.words=nu,jn.wrap=function(e,t){return Ua(Ei(t),e)},jn.xor=fa,jn.xorBy=da,jn.xorWith=ha,jn.zip=ma,jn.zipObject=function(e,t){return vi(e||[],t||[],nr)},jn.zipObjectDeep=function(e,t){return vi(e||[],t||[],ei)},jn.zipWith=ga,jn.entries=Ws,jn.entriesIn=Ks,jn.extend=Is,jn.extendWith=Ds,fu(jn,jn),jn.add=Tu,jn.attempt=ru,jn.camelCase=Vs,jn.capitalize=Hs,jn.ceil=Au,jn.clamp=function(e,t,r){return r===n&&(r=t,t=n),r!==n&&(r=(r=Cs(r))==r?r:0),t!==n&&(t=(t=Cs(t))==t?t:0),ur(Cs(e),t,r)},jn.clone=function(e){return cr(e,4)},jn.cloneDeep=function(e){return cr(e,5)},jn.cloneDeepWith=function(e,t){return cr(e,5,t="function"==typeof t?t:n)},jn.cloneWith=function(e,t){return cr(e,4,t="function"==typeof t?t:n)},jn.conformsTo=function(e,t){return null==t||lr(e,t,Fs(t))},jn.deburr=zs,jn.defaultTo=function(e,t){return null==e||e!=e?t:e},jn.divide=Ru,jn.endsWith=function(e,t,r){e=As(e),t=li(t);var i=e.length,o=r=r===n?i:ur(Es(r),0,i);return(r-=t.length)>=0&&e.slice(r,o)==t},jn.eq=Ga,jn.escape=function(e){return(e=As(e))&&Y.test(e)?e.replace(H,nn):e},jn.escapeRegExp=function(e){return(e=As(e))&&re.test(e)?e.replace(ne,"\\$&"):e},jn.every=function(e,t,r){var i=Ya(e)?xt:mr;return r&&Co(e,t,r)&&(t=n),i(e,co(t,3))},jn.find=Ca,jn.findIndex=zo,jn.findKey=function(e,t){return Mt(e,co(t,3),Cr)},jn.findLast=Ta,jn.findLastIndex=Yo,jn.findLastKey=function(e,t){return Mt(e,co(t,3),Tr)},jn.floor=Iu,jn.forEach=Aa,jn.forEachRight=Ra,jn.forIn=function(e,t){return null==e?e:Er(e,co(t,3),Ms)},jn.forInRight=function(e,t){return null==e?e:_r(e,co(t,3),Ms)},jn.forOwn=function(e,t){return e&&Cr(e,co(t,3))},jn.forOwnRight=function(e,t){return e&&Tr(e,co(t,3))},jn.get=Os,jn.gt=Va,jn.gte=Ha,jn.has=function(e,t){return null!=e&&vo(e,t,br)},jn.hasIn=Ns,jn.head=Jo,jn.identity=uu,jn.includes=function(e,t,n,r){e=Ja(e)?e:Gs(e),n=n&&!r?Es(n):0;var i=e.length;return n<0&&(n=En(i+n,0)),fs(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&Bt(e,t,n)>-1},jn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:Es(n);return i<0&&(i=En(r+i,0)),Bt(e,t,i)},jn.inRange=function(e,t,r){return t=ys(t),r===n?(r=t,t=0):r=ys(r),function(e,t,n){return e>=_n(t,n)&&e<En(t,n)}(e=Cs(e),t,r)},jn.invoke=Ls,jn.isArguments=za,jn.isArray=Ya,jn.isArrayBuffer=Xa,jn.isArrayLike=Ja,jn.isArrayLikeObject=Qa,jn.isBoolean=function(e){return!0===e||!1===e||as(e)&&Dr(e)==y},jn.isBuffer=Za,jn.isDate=es,jn.isElement=function(e){return as(e)&&1===e.nodeType&&!cs(e)},jn.isEmpty=function(e){if(null==e)return!0;if(Ja(e)&&(Ya(e)||"string"==typeof e||"function"==typeof e.splice||Za(e)||hs(e)||za(e)))return!e.length;var t=go(e);if(t==A||t==b)return!e.size;if(Io(e))return!Mr(e).length;for(var n in e)if(Fe.call(e,n))return!1;return!0},jn.isEqual=function(e,t){return Pr(e,t)},jn.isEqualWith=function(e,t,r){var i=(r="function"==typeof r?r:n)?r(e,t):n;return i===n?Pr(e,t,n,r):!!i},jn.isError=ts,jn.isFinite=function(e){return"number"==typeof e&&gn(e)},jn.isFunction=ns,jn.isInteger=rs,jn.isLength=is,jn.isMap=ss,jn.isMatch=function(e,t){return e===t||wr(e,t,po(t))},jn.isMatchWith=function(e,t,r){return r="function"==typeof r?r:n,wr(e,t,po(t),r)},jn.isNaN=function(e){return us(e)&&e!=+e},jn.isNative=function(e){if(Ro(e))throw new Re("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Lr(e)},jn.isNil=function(e){return null==e},jn.isNull=function(e){return null===e},jn.isNumber=us,jn.isObject=os,jn.isObjectLike=as,jn.isPlainObject=cs,jn.isRegExp=ls,jn.isSafeInteger=function(e){return rs(e)&&e>=-9007199254740991&&e<=f},jn.isSet=ps,jn.isString=fs,jn.isSymbol=ds,jn.isTypedArray=hs,jn.isUndefined=function(e){return e===n},jn.isWeakMap=function(e){return as(e)&&go(e)==O},jn.isWeakSet=function(e){return as(e)&&"[object WeakSet]"==Dr(e)},jn.join=function(e,t){return null==e?"":vn.call(e,t)},jn.kebabCase=Ys,jn.last=ta,jn.lastIndexOf=function(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var o=i;return r!==n&&(o=(o=Es(r))<0?En(i+o,0):_n(o,i-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,o):$t(e,jt,o,!0)},jn.lowerCase=Xs,jn.lowerFirst=Js,jn.lt=ms,jn.lte=gs,jn.max=function(e){return e&&e.length?gr(e,uu,xr):n},jn.maxBy=function(e,t){return e&&e.length?gr(e,co(t,2),xr):n},jn.mean=function(e){return Ut(e,uu)},jn.meanBy=function(e,t){return Ut(e,co(t,2))},jn.min=function(e){return e&&e.length?gr(e,uu,Br):n},jn.minBy=function(e,t){return e&&e.length?gr(e,co(t,2),Br):n},jn.stubArray=_u,jn.stubFalse=Cu,jn.stubObject=function(){return{}},jn.stubString=function(){return""},jn.stubTrue=function(){return!0},jn.multiply=xu,jn.nth=function(e,t){return e&&e.length?Kr(e,Es(t)):n},jn.noConflict=function(){return pt._===this&&(pt._=je),this},jn.noop=du,jn.now=Oa,jn.pad=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;if(!t||r>=t)return e;var i=(t-r)/2;return Gi(Ft(i),n)+e+Gi(gt(i),n)},jn.padEnd=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;return t&&r<t?e+Gi(t-r,n):e},jn.padStart=function(e,t,n){e=As(e);var r=(t=Es(t))?ln(e):0;return t&&r<t?Gi(t-r,n)+e:e},jn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),Tn(As(e).replace(ie,""),t||0)},jn.random=function(e,t,r){if(r&&"boolean"!=typeof r&&Co(e,t,r)&&(t=r=n),r===n&&("boolean"==typeof t?(r=t,t=n):"boolean"==typeof e&&(r=e,e=n)),e===n&&t===n?(e=0,t=1):(e=ys(e),t===n?(t=e,e=0):t=ys(t)),e>t){var i=e;e=t,t=i}if(r||e%1||t%1){var o=An();return _n(e+o*(t-e+st("1e-"+((o+"").length-1))),t)}return Yr(e,t)},jn.reduce=function(e,t,n){var r=Ya(e)?Pt:Gt,i=arguments.length<3;return r(e,co(t,4),n,i,dr)},jn.reduceRight=function(e,t,n){var r=Ya(e)?wt:Gt,i=arguments.length<3;return r(e,co(t,4),n,i,hr)},jn.repeat=function(e,t,r){return t=(r?Co(e,t,r):t===n)?1:Es(t),Xr(As(e),t)},jn.replace=function(){var e=arguments,t=As(e[0]);return e.length<3?t:t.replace(e[1],e[2])},jn.result=function(e,t,r){var i=-1,o=(t=_i(t,e)).length;for(o||(o=1,e=n);++i<o;){var a=null==e?n:e[Uo(t[i])];a===n&&(i=o,a=r),e=ns(a)?a.call(e):a}return e},jn.round=bu,jn.runInContext=e,jn.sample=function(e){return(Ya(e)?Qn:Qr)(e)},jn.size=function(e){if(null==e)return 0;if(Ja(e))return fs(e)?ln(e):e.length;var t=go(e);return t==A||t==b?e.size:Mr(e).length},jn.snakeCase=Qs,jn.some=function(e,t,r){var i=Ya(e)?Lt:oi;return r&&Co(e,t,r)&&(t=n),i(e,co(t,3))},jn.sortedIndex=function(e,t){return ai(e,t)},jn.sortedIndexBy=function(e,t,n){return si(e,t,co(n,2))},jn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=ai(e,t);if(r<n&&Ga(e[r],t))return r}return-1},jn.sortedLastIndex=function(e,t){return ai(e,t,!0)},jn.sortedLastIndexBy=function(e,t,n){return si(e,t,co(n,2),!0)},jn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=ai(e,t,!0)-1;if(Ga(e[n],t))return n}return-1},jn.startCase=Zs,jn.startsWith=function(e,t,n){return e=As(e),n=null==n?0:ur(Es(n),0,e.length),t=li(t),e.slice(n,n+t.length)==t},jn.subtract=Su,jn.sum=function(e){return e&&e.length?Vt(e,uu):0},jn.sumBy=function(e,t){return e&&e.length?Vt(e,co(t,2)):0},jn.template=function(e,t,r){var i=jn.templateSettings;r&&Co(e,t,r)&&(t=n),e=As(e),t=Ds({},t,i,Zi);var o,a,s=Ds({},t.imports,i.imports,Zi),u=Fs(s),c=Xt(s,u),l=0,p=t.interpolate||_e,f="__p += '",d=be((t.escape||_e).source+"|"+p.source+"|"+(p===Q?fe:_e).source+"|"+(t.evaluate||_e).source+"|$","g"),h="//# sourceURL="+(Fe.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++rt+"]")+"\n";e.replace(d,(function(t,n,r,i,s,u){return r||(r=i),f+=e.slice(l,u).replace(Ce,rn),n&&(o=!0,f+="' +\n__e("+n+") +\n'"),s&&(a=!0,f+="';\n"+s+";\n__p += '"),r&&(f+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),l=u+t.length,t})),f+="';\n";var m=Fe.call(t,"variable")&&t.variable;if(m){if(le.test(m))throw new Re("Invalid `variable` option passed into `_.template`")}else f="with (obj) {\n"+f+"\n}\n";f=(a?f.replace(W,""):f).replace(K,"$1").replace(G,"$1;"),f="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(o?", __e = _.escape":"")+(a?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var g=ru((function(){return Ie(u,h+"return "+f).apply(n,c)}));if(g.source=f,ts(g))throw g;return g},jn.times=function(e,t){if((e=Es(e))<1||e>f)return[];var n=h,r=_n(e,h);t=co(t),e-=h;for(var i=Ht(r,t);++n<e;)t(n);return i},jn.toFinite=ys,jn.toInteger=Es,jn.toLength=_s,jn.toLower=function(e){return As(e).toLowerCase()},jn.toNumber=Cs,jn.toSafeInteger=function(e){return e?ur(Es(e),-9007199254740991,f):0===e?e:0},jn.toString=As,jn.toUpper=function(e){return As(e).toUpperCase()},jn.trim=function(e,t,r){if((e=As(e))&&(r||t===n))return zt(e);if(!e||!(t=li(t)))return e;var i=pn(e),o=pn(t);return Ti(i,Qt(i,o),Zt(i,o)+1).join("")},jn.trimEnd=function(e,t,r){if((e=As(e))&&(r||t===n))return e.slice(0,fn(e)+1);if(!e||!(t=li(t)))return e;var i=pn(e);return Ti(i,0,Zt(i,pn(t))+1).join("")},jn.trimStart=function(e,t,r){if((e=As(e))&&(r||t===n))return e.replace(ie,"");if(!e||!(t=li(t)))return e;var i=pn(e);return Ti(i,Qt(i,pn(t))).join("")},jn.truncate=function(e,t){var r=30,i="...";if(os(t)){var o="separator"in t?t.separator:o;r="length"in t?Es(t.length):r,i="omission"in t?li(t.omission):i}var a=(e=As(e)).length;if(on(e)){var s=pn(e);a=s.length}if(r>=a)return e;var u=r-ln(i);if(u<1)return i;var c=s?Ti(s,0,u).join(""):e.slice(0,u);if(o===n)return c+i;if(s&&(u+=c.length-u),ls(o)){if(e.slice(u).search(o)){var l,p=c;for(o.global||(o=be(o.source,As(de.exec(o))+"g")),o.lastIndex=0;l=o.exec(p);)var f=l.index;c=c.slice(0,f===n?u:f)}}else if(e.indexOf(li(o),u)!=u){var d=c.lastIndexOf(o);d>-1&&(c=c.slice(0,d))}return c+i},jn.unescape=function(e){return(e=As(e))&&z.test(e)?e.replace(V,dn):e},jn.uniqueId=function(e){var t=++Me;return As(e)+t},jn.upperCase=eu,jn.upperFirst=tu,jn.each=Aa,jn.eachRight=Ra,jn.first=Jo,fu(jn,(Du={},Cr(jn,(function(e,t){Fe.call(jn.prototype,t)||(Du[t]=e)})),Du),{chain:!1}),jn.VERSION="4.17.21",It(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){jn[e].placeholder=jn})),It(["drop","take"],(function(e,t){Gn.prototype[e]=function(r){r=r===n?1:En(Es(r),0);var i=this.__filtered__&&!t?new Gn(this):this.clone();return i.__filtered__?i.__takeCount__=_n(r,i.__takeCount__):i.__views__.push({size:_n(r,h),type:e+(i.__dir__<0?"Right":"")}),i},Gn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),It(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Gn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:co(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),It(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Gn.prototype[e]=function(){return this[n](1).value()[0]}})),It(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Gn.prototype[e]=function(){return this.__filtered__?new Gn(this):this[n](1)}})),Gn.prototype.compact=function(){return this.filter(uu)},Gn.prototype.find=function(e){return this.filter(e).head()},Gn.prototype.findLast=function(e){return this.reverse().find(e)},Gn.prototype.invokeMap=Jr((function(e,t){return"function"==typeof e?new Gn(this):this.map((function(n){return Or(n,e,t)}))})),Gn.prototype.reject=function(e){return this.filter(qa(co(e)))},Gn.prototype.slice=function(e,t){e=Es(e);var r=this;return r.__filtered__&&(e>0||t<0)?new Gn(r):(e<0?r=r.takeRight(-e):e&&(r=r.drop(e)),t!==n&&(r=(t=Es(t))<0?r.dropRight(-t):r.take(t-e)),r)},Gn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Gn.prototype.toArray=function(){return this.take(h)},Cr(Gn.prototype,(function(e,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),o=jn[i?"take"+("last"==t?"Right":""):t],a=i||/^find/.test(t);o&&(jn.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,u=t instanceof Gn,c=s[0],l=u||Ya(t),p=function(e){var t=o.apply(jn,Nt([e],s));return i&&f?t[0]:t};l&&r&&"function"==typeof c&&1!=c.length&&(u=l=!1);var f=this.__chain__,d=!!this.__actions__.length,h=a&&!f,m=u&&!d;if(!a&&l){t=m?t:new Gn(this);var g=e.apply(t,s);return g.__actions__.push({func:ya,args:[p],thisArg:n}),new Kn(g,f)}return h&&m?e.apply(this,s):(g=this.thru(p),h?i?g.value()[0]:g.value():g)})})),It(["pop","push","shift","sort","splice","unshift"],(function(e){var t=Oe[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);jn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var i=this.value();return t.apply(Ya(i)?i:[],e)}return this[n]((function(n){return t.apply(Ya(n)?n:[],e)}))}})),Cr(Gn.prototype,(function(e,t){var n=jn[t];if(n){var r=n.name+"";Fe.call(Nn,r)||(Nn[r]=[]),Nn[r].push({name:t,func:n})}})),Nn[ji(n,2).name]=[{name:"wrapper",func:n}],Gn.prototype.clone=function(){var e=new Gn(this.__wrapped__);return e.__actions__=ki(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=ki(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=ki(this.__views__),e},Gn.prototype.reverse=function(){if(this.__filtered__){var e=new Gn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Gn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Ya(e),r=t<0,i=n?e.length:0,o=function(e,t,n){var r=-1,i=n.length;for(;++r<i;){var o=n[r],a=o.size;switch(o.type){case"drop":e+=a;break;case"dropRight":t-=a;break;case"take":t=_n(t,e+a);break;case"takeRight":e=En(e,t-a)}}return{start:e,end:t}}(0,i,this.__views__),a=o.start,s=o.end,u=s-a,c=r?s:a-1,l=this.__iteratees__,p=l.length,f=0,d=_n(u,this.__takeCount__);if(!n||!r&&i==u&&d==u)return mi(e,this.__actions__);var h=[];e:for(;u--&&f<d;){for(var m=-1,g=e[c+=t];++m<p;){var v=l[m],y=v.iteratee,E=v.type,_=y(g);if(2==E)g=_;else if(!_){if(1==E)continue e;break e}}h[f++]=g}return h},jn.prototype.at=Ea,jn.prototype.chain=function(){return va(this)},jn.prototype.commit=function(){return new Kn(this.value(),this.__chain__)},jn.prototype.next=function(){this.__values__===n&&(this.__values__=vs(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?n:this.__values__[this.__index__++]}},jn.prototype.plant=function(e){for(var t,r=this;r instanceof Wn;){var i=Ko(r);i.__index__=0,i.__values__=n,t?o.__wrapped__=i:t=i;var o=i;r=r.__wrapped__}return o.__wrapped__=e,t},jn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Gn){var t=e;return this.__actions__.length&&(t=new Gn(this)),(t=t.reverse()).__actions__.push({func:ya,args:[oa],thisArg:n}),new Kn(t,this.__chain__)}return this.thru(oa)},jn.prototype.toJSON=jn.prototype.valueOf=jn.prototype.value=function(){return mi(this.__wrapped__,this.__actions__)},jn.prototype.first=jn.prototype.head,at&&(jn.prototype[at]=function(){return this}),jn}();dt?((dt.exports=hn)._=hn,ft._=hn):pt._=hn}).call(fR)}(dR,dR.exports);class yR{constructor(e){const t=e[0],n=e[e.length-1]||t,r={sourceString:t.source.sourceString,startIdx:t.source.startIdx,endIdx:n.source.endIdx};this.sourceFile=r,this._internalRange={start:t.source.getLineAndColumn(),end:n.source.collapsedRight().getLineAndColumn()},this.ctorName=e.map((e=>e.ctorName)).join(" + "),this.context=t.parserContext}get range(){const{start:e,end:t}=this._internalRange,{lineNum:n,colNum:r}=e,{lineNum:i,colNum:o}=t;return{line:n,col:r,lineEnd:i,colEnd:o}}get sourceString(){const{sourceString:e,startIdx:t,endIdx:n}=this.sourceFile;return e.slice(t,n)}get printError(){const{startIdx:e,endIdx:t}=this.sourceFile;return n=Error(gR(this._internalRange.start,[e,t])),void console.error("%c"+n.stack,"font-family: monospace; font-size: 13px;font-style: normal;");var n}}function ER(...e){return new yR(e.filter(Boolean))}function _R(e,t=0){let n=0;const r=e.length;let i=-1,o=!1;for(let a=0;a<r;a++)i=e.charCodeAt(a),i>=0&&i<=128?n+=1:(n+=2,o||(n+=t,o=!0));return n}function CR(e,t,n){if(!e)return t;const r=Object.getOwnPropertyDescriptors(e),i={};if(n)NA(i,n);else{const t=Object.getPrototypeOf(e);Object.setPrototypeOf(i,t)}return Object.defineProperties(i,{...r,...Object.getOwnPropertyDescriptors(t)})}class TR extends Error{constructor(e,t){super(),this.name="SyntaxError";const n="string"!=typeof e,r=n?e.message:e;if(this.message=t?this.transformMessage(r,t):r,n){const t=e.stack.split("\n").filter((e=>e.trimStart().startsWith("at"))).join("\n");this.stack=this.name+"\n"+this.message+"\n"+t}}transformKeyword(e,t){var n;switch(e){case bR.End:return;default:return t[e]||e.replace(/(\$(.+?)\$)/g,((e,n,r)=>t[n]?this.transformKeyword(t[n],t):`${r}`)).replace(/^not (.+)/,`${null!=(n=t[bR.Not])?n:DR} - ($1)`).replaceAll("["," - (").replaceAll("]",")")}}transformMessage(e,t){var n,r,i;const[o,a]=e.split(AR),s=a.split(/, +or +|,| +or +/g).map((e=>this.transformKeyword(e.trim(),t))).filter(Boolean),u=s.length>0?s.filter((e=>e!==t[bR.Exp]&&e!==xR)).length>0?s.join(2===s.length?" 或 ":"、").replace(/^(.+)$/,null!=(n=t[bR.Expected])?n:AR+": $1"):null!=(r=t[bR.ExpectedExp])?r:IR:null!=(i=t[bR.ExpectedEndOfInput])?i:RR;return o+u+`\n${" ".repeat(_R(u))}    ——鲁迅`}}const AR="Expected",RR="Unexpected end of input",IR="Unexpected expression syntax",DR="not",xR="Exp",bR={Not:"$Not$",ExpectedEndOfInput:"$ExpectedEndOfInput$",Expected:"$Expected$",End:"$END$",Exp:"$Exp$",ExpectedExp:"$ExpectedExp$"};function SR(e,t,n){return nR(e.parse(),t.parse(),n.parse(),e.sourceString+t.sourceString+n.sourceString)}const kR={identifier:(e,t)=>e.sourceString+t.sourceString,variableName(e,t){const n=t.sourceString;return sR(e.sourceString||null,n)},literalOf:e=>uR("null"===e.sourceString?null:e.parse(),ER(e)),boolean:e=>"true"===e.parse().toLowerCase(),number(e){const t=e.parse();return"number"==typeof t?t:Number(t)},sign_apply:e=>+e.parse(),sign_signed(e,t){const n=t.parse();return"-"===e.sourceString?-n:+n},number_fract(e,t,n){var r;return(null!=(r=e.sourceString)?r:"")+"."+n.sourceString},hex:(e,t)=>"0x"+t.sourceString,percet(e,t){return n=e.parse(),MA(LA.PrecetLiteral,{value:n},null!=r?r:n+"%");var n,r},ArrayElements:e=>({type:yA.Expression,kind:LA.ArrayLiteral,value:e.parse()}),Array:(e,t,n)=>t.parse(),AddExp_add:SR,MulExp_mul:SR,ExpExp_pow:SR,LogicExp_logic:SR,OrNullExp_or:SR,RelationExp_rel:SR,EqualExp_eq:SR,SpreadExp_spread:SR,IncrementExp_before:(e,t)=>rR(t.parse(),e.sourceString,!0,ER(e,t)),IncrementExp_after:(e,t)=>rR(e.parse(),t.sourceString,!1,ER(e,t)),ExpExp_invert(e,t){const n=t.parse();return nR(null,e.parse(),n,e.sourceString+t.sourceString)},ExpExp_sign(e,t){const n=t.parse();if(console.log(t,t.source.getLineAndColumn(),n),n.kind===LA.Literal)throw vR("Expected $number$ or $Exp$",t);return nR(uR(0),e.parse(),n,e.sourceString+t.sourceString)},PriExp_paren:(e,t,n)=>t.parse()};function OR(e,t){return e.kind===LA.Comma?e.value.map(t):[t(e)]}const NR={Template:(e,t,n,r)=>({type:yA.Expression,kind:LA.Template,value:t.parse(),pipe:n.parse()}),CallExpression:(e,t,n,r)=>oR(e.parse(),n.parse(),ER(e,t,n,r)),TopExp_ArraySpread(e){const{value:t}=e.parse();return{type:yA.Expression,kind:LA.ArraySpreadLiteral,start:t.left,end:t.right}},Exp_Comma(e,t,n){const r=e.parse(),i=n.parse();return MA(LA.Comma,{value:i.kind===LA.Comma?[r,...i.value]:[r,i]})},TopExp_assign:(e,t,n)=>MA(LA.Assign,{value:{left:e.parse(),right:n.parse()}})};function PR(e){var t;let n=e.parse();return n instanceof Array&&1===(n=n.flat()).length&&kA(n[0])?null!=(t=n[0].value)?t:"":null!=n?n:""}function wR(e,t=0,n){const r=[];let i=!1;const o=[];let a,s=-1,u=-1;for(const p of e){let e=p&&(kA(p)?p:p.parse())||p;if(o[++s]=e,kA(e))!a&&(a=e.sourceType),e=e.value;else{if(e instanceof Array){const{result:n,hasObject:o}=wR(e,t+1);if(n)for(let e=0;e<n.length;e++){const t=n[e];kA(t)?(a=t.sourceType,r[++u]=t.value):r[++u]=t}!i&&(i=o);continue}!i&&(i="object"==typeof e),!a&&(a=(null==(c=p)?void 0:c.type)===yA.Source?c.sourceType:c.ctorName)}e&&(r[++u]=e)}var c;let l;if(i)l=r;else if(r.length>0){const e=1===r.length?r[0]:r.join(""),t=kA(e)?e.value:e;l=[{type:yA.Source,kind:_A.Content,value:t,sourceType:(a||"")+""||void 0}]}return{hasObject:i,result:l}}const LR={NonemptyListOf(e,t,n){const r=n.parse();return r instanceof Array?[e.parse(),...r.flat(1)]:[e.parse()]},nonemptyListOf(e,t,n){const r=n.parse();return r instanceof Array?[e.parse(),...r.flat(1)]:[e.parse()]},EmptyListOf:()=>[],emptyListOf:()=>[],oresc(e,{sourceString:t}){if(e.parse())switch(t){case"n":return"\n";case"r":return"\r";case"t":return"\t";case"\\":return"\\"}return t},centerOf:(e,t,n)=>t.parse(),sourceOf:e=>e.sourceString,stringify:PR,join:(e,t)=>PR(e)+PR(t),startWith:(e,t)=>t.parse(),endWith:(e,t)=>e.parse(),ignore(e){return t=ER(e),NA({type:yA.Source,kind:0},t);var t},optional:function(e){const t=e.parse();if(t instanceof Array&&t.length>1)throw Error();const n=null==t?void 0:t[0];return kA(n)?n.value:n||void 0},_iter:(...e)=>wR(e,0).result,_terminal(){return this.sourceString}},FR={comment_single:e=>wA(e.parse(),ER(e)),comment_multi:e=>wA(e.parse(),ER(e)),comment_notes:e=>wA(e.parse().value,ER(e)),comment_inline(e){const t=e.parse();return{type:yA.Expression,kind:LA.Comment,kindName:LA[LA.Comment],sourceString:e.sourceString,value:t}}},MR={logic_blockForeach(e){const t=e.parse(),[n,...r]=t.value;return function(e,t,n,r){return JR(2,{child:e,children:(null==t?void 0:t.kind)===LA.Comma?{...t,kind:LA.ArrayLiteral}:t,block:n},r)}(n.child,n.children,r,ER(...arguments))},logic_foreach:(e,t,n,r)=>({child:t.parse(),children:r.parse()}),logic_if:(e,t)=>t,logic_elseIf:(e,t)=>t,logic_end:e=>e,logic_else:e=>e,logic_blockIf(e,t,n,r,i,o,a){var s;const u=e.parse(),c=[],l=null==(s=i.children[0])?void 0:s.parse(),p=a.parse(),f=[u.parse()];for(const m of n.children){const e=m.parse();c.push(e),f.push(e.parse())}const d=[],h=[];for(const m of t.children)h.push(m.parse());d.push(nI(h,ER(u,t,c[0]||l||p)));for(let m=0;m<r.children.length;m++){const e=r.children[m],t=[];for(const n of e.children)t.push(n.parse());d.push(nI(t,ER(c[m],e,c[m+1]||l||p)))}if(o.child(0)){const e=[];for(const t of o.child(0).children)e.push(t.parse());d.push(nI(e,ER(i,o.child(0),a.parse())))}return function(e,t,n){return JR(0,{conditions:e,blocks:t},n)}(f,d,ER(e,t,n,r,i,o,a.parse()))},logicSyntax_let(e,t){const n=e.parse().length>1;return function(e,t,n){return JR(3,{explicit:t,statements:OR(e,(e=>{if(e.type===yA.Expression)switch(e.kind){case LA.Assign:{const{value:n,...r}=e;return{type:yA.Logic,...r,kind:4,explicit:t,left:n.left,right:n.right}}case LA.VariableIdentifier:return{type:yA.Logic,kind:4,explicit:t,left:e,right:uR(null)}}}))},n)}(t.parse(),n,ER(...arguments))}},$R={...{},...{expr_pipe(e,t){try{return zR(`|${t.sourceString}`)}catch(n){return console.warn(n),zR(`|=${t.sourceString}`)}},expr_logic:e=>zR(`(${e.parse()})`),expr_template:e=>zR(`{{${e.parse()}}}`),expr_auto(e){try{return zR(`@${e.sourceString};`)}catch(t){return console.warn(t),oR("link",[e.sourceString],ER(e))}}},...{errorBoundary:e=>"ignoreError"===e.ctorName?e.parse():{source:e.parse(),error:e.ctorName},nonemptyBlockOf(e,t,n){const r=e.parse(),i=t.parse()||[];return(null==i?void 0:i.length)>0?nI([r,...i,n.parse()],ER(e,t,n)):r},emptyLine(e){return t=ER(e),eI(7,{command:"empty"},t);var t},blockEnd:(e,t)=>tI("end",[],null,ER(t)),blockEndOf:e=>tI("end",[],null,ER(e)),linesOf:e=>nI(e.parse(),ER(e)),syntaxBlockOf:(e,t,n)=>nI([e.parse(),...t.parse()||[]].filter(Boolean),ER(e,t,n)),contentBlockOf:(e,t,n)=>nI([e.parse(),...t.parse()||[],n.parse()].filter(Boolean),ER(e,t,n)),character_call_macro:(e,t)=>CR(t.parse(),{text:e.parse(),source:ER(e,t)}),macro:e=>aR(zR(`@${e.parse()};`),ER(e)),rawOf(e){return t=e.parse(),n=ER(e),eI(0,{value:t},n);var t,n},withText:e=>rI(e.parse(),null,ER(e)),styled_centered:(e,t,n)=>function(e,t,n){return rI(e.parse(),"centered",ER(t,e,n))}(t,e,n),styled_italic(e,t,n){const r=n.parse();return rI(r?t.parse():[e.parse(),t.parse()],r?"italic":null,ER(e,t,n))},styled_bold(e,t,n){const r=n.parse();return rI(r?t.parse():[e.parse(),t.parse()],r?"bold":null,ER(e,t,n))},styled_underline(e,t,n){const r=n.parse();return rI(r?t.parse():[e.parse(),t.parse()],r?"underline":null,ER(e,t,n))},template_macro:e=>function(e,t){t&&t.context.addInlayHint("=MACRO","pre",t,1);return eI(3,{pipe:e},t)}(e.parse(),ER(e)),template_label:(e,t)=>(e.parserContext.addInlayHint("=END","post",ER(e),1),function(e,t,n){n&&n.context.addInlayHint("=LABEL","pre",n,1);return eI(4,{value:e,pipe:t instanceof Object?CR(t,{text:e}):t},n)}(e.parse(),t.parse(),ER(e,t))),template_native:e=>function(e,t){t&&t.context.addInlayHint("=EXPR","pre",t,2);return eI(2,{value:e},t)}(e.parse(),ER(e))},...{textSyntax_dialogue:(e,t,n,r)=>tI("text:dialogue",[n.parse()],r.parse(),ER(e,n,r)),textSyntax_action:(e,t,n)=>tI("text:action",[t.parse()],n.parse(),ER(e,t,n)),command_macro(e){const t=e.parse(),{name:n,...r}=t;return tI(n,r.argumentList,r.pipe,ER(e))},command_transition:(e,t,n)=>tI("transition",[t.parse()],n.parse(),ER(e,t,n)),textSyntax_space:e=>tI("text:space",[],null,ER(e)),dialogue_end:e=>(e.parserContext.addInlayHint(":dialogue_end","pre",ER(e)),e.parse()),action_end:e=>(e.parserContext.addInlayHint(":action_end","pre",ER(e)),e.parse()),character_call:(e,t)=>(t.parserContext.addInlayHint(":dialogue_begin","post",ER(t)),tI("character",[e.parse()],t.parse(),ER(e,t))),action_start:e=>(e.parserContext.addInlayHint(":action_begin","post",ER(e)),"textSyntax_space"===e.child(0).ctorName&&e.parserContext.addInlayHint(":space x"+e.children.length,"post",ER(e)),e.parse()),action_content:e=>("textSyntax_space"===e.ctorName&&e.parserContext.addInlayHint(":action_space x"+e.child(0).children.length,"post",ER(e)),e.parse()),dialogue_content(e){const t=e.parse();return"textSyntax_space"===e.ctorName&&e.parserContext.addInlayHint(":space x"+e.child(0).children.length,"post",ER(e)),t},dialogue_action:e=>(e.parserContext.addInlayHint(":@dialogue_action","post",ER(e)),tI("character-action",[e.parse()],null,ER(e))),command_pageBreak:e=>tI("pageBreak",[],null,ER(e)),command:e=>(e.parserContext.addInlayHint(":@"+e.ctorName,"post",ER(e)),e.parse())}};const BR={...LR,...$R,...FR,...MR,variableName:kR.variableName},qR={Params_multiple(e,t,n){const r={type:"Params",flags:[],params:{}},i=e.parse().value;1===i.length?r.flags.push(i[0]):r.params[i[0]]=i[1];const o=n.parse();return r.flags=r.flags.concat(o.flags),Object.assign(r.params,o.params),r},Params_single(e,t){const n={type:"Params",flags:[],params:{}},r=e.parse().value;return 1===r.length?n.flags.push(r[0]):n.params[r[0]]=r[1],n},Param_setValue:(e,t,n)=>({type:"NodeArray",value:[e.parse(),n.parse()]}),Param_setFlag:e=>({type:"NodeArray",value:[e.parse()]})},jR={...kR,...NR,...qR,...LR,Statement:e=>CR(e.parse(),{},ER(e)),Statement_Exp:(e,t)=>e.parse(),Statement_Macro:(e,t,n,r)=>CR(t.parse(),{pipe:n.parse()}),Statement_Inline:(e,t)=>e.parse(),Statement_Pipe:(e,t)=>e.parse(),Statement_AnonymousPipe:(e,t)=>e.parse(),Macro_Pipe_Call:(e,t)=>t.parse()||e.parse(),Macro_Pipe_Expr:(e,t,n)=>CR(e.parse(),{argumentList:[n.parse()]}),pipeFlag:e=>oR(),Macro_Call:e=>e.parse(),End(e){},exprEnd(e){},Macro_Call_Expr(e,t){const n=t.parse()||{};return iR(e.parse(),n,ER(e,t))}};function UR(e){const{colNum:t,lineNum:n,offset:r}=e;return Object.setPrototypeOf({colNum:t,lineNum:n,offset:r},e)}const WR=class{constructor(e,t=e.matcher()){this.grammar=e,this.matcher=t,this.inlayHintTokens=[],this.init(),WR.registered||(this.register(),WR.registered=!0)}flush(){return this.init(),this}init(){this.title_page=[],this.tokens=[],this.scriptHtml="",this.titleHtml="",this.lengthAction=0,this.lengthDialogue=0,this.tokenLines={},this.parseTime=+new Date,this.properties={sceneLines:[],scenes:[],sceneNames:[],titleKeys:[],firstTokenLine:1/0,fontLine:-1,lengthAction:0,lengthDialogue:0,characters:new Map,structure:[]},this.inlayHintTokens=[]}addInlayHint(e,t,n,r){this.inlayHintTokens.push({text:e,mode:t,source:n,offsetCol:r})}mark(e,t,n,r,i){console.log("mark",e,t,UR(n),UR(r),i)}parse(e){return this.matcher.setInput(e),this.parseWith(this.matcher)}increment(e,t){for(const n of t instanceof Array?t:[t])this.matcher.replaceInputRange(n.startIdx,n.endIdx,n.content);return console.log(e===this.matcher.getInput()),this.parseWith(this.matcher)}register(){const e=this;GR.addAttribute("parserContext",{_terminal:()=>e,_iter:(...t)=>e,_nonterminal:(...t)=>e}),this.registerHighlight()}registerHighlight(){const e=this;GR.addOperation("syntaxHighlight",{tokens(e){e.syntaxHighlight()},token(e){if(1!==this.numChildren)throw new Error("token cst nodes should only have one child");this.child(0).syntaxHighlight()},valueToken:e=>e.syntaxHighlight(),_iter:(...e)=>e.map((e=>e.syntaxHighlight())),_nonterminal(...t){"any"!==this.ctorName&&e.mark(this.source.startIdx,this.source.endIdx,this.source.getLineAndColumn(),this.source.collapsedRight().getLineAndColumn(),this.ctorName)}})}parseWith(e){return this.flush(),this.getSemanticsResult(GR,e,(e=>this.statements=e.parse()),"main")}getSemanticsResult(e,t,n,r){const i=this.matchWith(t,r);if(i.succeeded()){const t=e(i);return console.log(t),n(t)}throw Error(i.message)}matchWith(e,t){return"string"==typeof e?this.grammar.match(e,t):e.match(t)}};let KR=WR;KR.registered=!1;const GR=pR.createSemantics();function VR(e){const t=pR.matcher().replaceInputRange(0,0,e);return console.log(t,e),t.match("Main")}GR.addOperation("parse",{...jR,...BR}),GR.addAttribute("parseExpression",{_nonterminal(...e){return VR(this.sourceString)},_terminal(){return VR(this.sourceString)},_iter(...e){return VR(this.sourceString)}});const HR=new Map;function zR(e,t){try{const t=pR.match(e,"Main");if(t.succeeded()){return GR(t).parse()}throw Error(t.message)}catch(n){if(n instanceof Error&&!n.message.startsWith("Missing semantic action"))throw new TR(n,t);throw n}}var YR,XR;(XR=YR||(YR={}))[XR.IF=0]="IF",XR[XR.WHILE=1]="WHILE",XR[XR.FOREACH=2]="FOREACH",XR[XR.LET=3]="LET",XR[XR.ASSIGN=4]="ASSIGN";const JR=OA(yA.Logic,YR);var QR,ZR;(ZR=QR||(QR={}))[ZR.Raw=0]="Raw",ZR[ZR.Styled=1]="Styled",ZR[ZR.Expr=2]="Expr",ZR[ZR.InlineMacro=3]="InlineMacro",ZR[ZR.Label=4]="Label",ZR[ZR.Array=5]="Array",ZR[ZR.Line=6]="Line",ZR[ZR.Empty=7]="Empty";const eI=OA(yA.Content,QR);function tI(e,t,n,r){return eI(6,{command:e,argumentList:t,pipe:n},r)}function nI(e,t){return eI(5,{value:e},t)}function rI(e,t,n){if(!e)return null;const r=iI(e),i=r?e.value:e;return eI(1,{value:i,pipe:"string"==typeof t?iR("styled",{flags:r&&e.pipe?[...e.pipe.flags,t]:[t]}):t},n)}function iI(e){return e.type===yA.Content&&1===e.kind}class oI{constructor(e,t,n=0){this.variable=e,this.data=t,this.blockIndex=n,this.reset(t),this.variable.pushScope()}reset(e){this.data=e,this.currentLine=0,this.done=!1}}class aI extends oI{constructor(e,t,n){super(e,t,n),this.variable=e,this.data=t}getData(){return{type:"if",currentLine:this.currentLine,blockIndex:this.blockIndex}}createGenerate(){return this}[Symbol.iterator](){return this}next(){if(this.currentLine<this.data.length){return{value:this.data[this.currentLine++],done:!1}}return{done:!0,value:void 0}}}class sI extends oI{constructor(e,t,n){super(e,t),this.variable=e,this.data=t,this.condition=n}getData(){return{type:"while",currentLine:this.currentLine}}createGenerate(){return this}[Symbol.iterator](){return this}next(){if(this.currentLine<this.data.length){return{value:this.data[this.currentLine++],done:!1}}return this.variable.calculate(this.condition)?(this.currentLine=0,this.variable.switchScope(),this.next()):{done:!0,value:void 0}}}class uI extends oI{constructor(e,t,n,r){super(e,t),this.variable=e,this.data=t,this.i=n,this.iterator=r,this.iteratorValues=this.variable.calculate(r),this.index=0,this.variable.pushScope(),this.variable.assign(this.i.text,this.i.prefix,uR(this.iteratorValues[this.index]),!0)}getData(){return{type:"foreach",currentLine:this.currentLine}}createGenerate(){return this}[Symbol.iterator](){return this}next(){if(!this.iteratorValues.length)return{done:!0};if(this.currentLine<this.data.length){return{value:this.data[this.currentLine++],done:!1}}return this.index<this.iteratorValues.length-1?(this.currentLine=0,this.index++,this.variable.switchScope(),this.variable.assign(this.i.text,this.i.prefix,uR(this.iteratorValues[this.index]),!0),this.next()):{done:!0}}}class cI{}function lI(e,t){if(!(e&&e instanceof Object))return e;switch(e.type){case yA.Expression:{switch(e.kind){case LA.Comma:{const n=e.value.length-1,r=e.value;for(let e=0;e<n;e++)lI(r[e],t);return lI(r[n],t)}case LA.Assign:{const{left:{prefix:n,text:r},right:i}=e.value;return fI(t,r,n,lI(i,t),!1)}case LA.Comment:return!1;case LA.VariableIdentifier:return function(e,t,n){switch(t){case null:return pI(e,n).value;case"$":return pI(e,n,n.GLOBAL).value;case"%":return pI(e,n,n.SAVE).value;default:throw Error(`Unrecognized prefix ${t}`)}}(e.text,e.prefix,t);case LA.Template:return lI(e.value,t);case LA.Literal:return e.value;case LA.ArrayLiteral:return e.value.map((e=>lI(e,t)));case LA.ArraySpreadLiteral:{const n=[],r=lI(e.start,t),i=lI(e.end,t)+1;for(let e=r;e<i;e++)n.push(e);return n}case LA.CallFunction:return e;case LA.PrecetLiteral:return e.value/100;case LA.CallMacro:return e}const{left:n,operator:r,right:i}=e.value;return function(e,t,n){switch(t){case"&&":return e&&n;case"!":return!n;case"||":return e||n;case"==":return e===n;case"??":return null!=e?e:n;case"!=":return e!==n;case">=":return e>=n;case"<=":return e<=n;case">":return e>n;case"<":return e<n;case"+":return e+n;case"-":return e-n;case"*":return e*n;case"/":return e/n;case"^":return Math.pow(e,n);case"%":return e%n;default:throw Error(`Unrecognized operator ${t}`)}}(lI(n,t),r,lI(i,t))}case yA.Comment:return"";case yA.Content:if(iI(e)){let n="",r="";return e.pipe&&(n=`<span ${e.pipe.flags.join(" ")}>`,r="</span>"),e.value instanceof Array?e.value.length>0&&n+e.value.map((e=>lI(e,t))).filter(Boolean).join("")+r:!!e.value&&e.value}return lI(e.value,t);case yA.Source:return e.kind===_A.Content?e:"";default:return e}}function pI(e,{GLOBAL:t,SAVE:n,SCOPES:r,CURRENTSCOPE:i},o=[...r,i]){let a=!1,s=null;if(o instanceof Array){for(let u=o.length-1;u>-1;u--)if(s=o[u],Object.prototype.hasOwnProperty.call(s,e)){a=!0;break}}else s=o,Object.prototype.hasOwnProperty.call(s,e)&&(a=!0);if(!a){throw Error(`[${s===t?"GLOBAL":s===n?"SAVE":"scope"}] ${e} is not defined`)}return{scope:s,value:s[e]}}function fI(e,t,n,r,i){if(n)"$"===n?e.GLOBAL[t]=r:"%"===n&&(e.SAVE[t]=r);else if(i){const n=e.CURRENTSCOPE;if(n[t])throw Error(`Identifier '${t}' has already been declared`);n[t]=r}else{const{scope:n}=pI(t,e);n[t]=r}return r}class dI{constructor(){this.GLOBAL=new cI,this.SAVE={},this.SCOPES=[],this.CURRENTSCOPE={SAVE:this.SAVE,GLOBAL:this.GLOBAL}}load(){this.GLOBAL={},this.SAVE={},this.SCOPES=[],this.CURRENTSCOPE={}}get scoped(){const{GLOBAL:e,SAVE:t,SCOPES:n,CURRENTSCOPE:r}=this;return{GLOBAL:e,SAVE:t,SCOPES:n,CURRENTSCOPE:r}}dump(){return dR.exports.cloneDeep({GLOBAL:this.GLOBAL,SAVE:this.SAVE,SCOPES:this.SCOPES,CURRENTSCOPE:this.CURRENTSCOPE})}getGlobalScope(){return this.GLOBAL}getSaveScope(){return this.SAVE}getScope(e){return[...this.SCOPES,this.CURRENTSCOPE][this.SCOPES.length-e]}setGlobalScope(e){this.GLOBAL=e}setSaveScope(e){this.SAVE=e}setScopes(e){this.popScope()}pushScope(e={}){this.SCOPES.push(this.CURRENTSCOPE),this.CURRENTSCOPE=e}popScope(){this.CURRENTSCOPE=this.SCOPES.pop()}switchScope(e={}){this.popScope(),this.pushScope(e)}calculate(e,t){return lI(e,this)}assign(e,t,n,r){return fI(this,e,t,lI(n,this),r)}eval(e){return this.calculate(zR(e))}}var hI,mI,gI,vI;(mI=hI||(hI={}))[mI.character=0]="character",mI[mI.parenthetical=1]="parenthetical",mI[mI.dialogue=2]="dialogue",mI[mI.separator=3]="separator",mI[mI.dialogue_end=4]="dialogue_end",mI[mI.dual_dialogue_end=5]="dual_dialogue_end",mI[mI.action=6]="action",mI[mI.centered=7]="centered",mI[mI.transition=8]="transition",mI[mI.synopsis=9]="synopsis",mI[mI.section=10]="section",mI[mI.page_break=11]="page_break",mI[mI.dual_dialogue_begin=12]="dual_dialogue_begin",mI[mI.dialogue_begin=13]="dialogue_begin",mI[mI.lyric=14]="lyric",mI[mI.scene_heading=15]="scene_heading",mI[mI.title=16]="title",mI[mI.credit=17]="credit",mI[mI.source=18]="source",mI[mI.authors=19]="authors",mI[mI.author=20]="author",mI[mI.notes=21]="notes",mI[mI.draft_date=22]="draft_date",mI[mI.revision=23]="revision",mI[mI.date=24]="date",mI[mI.contact=25]="contact",mI[mI.contact_info=26]="contact_info",mI[mI.copyright=27]="copyright",mI[mI.boneyard_begin=28]="boneyard_begin",mI[mI.boneyard_end=29]="boneyard_end",mI[mI.note=30]="note";class yI{constructor(e,t){this.onGlobalChanged=e,this.scope=t,this.BLOCKSTACK=[],this.BLOCKSET=new Set}exec(e,t=function(){return new dI}()){return t!==this.scope&&(this.scope=t),this.CURRENTBLOCK=new aI(this.scope,e),this.BLOCKSTACK=[],console.log(e,t),this}createGenerator(){if(!this.CURRENTBLOCK)throw Error("call exec");return this.createGeneratorWith(this.CURRENTBLOCK)}*createGeneratorWith(e){for(const n of e.createGenerate()){const e=this.handleScript(n);e?yield e:yield*this.createGeneratorWith(this.CURRENTBLOCK)}const t=this.BLOCKSTACK.pop();if(t)return this.CURRENTBLOCK=t,this.scope.popScope(),this.createGeneratorWith(this.CURRENTBLOCK)}handleScript(e){if(!e)return;const t={...e};return t.type===yA.Content?t.kind===QR.Array?this.handleChildren(t):t.kind===QR.Empty?this.handleEmpty(t):this.handleContent(t):t.type===yA.Logic?this.handleLogic(t):t.type===yA.Comment?null:t}handleEmpty(e){return{...e,argumentList:["end"]}}handleContent({argumentList:e=[],...t}){return{...t,argumentList:e.map((e=>{if(e instanceof Object){if(e.type)return this.scope.calculate(e);e={...e};const t=Object.keys(e);for(const n of t)e[n]=this.scope.calculate(e[n])}return e}))}}handleLogic(e){switch(e.kind){case YR.IF:return this.handleLogicIf(e);case YR.WHILE:return this.handleLogicWhile(e);case YR.FOREACH:return this.handleLogicForeach(e);case YR.LET:return this.handleLogicLet(e);default:throw Error(`Unrecognized kind: ${e.kind}`)}}pushBlock(){this.BLOCKSTACK.push(this.CURRENTBLOCK)}setCurrentBlock(e){this.CURRENTBLOCK=e,this.BLOCKSET.add(e)}handleChildren(e,t=0){this.pushBlock();const n=e.value,r=new aI(this.scope,n,t);this.setCurrentBlock(r)}handleLogicIf(e){let t=0;for(const n of e.conditions){if(this.scope.calculate(n))break;t++}e.blocks[t]&&this.handleChildren(e.blocks[t],t)}handleLogicWhile(e){if(this.scope.calculate(e.condition)){this.pushBlock();const t=e.block,n=new sI(this.scope,t,e.condition);this.setCurrentBlock(n)}}handleLogicForeach(e){var t;if(this.scope.calculate(e.children)instanceof Array){this.pushBlock();const t=e.block,n=new uI(this.scope,t,e.child,e.children);this.setCurrentBlock(n)}else{if(e.children.type===yA.Expression)throw Error("[Foreach] 语法错误");if(e.children.type!==yA.Comment)throw Error(`[Foreach] \`${null==(t=e.children)?void 0:t.sourceString}\` must be a array`)}}handleLogicLet(e){var t;null==(t=e.statements)||t.forEach((e=>{var t;"$"===e.left.prefix&&(null==(t=this.onGlobalChanged)||t.call(this)),this.scope.assign(e.left.text,e.left.prefix,e.right,e.explicit)}))}}class EI{constructor(e){this.onGlobalChanged=e,this.loader=new yI(this.onGlobalChanged)}load(e,t,n){return this.exec(this.parse(e,t,n))}parse(e,t,n){return this.parser=function(e){if(HR.has(e))return HR.get(e).flush();console.log("createParser",e);const t=new KR(pR);return HR.set(e,t),t}(e),this._parseLines(t,n)}exec(e){return console.time("[Story] compile"),this.loader.exec(e),console.timeEnd("[Story] compile"),this}[Symbol.iterator](){return this.loader.createGenerator()}_parseLines(e,t){let n;const r="string"==typeof e?e:e[0];return t?(console.time("[Story] incrementParse"),n=this.parser.increment(r,t),console.timeEnd("[Story] incrementParse")):(console.time("[Story] parse"),n=this.parser.parse(r),console.timeEnd("[Story] parse")),n}}class _I{constructor(e){this.parser=e.parser.LangiumParser}fromTextDocument(e){const t=this.prev?{...this.prev,textDocument:e}:as(e,{value:{$type:"Main"},parserErrors:[],lexerErrors:[]});return this.prev=as(e,this.parser.parse(t))}}class CI{constructor(e,t,n,r){this.runtime=new EI,this.fireChanges=uh.exports.debounce((function(){const e=this.changes.splice(0,this.changes.length);console.log("fireChanges",e),this.parsedDocument(this._uri,this._content,e)}),200),this.changes=[],this._uri=e,this._languageId=t,this._version=n,this._content=r,this._lineOffsets=void 0,this.parsedDocument(e,r)}parsedDocument(e,t,n){try{console.groupCollapsed("[Story] parsedDocument"),this.runtime.load(e,t,n),console.time("[Story] run");for(const e of this.runtime)e.kind===QR.Line?console.debug("call %s",e.command,...e.argumentList||[]):console.debug(e);console.timeEnd("[Story] run")}catch(PI){console.error(PI)}finally{console.groupEnd()}}get uri(){return this._uri}get languageId(){return this._languageId}get version(){return this._version}getText(e){if(e){const t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content}update(e,t){for(const n of e)if(CI.isIncremental(n)){const e=RI(n.range),t=this.offsetAt(e.start),r=this.offsetAt(e.end);this._content=this._content.substring(0,t)+n.text+this._content.substring(r,this._content.length);const i=Math.max(e.start.line,0),o=Math.max(e.end.line,0);let a=this._lineOffsets;const s=AI(n.text,!1,t);if(o-i===s.length)for(let n=0,c=s.length;n<c;n++)a[n+i+1]=s[n];else s.length<1e4?a.splice(i+1,o-i,...s):this._lineOffsets=a=a.slice(0,i+1).concat(s,a.slice(o+1));const u=n.text.length-(r-t);if(0!==u)for(let n=i+1+s.length,c=a.length;n<c;n++)a[n]=a[n]+u;this.changes.push({startIdx:t,endIdx:r,content:n.text})}else{if(!CI.isFull(n))throw new Error("Unknown change event received");this._content=n.text,this._lineOffsets=void 0}this._version=t}getLineOffsets(){return void 0===this._lineOffsets&&(this._lineOffsets=AI(this._content,!0)),this._lineOffsets}positionAt(e){e=Math.max(Math.min(e,this._content.length),0);const t=this.getLineOffsets();let n=0,r=t.length;if(0===r)return{line:0,character:e};for(;n<r;){const i=Math.floor((n+r)/2);t[i]>e?r=i:n=i+1}const i=n-1;return{line:i,character:e-t[i]}}offsetAt(e){const t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;const n=t[e.line],r=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,r),n)}get lineCount(){return this.getLineOffsets().length}static isIncremental(e){const t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)}static isFull(e){const t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength}}function TI(e,t){if(e.length<=1)return e;const n=e.length/2|0,r=e.slice(0,n),i=e.slice(n);TI(r,t),TI(i,t);let o=0,a=0,s=0;for(;o<r.length&&a<i.length;){const n=t(r[o],i[a]);e[s++]=n<=0?r[o++]:i[a++]}for(;o<r.length;)e[s++]=r[o++];for(;a<i.length;)e[s++]=i[a++];return e}function AI(e,t,n=0){const r=t?[n]:[];for(let i=0;i<e.length;i++){const t=e.charCodeAt(i);13!==t&&10!==t||(13===t&&i+1<e.length&&10===e.charCodeAt(i+1)&&i++,r.push(n+i+1))}return r}function RI(e){const t=e.start,n=e.end;return t.line>n.line||t.line===n.line&&t.character>n.character?{start:n,end:t}:e}function II(e){const t=RI(e.range);return t!==e.range?{newText:e.newText,range:t}:e}(vI=gI||(gI={}))[vI.LineFeed=10]="LineFeed",vI[vI.CarriageReturn=13]="CarriageReturn";var DI=Object.freeze({__proto__:null,create:function(e,t,n,r){return new CI(e,t,n,r)},update:function(e,t,n){if(e instanceof CI)return e.update(t,n),e.fireChanges(),e;throw new Error("Document.update: document must be created by Document.create")},applyEdits:function(e,t){const n=e.getText(),r=TI(t.map(II),((e,t)=>{const n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n}));let i=0;const o=[];for(const a of r){const t=e.offsetAt(a.range.start);if(t<i)throw new Error("Overlapping edit");t>i&&o.push(n.substring(i,t)),a.newText.length&&o.push(a.newText),i=e.offsetAt(a.range.end)}return o.push(n.substr(i)),o.join("")}});function xI(e,t){return Bf(function(e={}){return{parser:{GrammarConfig:e=>Td(e),LangiumParser:e=>Vd(e),ValueConverter:()=>new Qd,TokenBuilder:()=>new Jd},documents:{LangiumDocuments:e=>new cs(e),LangiumDocumentFactory:e=>new _I(e),DocumentBuilder:e=>new ds(e),TextDocuments:()=>new OT.TextDocuments(vA),TextDocumentFactory:e=>new ss(e)},lsp:{completion:{CompletionProvider:e=>new Md(e),RuleInterpreter:()=>new $d},Connection:()=>e.connection,DocumentSymbolProvider:e=>new qd(e),HoverProvider:e=>new Wd(e),FoldingRangeProvider:e=>new ed(e),ReferenceFinder:e=>new Kd(e),GoToResolver:e=>new jd(e),DocumentHighlighter:e=>new Bd(e),RenameHandler:e=>new Gd(e)},index:{IndexManager:e=>new Sd(e),AstNodeLocator:()=>new bd,AstNodeDescriptionProvider:e=>new Dd(e),ReferenceDescriptionProvider:e=>new xd(e)},references:{Linker:e=>new Id(e),NameProvider:()=>new Od,ScopeProvider:e=>new nh(e),ScopeComputation:e=>new rh(e),References:e=>new eh(e)},serializer:{JsonSerializer:e=>new ih(e)},validation:{DocumentValidator:e=>new oh(e),ValidationRegistry:e=>new Kf(e)}}}(t),aT,uh.exports.merge(kT,e))}class bI extends class{constructor(){this._connection={}}listen(){return this._connection}onRequest(e,t){throw new Error("Method not implemented.")}sendRequest(e,t,n){throw new Error("Method not implemented.")}onNotification(e,t){throw new Error("Method not implemented.")}sendNotification(e,t){throw new Error("Method not implemented.")}onProgress(e,t,n){throw new Error("Method not implemented.")}sendProgress(e,t,n){throw new Error("Method not implemented.")}sendDiagnostics(e){this._sendDiagnostics.fire(e)}onInitialize(e){throw new Error("Method not implemented.")}onInitialized(e){throw new Error("Method not implemented.")}onShutdown(e){throw new Error("Method not implemented.")}onExit(e){throw new Error("Method not implemented.")}onDidChangeConfiguration(e){throw new Error("Method not implemented.")}onDidChangeWatchedFiles(e){throw new Error("Method not implemented.")}onDidOpenTextDocument(e){this._connection.onDidOpenTextDocument.event((([t])=>{e(t)}))}onDidChangeTextDocument(e){throw new Error("Method not implemented.")}onDidCloseTextDocument(e){throw new Error("Method not implemented.")}onWillSaveTextDocument(e){throw new Error("Method not implemented.")}onWillSaveTextDocumentWaitUntil(e){throw new Error("Method not implemented.")}onDidSaveTextDocument(e){throw new Error("Method not implemented.")}onHover(e){throw new Error("Method not implemented.")}onCompletion(e){throw new Error("Method not implemented.")}onCompletionResolve(e){throw new Error("Method not implemented.")}onSignatureHelp(e){throw new Error("Method not implemented.")}onDeclaration(e){throw new Error("Method not implemented.")}onDefinition(e){throw new Error("Method not implemented.")}onTypeDefinition(e){throw new Error("Method not implemented.")}onImplementation(e){throw new Error("Method not implemented.")}onReferences(e){throw new Error("Method not implemented.")}onDocumentHighlight(e){throw new Error("Method not implemented.")}onDocumentSymbol(e){throw new Error("Method not implemented.")}onWorkspaceSymbol(e){throw new Error("Method not implemented.")}onCodeAction(e){throw new Error("Method not implemented.")}onCodeActionResolve(e){throw new Error("Method not implemented.")}onCodeLens(e){throw new Error("Method not implemented.")}onCodeLensResolve(e){throw new Error("Method not implemented.")}onDocumentFormatting(e){throw new Error("Method not implemented.")}onDocumentRangeFormatting(e){throw new Error("Method not implemented.")}onDocumentOnTypeFormatting(e){throw new Error("Method not implemented.")}onRenameRequest(e){throw new Error("Method not implemented.")}onPrepareRename(e){throw new Error("Method not implemented.")}onDocumentLinks(e){throw new Error("Method not implemented.")}onDocumentLinkResolve(e){throw new Error("Method not implemented.")}onDocumentColor(e){throw new Error("Method not implemented.")}onColorPresentation(e){throw new Error("Method not implemented.")}onFoldingRanges(e){throw new Error("Method not implemented.")}onSelectionRanges(e){throw new Error("Method not implemented.")}onExecuteCommand(e){throw new Error("Method not implemented.")}dispose(){throw new Error("Method not implemented.")}}{static create(e){const t=new bI;return t._sendDiagnostics=new e.Emitter,new Proxy(t,{get:(t,n,r)=>"sendDiagnostics"===n?t[n].bind(r):t[n]instanceof Function?(bI.register(t,n,e),e=>{try{if(t[n]instanceof Function)return Reflect.apply(t[n],r,[e])}catch(i){if("Method not implemented."===i.message)return void t._connection[n].event((t=>{e(...t)}));throw i}}):t[n]})}static register(e,t,n){e._connection[t]||(e._connection[t]=new n.Emitter)}static didChangeTextDocument(e,t){e._connection.onDidChangeTextDocument.fire([t])}static didOpenTextDocument(e,t){e._connection.onDidOpenTextDocument.fire([t])}static onDidDiagnostics(e,t){return e._sendDiagnostics.event((e=>t(e)))}}const SI=class{constructor(e,t){this._monaco=e,this.diagnosticsRequest=function(e,t,n){const r=new Map;function i(e){const t=r.get(e);clearTimeout(t),r.delete(e)}return{clean:i,do(o){n&&console.log(n,o),i(o),r.set(o,setTimeout((t=>{r.delete(t),e(t)}),t,o))}}}((async e=>{if(0!==this.getDocumentWithUri(e).textDocument.getText().length)try{await this.services.documents.DocumentBuilder.update([this._monaco.Uri.parse(e)],[])}catch(t){if(t!==ps)throw console.error("Error: ",t),t}else this.cleanDiagnostics(e)}),200),this.m2p=new Dg(e);const n=bI.create(e),r=t({connection:n});this.languageId=r.LanguageMetaData.languageId,this.id=this.languageId+":"+SI.serviceId++,console.log(this.languageId,r),this.services=r,this.connection=n;r.documents.TextDocuments.listen(n)}async doInitialize(){return this.initialized=this.getInitializeResult(this.services)}async doDidChangeContent(e,t,n){const r=this._getScriptVersion(e),i=n.map((({range:e,rangeLength:t,text:n})=>({range:this.m2p.asRange(e),rangeLength:t,text:n})));return bI.didChangeTextDocument(this.connection,{textDocument:ch.VersionedTextDocumentIdentifier.create(e,r),contentChanges:i}),this.doDiagnostics(e),this.getDiagnostics(e)}getDiagnostics(e){return new Promise((t=>{const n=bI.onDidDiagnostics(this.connection,(r=>{r.uri===e&&(t(r),n.dispose())}))}))}async doDocumentLoaded(e,t){const n=this._getScriptVersion(e);return bI.didOpenTextDocument(this.connection,{textDocument:ch.TextDocumentItem.create(e,this.languageId,n,t)}),this.getDiagnostics(e)}async cleanDiagnostics(e){this.connection.sendDiagnostics({uri:e,diagnostics:[],version:this._getScriptVersion(e)})}doDiagnostics(e){this.diagnosticsRequest.do(e)}async doProvideCompletionItems(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.completion.CompletionProvider.getCompletion(t,e)}async doResolveCompletionItem(e){console.log("doResolveCompletionItem",e);const t=this.getDocumentWithParams(e.data);return await this.services.lsp.completion.CompletionProvider.resolveCompletionItem(t,e)}async doFindReferences(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.ReferenceFinder.findReferences(t,e)}async doProvideCodeActions(e){if(!this.services.lsp.CodeActionProvider||!this.isDocumentLoaded(e))return;const t=this.getDocumentWithParams(e);return await this.services.lsp.CodeActionProvider.getCodeActions(t,e)}isDocumentLoaded(e){return!!this.services.documents.TextDocuments.get(e.textDocument.uri)}async doProvideDocumentSymbols(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.DocumentSymbolProvider.getSymbols(t,e)}async doProvideDeclaration(e){return this.doProvideDefinition(e)}async doProvideDefinition(e){const t=this.getDocumentWithParams(e);return(await this.services.lsp.GoToResolver.goToDefinition(t,e)).map((e=>({range:e.targetRange,uri:e.targetUri})))}async doProvideDocumentHighlights(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.DocumentHighlighter.findHighlights(t,e)}async doProvideHover(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.HoverProvider.getHoverContent(t,e)}async doProvideFoldingRanges(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.FoldingRangeProvider.getFoldingRanges(t,e)}async doProvideRenameEdits(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.RenameHandler.renameElement(t,e)}async doResolveRenameLocation(e){const t=this.getDocumentWithParams(e),n=await this.services.lsp.RenameHandler.prepareRename(t,e),r=n&&this.findTextWithRange(t,n);if(r)return{range:n,text:r}}async doDocumentSemanticTokens(e){const t=this.getDocumentWithParams(e);return await this.services.lsp.DocumentSemanticProvider.getDocumentSemanticTokens(t,e.range)}getDocumentWithUri(e){return this.services.documents.LangiumDocuments.getOrCreateDocument(this._monaco.Uri.parse(e))}getDocumentWithParams(e){return this.getDocumentWithUri(e.textDocument.uri)}findTextWithRange(e,t){var n,r;if(null==(r=null==(n=e.parseResult)?void 0:n.value)?void 0:r.$cstNode){const n=e.textDocument.offsetAt(t.start);return tf(e.parseResult.value.$cstNode,n).text}return""}getInitializeResult(e,t){var n,r;const i={capabilities:{textDocumentSync:ch.TextDocumentSyncKind.Incremental,completionProvider:null!=(r=null==(n=e.lsp.completion.CompletionProvider)?void 0:n.options)?r:{},referencesProvider:{},documentSymbolProvider:{},definitionProvider:{},documentHighlightProvider:{},codeActionProvider:e.lsp.CodeActionProvider?{}:void 0,foldingRangeProvider:{},hoverProvider:{},renameProvider:{prepareProvider:!0},semanticTokensProvider:{legend:this.services.lsp.DocumentSemanticProvider.tokenLegend}}};return t&&(i.capabilities.workspace={workspaceFolders:{supported:!0}}),i}async getScriptVersion(e){return this._getScriptVersion(e)}async getSerializedGastProductions(){return this.services.parser.LangiumParser.getSerializedGastProductions()}};let kI=SI;kI.serviceId=0;class OI extends kI{constructor(e){const{monaco:t}=e;super(t,(e=>function(e,t){class n extends ss{constructor(e){super(e),this.TextDocuments=e.documents.TextDocuments}fromUri(e){return console.log([...this.TextDocuments.keys(),e.toString()]),this.TextDocuments.get(e.toString())}}class r extends ds{async validate(e,t=OT.CancellationToken.None){let n=[];const r=this.documentValidator;return n=await r.validateDocument(e,t),this.connection&&(console.log("diagnostics",e,n),this.connection.sendDiagnostics({uri:e.textDocument.uri,diagnostics:n})),e.state=is.Validated,n}}return xI({documents:{TextDocumentFactory:e=>new n(e),DocumentBuilder:e=>new r(e),TextDocuments:()=>new OT.TextDocuments(DI)},parser:{}},t)}(0,e))),this.options=e,this._preLoaded=[],this.loading=!1,this._doDocumentLoaded=uh.exports.debounce((()=>{const e=this._preLoaded.splice(0,this._preLoaded.length).map((e=>this._monaco.Uri.parse(e)));console.debug("loadDocuments",this._preLoaded),this._loading.fire(),this.services.documents.DocumentBuilder.update(e,[])}),20),this.connection.onDidOpenTextDocument((e=>{this._preLoaded.push(e.textDocument.uri),this._doDocumentLoaded()})),this._loading=new t.Emitter}async doProvideCodeActions(e){return this._preLoaded.length>0&&await new Promise((e=>{const t=this._loading.event((()=>{e(),t.dispose()}))})),super.doProvideCodeActions(e)}async getLibFiles(){return(await(await monaco.languages.typescript.getTypeScriptWorker())()).getLibFiles()}_getScriptVersion(e){return 1}}class NI extends OI{constructor(e,t){super({...t,monaco:monaco}),this.ctx=e,this.options=t}async getScriptVersion(e){return 1}}self.onmessage=function(e){zn(((e,t)=>new NI(e,t)))}}();
")],{type:"text/javascript;charset=utf-8"});l("advscript",(function(){const l=(window.URL||window.webkitURL).createObjectURL(I);try{return new Worker(l)}finally{(window.URL||window.webkitURL).revokeObjectURL(l)}}));
